syntax = "proto2";
package fogs.proto.msg;

message HandshakeRequest 
{
	optional string server_name = 1;
	optional uint32 server_id   = 2;
	optional string server_ip 	= 3;
	optional uint32 server_port = 4;	
}

message HandshakeResponse 
{
	optional int32 result 		= 1;
	optional string server_name = 2;
	optional uint32 server_id   = 3; 	
}

message DisConnectionRequest
{
	optional uint32 server_id   = 1;
}

message DisConnectionResponse
{
	optional int32 result 		= 1;
}

message HeartbeatRequest 
{

}

message HeartbeatResponse
{

}

message ServerInfo
{
	optional uint32 server_id   	= 1;
	optional string server_ip 		= 2;
	optional uint32 server_port 	= 3;
	optional uint32 server_persons 	= 4;
}

message AddConnectionRequest
{
	optional ServerInfo server_info = 1;
}

message AddConnectionResponse
{
	optional int32 result 		= 1;
}

message SessionDisConnectReq
{
	optional uint32 session_id 	= 1;
}

message SessionDisConnectResp
{
	optional int32 result 		= 1;
	optional uint32 session_id 	= 2;
}

message UpdateServerInfo
{
	optional ServerInfo server_info = 1;
}

message AddSessionIP
{
	optional uint32 session_id 	= 1; //session ID
	optional string ip 			= 2; //IP
}

message SessionAccountName
{
	optional uint32 user_id 		= 1; //用户ID
	optional string account  		= 2; //账号
	optional string name 			= 3; //名字
	optional string icon_addr 		= 4; //头像地址
	optional uint32 share_user_id 	= 5; //分享者ID
}

enum RoomStatus
{
	RoomStatus_Open 	= 1; //开房
	RoomStatus_Close 	= 2; //关闭
}

message UpdateRoomInfo
{
	optional uint32 room_id 		= 1; //房间ID
	optional uint32 server_id 		= 2; //服务器ID
	required RoomStatus room_starus = 3; //房间状态
}

message UpdateSessionConn
{
	
}

message UpdateServerPersons
{
	optional uint32 server_id 		= 1; //服务器ID
	optional uint32 persons 		= 2; //服务器人数
}

message NotifyOnConnection
{
	optional uint32 server_type 	= 1; //服务器类型
}

message ReloadConfigForm
{

}

message ResetPlayerData
{
	optional uint32 user_id 		= 1; //用户ID
}


