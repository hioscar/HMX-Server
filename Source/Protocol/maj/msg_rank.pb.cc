// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_rank.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "msg_rank.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace msg_maj {

namespace {

const ::google::protobuf::Descriptor* RankReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RankReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* RankInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RankInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* RankResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RankResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* WinsInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WinsInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* ScoreInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ScoreInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* RankConsList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RankConsList_reflection_ = NULL;
const ::google::protobuf::Descriptor* RankScoreList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RankScoreList_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* c_cmd_rank_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* rank_type_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_msg_5frank_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_msg_5frank_2eproto() {
  protobuf_AddDesc_msg_5frank_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "msg_rank.proto");
  GOOGLE_CHECK(file != NULL);
  RankReq_descriptor_ = file->message_type(0);
  static const int RankReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankReq, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankReq, last_),
  };
  RankReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RankReq_descriptor_,
      RankReq::default_instance_,
      RankReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(RankReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankReq, _internal_metadata_),
      -1);
  RankInfo_descriptor_ = file->message_type(1);
  static const int RankInfo_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankInfo, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankInfo, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankInfo, value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankInfo, sort_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankInfo, actor_addr_),
  };
  RankInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RankInfo_descriptor_,
      RankInfo::default_instance_,
      RankInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(RankInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankInfo, _internal_metadata_),
      -1);
  RankResp_descriptor_ = file->message_type(2);
  static const int RankResp_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankResp, sorttype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankResp, last_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankResp, mysort_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankResp, myvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankResp, rank_),
  };
  RankResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RankResp_descriptor_,
      RankResp::default_instance_,
      RankResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankResp, _has_bits_[0]),
      -1,
      -1,
      sizeof(RankResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankResp, _internal_metadata_),
      -1);
  WinsInfo_descriptor_ = file->message_type(3);
  static const int WinsInfo_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WinsInfo, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WinsInfo, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WinsInfo, value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WinsInfo, sort_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WinsInfo, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WinsInfo, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WinsInfo, actor_addr_),
  };
  WinsInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      WinsInfo_descriptor_,
      WinsInfo::default_instance_,
      WinsInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WinsInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(WinsInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WinsInfo, _internal_metadata_),
      -1);
  ScoreInfo_descriptor_ = file->message_type(4);
  static const int ScoreInfo_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScoreInfo, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScoreInfo, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScoreInfo, value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScoreInfo, sort_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScoreInfo, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScoreInfo, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScoreInfo, actor_addr_),
  };
  ScoreInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ScoreInfo_descriptor_,
      ScoreInfo::default_instance_,
      ScoreInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScoreInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(ScoreInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScoreInfo, _internal_metadata_),
      -1);
  RankConsList_descriptor_ = file->message_type(5);
  static const int RankConsList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankConsList, ranks_),
  };
  RankConsList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RankConsList_descriptor_,
      RankConsList::default_instance_,
      RankConsList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankConsList, _has_bits_[0]),
      -1,
      -1,
      sizeof(RankConsList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankConsList, _internal_metadata_),
      -1);
  RankScoreList_descriptor_ = file->message_type(6);
  static const int RankScoreList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankScoreList, ranks_),
  };
  RankScoreList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RankScoreList_descriptor_,
      RankScoreList::default_instance_,
      RankScoreList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankScoreList, _has_bits_[0]),
      -1,
      -1,
      sizeof(RankScoreList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankScoreList, _internal_metadata_),
      -1);
  c_cmd_rank_descriptor_ = file->enum_type(0);
  rank_type_descriptor_ = file->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_msg_5frank_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RankReq_descriptor_, &RankReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RankInfo_descriptor_, &RankInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RankResp_descriptor_, &RankResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      WinsInfo_descriptor_, &WinsInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ScoreInfo_descriptor_, &ScoreInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RankConsList_descriptor_, &RankConsList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RankScoreList_descriptor_, &RankScoreList::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_msg_5frank_2eproto() {
  delete RankReq::default_instance_;
  delete RankReq_reflection_;
  delete RankInfo::default_instance_;
  delete RankInfo_reflection_;
  delete RankResp::default_instance_;
  delete RankResp_reflection_;
  delete WinsInfo::default_instance_;
  delete WinsInfo_reflection_;
  delete ScoreInfo::default_instance_;
  delete ScoreInfo_reflection_;
  delete RankConsList::default_instance_;
  delete RankConsList_reflection_;
  delete RankScoreList::default_instance_;
  delete RankScoreList_reflection_;
}

void protobuf_AddDesc_msg_5frank_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_msg_5frank_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016msg_rank.proto\022\007msg_maj\"9\n\007RankReq\022 \n\004"
    "type\030\001 \002(\0162\022.msg_maj.rank_type\022\014\n\004last\030\002"
    " \001(\005\"V\n\010RankInfo\022\013\n\003uid\030\001 \001(\004\022\014\n\004name\030\002 "
    "\001(\t\022\r\n\005value\030\003 \001(\r\022\014\n\004sort\030\004 \001(\r\022\022\n\nacto"
    "r_addr\030\005 \001(\t\"\200\001\n\010RankResp\022$\n\010sorttype\030\001 "
    "\002(\0162\022.msg_maj.rank_type\022\014\n\004last\030\002 \001(\005\022\016\n"
    "\006mysort\030\003 \002(\005\022\017\n\007myvalue\030\004 \002(\005\022\037\n\004rank\030\005"
    " \003(\0132\021.msg_maj.RankInfo\"r\n\010WinsInfo\022\013\n\003u"
    "id\030\001 \001(\004\022\014\n\004name\030\002 \001(\t\022\r\n\005value\030\003 \001(\r\022\014\n"
    "\004sort\030\004 \001(\r\022\014\n\004time\030\005 \001(\004\022\014\n\004type\030\006 \001(\r\022"
    "\022\n\nactor_addr\030\007 \001(\t\"s\n\tScoreInfo\022\013\n\003uid\030"
    "\001 \001(\004\022\014\n\004name\030\002 \001(\t\022\r\n\005value\030\003 \001(\r\022\014\n\004so"
    "rt\030\004 \001(\r\022\014\n\004time\030\005 \001(\004\022\014\n\004type\030\006 \001(\r\022\022\n\n"
    "actor_addr\030\007 \001(\t\"0\n\014RankConsList\022 \n\005rank"
    "s\030\001 \003(\0132\021.msg_maj.WinsInfo\"2\n\rRankScoreL"
    "ist\022!\n\005ranks\030\001 \003(\0132\022.msg_maj.ScoreInfo*)"
    "\n\nc_cmd_rank\022\014\n\010rank_req\020\000\022\r\n\trank_resp\020"
    "\001*.\n\trank_type\022\017\n\013rank_t_wins\020\001\022\020\n\014rank_"
    "t_score\020\002", 729);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "msg_rank.proto", &protobuf_RegisterTypes);
  RankReq::default_instance_ = new RankReq();
  RankInfo::default_instance_ = new RankInfo();
  RankResp::default_instance_ = new RankResp();
  WinsInfo::default_instance_ = new WinsInfo();
  ScoreInfo::default_instance_ = new ScoreInfo();
  RankConsList::default_instance_ = new RankConsList();
  RankScoreList::default_instance_ = new RankScoreList();
  RankReq::default_instance_->InitAsDefaultInstance();
  RankInfo::default_instance_->InitAsDefaultInstance();
  RankResp::default_instance_->InitAsDefaultInstance();
  WinsInfo::default_instance_->InitAsDefaultInstance();
  ScoreInfo::default_instance_->InitAsDefaultInstance();
  RankConsList::default_instance_->InitAsDefaultInstance();
  RankScoreList::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_msg_5frank_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_msg_5frank_2eproto {
  StaticDescriptorInitializer_msg_5frank_2eproto() {
    protobuf_AddDesc_msg_5frank_2eproto();
  }
} static_descriptor_initializer_msg_5frank_2eproto_;
const ::google::protobuf::EnumDescriptor* c_cmd_rank_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return c_cmd_rank_descriptor_;
}
bool c_cmd_rank_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* rank_type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return rank_type_descriptor_;
}
bool rank_type_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RankReq::kTypeFieldNumber;
const int RankReq::kLastFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RankReq::RankReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.RankReq)
}

void RankReq::InitAsDefaultInstance() {
}

RankReq::RankReq(const RankReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.RankReq)
}

void RankReq::SharedCtor() {
  _cached_size_ = 0;
  type_ = 1;
  last_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RankReq::~RankReq() {
  // @@protoc_insertion_point(destructor:msg_maj.RankReq)
  SharedDtor();
}

void RankReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RankReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RankReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RankReq_descriptor_;
}

const RankReq& RankReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5frank_2eproto();
  return *default_instance_;
}

RankReq* RankReq::default_instance_ = NULL;

RankReq* RankReq::New(::google::protobuf::Arena* arena) const {
  RankReq* n = new RankReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RankReq::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.RankReq)
  if (_has_bits_[0 / 32] & 3u) {
    type_ = 1;
    last_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RankReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.RankReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .msg_maj.rank_type type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::msg_maj::rank_type_IsValid(value)) {
            set_type(static_cast< ::msg_maj::rank_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_last;
        break;
      }

      // optional int32 last = 2;
      case 2: {
        if (tag == 16) {
         parse_last:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &last_)));
          set_has_last();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.RankReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.RankReq)
  return false;
#undef DO_
}

void RankReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.RankReq)
  // required .msg_maj.rank_type type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional int32 last = 2;
  if (has_last()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->last(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.RankReq)
}

::google::protobuf::uint8* RankReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.RankReq)
  // required .msg_maj.rank_type type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional int32 last = 2;
  if (has_last()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->last(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.RankReq)
  return target;
}

int RankReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.RankReq)
  int total_size = 0;

  // required .msg_maj.rank_type type = 1;
  if (has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }
  // optional int32 last = 2;
  if (has_last()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->last());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RankReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.RankReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RankReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RankReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.RankReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.RankReq)
    MergeFrom(*source);
  }
}

void RankReq::MergeFrom(const RankReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.RankReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_last()) {
      set_last(from.last());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void RankReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.RankReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RankReq::CopyFrom(const RankReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.RankReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RankReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RankReq::Swap(RankReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RankReq::InternalSwap(RankReq* other) {
  std::swap(type_, other->type_);
  std::swap(last_, other->last_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RankReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RankReq_descriptor_;
  metadata.reflection = RankReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RankReq

// required .msg_maj.rank_type type = 1;
bool RankReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RankReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
void RankReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void RankReq::clear_type() {
  type_ = 1;
  clear_has_type();
}
 ::msg_maj::rank_type RankReq::type() const {
  // @@protoc_insertion_point(field_get:msg_maj.RankReq.type)
  return static_cast< ::msg_maj::rank_type >(type_);
}
 void RankReq::set_type(::msg_maj::rank_type value) {
  assert(::msg_maj::rank_type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RankReq.type)
}

// optional int32 last = 2;
bool RankReq::has_last() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RankReq::set_has_last() {
  _has_bits_[0] |= 0x00000002u;
}
void RankReq::clear_has_last() {
  _has_bits_[0] &= ~0x00000002u;
}
void RankReq::clear_last() {
  last_ = 0;
  clear_has_last();
}
 ::google::protobuf::int32 RankReq::last() const {
  // @@protoc_insertion_point(field_get:msg_maj.RankReq.last)
  return last_;
}
 void RankReq::set_last(::google::protobuf::int32 value) {
  set_has_last();
  last_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RankReq.last)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RankInfo::kUidFieldNumber;
const int RankInfo::kNameFieldNumber;
const int RankInfo::kValueFieldNumber;
const int RankInfo::kSortFieldNumber;
const int RankInfo::kActorAddrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RankInfo::RankInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.RankInfo)
}

void RankInfo::InitAsDefaultInstance() {
}

RankInfo::RankInfo(const RankInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.RankInfo)
}

void RankInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  uid_ = GOOGLE_ULONGLONG(0);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = 0u;
  sort_ = 0u;
  actor_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RankInfo::~RankInfo() {
  // @@protoc_insertion_point(destructor:msg_maj.RankInfo)
  SharedDtor();
}

void RankInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  actor_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void RankInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RankInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RankInfo_descriptor_;
}

const RankInfo& RankInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5frank_2eproto();
  return *default_instance_;
}

RankInfo* RankInfo::default_instance_ = NULL;

RankInfo* RankInfo::New(::google::protobuf::Arena* arena) const {
  RankInfo* n = new RankInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RankInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.RankInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(RankInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<RankInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31u) {
    ZR_(value_, sort_);
    uid_ = GOOGLE_ULONGLONG(0);
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_actor_addr()) {
      actor_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RankInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.RankInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 uid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "msg_maj.RankInfo.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_value;
        break;
      }

      // optional uint32 value = 3;
      case 3: {
        if (tag == 24) {
         parse_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &value_)));
          set_has_value();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_sort;
        break;
      }

      // optional uint32 sort = 4;
      case 4: {
        if (tag == 32) {
         parse_sort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sort_)));
          set_has_sort();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_actor_addr;
        break;
      }

      // optional string actor_addr = 5;
      case 5: {
        if (tag == 42) {
         parse_actor_addr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_actor_addr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->actor_addr().data(), this->actor_addr().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "msg_maj.RankInfo.actor_addr");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.RankInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.RankInfo)
  return false;
#undef DO_
}

void RankInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.RankInfo)
  // optional uint64 uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->uid(), output);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg_maj.RankInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional uint32 value = 3;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->value(), output);
  }

  // optional uint32 sort = 4;
  if (has_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->sort(), output);
  }

  // optional string actor_addr = 5;
  if (has_actor_addr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->actor_addr().data(), this->actor_addr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg_maj.RankInfo.actor_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->actor_addr(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.RankInfo)
}

::google::protobuf::uint8* RankInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.RankInfo)
  // optional uint64 uid = 1;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->uid(), target);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg_maj.RankInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional uint32 value = 3;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->value(), target);
  }

  // optional uint32 sort = 4;
  if (has_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->sort(), target);
  }

  // optional string actor_addr = 5;
  if (has_actor_addr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->actor_addr().data(), this->actor_addr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg_maj.RankInfo.actor_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->actor_addr(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.RankInfo)
  return target;
}

int RankInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.RankInfo)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 31u) {
    // optional uint64 uid = 1;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->uid());
    }

    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional uint32 value = 3;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->value());
    }

    // optional uint32 sort = 4;
    if (has_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sort());
    }

    // optional string actor_addr = 5;
    if (has_actor_addr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->actor_addr());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RankInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.RankInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RankInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RankInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.RankInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.RankInfo)
    MergeFrom(*source);
  }
}

void RankInfo::MergeFrom(const RankInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.RankInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_value()) {
      set_value(from.value());
    }
    if (from.has_sort()) {
      set_sort(from.sort());
    }
    if (from.has_actor_addr()) {
      set_has_actor_addr();
      actor_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.actor_addr_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void RankInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.RankInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RankInfo::CopyFrom(const RankInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.RankInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RankInfo::IsInitialized() const {

  return true;
}

void RankInfo::Swap(RankInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RankInfo::InternalSwap(RankInfo* other) {
  std::swap(uid_, other->uid_);
  name_.Swap(&other->name_);
  std::swap(value_, other->value_);
  std::swap(sort_, other->sort_);
  actor_addr_.Swap(&other->actor_addr_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RankInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RankInfo_descriptor_;
  metadata.reflection = RankInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RankInfo

// optional uint64 uid = 1;
bool RankInfo::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RankInfo::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
void RankInfo::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
void RankInfo::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
 ::google::protobuf::uint64 RankInfo::uid() const {
  // @@protoc_insertion_point(field_get:msg_maj.RankInfo.uid)
  return uid_;
}
 void RankInfo::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RankInfo.uid)
}

// optional string name = 2;
bool RankInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RankInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
void RankInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void RankInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& RankInfo::name() const {
  // @@protoc_insertion_point(field_get:msg_maj.RankInfo.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RankInfo::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.RankInfo.name)
}
 void RankInfo::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.RankInfo.name)
}
 void RankInfo::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.RankInfo.name)
}
 ::std::string* RankInfo::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:msg_maj.RankInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* RankInfo::release_name() {
  // @@protoc_insertion_point(field_release:msg_maj.RankInfo.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RankInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.RankInfo.name)
}

// optional uint32 value = 3;
bool RankInfo::has_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void RankInfo::set_has_value() {
  _has_bits_[0] |= 0x00000004u;
}
void RankInfo::clear_has_value() {
  _has_bits_[0] &= ~0x00000004u;
}
void RankInfo::clear_value() {
  value_ = 0u;
  clear_has_value();
}
 ::google::protobuf::uint32 RankInfo::value() const {
  // @@protoc_insertion_point(field_get:msg_maj.RankInfo.value)
  return value_;
}
 void RankInfo::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RankInfo.value)
}

// optional uint32 sort = 4;
bool RankInfo::has_sort() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void RankInfo::set_has_sort() {
  _has_bits_[0] |= 0x00000008u;
}
void RankInfo::clear_has_sort() {
  _has_bits_[0] &= ~0x00000008u;
}
void RankInfo::clear_sort() {
  sort_ = 0u;
  clear_has_sort();
}
 ::google::protobuf::uint32 RankInfo::sort() const {
  // @@protoc_insertion_point(field_get:msg_maj.RankInfo.sort)
  return sort_;
}
 void RankInfo::set_sort(::google::protobuf::uint32 value) {
  set_has_sort();
  sort_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RankInfo.sort)
}

// optional string actor_addr = 5;
bool RankInfo::has_actor_addr() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void RankInfo::set_has_actor_addr() {
  _has_bits_[0] |= 0x00000010u;
}
void RankInfo::clear_has_actor_addr() {
  _has_bits_[0] &= ~0x00000010u;
}
void RankInfo::clear_actor_addr() {
  actor_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_actor_addr();
}
 const ::std::string& RankInfo::actor_addr() const {
  // @@protoc_insertion_point(field_get:msg_maj.RankInfo.actor_addr)
  return actor_addr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RankInfo::set_actor_addr(const ::std::string& value) {
  set_has_actor_addr();
  actor_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.RankInfo.actor_addr)
}
 void RankInfo::set_actor_addr(const char* value) {
  set_has_actor_addr();
  actor_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.RankInfo.actor_addr)
}
 void RankInfo::set_actor_addr(const char* value, size_t size) {
  set_has_actor_addr();
  actor_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.RankInfo.actor_addr)
}
 ::std::string* RankInfo::mutable_actor_addr() {
  set_has_actor_addr();
  // @@protoc_insertion_point(field_mutable:msg_maj.RankInfo.actor_addr)
  return actor_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* RankInfo::release_actor_addr() {
  // @@protoc_insertion_point(field_release:msg_maj.RankInfo.actor_addr)
  clear_has_actor_addr();
  return actor_addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RankInfo::set_allocated_actor_addr(::std::string* actor_addr) {
  if (actor_addr != NULL) {
    set_has_actor_addr();
  } else {
    clear_has_actor_addr();
  }
  actor_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), actor_addr);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.RankInfo.actor_addr)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RankResp::kSorttypeFieldNumber;
const int RankResp::kLastFieldNumber;
const int RankResp::kMysortFieldNumber;
const int RankResp::kMyvalueFieldNumber;
const int RankResp::kRankFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RankResp::RankResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.RankResp)
}

void RankResp::InitAsDefaultInstance() {
}

RankResp::RankResp(const RankResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.RankResp)
}

void RankResp::SharedCtor() {
  _cached_size_ = 0;
  sorttype_ = 1;
  last_ = 0;
  mysort_ = 0;
  myvalue_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RankResp::~RankResp() {
  // @@protoc_insertion_point(destructor:msg_maj.RankResp)
  SharedDtor();
}

void RankResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RankResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RankResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RankResp_descriptor_;
}

const RankResp& RankResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5frank_2eproto();
  return *default_instance_;
}

RankResp* RankResp::default_instance_ = NULL;

RankResp* RankResp::New(::google::protobuf::Arena* arena) const {
  RankResp* n = new RankResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RankResp::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.RankResp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(RankResp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<RankResp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 15u) {
    ZR_(last_, myvalue_);
    sorttype_ = 1;
  }

#undef ZR_HELPER_
#undef ZR_

  rank_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RankResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.RankResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .msg_maj.rank_type sorttype = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::msg_maj::rank_type_IsValid(value)) {
            set_sorttype(static_cast< ::msg_maj::rank_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_last;
        break;
      }

      // optional int32 last = 2;
      case 2: {
        if (tag == 16) {
         parse_last:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &last_)));
          set_has_last();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_mysort;
        break;
      }

      // required int32 mysort = 3;
      case 3: {
        if (tag == 24) {
         parse_mysort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mysort_)));
          set_has_mysort();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_myvalue;
        break;
      }

      // required int32 myvalue = 4;
      case 4: {
        if (tag == 32) {
         parse_myvalue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &myvalue_)));
          set_has_myvalue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_rank;
        break;
      }

      // repeated .msg_maj.RankInfo rank = 5;
      case 5: {
        if (tag == 42) {
         parse_rank:
          DO_(input->IncrementRecursionDepth());
         parse_loop_rank:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_rank()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loop_rank;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.RankResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.RankResp)
  return false;
#undef DO_
}

void RankResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.RankResp)
  // required .msg_maj.rank_type sorttype = 1;
  if (has_sorttype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->sorttype(), output);
  }

  // optional int32 last = 2;
  if (has_last()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->last(), output);
  }

  // required int32 mysort = 3;
  if (has_mysort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->mysort(), output);
  }

  // required int32 myvalue = 4;
  if (has_myvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->myvalue(), output);
  }

  // repeated .msg_maj.RankInfo rank = 5;
  for (unsigned int i = 0, n = this->rank_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->rank(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.RankResp)
}

::google::protobuf::uint8* RankResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.RankResp)
  // required .msg_maj.rank_type sorttype = 1;
  if (has_sorttype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->sorttype(), target);
  }

  // optional int32 last = 2;
  if (has_last()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->last(), target);
  }

  // required int32 mysort = 3;
  if (has_mysort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->mysort(), target);
  }

  // required int32 myvalue = 4;
  if (has_myvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->myvalue(), target);
  }

  // repeated .msg_maj.RankInfo rank = 5;
  for (unsigned int i = 0, n = this->rank_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->rank(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.RankResp)
  return target;
}

int RankResp::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:msg_maj.RankResp)
  int total_size = 0;

  if (has_sorttype()) {
    // required .msg_maj.rank_type sorttype = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->sorttype());
  }

  if (has_mysort()) {
    // required int32 mysort = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mysort());
  }

  if (has_myvalue()) {
    // required int32 myvalue = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->myvalue());
  }

  return total_size;
}
int RankResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.RankResp)
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000000d) ^ 0x0000000d) == 0) {  // All required fields are present.
    // required .msg_maj.rank_type sorttype = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->sorttype());

    // required int32 mysort = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mysort());

    // required int32 myvalue = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->myvalue());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional int32 last = 2;
  if (has_last()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->last());
  }

  // repeated .msg_maj.RankInfo rank = 5;
  total_size += 1 * this->rank_size();
  for (int i = 0; i < this->rank_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rank(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RankResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.RankResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RankResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RankResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.RankResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.RankResp)
    MergeFrom(*source);
  }
}

void RankResp::MergeFrom(const RankResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.RankResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  rank_.MergeFrom(from.rank_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sorttype()) {
      set_sorttype(from.sorttype());
    }
    if (from.has_last()) {
      set_last(from.last());
    }
    if (from.has_mysort()) {
      set_mysort(from.mysort());
    }
    if (from.has_myvalue()) {
      set_myvalue(from.myvalue());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void RankResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.RankResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RankResp::CopyFrom(const RankResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.RankResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RankResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000d) != 0x0000000d) return false;

  return true;
}

void RankResp::Swap(RankResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RankResp::InternalSwap(RankResp* other) {
  std::swap(sorttype_, other->sorttype_);
  std::swap(last_, other->last_);
  std::swap(mysort_, other->mysort_);
  std::swap(myvalue_, other->myvalue_);
  rank_.UnsafeArenaSwap(&other->rank_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RankResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RankResp_descriptor_;
  metadata.reflection = RankResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RankResp

// required .msg_maj.rank_type sorttype = 1;
bool RankResp::has_sorttype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RankResp::set_has_sorttype() {
  _has_bits_[0] |= 0x00000001u;
}
void RankResp::clear_has_sorttype() {
  _has_bits_[0] &= ~0x00000001u;
}
void RankResp::clear_sorttype() {
  sorttype_ = 1;
  clear_has_sorttype();
}
 ::msg_maj::rank_type RankResp::sorttype() const {
  // @@protoc_insertion_point(field_get:msg_maj.RankResp.sorttype)
  return static_cast< ::msg_maj::rank_type >(sorttype_);
}
 void RankResp::set_sorttype(::msg_maj::rank_type value) {
  assert(::msg_maj::rank_type_IsValid(value));
  set_has_sorttype();
  sorttype_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RankResp.sorttype)
}

// optional int32 last = 2;
bool RankResp::has_last() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RankResp::set_has_last() {
  _has_bits_[0] |= 0x00000002u;
}
void RankResp::clear_has_last() {
  _has_bits_[0] &= ~0x00000002u;
}
void RankResp::clear_last() {
  last_ = 0;
  clear_has_last();
}
 ::google::protobuf::int32 RankResp::last() const {
  // @@protoc_insertion_point(field_get:msg_maj.RankResp.last)
  return last_;
}
 void RankResp::set_last(::google::protobuf::int32 value) {
  set_has_last();
  last_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RankResp.last)
}

// required int32 mysort = 3;
bool RankResp::has_mysort() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void RankResp::set_has_mysort() {
  _has_bits_[0] |= 0x00000004u;
}
void RankResp::clear_has_mysort() {
  _has_bits_[0] &= ~0x00000004u;
}
void RankResp::clear_mysort() {
  mysort_ = 0;
  clear_has_mysort();
}
 ::google::protobuf::int32 RankResp::mysort() const {
  // @@protoc_insertion_point(field_get:msg_maj.RankResp.mysort)
  return mysort_;
}
 void RankResp::set_mysort(::google::protobuf::int32 value) {
  set_has_mysort();
  mysort_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RankResp.mysort)
}

// required int32 myvalue = 4;
bool RankResp::has_myvalue() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void RankResp::set_has_myvalue() {
  _has_bits_[0] |= 0x00000008u;
}
void RankResp::clear_has_myvalue() {
  _has_bits_[0] &= ~0x00000008u;
}
void RankResp::clear_myvalue() {
  myvalue_ = 0;
  clear_has_myvalue();
}
 ::google::protobuf::int32 RankResp::myvalue() const {
  // @@protoc_insertion_point(field_get:msg_maj.RankResp.myvalue)
  return myvalue_;
}
 void RankResp::set_myvalue(::google::protobuf::int32 value) {
  set_has_myvalue();
  myvalue_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RankResp.myvalue)
}

// repeated .msg_maj.RankInfo rank = 5;
int RankResp::rank_size() const {
  return rank_.size();
}
void RankResp::clear_rank() {
  rank_.Clear();
}
const ::msg_maj::RankInfo& RankResp::rank(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.RankResp.rank)
  return rank_.Get(index);
}
::msg_maj::RankInfo* RankResp::mutable_rank(int index) {
  // @@protoc_insertion_point(field_mutable:msg_maj.RankResp.rank)
  return rank_.Mutable(index);
}
::msg_maj::RankInfo* RankResp::add_rank() {
  // @@protoc_insertion_point(field_add:msg_maj.RankResp.rank)
  return rank_.Add();
}
::google::protobuf::RepeatedPtrField< ::msg_maj::RankInfo >*
RankResp::mutable_rank() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.RankResp.rank)
  return &rank_;
}
const ::google::protobuf::RepeatedPtrField< ::msg_maj::RankInfo >&
RankResp::rank() const {
  // @@protoc_insertion_point(field_list:msg_maj.RankResp.rank)
  return rank_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WinsInfo::kUidFieldNumber;
const int WinsInfo::kNameFieldNumber;
const int WinsInfo::kValueFieldNumber;
const int WinsInfo::kSortFieldNumber;
const int WinsInfo::kTimeFieldNumber;
const int WinsInfo::kTypeFieldNumber;
const int WinsInfo::kActorAddrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WinsInfo::WinsInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.WinsInfo)
}

void WinsInfo::InitAsDefaultInstance() {
}

WinsInfo::WinsInfo(const WinsInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.WinsInfo)
}

void WinsInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  uid_ = GOOGLE_ULONGLONG(0);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = 0u;
  sort_ = 0u;
  time_ = GOOGLE_ULONGLONG(0);
  type_ = 0u;
  actor_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

WinsInfo::~WinsInfo() {
  // @@protoc_insertion_point(destructor:msg_maj.WinsInfo)
  SharedDtor();
}

void WinsInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  actor_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void WinsInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WinsInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WinsInfo_descriptor_;
}

const WinsInfo& WinsInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5frank_2eproto();
  return *default_instance_;
}

WinsInfo* WinsInfo::default_instance_ = NULL;

WinsInfo* WinsInfo::New(::google::protobuf::Arena* arena) const {
  WinsInfo* n = new WinsInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WinsInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.WinsInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(WinsInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<WinsInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 127u) {
    ZR_(value_, time_);
    uid_ = GOOGLE_ULONGLONG(0);
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    type_ = 0u;
    if (has_actor_addr()) {
      actor_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool WinsInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.WinsInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 uid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "msg_maj.WinsInfo.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_value;
        break;
      }

      // optional uint32 value = 3;
      case 3: {
        if (tag == 24) {
         parse_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &value_)));
          set_has_value();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_sort;
        break;
      }

      // optional uint32 sort = 4;
      case 4: {
        if (tag == 32) {
         parse_sort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sort_)));
          set_has_sort();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_time;
        break;
      }

      // optional uint64 time = 5;
      case 5: {
        if (tag == 40) {
         parse_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &time_)));
          set_has_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_type;
        break;
      }

      // optional uint32 type = 6;
      case 6: {
        if (tag == 48) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_actor_addr;
        break;
      }

      // optional string actor_addr = 7;
      case 7: {
        if (tag == 58) {
         parse_actor_addr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_actor_addr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->actor_addr().data(), this->actor_addr().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "msg_maj.WinsInfo.actor_addr");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.WinsInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.WinsInfo)
  return false;
#undef DO_
}

void WinsInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.WinsInfo)
  // optional uint64 uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->uid(), output);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg_maj.WinsInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional uint32 value = 3;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->value(), output);
  }

  // optional uint32 sort = 4;
  if (has_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->sort(), output);
  }

  // optional uint64 time = 5;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->time(), output);
  }

  // optional uint32 type = 6;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->type(), output);
  }

  // optional string actor_addr = 7;
  if (has_actor_addr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->actor_addr().data(), this->actor_addr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg_maj.WinsInfo.actor_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->actor_addr(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.WinsInfo)
}

::google::protobuf::uint8* WinsInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.WinsInfo)
  // optional uint64 uid = 1;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->uid(), target);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg_maj.WinsInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional uint32 value = 3;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->value(), target);
  }

  // optional uint32 sort = 4;
  if (has_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->sort(), target);
  }

  // optional uint64 time = 5;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->time(), target);
  }

  // optional uint32 type = 6;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->type(), target);
  }

  // optional string actor_addr = 7;
  if (has_actor_addr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->actor_addr().data(), this->actor_addr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg_maj.WinsInfo.actor_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->actor_addr(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.WinsInfo)
  return target;
}

int WinsInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.WinsInfo)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 127u) {
    // optional uint64 uid = 1;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->uid());
    }

    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional uint32 value = 3;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->value());
    }

    // optional uint32 sort = 4;
    if (has_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sort());
    }

    // optional uint64 time = 5;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->time());
    }

    // optional uint32 type = 6;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

    // optional string actor_addr = 7;
    if (has_actor_addr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->actor_addr());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WinsInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.WinsInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const WinsInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const WinsInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.WinsInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.WinsInfo)
    MergeFrom(*source);
  }
}

void WinsInfo::MergeFrom(const WinsInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.WinsInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_value()) {
      set_value(from.value());
    }
    if (from.has_sort()) {
      set_sort(from.sort());
    }
    if (from.has_time()) {
      set_time(from.time());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_actor_addr()) {
      set_has_actor_addr();
      actor_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.actor_addr_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void WinsInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.WinsInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WinsInfo::CopyFrom(const WinsInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.WinsInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WinsInfo::IsInitialized() const {

  return true;
}

void WinsInfo::Swap(WinsInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WinsInfo::InternalSwap(WinsInfo* other) {
  std::swap(uid_, other->uid_);
  name_.Swap(&other->name_);
  std::swap(value_, other->value_);
  std::swap(sort_, other->sort_);
  std::swap(time_, other->time_);
  std::swap(type_, other->type_);
  actor_addr_.Swap(&other->actor_addr_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WinsInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WinsInfo_descriptor_;
  metadata.reflection = WinsInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WinsInfo

// optional uint64 uid = 1;
bool WinsInfo::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void WinsInfo::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
void WinsInfo::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
void WinsInfo::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
 ::google::protobuf::uint64 WinsInfo::uid() const {
  // @@protoc_insertion_point(field_get:msg_maj.WinsInfo.uid)
  return uid_;
}
 void WinsInfo::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.WinsInfo.uid)
}

// optional string name = 2;
bool WinsInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void WinsInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
void WinsInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void WinsInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& WinsInfo::name() const {
  // @@protoc_insertion_point(field_get:msg_maj.WinsInfo.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void WinsInfo::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.WinsInfo.name)
}
 void WinsInfo::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.WinsInfo.name)
}
 void WinsInfo::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.WinsInfo.name)
}
 ::std::string* WinsInfo::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:msg_maj.WinsInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* WinsInfo::release_name() {
  // @@protoc_insertion_point(field_release:msg_maj.WinsInfo.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void WinsInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.WinsInfo.name)
}

// optional uint32 value = 3;
bool WinsInfo::has_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void WinsInfo::set_has_value() {
  _has_bits_[0] |= 0x00000004u;
}
void WinsInfo::clear_has_value() {
  _has_bits_[0] &= ~0x00000004u;
}
void WinsInfo::clear_value() {
  value_ = 0u;
  clear_has_value();
}
 ::google::protobuf::uint32 WinsInfo::value() const {
  // @@protoc_insertion_point(field_get:msg_maj.WinsInfo.value)
  return value_;
}
 void WinsInfo::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.WinsInfo.value)
}

// optional uint32 sort = 4;
bool WinsInfo::has_sort() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void WinsInfo::set_has_sort() {
  _has_bits_[0] |= 0x00000008u;
}
void WinsInfo::clear_has_sort() {
  _has_bits_[0] &= ~0x00000008u;
}
void WinsInfo::clear_sort() {
  sort_ = 0u;
  clear_has_sort();
}
 ::google::protobuf::uint32 WinsInfo::sort() const {
  // @@protoc_insertion_point(field_get:msg_maj.WinsInfo.sort)
  return sort_;
}
 void WinsInfo::set_sort(::google::protobuf::uint32 value) {
  set_has_sort();
  sort_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.WinsInfo.sort)
}

// optional uint64 time = 5;
bool WinsInfo::has_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void WinsInfo::set_has_time() {
  _has_bits_[0] |= 0x00000010u;
}
void WinsInfo::clear_has_time() {
  _has_bits_[0] &= ~0x00000010u;
}
void WinsInfo::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
  clear_has_time();
}
 ::google::protobuf::uint64 WinsInfo::time() const {
  // @@protoc_insertion_point(field_get:msg_maj.WinsInfo.time)
  return time_;
}
 void WinsInfo::set_time(::google::protobuf::uint64 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.WinsInfo.time)
}

// optional uint32 type = 6;
bool WinsInfo::has_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void WinsInfo::set_has_type() {
  _has_bits_[0] |= 0x00000020u;
}
void WinsInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000020u;
}
void WinsInfo::clear_type() {
  type_ = 0u;
  clear_has_type();
}
 ::google::protobuf::uint32 WinsInfo::type() const {
  // @@protoc_insertion_point(field_get:msg_maj.WinsInfo.type)
  return type_;
}
 void WinsInfo::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.WinsInfo.type)
}

// optional string actor_addr = 7;
bool WinsInfo::has_actor_addr() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void WinsInfo::set_has_actor_addr() {
  _has_bits_[0] |= 0x00000040u;
}
void WinsInfo::clear_has_actor_addr() {
  _has_bits_[0] &= ~0x00000040u;
}
void WinsInfo::clear_actor_addr() {
  actor_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_actor_addr();
}
 const ::std::string& WinsInfo::actor_addr() const {
  // @@protoc_insertion_point(field_get:msg_maj.WinsInfo.actor_addr)
  return actor_addr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void WinsInfo::set_actor_addr(const ::std::string& value) {
  set_has_actor_addr();
  actor_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.WinsInfo.actor_addr)
}
 void WinsInfo::set_actor_addr(const char* value) {
  set_has_actor_addr();
  actor_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.WinsInfo.actor_addr)
}
 void WinsInfo::set_actor_addr(const char* value, size_t size) {
  set_has_actor_addr();
  actor_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.WinsInfo.actor_addr)
}
 ::std::string* WinsInfo::mutable_actor_addr() {
  set_has_actor_addr();
  // @@protoc_insertion_point(field_mutable:msg_maj.WinsInfo.actor_addr)
  return actor_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* WinsInfo::release_actor_addr() {
  // @@protoc_insertion_point(field_release:msg_maj.WinsInfo.actor_addr)
  clear_has_actor_addr();
  return actor_addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void WinsInfo::set_allocated_actor_addr(::std::string* actor_addr) {
  if (actor_addr != NULL) {
    set_has_actor_addr();
  } else {
    clear_has_actor_addr();
  }
  actor_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), actor_addr);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.WinsInfo.actor_addr)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScoreInfo::kUidFieldNumber;
const int ScoreInfo::kNameFieldNumber;
const int ScoreInfo::kValueFieldNumber;
const int ScoreInfo::kSortFieldNumber;
const int ScoreInfo::kTimeFieldNumber;
const int ScoreInfo::kTypeFieldNumber;
const int ScoreInfo::kActorAddrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScoreInfo::ScoreInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.ScoreInfo)
}

void ScoreInfo::InitAsDefaultInstance() {
}

ScoreInfo::ScoreInfo(const ScoreInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.ScoreInfo)
}

void ScoreInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  uid_ = GOOGLE_ULONGLONG(0);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = 0u;
  sort_ = 0u;
  time_ = GOOGLE_ULONGLONG(0);
  type_ = 0u;
  actor_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ScoreInfo::~ScoreInfo() {
  // @@protoc_insertion_point(destructor:msg_maj.ScoreInfo)
  SharedDtor();
}

void ScoreInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  actor_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ScoreInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ScoreInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ScoreInfo_descriptor_;
}

const ScoreInfo& ScoreInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5frank_2eproto();
  return *default_instance_;
}

ScoreInfo* ScoreInfo::default_instance_ = NULL;

ScoreInfo* ScoreInfo::New(::google::protobuf::Arena* arena) const {
  ScoreInfo* n = new ScoreInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ScoreInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.ScoreInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ScoreInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ScoreInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 127u) {
    ZR_(value_, time_);
    uid_ = GOOGLE_ULONGLONG(0);
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    type_ = 0u;
    if (has_actor_addr()) {
      actor_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ScoreInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.ScoreInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 uid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "msg_maj.ScoreInfo.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_value;
        break;
      }

      // optional uint32 value = 3;
      case 3: {
        if (tag == 24) {
         parse_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &value_)));
          set_has_value();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_sort;
        break;
      }

      // optional uint32 sort = 4;
      case 4: {
        if (tag == 32) {
         parse_sort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sort_)));
          set_has_sort();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_time;
        break;
      }

      // optional uint64 time = 5;
      case 5: {
        if (tag == 40) {
         parse_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &time_)));
          set_has_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_type;
        break;
      }

      // optional uint32 type = 6;
      case 6: {
        if (tag == 48) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_actor_addr;
        break;
      }

      // optional string actor_addr = 7;
      case 7: {
        if (tag == 58) {
         parse_actor_addr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_actor_addr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->actor_addr().data(), this->actor_addr().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "msg_maj.ScoreInfo.actor_addr");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.ScoreInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.ScoreInfo)
  return false;
#undef DO_
}

void ScoreInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.ScoreInfo)
  // optional uint64 uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->uid(), output);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg_maj.ScoreInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional uint32 value = 3;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->value(), output);
  }

  // optional uint32 sort = 4;
  if (has_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->sort(), output);
  }

  // optional uint64 time = 5;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->time(), output);
  }

  // optional uint32 type = 6;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->type(), output);
  }

  // optional string actor_addr = 7;
  if (has_actor_addr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->actor_addr().data(), this->actor_addr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg_maj.ScoreInfo.actor_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->actor_addr(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.ScoreInfo)
}

::google::protobuf::uint8* ScoreInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.ScoreInfo)
  // optional uint64 uid = 1;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->uid(), target);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg_maj.ScoreInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional uint32 value = 3;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->value(), target);
  }

  // optional uint32 sort = 4;
  if (has_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->sort(), target);
  }

  // optional uint64 time = 5;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->time(), target);
  }

  // optional uint32 type = 6;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->type(), target);
  }

  // optional string actor_addr = 7;
  if (has_actor_addr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->actor_addr().data(), this->actor_addr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg_maj.ScoreInfo.actor_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->actor_addr(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.ScoreInfo)
  return target;
}

int ScoreInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.ScoreInfo)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 127u) {
    // optional uint64 uid = 1;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->uid());
    }

    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional uint32 value = 3;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->value());
    }

    // optional uint32 sort = 4;
    if (has_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sort());
    }

    // optional uint64 time = 5;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->time());
    }

    // optional uint32 type = 6;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

    // optional string actor_addr = 7;
    if (has_actor_addr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->actor_addr());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ScoreInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.ScoreInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ScoreInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ScoreInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.ScoreInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.ScoreInfo)
    MergeFrom(*source);
  }
}

void ScoreInfo::MergeFrom(const ScoreInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.ScoreInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_value()) {
      set_value(from.value());
    }
    if (from.has_sort()) {
      set_sort(from.sort());
    }
    if (from.has_time()) {
      set_time(from.time());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_actor_addr()) {
      set_has_actor_addr();
      actor_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.actor_addr_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ScoreInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.ScoreInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScoreInfo::CopyFrom(const ScoreInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.ScoreInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScoreInfo::IsInitialized() const {

  return true;
}

void ScoreInfo::Swap(ScoreInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScoreInfo::InternalSwap(ScoreInfo* other) {
  std::swap(uid_, other->uid_);
  name_.Swap(&other->name_);
  std::swap(value_, other->value_);
  std::swap(sort_, other->sort_);
  std::swap(time_, other->time_);
  std::swap(type_, other->type_);
  actor_addr_.Swap(&other->actor_addr_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ScoreInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ScoreInfo_descriptor_;
  metadata.reflection = ScoreInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ScoreInfo

// optional uint64 uid = 1;
bool ScoreInfo::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ScoreInfo::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
void ScoreInfo::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
void ScoreInfo::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
 ::google::protobuf::uint64 ScoreInfo::uid() const {
  // @@protoc_insertion_point(field_get:msg_maj.ScoreInfo.uid)
  return uid_;
}
 void ScoreInfo::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.ScoreInfo.uid)
}

// optional string name = 2;
bool ScoreInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ScoreInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
void ScoreInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void ScoreInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& ScoreInfo::name() const {
  // @@protoc_insertion_point(field_get:msg_maj.ScoreInfo.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ScoreInfo::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.ScoreInfo.name)
}
 void ScoreInfo::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.ScoreInfo.name)
}
 void ScoreInfo::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.ScoreInfo.name)
}
 ::std::string* ScoreInfo::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:msg_maj.ScoreInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ScoreInfo::release_name() {
  // @@protoc_insertion_point(field_release:msg_maj.ScoreInfo.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ScoreInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.ScoreInfo.name)
}

// optional uint32 value = 3;
bool ScoreInfo::has_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ScoreInfo::set_has_value() {
  _has_bits_[0] |= 0x00000004u;
}
void ScoreInfo::clear_has_value() {
  _has_bits_[0] &= ~0x00000004u;
}
void ScoreInfo::clear_value() {
  value_ = 0u;
  clear_has_value();
}
 ::google::protobuf::uint32 ScoreInfo::value() const {
  // @@protoc_insertion_point(field_get:msg_maj.ScoreInfo.value)
  return value_;
}
 void ScoreInfo::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.ScoreInfo.value)
}

// optional uint32 sort = 4;
bool ScoreInfo::has_sort() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ScoreInfo::set_has_sort() {
  _has_bits_[0] |= 0x00000008u;
}
void ScoreInfo::clear_has_sort() {
  _has_bits_[0] &= ~0x00000008u;
}
void ScoreInfo::clear_sort() {
  sort_ = 0u;
  clear_has_sort();
}
 ::google::protobuf::uint32 ScoreInfo::sort() const {
  // @@protoc_insertion_point(field_get:msg_maj.ScoreInfo.sort)
  return sort_;
}
 void ScoreInfo::set_sort(::google::protobuf::uint32 value) {
  set_has_sort();
  sort_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.ScoreInfo.sort)
}

// optional uint64 time = 5;
bool ScoreInfo::has_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ScoreInfo::set_has_time() {
  _has_bits_[0] |= 0x00000010u;
}
void ScoreInfo::clear_has_time() {
  _has_bits_[0] &= ~0x00000010u;
}
void ScoreInfo::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
  clear_has_time();
}
 ::google::protobuf::uint64 ScoreInfo::time() const {
  // @@protoc_insertion_point(field_get:msg_maj.ScoreInfo.time)
  return time_;
}
 void ScoreInfo::set_time(::google::protobuf::uint64 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.ScoreInfo.time)
}

// optional uint32 type = 6;
bool ScoreInfo::has_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ScoreInfo::set_has_type() {
  _has_bits_[0] |= 0x00000020u;
}
void ScoreInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000020u;
}
void ScoreInfo::clear_type() {
  type_ = 0u;
  clear_has_type();
}
 ::google::protobuf::uint32 ScoreInfo::type() const {
  // @@protoc_insertion_point(field_get:msg_maj.ScoreInfo.type)
  return type_;
}
 void ScoreInfo::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.ScoreInfo.type)
}

// optional string actor_addr = 7;
bool ScoreInfo::has_actor_addr() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void ScoreInfo::set_has_actor_addr() {
  _has_bits_[0] |= 0x00000040u;
}
void ScoreInfo::clear_has_actor_addr() {
  _has_bits_[0] &= ~0x00000040u;
}
void ScoreInfo::clear_actor_addr() {
  actor_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_actor_addr();
}
 const ::std::string& ScoreInfo::actor_addr() const {
  // @@protoc_insertion_point(field_get:msg_maj.ScoreInfo.actor_addr)
  return actor_addr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ScoreInfo::set_actor_addr(const ::std::string& value) {
  set_has_actor_addr();
  actor_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.ScoreInfo.actor_addr)
}
 void ScoreInfo::set_actor_addr(const char* value) {
  set_has_actor_addr();
  actor_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.ScoreInfo.actor_addr)
}
 void ScoreInfo::set_actor_addr(const char* value, size_t size) {
  set_has_actor_addr();
  actor_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.ScoreInfo.actor_addr)
}
 ::std::string* ScoreInfo::mutable_actor_addr() {
  set_has_actor_addr();
  // @@protoc_insertion_point(field_mutable:msg_maj.ScoreInfo.actor_addr)
  return actor_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ScoreInfo::release_actor_addr() {
  // @@protoc_insertion_point(field_release:msg_maj.ScoreInfo.actor_addr)
  clear_has_actor_addr();
  return actor_addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ScoreInfo::set_allocated_actor_addr(::std::string* actor_addr) {
  if (actor_addr != NULL) {
    set_has_actor_addr();
  } else {
    clear_has_actor_addr();
  }
  actor_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), actor_addr);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.ScoreInfo.actor_addr)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RankConsList::kRanksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RankConsList::RankConsList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.RankConsList)
}

void RankConsList::InitAsDefaultInstance() {
}

RankConsList::RankConsList(const RankConsList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.RankConsList)
}

void RankConsList::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RankConsList::~RankConsList() {
  // @@protoc_insertion_point(destructor:msg_maj.RankConsList)
  SharedDtor();
}

void RankConsList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RankConsList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RankConsList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RankConsList_descriptor_;
}

const RankConsList& RankConsList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5frank_2eproto();
  return *default_instance_;
}

RankConsList* RankConsList::default_instance_ = NULL;

RankConsList* RankConsList::New(::google::protobuf::Arena* arena) const {
  RankConsList* n = new RankConsList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RankConsList::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.RankConsList)
  ranks_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RankConsList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.RankConsList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .msg_maj.WinsInfo ranks = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_ranks:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_ranks()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_ranks;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.RankConsList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.RankConsList)
  return false;
#undef DO_
}

void RankConsList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.RankConsList)
  // repeated .msg_maj.WinsInfo ranks = 1;
  for (unsigned int i = 0, n = this->ranks_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->ranks(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.RankConsList)
}

::google::protobuf::uint8* RankConsList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.RankConsList)
  // repeated .msg_maj.WinsInfo ranks = 1;
  for (unsigned int i = 0, n = this->ranks_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->ranks(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.RankConsList)
  return target;
}

int RankConsList::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.RankConsList)
  int total_size = 0;

  // repeated .msg_maj.WinsInfo ranks = 1;
  total_size += 1 * this->ranks_size();
  for (int i = 0; i < this->ranks_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->ranks(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RankConsList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.RankConsList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RankConsList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RankConsList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.RankConsList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.RankConsList)
    MergeFrom(*source);
  }
}

void RankConsList::MergeFrom(const RankConsList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.RankConsList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  ranks_.MergeFrom(from.ranks_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void RankConsList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.RankConsList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RankConsList::CopyFrom(const RankConsList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.RankConsList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RankConsList::IsInitialized() const {

  return true;
}

void RankConsList::Swap(RankConsList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RankConsList::InternalSwap(RankConsList* other) {
  ranks_.UnsafeArenaSwap(&other->ranks_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RankConsList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RankConsList_descriptor_;
  metadata.reflection = RankConsList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RankConsList

// repeated .msg_maj.WinsInfo ranks = 1;
int RankConsList::ranks_size() const {
  return ranks_.size();
}
void RankConsList::clear_ranks() {
  ranks_.Clear();
}
const ::msg_maj::WinsInfo& RankConsList::ranks(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.RankConsList.ranks)
  return ranks_.Get(index);
}
::msg_maj::WinsInfo* RankConsList::mutable_ranks(int index) {
  // @@protoc_insertion_point(field_mutable:msg_maj.RankConsList.ranks)
  return ranks_.Mutable(index);
}
::msg_maj::WinsInfo* RankConsList::add_ranks() {
  // @@protoc_insertion_point(field_add:msg_maj.RankConsList.ranks)
  return ranks_.Add();
}
::google::protobuf::RepeatedPtrField< ::msg_maj::WinsInfo >*
RankConsList::mutable_ranks() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.RankConsList.ranks)
  return &ranks_;
}
const ::google::protobuf::RepeatedPtrField< ::msg_maj::WinsInfo >&
RankConsList::ranks() const {
  // @@protoc_insertion_point(field_list:msg_maj.RankConsList.ranks)
  return ranks_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RankScoreList::kRanksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RankScoreList::RankScoreList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.RankScoreList)
}

void RankScoreList::InitAsDefaultInstance() {
}

RankScoreList::RankScoreList(const RankScoreList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.RankScoreList)
}

void RankScoreList::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RankScoreList::~RankScoreList() {
  // @@protoc_insertion_point(destructor:msg_maj.RankScoreList)
  SharedDtor();
}

void RankScoreList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RankScoreList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RankScoreList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RankScoreList_descriptor_;
}

const RankScoreList& RankScoreList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5frank_2eproto();
  return *default_instance_;
}

RankScoreList* RankScoreList::default_instance_ = NULL;

RankScoreList* RankScoreList::New(::google::protobuf::Arena* arena) const {
  RankScoreList* n = new RankScoreList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RankScoreList::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.RankScoreList)
  ranks_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RankScoreList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.RankScoreList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .msg_maj.ScoreInfo ranks = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_ranks:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_ranks()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_ranks;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.RankScoreList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.RankScoreList)
  return false;
#undef DO_
}

void RankScoreList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.RankScoreList)
  // repeated .msg_maj.ScoreInfo ranks = 1;
  for (unsigned int i = 0, n = this->ranks_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->ranks(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.RankScoreList)
}

::google::protobuf::uint8* RankScoreList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.RankScoreList)
  // repeated .msg_maj.ScoreInfo ranks = 1;
  for (unsigned int i = 0, n = this->ranks_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->ranks(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.RankScoreList)
  return target;
}

int RankScoreList::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.RankScoreList)
  int total_size = 0;

  // repeated .msg_maj.ScoreInfo ranks = 1;
  total_size += 1 * this->ranks_size();
  for (int i = 0; i < this->ranks_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->ranks(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RankScoreList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.RankScoreList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RankScoreList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RankScoreList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.RankScoreList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.RankScoreList)
    MergeFrom(*source);
  }
}

void RankScoreList::MergeFrom(const RankScoreList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.RankScoreList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  ranks_.MergeFrom(from.ranks_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void RankScoreList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.RankScoreList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RankScoreList::CopyFrom(const RankScoreList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.RankScoreList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RankScoreList::IsInitialized() const {

  return true;
}

void RankScoreList::Swap(RankScoreList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RankScoreList::InternalSwap(RankScoreList* other) {
  ranks_.UnsafeArenaSwap(&other->ranks_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RankScoreList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RankScoreList_descriptor_;
  metadata.reflection = RankScoreList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RankScoreList

// repeated .msg_maj.ScoreInfo ranks = 1;
int RankScoreList::ranks_size() const {
  return ranks_.size();
}
void RankScoreList::clear_ranks() {
  ranks_.Clear();
}
const ::msg_maj::ScoreInfo& RankScoreList::ranks(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.RankScoreList.ranks)
  return ranks_.Get(index);
}
::msg_maj::ScoreInfo* RankScoreList::mutable_ranks(int index) {
  // @@protoc_insertion_point(field_mutable:msg_maj.RankScoreList.ranks)
  return ranks_.Mutable(index);
}
::msg_maj::ScoreInfo* RankScoreList::add_ranks() {
  // @@protoc_insertion_point(field_add:msg_maj.RankScoreList.ranks)
  return ranks_.Add();
}
::google::protobuf::RepeatedPtrField< ::msg_maj::ScoreInfo >*
RankScoreList::mutable_ranks() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.RankScoreList.ranks)
  return &ranks_;
}
const ::google::protobuf::RepeatedPtrField< ::msg_maj::ScoreInfo >&
RankScoreList::ranks() const {
  // @@protoc_insertion_point(field_list:msg_maj.RankScoreList.ranks)
  return ranks_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace msg_maj

// @@protoc_insertion_point(global_scope)
