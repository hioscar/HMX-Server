// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_room.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "msg_room.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace msg_maj {

namespace {

const ::google::protobuf::Descriptor* RoomListReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RoomListReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* RoomListResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RoomListResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* OpenRoomReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OpenRoomReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* OpenRoomResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OpenRoomResp_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* OpenRoomResp_error_code_descriptor_ = NULL;
const ::google::protobuf::Descriptor* EnterRoomReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EnterRoomReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* EnterRoomResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EnterRoomResp_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* EnterRoomResp_msg_room_code_descriptor_ = NULL;
const ::google::protobuf::Descriptor* EnterRoomReady_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EnterRoomReady_reflection_ = NULL;
const ::google::protobuf::Descriptor* SyncRoomRoleInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SyncRoomRoleInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* LeaveRoomReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LeaveRoomReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* LeaveRoomResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LeaveRoomResp_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* LeaveRoomResp_error_code_descriptor_ = NULL;
const ::google::protobuf::Descriptor* RoleEnterRoomNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RoleEnterRoomNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* RoleLeaveRoomNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RoleLeaveRoomNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* DismissRoomReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DismissRoomReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* DismissRoomNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DismissRoomNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* DismissRoomVoteNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DismissRoomVoteNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* VoteInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  VoteInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* DismissRoomVoteAcceptReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DismissRoomVoteAcceptReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* DismissRoomResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DismissRoomResp_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* DismissRoomResp_error_code_descriptor_ = NULL;
const ::google::protobuf::Descriptor* RoomReadyNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RoomReadyNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReconnectReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReconnectReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReconnectResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReconnectResp_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ReconnectResp_error_code_descriptor_ = NULL;
const ::google::protobuf::Descriptor* ReconnectFin_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReconnectFin_reflection_ = NULL;
const ::google::protobuf::Descriptor* RoleOnlineNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RoleOnlineNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* RoomInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RoomInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* RoomListInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RoomListInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* RoleInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RoleInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* AgreeDismissReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AgreeDismissReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* DismissStatus_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DismissStatus_reflection_ = NULL;
const ::google::protobuf::Descriptor* AgreeDismissResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AgreeDismissResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* KickRoleReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  KickRoleReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* KickRoleNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  KickRoleNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* YLOption_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  YLOption_reflection_ = NULL;
const ::google::protobuf::Descriptor* BBOption_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BBOption_reflection_ = NULL;
const ::google::protobuf::Descriptor* LCOption_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LCOption_reflection_ = NULL;
const ::google::protobuf::Descriptor* XZOption_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  XZOption_reflection_ = NULL;
const ::google::protobuf::Descriptor* XLOption_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  XLOption_reflection_ = NULL;
const ::google::protobuf::Descriptor* RoomOption_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RoomOption_reflection_ = NULL;
const ::google::protobuf::Descriptor* RoomCardPriceReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RoomCardPriceReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* RoomCardPriceResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RoomCardPriceResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* SyncRommInnInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SyncRommInnInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* NotifyRoomDismiss_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifyRoomDismiss_reflection_ = NULL;
const ::google::protobuf::Descriptor* StartRobotReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StartRobotReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* StopRobotReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StopRobotReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* AddRoomToWs_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AddRoomToWs_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateRoomToWs_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateRoomToWs_reflection_ = NULL;
const ::google::protobuf::Descriptor* RemoveRoomToWs_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RemoveRoomToWs_reflection_ = NULL;
const ::google::protobuf::Descriptor* NtCoinNotenough_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NtCoinNotenough_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* c_cmd_room_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* RoomType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EnterType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* PlayType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* VoteState_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* VoteResult_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* RoomerAction_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* online_state_room_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_msg_5froom_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_msg_5froom_2eproto() {
  protobuf_AddDesc_msg_5froom_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "msg_room.proto");
  GOOGLE_CHECK(file != NULL);
  RoomListReq_descriptor_ = file->message_type(0);
  static const int RoomListReq_offsets_[1] = {
  };
  RoomListReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RoomListReq_descriptor_,
      RoomListReq::default_instance_,
      RoomListReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomListReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(RoomListReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomListReq, _internal_metadata_),
      -1);
  RoomListResp_descriptor_ = file->message_type(1);
  static const int RoomListResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomListResp, room_),
  };
  RoomListResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RoomListResp_descriptor_,
      RoomListResp::default_instance_,
      RoomListResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomListResp, _has_bits_[0]),
      -1,
      -1,
      sizeof(RoomListResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomListResp, _internal_metadata_),
      -1);
  OpenRoomReq_descriptor_ = file->message_type(2);
  static const int OpenRoomReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenRoomReq, room_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenRoomReq, game_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenRoomReq, option_),
  };
  OpenRoomReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      OpenRoomReq_descriptor_,
      OpenRoomReq::default_instance_,
      OpenRoomReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenRoomReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(OpenRoomReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenRoomReq, _internal_metadata_),
      -1);
  OpenRoomResp_descriptor_ = file->message_type(3);
  static const int OpenRoomResp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenRoomResp, code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenRoomResp, info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenRoomResp, role_),
  };
  OpenRoomResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      OpenRoomResp_descriptor_,
      OpenRoomResp::default_instance_,
      OpenRoomResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenRoomResp, _has_bits_[0]),
      -1,
      -1,
      sizeof(OpenRoomResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenRoomResp, _internal_metadata_),
      -1);
  OpenRoomResp_error_code_descriptor_ = OpenRoomResp_descriptor_->enum_type(0);
  EnterRoomReq_descriptor_ = file->message_type(4);
  static const int EnterRoomReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterRoomReq, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterRoomReq, room_no_),
  };
  EnterRoomReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EnterRoomReq_descriptor_,
      EnterRoomReq::default_instance_,
      EnterRoomReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterRoomReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(EnterRoomReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterRoomReq, _internal_metadata_),
      -1);
  EnterRoomResp_descriptor_ = file->message_type(5);
  static const int EnterRoomResp_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterRoomResp, code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterRoomResp, info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterRoomResp, rolelist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterRoomResp, self_seat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterRoomResp, banker_seat_),
  };
  EnterRoomResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EnterRoomResp_descriptor_,
      EnterRoomResp::default_instance_,
      EnterRoomResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterRoomResp, _has_bits_[0]),
      -1,
      -1,
      sizeof(EnterRoomResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterRoomResp, _internal_metadata_),
      -1);
  EnterRoomResp_msg_room_code_descriptor_ = EnterRoomResp_descriptor_->enum_type(0);
  EnterRoomReady_descriptor_ = file->message_type(6);
  static const int EnterRoomReady_offsets_[1] = {
  };
  EnterRoomReady_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EnterRoomReady_descriptor_,
      EnterRoomReady::default_instance_,
      EnterRoomReady_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterRoomReady, _has_bits_[0]),
      -1,
      -1,
      sizeof(EnterRoomReady),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterRoomReady, _internal_metadata_),
      -1);
  SyncRoomRoleInfo_descriptor_ = file->message_type(7);
  static const int SyncRoomRoleInfo_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncRoomRoleInfo, rolelist_),
  };
  SyncRoomRoleInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SyncRoomRoleInfo_descriptor_,
      SyncRoomRoleInfo::default_instance_,
      SyncRoomRoleInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncRoomRoleInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(SyncRoomRoleInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncRoomRoleInfo, _internal_metadata_),
      -1);
  LeaveRoomReq_descriptor_ = file->message_type(8);
  static const int LeaveRoomReq_offsets_[1] = {
  };
  LeaveRoomReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LeaveRoomReq_descriptor_,
      LeaveRoomReq::default_instance_,
      LeaveRoomReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LeaveRoomReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(LeaveRoomReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LeaveRoomReq, _internal_metadata_),
      -1);
  LeaveRoomResp_descriptor_ = file->message_type(9);
  static const int LeaveRoomResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LeaveRoomResp, code_),
  };
  LeaveRoomResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LeaveRoomResp_descriptor_,
      LeaveRoomResp::default_instance_,
      LeaveRoomResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LeaveRoomResp, _has_bits_[0]),
      -1,
      -1,
      sizeof(LeaveRoomResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LeaveRoomResp, _internal_metadata_),
      -1);
  LeaveRoomResp_error_code_descriptor_ = LeaveRoomResp_descriptor_->enum_type(0);
  RoleEnterRoomNotify_descriptor_ = file->message_type(10);
  static const int RoleEnterRoomNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleEnterRoomNotify, role_),
  };
  RoleEnterRoomNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RoleEnterRoomNotify_descriptor_,
      RoleEnterRoomNotify::default_instance_,
      RoleEnterRoomNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleEnterRoomNotify, _has_bits_[0]),
      -1,
      -1,
      sizeof(RoleEnterRoomNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleEnterRoomNotify, _internal_metadata_),
      -1);
  RoleLeaveRoomNotify_descriptor_ = file->message_type(11);
  static const int RoleLeaveRoomNotify_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleLeaveRoomNotify, seat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleLeaveRoomNotify, is_roomer_),
  };
  RoleLeaveRoomNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RoleLeaveRoomNotify_descriptor_,
      RoleLeaveRoomNotify::default_instance_,
      RoleLeaveRoomNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleLeaveRoomNotify, _has_bits_[0]),
      -1,
      -1,
      sizeof(RoleLeaveRoomNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleLeaveRoomNotify, _internal_metadata_),
      -1);
  DismissRoomReq_descriptor_ = file->message_type(12);
  static const int DismissRoomReq_offsets_[1] = {
  };
  DismissRoomReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DismissRoomReq_descriptor_,
      DismissRoomReq::default_instance_,
      DismissRoomReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DismissRoomReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(DismissRoomReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DismissRoomReq, _internal_metadata_),
      -1);
  DismissRoomNotify_descriptor_ = file->message_type(13);
  static const int DismissRoomNotify_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DismissRoomNotify, nickname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DismissRoomNotify, seat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DismissRoomNotify, timer_sec_),
  };
  DismissRoomNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DismissRoomNotify_descriptor_,
      DismissRoomNotify::default_instance_,
      DismissRoomNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DismissRoomNotify, _has_bits_[0]),
      -1,
      -1,
      sizeof(DismissRoomNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DismissRoomNotify, _internal_metadata_),
      -1);
  DismissRoomVoteNotify_descriptor_ = file->message_type(14);
  static const int DismissRoomVoteNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DismissRoomVoteNotify, infolist_),
  };
  DismissRoomVoteNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DismissRoomVoteNotify_descriptor_,
      DismissRoomVoteNotify::default_instance_,
      DismissRoomVoteNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DismissRoomVoteNotify, _has_bits_[0]),
      -1,
      -1,
      sizeof(DismissRoomVoteNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DismissRoomVoteNotify, _internal_metadata_),
      -1);
  VoteInfo_descriptor_ = file->message_type(15);
  static const int VoteInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VoteInfo, nickname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VoteInfo, state_),
  };
  VoteInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      VoteInfo_descriptor_,
      VoteInfo::default_instance_,
      VoteInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VoteInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(VoteInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VoteInfo, _internal_metadata_),
      -1);
  DismissRoomVoteAcceptReq_descriptor_ = file->message_type(16);
  static const int DismissRoomVoteAcceptReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DismissRoomVoteAcceptReq, state_),
  };
  DismissRoomVoteAcceptReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DismissRoomVoteAcceptReq_descriptor_,
      DismissRoomVoteAcceptReq::default_instance_,
      DismissRoomVoteAcceptReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DismissRoomVoteAcceptReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(DismissRoomVoteAcceptReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DismissRoomVoteAcceptReq, _internal_metadata_),
      -1);
  DismissRoomResp_descriptor_ = file->message_type(17);
  static const int DismissRoomResp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DismissRoomResp, code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DismissRoomResp, remain_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DismissRoomResp, isdissmis_),
  };
  DismissRoomResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DismissRoomResp_descriptor_,
      DismissRoomResp::default_instance_,
      DismissRoomResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DismissRoomResp, _has_bits_[0]),
      -1,
      -1,
      sizeof(DismissRoomResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DismissRoomResp, _internal_metadata_),
      -1);
  DismissRoomResp_error_code_descriptor_ = DismissRoomResp_descriptor_->enum_type(0);
  RoomReadyNotify_descriptor_ = file->message_type(18);
  static const int RoomReadyNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomReadyNotify, roomer_aciton_),
  };
  RoomReadyNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RoomReadyNotify_descriptor_,
      RoomReadyNotify::default_instance_,
      RoomReadyNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomReadyNotify, _has_bits_[0]),
      -1,
      -1,
      sizeof(RoomReadyNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomReadyNotify, _internal_metadata_),
      -1);
  ReconnectReq_descriptor_ = file->message_type(19);
  static const int ReconnectReq_offsets_[1] = {
  };
  ReconnectReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReconnectReq_descriptor_,
      ReconnectReq::default_instance_,
      ReconnectReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReconnectReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(ReconnectReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReconnectReq, _internal_metadata_),
      -1);
  ReconnectResp_descriptor_ = file->message_type(20);
  static const int ReconnectResp_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReconnectResp, code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReconnectResp, room_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReconnectResp, user_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReconnectResp, self_seat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReconnectResp, banker_seat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReconnectResp, is_roomer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReconnectResp, is_start_),
  };
  ReconnectResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReconnectResp_descriptor_,
      ReconnectResp::default_instance_,
      ReconnectResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReconnectResp, _has_bits_[0]),
      -1,
      -1,
      sizeof(ReconnectResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReconnectResp, _internal_metadata_),
      -1);
  ReconnectResp_error_code_descriptor_ = ReconnectResp_descriptor_->enum_type(0);
  ReconnectFin_descriptor_ = file->message_type(21);
  static const int ReconnectFin_offsets_[1] = {
  };
  ReconnectFin_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReconnectFin_descriptor_,
      ReconnectFin::default_instance_,
      ReconnectFin_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReconnectFin, _has_bits_[0]),
      -1,
      -1,
      sizeof(ReconnectFin),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReconnectFin, _internal_metadata_),
      -1);
  RoleOnlineNotify_descriptor_ = file->message_type(22);
  static const int RoleOnlineNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleOnlineNotify, state_),
  };
  RoleOnlineNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RoleOnlineNotify_descriptor_,
      RoleOnlineNotify::default_instance_,
      RoleOnlineNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleOnlineNotify, _has_bits_[0]),
      -1,
      -1,
      sizeof(RoleOnlineNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleOnlineNotify, _internal_metadata_),
      -1);
  RoomInfo_descriptor_ = file->message_type(23);
  static const int RoomInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomInfo, room_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomInfo, room_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomInfo, option_),
  };
  RoomInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RoomInfo_descriptor_,
      RoomInfo::default_instance_,
      RoomInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(RoomInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomInfo, _internal_metadata_),
      -1);
  RoomListInfo_descriptor_ = file->message_type(24);
  static const int RoomListInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomListInfo, lvlel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomListInfo, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomListInfo, betx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomListInfo, min_coin_),
  };
  RoomListInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RoomListInfo_descriptor_,
      RoomListInfo::default_instance_,
      RoomListInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomListInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(RoomListInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomListInfo, _internal_metadata_),
      -1);
  RoleInfo_descriptor_ = file->message_type(25);
  static const int RoleInfo_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleInfo, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleInfo, nickname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleInfo, logo_icon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleInfo, sexual_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleInfo, seat_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleInfo, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleInfo, score_),
  };
  RoleInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RoleInfo_descriptor_,
      RoleInfo::default_instance_,
      RoleInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(RoleInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleInfo, _internal_metadata_),
      -1);
  AgreeDismissReq_descriptor_ = file->message_type(26);
  static const int AgreeDismissReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AgreeDismissReq, seat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AgreeDismissReq, isagree_),
  };
  AgreeDismissReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AgreeDismissReq_descriptor_,
      AgreeDismissReq::default_instance_,
      AgreeDismissReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AgreeDismissReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(AgreeDismissReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AgreeDismissReq, _internal_metadata_),
      -1);
  DismissStatus_descriptor_ = file->message_type(27);
  static const int DismissStatus_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DismissStatus, seat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DismissStatus, isagree_),
  };
  DismissStatus_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DismissStatus_descriptor_,
      DismissStatus::default_instance_,
      DismissStatus_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DismissStatus, _has_bits_[0]),
      -1,
      -1,
      sizeof(DismissStatus),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DismissStatus, _internal_metadata_),
      -1);
  AgreeDismissResp_descriptor_ = file->message_type(28);
  static const int AgreeDismissResp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AgreeDismissResp, seat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AgreeDismissResp, isagree_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AgreeDismissResp, dismiss_list_),
  };
  AgreeDismissResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AgreeDismissResp_descriptor_,
      AgreeDismissResp::default_instance_,
      AgreeDismissResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AgreeDismissResp, _has_bits_[0]),
      -1,
      -1,
      sizeof(AgreeDismissResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AgreeDismissResp, _internal_metadata_),
      -1);
  KickRoleReq_descriptor_ = file->message_type(29);
  static const int KickRoleReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KickRoleReq, victim_seat_),
  };
  KickRoleReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      KickRoleReq_descriptor_,
      KickRoleReq::default_instance_,
      KickRoleReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KickRoleReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(KickRoleReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KickRoleReq, _internal_metadata_),
      -1);
  KickRoleNotify_descriptor_ = file->message_type(30);
  static const int KickRoleNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KickRoleNotify, seat_),
  };
  KickRoleNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      KickRoleNotify_descriptor_,
      KickRoleNotify::default_instance_,
      KickRoleNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KickRoleNotify, _has_bits_[0]),
      -1,
      -1,
      sizeof(KickRoleNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KickRoleNotify, _internal_metadata_),
      -1);
  YLOption_descriptor_ = file->message_type(31);
  static const int YLOption_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YLOption, usetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YLOption, wanfatype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YLOption, maimatype_),
  };
  YLOption_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      YLOption_descriptor_,
      YLOption::default_instance_,
      YLOption_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YLOption, _has_bits_[0]),
      -1,
      -1,
      sizeof(YLOption),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YLOption, _internal_metadata_),
      -1);
  BBOption_descriptor_ = file->message_type(32);
  static const int BBOption_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BBOption, usetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BBOption, wanfatype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BBOption, maimatype_),
  };
  BBOption_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BBOption_descriptor_,
      BBOption::default_instance_,
      BBOption_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BBOption, _has_bits_[0]),
      -1,
      -1,
      sizeof(BBOption),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BBOption, _internal_metadata_),
      -1);
  LCOption_descriptor_ = file->message_type(33);
  static const int LCOption_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LCOption, usetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LCOption, wanfatype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LCOption, maimatype_),
  };
  LCOption_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LCOption_descriptor_,
      LCOption::default_instance_,
      LCOption_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LCOption, _has_bits_[0]),
      -1,
      -1,
      sizeof(LCOption),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LCOption, _internal_metadata_),
      -1);
  XZOption_descriptor_ = file->message_type(34);
  static const int XZOption_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XZOption, mode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XZOption, zimo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XZOption, diangang_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XZOption, wanfatype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XZOption, multi_),
  };
  XZOption_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      XZOption_descriptor_,
      XZOption::default_instance_,
      XZOption_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XZOption, _has_bits_[0]),
      -1,
      -1,
      sizeof(XZOption),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XZOption, _internal_metadata_),
      -1);
  XLOption_descriptor_ = file->message_type(35);
  static const int XLOption_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XLOption, mode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XLOption, zimo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XLOption, diangang_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XLOption, wanfatype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XLOption, multi_),
  };
  XLOption_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      XLOption_descriptor_,
      XLOption::default_instance_,
      XLOption_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XLOption, _has_bits_[0]),
      -1,
      -1,
      sizeof(XLOption),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XLOption, _internal_metadata_),
      -1);
  RoomOption_descriptor_ = file->message_type(36);
  static const int RoomOption_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomOption, game_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomOption, renshutype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomOption, paytype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomOption, basescoretype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomOption, jushutype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomOption, fengdingtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomOption, total_pai_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomOption, yl_option_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomOption, bb_option_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomOption, lc_option_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomOption, xz_option_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomOption, xl_option_),
  };
  RoomOption_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RoomOption_descriptor_,
      RoomOption::default_instance_,
      RoomOption_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomOption, _has_bits_[0]),
      -1,
      -1,
      sizeof(RoomOption),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomOption, _internal_metadata_),
      -1);
  RoomCardPriceReq_descriptor_ = file->message_type(37);
  static const int RoomCardPriceReq_offsets_[1] = {
  };
  RoomCardPriceReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RoomCardPriceReq_descriptor_,
      RoomCardPriceReq::default_instance_,
      RoomCardPriceReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomCardPriceReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(RoomCardPriceReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomCardPriceReq, _internal_metadata_),
      -1);
  RoomCardPriceResp_descriptor_ = file->message_type(38);
  static const int RoomCardPriceResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomCardPriceResp, room_cards_),
  };
  RoomCardPriceResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RoomCardPriceResp_descriptor_,
      RoomCardPriceResp::default_instance_,
      RoomCardPriceResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomCardPriceResp, _has_bits_[0]),
      -1,
      -1,
      sizeof(RoomCardPriceResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomCardPriceResp, _internal_metadata_),
      -1);
  SyncRommInnInfo_descriptor_ = file->message_type(39);
  static const int SyncRommInnInfo_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncRommInnInfo, inn_id_),
  };
  SyncRommInnInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SyncRommInnInfo_descriptor_,
      SyncRommInnInfo::default_instance_,
      SyncRommInnInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncRommInnInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(SyncRommInnInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncRommInnInfo, _internal_metadata_),
      -1);
  NotifyRoomDismiss_descriptor_ = file->message_type(40);
  static const int NotifyRoomDismiss_offsets_[1] = {
  };
  NotifyRoomDismiss_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      NotifyRoomDismiss_descriptor_,
      NotifyRoomDismiss::default_instance_,
      NotifyRoomDismiss_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyRoomDismiss, _has_bits_[0]),
      -1,
      -1,
      sizeof(NotifyRoomDismiss),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyRoomDismiss, _internal_metadata_),
      -1);
  StartRobotReq_descriptor_ = file->message_type(41);
  static const int StartRobotReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartRobotReq, session_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartRobotReq, uid_),
  };
  StartRobotReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      StartRobotReq_descriptor_,
      StartRobotReq::default_instance_,
      StartRobotReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartRobotReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(StartRobotReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartRobotReq, _internal_metadata_),
      -1);
  StopRobotReq_descriptor_ = file->message_type(42);
  static const int StopRobotReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StopRobotReq, uid_),
  };
  StopRobotReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      StopRobotReq_descriptor_,
      StopRobotReq::default_instance_,
      StopRobotReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StopRobotReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(StopRobotReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StopRobotReq, _internal_metadata_),
      -1);
  AddRoomToWs_descriptor_ = file->message_type(43);
  static const int AddRoomToWs_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddRoomToWs, room_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddRoomToWs, room_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddRoomToWs, role_list_),
  };
  AddRoomToWs_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AddRoomToWs_descriptor_,
      AddRoomToWs::default_instance_,
      AddRoomToWs_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddRoomToWs, _has_bits_[0]),
      -1,
      -1,
      sizeof(AddRoomToWs),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddRoomToWs, _internal_metadata_),
      -1);
  UpdateRoomToWs_descriptor_ = file->message_type(44);
  static const int UpdateRoomToWs_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateRoomToWs, room_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateRoomToWs, role_list_),
  };
  UpdateRoomToWs_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UpdateRoomToWs_descriptor_,
      UpdateRoomToWs::default_instance_,
      UpdateRoomToWs_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateRoomToWs, _has_bits_[0]),
      -1,
      -1,
      sizeof(UpdateRoomToWs),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateRoomToWs, _internal_metadata_),
      -1);
  RemoveRoomToWs_descriptor_ = file->message_type(45);
  static const int RemoveRoomToWs_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveRoomToWs, room_id_),
  };
  RemoveRoomToWs_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RemoveRoomToWs_descriptor_,
      RemoveRoomToWs::default_instance_,
      RemoveRoomToWs_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveRoomToWs, _has_bits_[0]),
      -1,
      -1,
      sizeof(RemoveRoomToWs),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveRoomToWs, _internal_metadata_),
      -1);
  NtCoinNotenough_descriptor_ = file->message_type(46);
  static const int NtCoinNotenough_offsets_[1] = {
  };
  NtCoinNotenough_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      NtCoinNotenough_descriptor_,
      NtCoinNotenough::default_instance_,
      NtCoinNotenough_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NtCoinNotenough, _has_bits_[0]),
      -1,
      -1,
      sizeof(NtCoinNotenough),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NtCoinNotenough, _internal_metadata_),
      -1);
  c_cmd_room_descriptor_ = file->enum_type(0);
  RoomType_descriptor_ = file->enum_type(1);
  EnterType_descriptor_ = file->enum_type(2);
  PlayType_descriptor_ = file->enum_type(3);
  VoteState_descriptor_ = file->enum_type(4);
  VoteResult_descriptor_ = file->enum_type(5);
  RoomerAction_descriptor_ = file->enum_type(6);
  online_state_room_descriptor_ = file->enum_type(7);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_msg_5froom_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RoomListReq_descriptor_, &RoomListReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RoomListResp_descriptor_, &RoomListResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      OpenRoomReq_descriptor_, &OpenRoomReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      OpenRoomResp_descriptor_, &OpenRoomResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EnterRoomReq_descriptor_, &EnterRoomReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EnterRoomResp_descriptor_, &EnterRoomResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EnterRoomReady_descriptor_, &EnterRoomReady::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SyncRoomRoleInfo_descriptor_, &SyncRoomRoleInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LeaveRoomReq_descriptor_, &LeaveRoomReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LeaveRoomResp_descriptor_, &LeaveRoomResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RoleEnterRoomNotify_descriptor_, &RoleEnterRoomNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RoleLeaveRoomNotify_descriptor_, &RoleLeaveRoomNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DismissRoomReq_descriptor_, &DismissRoomReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DismissRoomNotify_descriptor_, &DismissRoomNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DismissRoomVoteNotify_descriptor_, &DismissRoomVoteNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      VoteInfo_descriptor_, &VoteInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DismissRoomVoteAcceptReq_descriptor_, &DismissRoomVoteAcceptReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DismissRoomResp_descriptor_, &DismissRoomResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RoomReadyNotify_descriptor_, &RoomReadyNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReconnectReq_descriptor_, &ReconnectReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReconnectResp_descriptor_, &ReconnectResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReconnectFin_descriptor_, &ReconnectFin::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RoleOnlineNotify_descriptor_, &RoleOnlineNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RoomInfo_descriptor_, &RoomInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RoomListInfo_descriptor_, &RoomListInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RoleInfo_descriptor_, &RoleInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AgreeDismissReq_descriptor_, &AgreeDismissReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DismissStatus_descriptor_, &DismissStatus::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AgreeDismissResp_descriptor_, &AgreeDismissResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      KickRoleReq_descriptor_, &KickRoleReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      KickRoleNotify_descriptor_, &KickRoleNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      YLOption_descriptor_, &YLOption::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BBOption_descriptor_, &BBOption::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LCOption_descriptor_, &LCOption::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      XZOption_descriptor_, &XZOption::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      XLOption_descriptor_, &XLOption::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RoomOption_descriptor_, &RoomOption::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RoomCardPriceReq_descriptor_, &RoomCardPriceReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RoomCardPriceResp_descriptor_, &RoomCardPriceResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SyncRommInnInfo_descriptor_, &SyncRommInnInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      NotifyRoomDismiss_descriptor_, &NotifyRoomDismiss::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      StartRobotReq_descriptor_, &StartRobotReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      StopRobotReq_descriptor_, &StopRobotReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AddRoomToWs_descriptor_, &AddRoomToWs::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UpdateRoomToWs_descriptor_, &UpdateRoomToWs::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RemoveRoomToWs_descriptor_, &RemoveRoomToWs::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      NtCoinNotenough_descriptor_, &NtCoinNotenough::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_msg_5froom_2eproto() {
  delete RoomListReq::default_instance_;
  delete RoomListReq_reflection_;
  delete RoomListResp::default_instance_;
  delete RoomListResp_reflection_;
  delete OpenRoomReq::default_instance_;
  delete OpenRoomReq_reflection_;
  delete OpenRoomResp::default_instance_;
  delete OpenRoomResp_reflection_;
  delete EnterRoomReq::default_instance_;
  delete EnterRoomReq_reflection_;
  delete EnterRoomResp::default_instance_;
  delete EnterRoomResp_reflection_;
  delete EnterRoomReady::default_instance_;
  delete EnterRoomReady_reflection_;
  delete SyncRoomRoleInfo::default_instance_;
  delete SyncRoomRoleInfo_reflection_;
  delete LeaveRoomReq::default_instance_;
  delete LeaveRoomReq_reflection_;
  delete LeaveRoomResp::default_instance_;
  delete LeaveRoomResp_reflection_;
  delete RoleEnterRoomNotify::default_instance_;
  delete RoleEnterRoomNotify_reflection_;
  delete RoleLeaveRoomNotify::default_instance_;
  delete RoleLeaveRoomNotify_reflection_;
  delete DismissRoomReq::default_instance_;
  delete DismissRoomReq_reflection_;
  delete DismissRoomNotify::default_instance_;
  delete DismissRoomNotify_reflection_;
  delete DismissRoomVoteNotify::default_instance_;
  delete DismissRoomVoteNotify_reflection_;
  delete VoteInfo::default_instance_;
  delete VoteInfo_reflection_;
  delete DismissRoomVoteAcceptReq::default_instance_;
  delete DismissRoomVoteAcceptReq_reflection_;
  delete DismissRoomResp::default_instance_;
  delete DismissRoomResp_reflection_;
  delete RoomReadyNotify::default_instance_;
  delete RoomReadyNotify_reflection_;
  delete ReconnectReq::default_instance_;
  delete ReconnectReq_reflection_;
  delete ReconnectResp::default_instance_;
  delete ReconnectResp_reflection_;
  delete ReconnectFin::default_instance_;
  delete ReconnectFin_reflection_;
  delete RoleOnlineNotify::default_instance_;
  delete RoleOnlineNotify_reflection_;
  delete RoomInfo::default_instance_;
  delete RoomInfo_reflection_;
  delete RoomListInfo::default_instance_;
  delete RoomListInfo_reflection_;
  delete RoleInfo::default_instance_;
  delete RoleInfo_reflection_;
  delete AgreeDismissReq::default_instance_;
  delete AgreeDismissReq_reflection_;
  delete DismissStatus::default_instance_;
  delete DismissStatus_reflection_;
  delete AgreeDismissResp::default_instance_;
  delete AgreeDismissResp_reflection_;
  delete KickRoleReq::default_instance_;
  delete KickRoleReq_reflection_;
  delete KickRoleNotify::default_instance_;
  delete KickRoleNotify_reflection_;
  delete YLOption::default_instance_;
  delete YLOption_reflection_;
  delete BBOption::default_instance_;
  delete BBOption_reflection_;
  delete LCOption::default_instance_;
  delete LCOption_reflection_;
  delete XZOption::default_instance_;
  delete XZOption_reflection_;
  delete XLOption::default_instance_;
  delete XLOption_reflection_;
  delete RoomOption::default_instance_;
  delete RoomOption_reflection_;
  delete RoomCardPriceReq::default_instance_;
  delete RoomCardPriceReq_reflection_;
  delete RoomCardPriceResp::default_instance_;
  delete RoomCardPriceResp_reflection_;
  delete SyncRommInnInfo::default_instance_;
  delete SyncRommInnInfo_reflection_;
  delete NotifyRoomDismiss::default_instance_;
  delete NotifyRoomDismiss_reflection_;
  delete StartRobotReq::default_instance_;
  delete StartRobotReq_reflection_;
  delete StopRobotReq::default_instance_;
  delete StopRobotReq_reflection_;
  delete AddRoomToWs::default_instance_;
  delete AddRoomToWs_reflection_;
  delete UpdateRoomToWs::default_instance_;
  delete UpdateRoomToWs_reflection_;
  delete RemoveRoomToWs::default_instance_;
  delete RemoveRoomToWs_reflection_;
  delete NtCoinNotenough::default_instance_;
  delete NtCoinNotenough_reflection_;
}

void protobuf_AddDesc_msg_5froom_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_msg_5froom_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::msg_maj::protobuf_AddDesc_msg_5fmaj_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016msg_room.proto\022\007msg_maj\032\rmsg_maj.proto"
    "\"\r\n\013RoomListReq\"3\n\014RoomListResp\022#\n\004room\030"
    "\001 \003(\0132\025.msg_maj.RoomListInfo\"~\n\013OpenRoom"
    "Req\022$\n\troom_type\030\001 \002(\0162\021.msg_maj.RoomTyp"
    "e\022$\n\tgame_type\030\002 \002(\0162\021.msg_maj.maj_type\022"
    "#\n\006option\030\003 \002(\0132\023.msg_maj.RoomOption\"\356\001\n"
    "\014OpenRoomResp\022.\n\004code\030\001 \002(\0162 .msg_maj.Op"
    "enRoomResp.error_code\022\037\n\004info\030\002 \001(\0132\021.ms"
    "g_maj.RoomInfo\022\037\n\004role\030\003 \001(\0132\021.msg_maj.R"
    "oleInfo\"l\n\nerror_code\022\013\n\007SUCCESS\020\001\022\010\n\004FA"
    "IL\020\002\022\016\n\nALREADY_IN\020\003\022\016\n\nNO_DIAMOND\020\004\022\026\n\022"
    "ROOMCARD_NOTENOUTH\020\005\022\017\n\013MAINTENANCE\020\006\"A\n"
    "\014EnterRoomReq\022 \n\004type\030\001 \002(\0162\022.msg_maj.En"
    "terType\022\017\n\007room_no\030\002 \001(\r\"\373\001\n\rEnterRoomRe"
    "sp\0222\n\004code\030\001 \002(\0162$.msg_maj.EnterRoomResp"
    ".msg_room_code\022\037\n\004info\030\002 \001(\0132\021.msg_maj.R"
    "oomInfo\022#\n\010roleList\030\003 \003(\0132\021.msg_maj.Role"
    "Info\022\021\n\tself_seat\030\004 \001(\r\022\023\n\013banker_seat\030\005"
    " \001(\r\"H\n\rmsg_room_code\022\013\n\007SUCCESS\020\001\022\010\n\004FA"
    "IL\020\002\022\016\n\nALREADY_IN\020\003\022\020\n\014PERSONS_FULL\020\004\"\020"
    "\n\016EnterRoomReady\"7\n\020SyncRoomRoleInfo\022#\n\010"
    "roleList\030\001 \003(\0132\021.msg_maj.RoleInfo\"\016\n\014Lea"
    "veRoomReq\"b\n\rLeaveRoomResp\022/\n\004code\030\001 \002(\016"
    "2!.msg_maj.LeaveRoomResp.error_code\" \n\ne"
    "rror_code\022\022\n\016HAS_LEAVE_ROOM\020\001\"6\n\023RoleEnt"
    "erRoomNotify\022\037\n\004role\030\001 \002(\0132\021.msg_maj.Rol"
    "eInfo\"6\n\023RoleLeaveRoomNotify\022\014\n\004seat\030\001 \002"
    "(\r\022\021\n\tis_roomer\030\002 \002(\010\"\020\n\016DismissRoomReq\""
    "F\n\021DismissRoomNotify\022\020\n\010nickname\030\001 \002(\t\022\014"
    "\n\004seat\030\002 \002(\r\022\021\n\ttimer_sec\030\003 \001(\r\"<\n\025Dismi"
    "ssRoomVoteNotify\022#\n\010infoList\030\001 \003(\0132\021.msg"
    "_maj.VoteInfo\"\?\n\010VoteInfo\022\020\n\010nickname\030\001 "
    "\002(\t\022!\n\005state\030\002 \002(\0162\022.msg_maj.VoteState\"="
    "\n\030DismissRoomVoteAcceptReq\022!\n\005state\030\001 \002("
    "\0162\022.msg_maj.VoteState\"\246\001\n\017DismissRoomRes"
    "p\0221\n\004code\030\001 \001(\0162#.msg_maj.DismissRoomRes"
    "p.error_code\022\023\n\013remain_time\030\002 \001(\r\022\021\n\tisD"
    "issMis\030\003 \001(\010\"8\n\nerror_code\022\013\n\007SUCCESS\020\001\022"
    "\010\n\004FAIL\020\002\022\023\n\017PROTECTION_TIME\020\003\"\?\n\017RoomRe"
    "adyNotify\022,\n\rroomer_aciton\030\001 \002(\0162\025.msg_m"
    "aj.RoomerAction\"\016\n\014ReconnectReq\"\217\002\n\rReco"
    "nnectResp\022/\n\004code\030\001 \002(\0162!.msg_maj.Reconn"
    "ectResp.error_code\022$\n\troom_info\030\002 \001(\0132\021."
    "msg_maj.RoomInfo\022$\n\tuser_list\030\003 \003(\0132\021.ms"
    "g_maj.RoleInfo\022\021\n\tself_seat\030\004 \001(\r\022\023\n\013ban"
    "ker_seat\030\005 \001(\r\022\021\n\tis_roomer\030\006 \001(\010\022\020\n\010is_"
    "start\030\007 \001(\010\"4\n\nerror_code\022\013\n\007SUCCESS\020\001\022\010"
    "\n\004FAIL\020\002\022\017\n\013NOT_IN_ROOM\020\003\"\016\n\014ReconnectFi"
    "n\"=\n\020RoleOnlineNotify\022)\n\005state\030\001 \002(\0162\032.m"
    "sg_maj.online_state_room\"f\n\010RoomInfo\022\017\n\007"
    "room_id\030\001 \002(\r\022$\n\troom_type\030\002 \002(\0162\021.msg_m"
    "aj.RoomType\022#\n\006option\030\003 \002(\0132\023.msg_maj.Ro"
    "omOption\"K\n\014RoomListInfo\022\r\n\005lvlel\030\001 \002(\r\022"
    "\014\n\004name\030\002 \002(\t\022\014\n\004betx\030\003 \002(\r\022\020\n\010min_coin\030"
    "\004 \002(\r\"|\n\010RoleInfo\022\013\n\003uid\030\001 \002(\004\022\020\n\010nickna"
    "me\030\002 \002(\t\022\021\n\tlogo_icon\030\003 \002(\t\022\016\n\006sexual\030\004 "
    "\002(\005\022\017\n\007seat_id\030\005 \002(\005\022\016\n\006status\030\006 \002(\005\022\r\n\005"
    "score\030\007 \002(\005\"0\n\017AgreeDismissReq\022\014\n\004seat\030\001"
    " \002(\r\022\017\n\007isAgree\030\002 \002(\010\".\n\rDismissStatus\022\014"
    "\n\004seat\030\001 \001(\r\022\017\n\007isagree\030\002 \001(\010\"_\n\020AgreeDi"
    "smissResp\022\014\n\004seat\030\001 \002(\r\022\017\n\007isAgree\030\002 \002(\010"
    "\022,\n\014dismiss_list\030\003 \003(\0132\026.msg_maj.Dismiss"
    "Status\"\"\n\013KickRoleReq\022\023\n\013victim_seat\030\001 \002"
    "(\r\"\036\n\016KickRoleNotify\022\014\n\004seat\030\001 \002(\r\"A\n\010YL"
    "Option\022\017\n\007useType\030\001 \001(\005\022\021\n\twanFaType\030\002 \001"
    "(\005\022\021\n\tmaiMaType\030\003 \001(\005\"A\n\010BBOption\022\017\n\007use"
    "Type\030\001 \001(\005\022\021\n\twanFaType\030\002 \001(\005\022\021\n\tmaiMaTy"
    "pe\030\003 \001(\005\"A\n\010LCOption\022\017\n\007useType\030\001 \001(\005\022\021\n"
    "\twanFaType\030\002 \001(\005\022\021\n\tmaiMaType\030\003 \001(\005\"Z\n\010X"
    "ZOption\022\014\n\004mode\030\001 \001(\005\022\014\n\004zimo\030\002 \001(\005\022\020\n\010d"
    "iangang\030\003 \001(\005\022\021\n\twanFaType\030\004 \001(\005\022\r\n\005mult"
    "i\030\005 \001(\005\"Z\n\010XLOption\022\014\n\004mode\030\001 \001(\005\022\014\n\004zim"
    "o\030\002 \001(\005\022\020\n\010diangang\030\003 \001(\005\022\021\n\twanFaType\030\004"
    " \001(\005\022\r\n\005multi\030\005 \001(\005\"\331\002\n\nRoomOption\022\021\n\tga"
    "me_type\030\001 \001(\005\022\022\n\nrenShuType\030\002 \001(\005\022\017\n\007pay"
    "Type\030\003 \001(\005\022\025\n\rbaseScoreType\030\004 \001(\005\022\021\n\tjuS"
    "huType\030\005 \001(\005\022\024\n\014fengDingType\030\006 \001(\005\022\025\n\rto"
    "tal_pai_num\030\007 \001(\005\022$\n\tyl_option\030\013 \001(\0132\021.m"
    "sg_maj.YLOption\022$\n\tbb_option\030\014 \001(\0132\021.msg"
    "_maj.BBOption\022$\n\tlc_option\030\r \001(\0132\021.msg_m"
    "aj.LCOption\022$\n\txz_option\030\016 \001(\0132\021.msg_maj"
    ".XZOption\022$\n\txl_option\030\017 \001(\0132\021.msg_maj.X"
    "LOption\"\022\n\020RoomCardPriceReq\"\'\n\021RoomCardP"
    "riceResp\022\022\n\nroom_cards\030\001 \003(\r\"!\n\017SyncRomm"
    "InnInfo\022\016\n\006inn_id\030\001 \002(\005\"\023\n\021NotifyRoomDis"
    "miss\"0\n\rStartRobotReq\022\022\n\nsession_id\030\001 \002("
    "\r\022\013\n\003uid\030\002 \002(\004\"\033\n\014StopRobotReq\022\013\n\003uid\030\001 "
    "\002(\004\"j\n\013AddRoomToWs\022\017\n\007room_id\030\001 \002(\r\022$\n\tr"
    "oom_info\030\002 \002(\0132\021.msg_maj.RoomInfo\022$\n\trol"
    "e_list\030\003 \003(\0132\021.msg_maj.RoleInfo\"G\n\016Updat"
    "eRoomToWs\022\017\n\007room_id\030\001 \002(\r\022$\n\trole_list\030"
    "\002 \003(\0132\021.msg_maj.RoleInfo\"!\n\016RemoveRoomTo"
    "Ws\022\017\n\007room_id\030\001 \002(\r\"\021\n\017NtCoinNotenough*\232"
    "\006\n\nc_cmd_room\022\016\n\nc_cmd_none\020\000\022\021\n\rroom_li"
    "st_req\020\001\022\022\n\016room_list_resp\020\002\022\021\n\ropen_roo"
    "m_req\020\003\022\022\n\016open_room_resp\020\004\022\022\n\016enter_roo"
    "m_req\020\005\022\023\n\017enter_room_resp\020\006\022\023\n\017role_ent"
    "er_room\020\t\022\023\n\017role_leave_room\020\n\022\022\n\016leave_"
    "room_req\020\013\022\024\n\020dismiss_room_req\020\014\022\025\n\021dism"
    "iss_room_resp\020\r\022\034\n\030dismiss_room_vote_acc"
    "ept\020\016\022\034\n\030dismiss_room_vote_notify\020\017\022\025\n\021r"
    "oom_ready_notify\020\020\022\026\n\022room_reconnect_req"
    "\020\021\022\027\n\023room_reconnect_resp\020\022\022\026\n\022role_onli"
    "ne_notify\020\023\022\021\n\rkick_role_req\020\024\022\024\n\020kick_r"
    "ole_notify\020\025\022\021\n\rreconnect_fin\020\026\022\027\n\023dismi"
    "ss_room_notify\020\027\022\024\n\020enter_room_ready\020\030\022\026"
    "\n\022roomcard_price_req\020\031\022\027\n\023roomcard_price"
    "_resp\020\032\022\027\n\023sync_room_role_info\020\033\022\026\n\022sync"
    "_romm_inn_info\020\034\022\027\n\023notify_room_dismiss\020"
    "\035\022\023\n\017leave_room_resp\020\036\022\023\n\017start_robot_re"
    "q\020\037\022\022\n\016stop_robot_req\020 \022\022\n\016add_room_to_w"
    "s\020!\022\024\n\020upate_room_to_ws\020\"\022\025\n\021remove_room"
    "_to_ws\020#\022\031\n\025coin_notenough_notity\020$*L\n\010R"
    "oomType\022\017\n\013ROOM_NORMAL\020\000\022\020\n\014ROOM_PRIVATE"
    "\020\001\022\r\n\tROOM_GOLD\020\002\022\016\n\nROOM_MATCH\020\003*,\n\tEnt"
    "erType\022\r\n\tROOM_AUTO\020\000\022\020\n\014ROOM_ROOM_NO\020\001*"
    "2\n\010PlayType\022\021\n\rROOM_NO_HANZI\020\000\022\023\n\017ROOM_H"
    "AVE_HANZI\020\001*=\n\tVoteState\022\r\n\tVOTE_WAIT\020\000\022"
    "\016\n\nVOTE_AGREE\020\001\022\021\n\rVOTE_DISAGREE\020\002*N\n\nVo"
    "teResult\022\024\n\020VOTE_RESULT_WAIT\020\000\022\024\n\020VOTE_R"
    "ESULT_PASS\020\001\022\024\n\020VOTE_RESULT_FAIL\020\002*/\n\014Ro"
    "omerAction\022\r\n\tcan_start\020\001\022\020\n\014cancel_star"
    "t\020\002*,\n\021online_state_room\022\n\n\006online\020\001\022\013\n\007"
    "offline\020\002", 4929);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "msg_room.proto", &protobuf_RegisterTypes);
  RoomListReq::default_instance_ = new RoomListReq();
  RoomListResp::default_instance_ = new RoomListResp();
  OpenRoomReq::default_instance_ = new OpenRoomReq();
  OpenRoomResp::default_instance_ = new OpenRoomResp();
  EnterRoomReq::default_instance_ = new EnterRoomReq();
  EnterRoomResp::default_instance_ = new EnterRoomResp();
  EnterRoomReady::default_instance_ = new EnterRoomReady();
  SyncRoomRoleInfo::default_instance_ = new SyncRoomRoleInfo();
  LeaveRoomReq::default_instance_ = new LeaveRoomReq();
  LeaveRoomResp::default_instance_ = new LeaveRoomResp();
  RoleEnterRoomNotify::default_instance_ = new RoleEnterRoomNotify();
  RoleLeaveRoomNotify::default_instance_ = new RoleLeaveRoomNotify();
  DismissRoomReq::default_instance_ = new DismissRoomReq();
  DismissRoomNotify::default_instance_ = new DismissRoomNotify();
  DismissRoomVoteNotify::default_instance_ = new DismissRoomVoteNotify();
  VoteInfo::default_instance_ = new VoteInfo();
  DismissRoomVoteAcceptReq::default_instance_ = new DismissRoomVoteAcceptReq();
  DismissRoomResp::default_instance_ = new DismissRoomResp();
  RoomReadyNotify::default_instance_ = new RoomReadyNotify();
  ReconnectReq::default_instance_ = new ReconnectReq();
  ReconnectResp::default_instance_ = new ReconnectResp();
  ReconnectFin::default_instance_ = new ReconnectFin();
  RoleOnlineNotify::default_instance_ = new RoleOnlineNotify();
  RoomInfo::default_instance_ = new RoomInfo();
  RoomListInfo::default_instance_ = new RoomListInfo();
  RoleInfo::default_instance_ = new RoleInfo();
  AgreeDismissReq::default_instance_ = new AgreeDismissReq();
  DismissStatus::default_instance_ = new DismissStatus();
  AgreeDismissResp::default_instance_ = new AgreeDismissResp();
  KickRoleReq::default_instance_ = new KickRoleReq();
  KickRoleNotify::default_instance_ = new KickRoleNotify();
  YLOption::default_instance_ = new YLOption();
  BBOption::default_instance_ = new BBOption();
  LCOption::default_instance_ = new LCOption();
  XZOption::default_instance_ = new XZOption();
  XLOption::default_instance_ = new XLOption();
  RoomOption::default_instance_ = new RoomOption();
  RoomCardPriceReq::default_instance_ = new RoomCardPriceReq();
  RoomCardPriceResp::default_instance_ = new RoomCardPriceResp();
  SyncRommInnInfo::default_instance_ = new SyncRommInnInfo();
  NotifyRoomDismiss::default_instance_ = new NotifyRoomDismiss();
  StartRobotReq::default_instance_ = new StartRobotReq();
  StopRobotReq::default_instance_ = new StopRobotReq();
  AddRoomToWs::default_instance_ = new AddRoomToWs();
  UpdateRoomToWs::default_instance_ = new UpdateRoomToWs();
  RemoveRoomToWs::default_instance_ = new RemoveRoomToWs();
  NtCoinNotenough::default_instance_ = new NtCoinNotenough();
  RoomListReq::default_instance_->InitAsDefaultInstance();
  RoomListResp::default_instance_->InitAsDefaultInstance();
  OpenRoomReq::default_instance_->InitAsDefaultInstance();
  OpenRoomResp::default_instance_->InitAsDefaultInstance();
  EnterRoomReq::default_instance_->InitAsDefaultInstance();
  EnterRoomResp::default_instance_->InitAsDefaultInstance();
  EnterRoomReady::default_instance_->InitAsDefaultInstance();
  SyncRoomRoleInfo::default_instance_->InitAsDefaultInstance();
  LeaveRoomReq::default_instance_->InitAsDefaultInstance();
  LeaveRoomResp::default_instance_->InitAsDefaultInstance();
  RoleEnterRoomNotify::default_instance_->InitAsDefaultInstance();
  RoleLeaveRoomNotify::default_instance_->InitAsDefaultInstance();
  DismissRoomReq::default_instance_->InitAsDefaultInstance();
  DismissRoomNotify::default_instance_->InitAsDefaultInstance();
  DismissRoomVoteNotify::default_instance_->InitAsDefaultInstance();
  VoteInfo::default_instance_->InitAsDefaultInstance();
  DismissRoomVoteAcceptReq::default_instance_->InitAsDefaultInstance();
  DismissRoomResp::default_instance_->InitAsDefaultInstance();
  RoomReadyNotify::default_instance_->InitAsDefaultInstance();
  ReconnectReq::default_instance_->InitAsDefaultInstance();
  ReconnectResp::default_instance_->InitAsDefaultInstance();
  ReconnectFin::default_instance_->InitAsDefaultInstance();
  RoleOnlineNotify::default_instance_->InitAsDefaultInstance();
  RoomInfo::default_instance_->InitAsDefaultInstance();
  RoomListInfo::default_instance_->InitAsDefaultInstance();
  RoleInfo::default_instance_->InitAsDefaultInstance();
  AgreeDismissReq::default_instance_->InitAsDefaultInstance();
  DismissStatus::default_instance_->InitAsDefaultInstance();
  AgreeDismissResp::default_instance_->InitAsDefaultInstance();
  KickRoleReq::default_instance_->InitAsDefaultInstance();
  KickRoleNotify::default_instance_->InitAsDefaultInstance();
  YLOption::default_instance_->InitAsDefaultInstance();
  BBOption::default_instance_->InitAsDefaultInstance();
  LCOption::default_instance_->InitAsDefaultInstance();
  XZOption::default_instance_->InitAsDefaultInstance();
  XLOption::default_instance_->InitAsDefaultInstance();
  RoomOption::default_instance_->InitAsDefaultInstance();
  RoomCardPriceReq::default_instance_->InitAsDefaultInstance();
  RoomCardPriceResp::default_instance_->InitAsDefaultInstance();
  SyncRommInnInfo::default_instance_->InitAsDefaultInstance();
  NotifyRoomDismiss::default_instance_->InitAsDefaultInstance();
  StartRobotReq::default_instance_->InitAsDefaultInstance();
  StopRobotReq::default_instance_->InitAsDefaultInstance();
  AddRoomToWs::default_instance_->InitAsDefaultInstance();
  UpdateRoomToWs::default_instance_->InitAsDefaultInstance();
  RemoveRoomToWs::default_instance_->InitAsDefaultInstance();
  NtCoinNotenough::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_msg_5froom_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_msg_5froom_2eproto {
  StaticDescriptorInitializer_msg_5froom_2eproto() {
    protobuf_AddDesc_msg_5froom_2eproto();
  }
} static_descriptor_initializer_msg_5froom_2eproto_;
const ::google::protobuf::EnumDescriptor* c_cmd_room_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return c_cmd_room_descriptor_;
}
bool c_cmd_room_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* RoomType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoomType_descriptor_;
}
bool RoomType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EnterType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EnterType_descriptor_;
}
bool EnterType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PlayType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PlayType_descriptor_;
}
bool PlayType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* VoteState_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return VoteState_descriptor_;
}
bool VoteState_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* VoteResult_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return VoteResult_descriptor_;
}
bool VoteResult_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* RoomerAction_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoomerAction_descriptor_;
}
bool RoomerAction_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* online_state_room_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return online_state_room_descriptor_;
}
bool online_state_room_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoomListReq::RoomListReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.RoomListReq)
}

void RoomListReq::InitAsDefaultInstance() {
}

RoomListReq::RoomListReq(const RoomListReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.RoomListReq)
}

void RoomListReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RoomListReq::~RoomListReq() {
  // @@protoc_insertion_point(destructor:msg_maj.RoomListReq)
  SharedDtor();
}

void RoomListReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RoomListReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoomListReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoomListReq_descriptor_;
}

const RoomListReq& RoomListReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5froom_2eproto();
  return *default_instance_;
}

RoomListReq* RoomListReq::default_instance_ = NULL;

RoomListReq* RoomListReq::New(::google::protobuf::Arena* arena) const {
  RoomListReq* n = new RoomListReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoomListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.RoomListReq)
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RoomListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.RoomListReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.RoomListReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.RoomListReq)
  return false;
#undef DO_
}

void RoomListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.RoomListReq)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.RoomListReq)
}

::google::protobuf::uint8* RoomListReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.RoomListReq)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.RoomListReq)
  return target;
}

int RoomListReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.RoomListReq)
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoomListReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.RoomListReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RoomListReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RoomListReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.RoomListReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.RoomListReq)
    MergeFrom(*source);
  }
}

void RoomListReq::MergeFrom(const RoomListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.RoomListReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void RoomListReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.RoomListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoomListReq::CopyFrom(const RoomListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.RoomListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoomListReq::IsInitialized() const {

  return true;
}

void RoomListReq::Swap(RoomListReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoomListReq::InternalSwap(RoomListReq* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoomListReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RoomListReq_descriptor_;
  metadata.reflection = RoomListReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoomListReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoomListResp::kRoomFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoomListResp::RoomListResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.RoomListResp)
}

void RoomListResp::InitAsDefaultInstance() {
}

RoomListResp::RoomListResp(const RoomListResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.RoomListResp)
}

void RoomListResp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RoomListResp::~RoomListResp() {
  // @@protoc_insertion_point(destructor:msg_maj.RoomListResp)
  SharedDtor();
}

void RoomListResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RoomListResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoomListResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoomListResp_descriptor_;
}

const RoomListResp& RoomListResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5froom_2eproto();
  return *default_instance_;
}

RoomListResp* RoomListResp::default_instance_ = NULL;

RoomListResp* RoomListResp::New(::google::protobuf::Arena* arena) const {
  RoomListResp* n = new RoomListResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoomListResp::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.RoomListResp)
  room_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RoomListResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.RoomListResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .msg_maj.RoomListInfo room = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_room:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_room()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_room;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.RoomListResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.RoomListResp)
  return false;
#undef DO_
}

void RoomListResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.RoomListResp)
  // repeated .msg_maj.RoomListInfo room = 1;
  for (unsigned int i = 0, n = this->room_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->room(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.RoomListResp)
}

::google::protobuf::uint8* RoomListResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.RoomListResp)
  // repeated .msg_maj.RoomListInfo room = 1;
  for (unsigned int i = 0, n = this->room_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->room(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.RoomListResp)
  return target;
}

int RoomListResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.RoomListResp)
  int total_size = 0;

  // repeated .msg_maj.RoomListInfo room = 1;
  total_size += 1 * this->room_size();
  for (int i = 0; i < this->room_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->room(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoomListResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.RoomListResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RoomListResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RoomListResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.RoomListResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.RoomListResp)
    MergeFrom(*source);
  }
}

void RoomListResp::MergeFrom(const RoomListResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.RoomListResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  room_.MergeFrom(from.room_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void RoomListResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.RoomListResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoomListResp::CopyFrom(const RoomListResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.RoomListResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoomListResp::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->room())) return false;
  return true;
}

void RoomListResp::Swap(RoomListResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoomListResp::InternalSwap(RoomListResp* other) {
  room_.UnsafeArenaSwap(&other->room_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoomListResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RoomListResp_descriptor_;
  metadata.reflection = RoomListResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoomListResp

// repeated .msg_maj.RoomListInfo room = 1;
int RoomListResp::room_size() const {
  return room_.size();
}
void RoomListResp::clear_room() {
  room_.Clear();
}
const ::msg_maj::RoomListInfo& RoomListResp::room(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.RoomListResp.room)
  return room_.Get(index);
}
::msg_maj::RoomListInfo* RoomListResp::mutable_room(int index) {
  // @@protoc_insertion_point(field_mutable:msg_maj.RoomListResp.room)
  return room_.Mutable(index);
}
::msg_maj::RoomListInfo* RoomListResp::add_room() {
  // @@protoc_insertion_point(field_add:msg_maj.RoomListResp.room)
  return room_.Add();
}
::google::protobuf::RepeatedPtrField< ::msg_maj::RoomListInfo >*
RoomListResp::mutable_room() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.RoomListResp.room)
  return &room_;
}
const ::google::protobuf::RepeatedPtrField< ::msg_maj::RoomListInfo >&
RoomListResp::room() const {
  // @@protoc_insertion_point(field_list:msg_maj.RoomListResp.room)
  return room_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpenRoomReq::kRoomTypeFieldNumber;
const int OpenRoomReq::kGameTypeFieldNumber;
const int OpenRoomReq::kOptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpenRoomReq::OpenRoomReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.OpenRoomReq)
}

void OpenRoomReq::InitAsDefaultInstance() {
  option_ = const_cast< ::msg_maj::RoomOption*>(&::msg_maj::RoomOption::default_instance());
}

OpenRoomReq::OpenRoomReq(const OpenRoomReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.OpenRoomReq)
}

void OpenRoomReq::SharedCtor() {
  _cached_size_ = 0;
  room_type_ = 0;
  game_type_ = 0;
  option_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

OpenRoomReq::~OpenRoomReq() {
  // @@protoc_insertion_point(destructor:msg_maj.OpenRoomReq)
  SharedDtor();
}

void OpenRoomReq::SharedDtor() {
  if (this != default_instance_) {
    delete option_;
  }
}

void OpenRoomReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpenRoomReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OpenRoomReq_descriptor_;
}

const OpenRoomReq& OpenRoomReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5froom_2eproto();
  return *default_instance_;
}

OpenRoomReq* OpenRoomReq::default_instance_ = NULL;

OpenRoomReq* OpenRoomReq::New(::google::protobuf::Arena* arena) const {
  OpenRoomReq* n = new OpenRoomReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OpenRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.OpenRoomReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(OpenRoomReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<OpenRoomReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 7u) {
    ZR_(room_type_, game_type_);
    if (has_option()) {
      if (option_ != NULL) option_->::msg_maj::RoomOption::Clear();
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool OpenRoomReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.OpenRoomReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .msg_maj.RoomType room_type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::msg_maj::RoomType_IsValid(value)) {
            set_room_type(static_cast< ::msg_maj::RoomType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_game_type;
        break;
      }

      // required .msg_maj.maj_type game_type = 2;
      case 2: {
        if (tag == 16) {
         parse_game_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::msg_maj::maj_type_IsValid(value)) {
            set_game_type(static_cast< ::msg_maj::maj_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_option;
        break;
      }

      // required .msg_maj.RoomOption option = 3;
      case 3: {
        if (tag == 26) {
         parse_option:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_option()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.OpenRoomReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.OpenRoomReq)
  return false;
#undef DO_
}

void OpenRoomReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.OpenRoomReq)
  // required .msg_maj.RoomType room_type = 1;
  if (has_room_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->room_type(), output);
  }

  // required .msg_maj.maj_type game_type = 2;
  if (has_game_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->game_type(), output);
  }

  // required .msg_maj.RoomOption option = 3;
  if (has_option()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->option_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.OpenRoomReq)
}

::google::protobuf::uint8* OpenRoomReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.OpenRoomReq)
  // required .msg_maj.RoomType room_type = 1;
  if (has_room_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->room_type(), target);
  }

  // required .msg_maj.maj_type game_type = 2;
  if (has_game_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->game_type(), target);
  }

  // required .msg_maj.RoomOption option = 3;
  if (has_option()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->option_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.OpenRoomReq)
  return target;
}

int OpenRoomReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:msg_maj.OpenRoomReq)
  int total_size = 0;

  if (has_room_type()) {
    // required .msg_maj.RoomType room_type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->room_type());
  }

  if (has_game_type()) {
    // required .msg_maj.maj_type game_type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->game_type());
  }

  if (has_option()) {
    // required .msg_maj.RoomOption option = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->option_);
  }

  return total_size;
}
int OpenRoomReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.OpenRoomReq)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required .msg_maj.RoomType room_type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->room_type());

    // required .msg_maj.maj_type game_type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->game_type());

    // required .msg_maj.RoomOption option = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->option_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpenRoomReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.OpenRoomReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const OpenRoomReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const OpenRoomReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.OpenRoomReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.OpenRoomReq)
    MergeFrom(*source);
  }
}

void OpenRoomReq::MergeFrom(const OpenRoomReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.OpenRoomReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_room_type()) {
      set_room_type(from.room_type());
    }
    if (from.has_game_type()) {
      set_game_type(from.game_type());
    }
    if (from.has_option()) {
      mutable_option()->::msg_maj::RoomOption::MergeFrom(from.option());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void OpenRoomReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.OpenRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpenRoomReq::CopyFrom(const OpenRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.OpenRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpenRoomReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void OpenRoomReq::Swap(OpenRoomReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpenRoomReq::InternalSwap(OpenRoomReq* other) {
  std::swap(room_type_, other->room_type_);
  std::swap(game_type_, other->game_type_);
  std::swap(option_, other->option_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OpenRoomReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OpenRoomReq_descriptor_;
  metadata.reflection = OpenRoomReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OpenRoomReq

// required .msg_maj.RoomType room_type = 1;
bool OpenRoomReq::has_room_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void OpenRoomReq::set_has_room_type() {
  _has_bits_[0] |= 0x00000001u;
}
void OpenRoomReq::clear_has_room_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void OpenRoomReq::clear_room_type() {
  room_type_ = 0;
  clear_has_room_type();
}
 ::msg_maj::RoomType OpenRoomReq::room_type() const {
  // @@protoc_insertion_point(field_get:msg_maj.OpenRoomReq.room_type)
  return static_cast< ::msg_maj::RoomType >(room_type_);
}
 void OpenRoomReq::set_room_type(::msg_maj::RoomType value) {
  assert(::msg_maj::RoomType_IsValid(value));
  set_has_room_type();
  room_type_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.OpenRoomReq.room_type)
}

// required .msg_maj.maj_type game_type = 2;
bool OpenRoomReq::has_game_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void OpenRoomReq::set_has_game_type() {
  _has_bits_[0] |= 0x00000002u;
}
void OpenRoomReq::clear_has_game_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void OpenRoomReq::clear_game_type() {
  game_type_ = 0;
  clear_has_game_type();
}
 ::msg_maj::maj_type OpenRoomReq::game_type() const {
  // @@protoc_insertion_point(field_get:msg_maj.OpenRoomReq.game_type)
  return static_cast< ::msg_maj::maj_type >(game_type_);
}
 void OpenRoomReq::set_game_type(::msg_maj::maj_type value) {
  assert(::msg_maj::maj_type_IsValid(value));
  set_has_game_type();
  game_type_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.OpenRoomReq.game_type)
}

// required .msg_maj.RoomOption option = 3;
bool OpenRoomReq::has_option() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void OpenRoomReq::set_has_option() {
  _has_bits_[0] |= 0x00000004u;
}
void OpenRoomReq::clear_has_option() {
  _has_bits_[0] &= ~0x00000004u;
}
void OpenRoomReq::clear_option() {
  if (option_ != NULL) option_->::msg_maj::RoomOption::Clear();
  clear_has_option();
}
const ::msg_maj::RoomOption& OpenRoomReq::option() const {
  // @@protoc_insertion_point(field_get:msg_maj.OpenRoomReq.option)
  return option_ != NULL ? *option_ : *default_instance_->option_;
}
::msg_maj::RoomOption* OpenRoomReq::mutable_option() {
  set_has_option();
  if (option_ == NULL) {
    option_ = new ::msg_maj::RoomOption;
  }
  // @@protoc_insertion_point(field_mutable:msg_maj.OpenRoomReq.option)
  return option_;
}
::msg_maj::RoomOption* OpenRoomReq::release_option() {
  // @@protoc_insertion_point(field_release:msg_maj.OpenRoomReq.option)
  clear_has_option();
  ::msg_maj::RoomOption* temp = option_;
  option_ = NULL;
  return temp;
}
void OpenRoomReq::set_allocated_option(::msg_maj::RoomOption* option) {
  delete option_;
  option_ = option;
  if (option) {
    set_has_option();
  } else {
    clear_has_option();
  }
  // @@protoc_insertion_point(field_set_allocated:msg_maj.OpenRoomReq.option)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* OpenRoomResp_error_code_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OpenRoomResp_error_code_descriptor_;
}
bool OpenRoomResp_error_code_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const OpenRoomResp_error_code OpenRoomResp::SUCCESS;
const OpenRoomResp_error_code OpenRoomResp::FAIL;
const OpenRoomResp_error_code OpenRoomResp::ALREADY_IN;
const OpenRoomResp_error_code OpenRoomResp::NO_DIAMOND;
const OpenRoomResp_error_code OpenRoomResp::ROOMCARD_NOTENOUTH;
const OpenRoomResp_error_code OpenRoomResp::MAINTENANCE;
const OpenRoomResp_error_code OpenRoomResp::error_code_MIN;
const OpenRoomResp_error_code OpenRoomResp::error_code_MAX;
const int OpenRoomResp::error_code_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpenRoomResp::kCodeFieldNumber;
const int OpenRoomResp::kInfoFieldNumber;
const int OpenRoomResp::kRoleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpenRoomResp::OpenRoomResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.OpenRoomResp)
}

void OpenRoomResp::InitAsDefaultInstance() {
  info_ = const_cast< ::msg_maj::RoomInfo*>(&::msg_maj::RoomInfo::default_instance());
  role_ = const_cast< ::msg_maj::RoleInfo*>(&::msg_maj::RoleInfo::default_instance());
}

OpenRoomResp::OpenRoomResp(const OpenRoomResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.OpenRoomResp)
}

void OpenRoomResp::SharedCtor() {
  _cached_size_ = 0;
  code_ = 1;
  info_ = NULL;
  role_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

OpenRoomResp::~OpenRoomResp() {
  // @@protoc_insertion_point(destructor:msg_maj.OpenRoomResp)
  SharedDtor();
}

void OpenRoomResp::SharedDtor() {
  if (this != default_instance_) {
    delete info_;
    delete role_;
  }
}

void OpenRoomResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpenRoomResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OpenRoomResp_descriptor_;
}

const OpenRoomResp& OpenRoomResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5froom_2eproto();
  return *default_instance_;
}

OpenRoomResp* OpenRoomResp::default_instance_ = NULL;

OpenRoomResp* OpenRoomResp::New(::google::protobuf::Arena* arena) const {
  OpenRoomResp* n = new OpenRoomResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OpenRoomResp::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.OpenRoomResp)
  if (_has_bits_[0 / 32] & 7u) {
    code_ = 1;
    if (has_info()) {
      if (info_ != NULL) info_->::msg_maj::RoomInfo::Clear();
    }
    if (has_role()) {
      if (role_ != NULL) role_->::msg_maj::RoleInfo::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool OpenRoomResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.OpenRoomResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .msg_maj.OpenRoomResp.error_code code = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::msg_maj::OpenRoomResp_error_code_IsValid(value)) {
            set_code(static_cast< ::msg_maj::OpenRoomResp_error_code >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_info;
        break;
      }

      // optional .msg_maj.RoomInfo info = 2;
      case 2: {
        if (tag == 18) {
         parse_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_role;
        break;
      }

      // optional .msg_maj.RoleInfo role = 3;
      case 3: {
        if (tag == 26) {
         parse_role:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_role()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.OpenRoomResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.OpenRoomResp)
  return false;
#undef DO_
}

void OpenRoomResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.OpenRoomResp)
  // required .msg_maj.OpenRoomResp.error_code code = 1;
  if (has_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->code(), output);
  }

  // optional .msg_maj.RoomInfo info = 2;
  if (has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->info_, output);
  }

  // optional .msg_maj.RoleInfo role = 3;
  if (has_role()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->role_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.OpenRoomResp)
}

::google::protobuf::uint8* OpenRoomResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.OpenRoomResp)
  // required .msg_maj.OpenRoomResp.error_code code = 1;
  if (has_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->code(), target);
  }

  // optional .msg_maj.RoomInfo info = 2;
  if (has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->info_, false, target);
  }

  // optional .msg_maj.RoleInfo role = 3;
  if (has_role()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->role_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.OpenRoomResp)
  return target;
}

int OpenRoomResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.OpenRoomResp)
  int total_size = 0;

  // required .msg_maj.OpenRoomResp.error_code code = 1;
  if (has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->code());
  }
  if (_has_bits_[1 / 32] & 6u) {
    // optional .msg_maj.RoomInfo info = 2;
    if (has_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->info_);
    }

    // optional .msg_maj.RoleInfo role = 3;
    if (has_role()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->role_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpenRoomResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.OpenRoomResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const OpenRoomResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const OpenRoomResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.OpenRoomResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.OpenRoomResp)
    MergeFrom(*source);
  }
}

void OpenRoomResp::MergeFrom(const OpenRoomResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.OpenRoomResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_code()) {
      set_code(from.code());
    }
    if (from.has_info()) {
      mutable_info()->::msg_maj::RoomInfo::MergeFrom(from.info());
    }
    if (from.has_role()) {
      mutable_role()->::msg_maj::RoleInfo::MergeFrom(from.role());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void OpenRoomResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.OpenRoomResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpenRoomResp::CopyFrom(const OpenRoomResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.OpenRoomResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpenRoomResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_info()) {
    if (!this->info_->IsInitialized()) return false;
  }
  if (has_role()) {
    if (!this->role_->IsInitialized()) return false;
  }
  return true;
}

void OpenRoomResp::Swap(OpenRoomResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpenRoomResp::InternalSwap(OpenRoomResp* other) {
  std::swap(code_, other->code_);
  std::swap(info_, other->info_);
  std::swap(role_, other->role_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OpenRoomResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OpenRoomResp_descriptor_;
  metadata.reflection = OpenRoomResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OpenRoomResp

// required .msg_maj.OpenRoomResp.error_code code = 1;
bool OpenRoomResp::has_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void OpenRoomResp::set_has_code() {
  _has_bits_[0] |= 0x00000001u;
}
void OpenRoomResp::clear_has_code() {
  _has_bits_[0] &= ~0x00000001u;
}
void OpenRoomResp::clear_code() {
  code_ = 1;
  clear_has_code();
}
 ::msg_maj::OpenRoomResp_error_code OpenRoomResp::code() const {
  // @@protoc_insertion_point(field_get:msg_maj.OpenRoomResp.code)
  return static_cast< ::msg_maj::OpenRoomResp_error_code >(code_);
}
 void OpenRoomResp::set_code(::msg_maj::OpenRoomResp_error_code value) {
  assert(::msg_maj::OpenRoomResp_error_code_IsValid(value));
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.OpenRoomResp.code)
}

// optional .msg_maj.RoomInfo info = 2;
bool OpenRoomResp::has_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void OpenRoomResp::set_has_info() {
  _has_bits_[0] |= 0x00000002u;
}
void OpenRoomResp::clear_has_info() {
  _has_bits_[0] &= ~0x00000002u;
}
void OpenRoomResp::clear_info() {
  if (info_ != NULL) info_->::msg_maj::RoomInfo::Clear();
  clear_has_info();
}
const ::msg_maj::RoomInfo& OpenRoomResp::info() const {
  // @@protoc_insertion_point(field_get:msg_maj.OpenRoomResp.info)
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
::msg_maj::RoomInfo* OpenRoomResp::mutable_info() {
  set_has_info();
  if (info_ == NULL) {
    info_ = new ::msg_maj::RoomInfo;
  }
  // @@protoc_insertion_point(field_mutable:msg_maj.OpenRoomResp.info)
  return info_;
}
::msg_maj::RoomInfo* OpenRoomResp::release_info() {
  // @@protoc_insertion_point(field_release:msg_maj.OpenRoomResp.info)
  clear_has_info();
  ::msg_maj::RoomInfo* temp = info_;
  info_ = NULL;
  return temp;
}
void OpenRoomResp::set_allocated_info(::msg_maj::RoomInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
  // @@protoc_insertion_point(field_set_allocated:msg_maj.OpenRoomResp.info)
}

// optional .msg_maj.RoleInfo role = 3;
bool OpenRoomResp::has_role() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void OpenRoomResp::set_has_role() {
  _has_bits_[0] |= 0x00000004u;
}
void OpenRoomResp::clear_has_role() {
  _has_bits_[0] &= ~0x00000004u;
}
void OpenRoomResp::clear_role() {
  if (role_ != NULL) role_->::msg_maj::RoleInfo::Clear();
  clear_has_role();
}
const ::msg_maj::RoleInfo& OpenRoomResp::role() const {
  // @@protoc_insertion_point(field_get:msg_maj.OpenRoomResp.role)
  return role_ != NULL ? *role_ : *default_instance_->role_;
}
::msg_maj::RoleInfo* OpenRoomResp::mutable_role() {
  set_has_role();
  if (role_ == NULL) {
    role_ = new ::msg_maj::RoleInfo;
  }
  // @@protoc_insertion_point(field_mutable:msg_maj.OpenRoomResp.role)
  return role_;
}
::msg_maj::RoleInfo* OpenRoomResp::release_role() {
  // @@protoc_insertion_point(field_release:msg_maj.OpenRoomResp.role)
  clear_has_role();
  ::msg_maj::RoleInfo* temp = role_;
  role_ = NULL;
  return temp;
}
void OpenRoomResp::set_allocated_role(::msg_maj::RoleInfo* role) {
  delete role_;
  role_ = role;
  if (role) {
    set_has_role();
  } else {
    clear_has_role();
  }
  // @@protoc_insertion_point(field_set_allocated:msg_maj.OpenRoomResp.role)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnterRoomReq::kTypeFieldNumber;
const int EnterRoomReq::kRoomNoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnterRoomReq::EnterRoomReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.EnterRoomReq)
}

void EnterRoomReq::InitAsDefaultInstance() {
}

EnterRoomReq::EnterRoomReq(const EnterRoomReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.EnterRoomReq)
}

void EnterRoomReq::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  room_no_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EnterRoomReq::~EnterRoomReq() {
  // @@protoc_insertion_point(destructor:msg_maj.EnterRoomReq)
  SharedDtor();
}

void EnterRoomReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void EnterRoomReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnterRoomReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EnterRoomReq_descriptor_;
}

const EnterRoomReq& EnterRoomReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5froom_2eproto();
  return *default_instance_;
}

EnterRoomReq* EnterRoomReq::default_instance_ = NULL;

EnterRoomReq* EnterRoomReq::New(::google::protobuf::Arena* arena) const {
  EnterRoomReq* n = new EnterRoomReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnterRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.EnterRoomReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(EnterRoomReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<EnterRoomReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(type_, room_no_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool EnterRoomReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.EnterRoomReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .msg_maj.EnterType type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::msg_maj::EnterType_IsValid(value)) {
            set_type(static_cast< ::msg_maj::EnterType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_room_no;
        break;
      }

      // optional uint32 room_no = 2;
      case 2: {
        if (tag == 16) {
         parse_room_no:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &room_no_)));
          set_has_room_no();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.EnterRoomReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.EnterRoomReq)
  return false;
#undef DO_
}

void EnterRoomReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.EnterRoomReq)
  // required .msg_maj.EnterType type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional uint32 room_no = 2;
  if (has_room_no()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->room_no(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.EnterRoomReq)
}

::google::protobuf::uint8* EnterRoomReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.EnterRoomReq)
  // required .msg_maj.EnterType type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional uint32 room_no = 2;
  if (has_room_no()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->room_no(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.EnterRoomReq)
  return target;
}

int EnterRoomReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.EnterRoomReq)
  int total_size = 0;

  // required .msg_maj.EnterType type = 1;
  if (has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }
  // optional uint32 room_no = 2;
  if (has_room_no()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->room_no());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnterRoomReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.EnterRoomReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const EnterRoomReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const EnterRoomReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.EnterRoomReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.EnterRoomReq)
    MergeFrom(*source);
  }
}

void EnterRoomReq::MergeFrom(const EnterRoomReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.EnterRoomReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_room_no()) {
      set_room_no(from.room_no());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void EnterRoomReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.EnterRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnterRoomReq::CopyFrom(const EnterRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.EnterRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnterRoomReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void EnterRoomReq::Swap(EnterRoomReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnterRoomReq::InternalSwap(EnterRoomReq* other) {
  std::swap(type_, other->type_);
  std::swap(room_no_, other->room_no_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EnterRoomReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EnterRoomReq_descriptor_;
  metadata.reflection = EnterRoomReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnterRoomReq

// required .msg_maj.EnterType type = 1;
bool EnterRoomReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnterRoomReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
void EnterRoomReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnterRoomReq::clear_type() {
  type_ = 0;
  clear_has_type();
}
 ::msg_maj::EnterType EnterRoomReq::type() const {
  // @@protoc_insertion_point(field_get:msg_maj.EnterRoomReq.type)
  return static_cast< ::msg_maj::EnterType >(type_);
}
 void EnterRoomReq::set_type(::msg_maj::EnterType value) {
  assert(::msg_maj::EnterType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.EnterRoomReq.type)
}

// optional uint32 room_no = 2;
bool EnterRoomReq::has_room_no() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void EnterRoomReq::set_has_room_no() {
  _has_bits_[0] |= 0x00000002u;
}
void EnterRoomReq::clear_has_room_no() {
  _has_bits_[0] &= ~0x00000002u;
}
void EnterRoomReq::clear_room_no() {
  room_no_ = 0u;
  clear_has_room_no();
}
 ::google::protobuf::uint32 EnterRoomReq::room_no() const {
  // @@protoc_insertion_point(field_get:msg_maj.EnterRoomReq.room_no)
  return room_no_;
}
 void EnterRoomReq::set_room_no(::google::protobuf::uint32 value) {
  set_has_room_no();
  room_no_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.EnterRoomReq.room_no)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* EnterRoomResp_msg_room_code_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EnterRoomResp_msg_room_code_descriptor_;
}
bool EnterRoomResp_msg_room_code_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EnterRoomResp_msg_room_code EnterRoomResp::SUCCESS;
const EnterRoomResp_msg_room_code EnterRoomResp::FAIL;
const EnterRoomResp_msg_room_code EnterRoomResp::ALREADY_IN;
const EnterRoomResp_msg_room_code EnterRoomResp::PERSONS_FULL;
const EnterRoomResp_msg_room_code EnterRoomResp::msg_room_code_MIN;
const EnterRoomResp_msg_room_code EnterRoomResp::msg_room_code_MAX;
const int EnterRoomResp::msg_room_code_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnterRoomResp::kCodeFieldNumber;
const int EnterRoomResp::kInfoFieldNumber;
const int EnterRoomResp::kRoleListFieldNumber;
const int EnterRoomResp::kSelfSeatFieldNumber;
const int EnterRoomResp::kBankerSeatFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnterRoomResp::EnterRoomResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.EnterRoomResp)
}

void EnterRoomResp::InitAsDefaultInstance() {
  info_ = const_cast< ::msg_maj::RoomInfo*>(&::msg_maj::RoomInfo::default_instance());
}

EnterRoomResp::EnterRoomResp(const EnterRoomResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.EnterRoomResp)
}

void EnterRoomResp::SharedCtor() {
  _cached_size_ = 0;
  code_ = 1;
  info_ = NULL;
  self_seat_ = 0u;
  banker_seat_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EnterRoomResp::~EnterRoomResp() {
  // @@protoc_insertion_point(destructor:msg_maj.EnterRoomResp)
  SharedDtor();
}

void EnterRoomResp::SharedDtor() {
  if (this != default_instance_) {
    delete info_;
  }
}

void EnterRoomResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnterRoomResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EnterRoomResp_descriptor_;
}

const EnterRoomResp& EnterRoomResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5froom_2eproto();
  return *default_instance_;
}

EnterRoomResp* EnterRoomResp::default_instance_ = NULL;

EnterRoomResp* EnterRoomResp::New(::google::protobuf::Arena* arena) const {
  EnterRoomResp* n = new EnterRoomResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnterRoomResp::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.EnterRoomResp)
  if (_has_bits_[0 / 32] & 27u) {
    code_ = 1;
    if (has_info()) {
      if (info_ != NULL) info_->::msg_maj::RoomInfo::Clear();
    }
    self_seat_ = 0u;
    banker_seat_ = 0u;
  }
  rolelist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool EnterRoomResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.EnterRoomResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .msg_maj.EnterRoomResp.msg_room_code code = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::msg_maj::EnterRoomResp_msg_room_code_IsValid(value)) {
            set_code(static_cast< ::msg_maj::EnterRoomResp_msg_room_code >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_info;
        break;
      }

      // optional .msg_maj.RoomInfo info = 2;
      case 2: {
        if (tag == 18) {
         parse_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_roleList;
        break;
      }

      // repeated .msg_maj.RoleInfo roleList = 3;
      case 3: {
        if (tag == 26) {
         parse_roleList:
          DO_(input->IncrementRecursionDepth());
         parse_loop_roleList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_rolelist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_roleList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(32)) goto parse_self_seat;
        break;
      }

      // optional uint32 self_seat = 4;
      case 4: {
        if (tag == 32) {
         parse_self_seat:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &self_seat_)));
          set_has_self_seat();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_banker_seat;
        break;
      }

      // optional uint32 banker_seat = 5;
      case 5: {
        if (tag == 40) {
         parse_banker_seat:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &banker_seat_)));
          set_has_banker_seat();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.EnterRoomResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.EnterRoomResp)
  return false;
#undef DO_
}

void EnterRoomResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.EnterRoomResp)
  // required .msg_maj.EnterRoomResp.msg_room_code code = 1;
  if (has_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->code(), output);
  }

  // optional .msg_maj.RoomInfo info = 2;
  if (has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->info_, output);
  }

  // repeated .msg_maj.RoleInfo roleList = 3;
  for (unsigned int i = 0, n = this->rolelist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->rolelist(i), output);
  }

  // optional uint32 self_seat = 4;
  if (has_self_seat()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->self_seat(), output);
  }

  // optional uint32 banker_seat = 5;
  if (has_banker_seat()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->banker_seat(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.EnterRoomResp)
}

::google::protobuf::uint8* EnterRoomResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.EnterRoomResp)
  // required .msg_maj.EnterRoomResp.msg_room_code code = 1;
  if (has_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->code(), target);
  }

  // optional .msg_maj.RoomInfo info = 2;
  if (has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->info_, false, target);
  }

  // repeated .msg_maj.RoleInfo roleList = 3;
  for (unsigned int i = 0, n = this->rolelist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->rolelist(i), false, target);
  }

  // optional uint32 self_seat = 4;
  if (has_self_seat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->self_seat(), target);
  }

  // optional uint32 banker_seat = 5;
  if (has_banker_seat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->banker_seat(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.EnterRoomResp)
  return target;
}

int EnterRoomResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.EnterRoomResp)
  int total_size = 0;

  // required .msg_maj.EnterRoomResp.msg_room_code code = 1;
  if (has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->code());
  }
  if (_has_bits_[1 / 32] & 26u) {
    // optional .msg_maj.RoomInfo info = 2;
    if (has_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->info_);
    }

    // optional uint32 self_seat = 4;
    if (has_self_seat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->self_seat());
    }

    // optional uint32 banker_seat = 5;
    if (has_banker_seat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->banker_seat());
    }

  }
  // repeated .msg_maj.RoleInfo roleList = 3;
  total_size += 1 * this->rolelist_size();
  for (int i = 0; i < this->rolelist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rolelist(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnterRoomResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.EnterRoomResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const EnterRoomResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const EnterRoomResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.EnterRoomResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.EnterRoomResp)
    MergeFrom(*source);
  }
}

void EnterRoomResp::MergeFrom(const EnterRoomResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.EnterRoomResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  rolelist_.MergeFrom(from.rolelist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_code()) {
      set_code(from.code());
    }
    if (from.has_info()) {
      mutable_info()->::msg_maj::RoomInfo::MergeFrom(from.info());
    }
    if (from.has_self_seat()) {
      set_self_seat(from.self_seat());
    }
    if (from.has_banker_seat()) {
      set_banker_seat(from.banker_seat());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void EnterRoomResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.EnterRoomResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnterRoomResp::CopyFrom(const EnterRoomResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.EnterRoomResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnterRoomResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_info()) {
    if (!this->info_->IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->rolelist())) return false;
  return true;
}

void EnterRoomResp::Swap(EnterRoomResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnterRoomResp::InternalSwap(EnterRoomResp* other) {
  std::swap(code_, other->code_);
  std::swap(info_, other->info_);
  rolelist_.UnsafeArenaSwap(&other->rolelist_);
  std::swap(self_seat_, other->self_seat_);
  std::swap(banker_seat_, other->banker_seat_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EnterRoomResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EnterRoomResp_descriptor_;
  metadata.reflection = EnterRoomResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnterRoomResp

// required .msg_maj.EnterRoomResp.msg_room_code code = 1;
bool EnterRoomResp::has_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnterRoomResp::set_has_code() {
  _has_bits_[0] |= 0x00000001u;
}
void EnterRoomResp::clear_has_code() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnterRoomResp::clear_code() {
  code_ = 1;
  clear_has_code();
}
 ::msg_maj::EnterRoomResp_msg_room_code EnterRoomResp::code() const {
  // @@protoc_insertion_point(field_get:msg_maj.EnterRoomResp.code)
  return static_cast< ::msg_maj::EnterRoomResp_msg_room_code >(code_);
}
 void EnterRoomResp::set_code(::msg_maj::EnterRoomResp_msg_room_code value) {
  assert(::msg_maj::EnterRoomResp_msg_room_code_IsValid(value));
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.EnterRoomResp.code)
}

// optional .msg_maj.RoomInfo info = 2;
bool EnterRoomResp::has_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void EnterRoomResp::set_has_info() {
  _has_bits_[0] |= 0x00000002u;
}
void EnterRoomResp::clear_has_info() {
  _has_bits_[0] &= ~0x00000002u;
}
void EnterRoomResp::clear_info() {
  if (info_ != NULL) info_->::msg_maj::RoomInfo::Clear();
  clear_has_info();
}
const ::msg_maj::RoomInfo& EnterRoomResp::info() const {
  // @@protoc_insertion_point(field_get:msg_maj.EnterRoomResp.info)
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
::msg_maj::RoomInfo* EnterRoomResp::mutable_info() {
  set_has_info();
  if (info_ == NULL) {
    info_ = new ::msg_maj::RoomInfo;
  }
  // @@protoc_insertion_point(field_mutable:msg_maj.EnterRoomResp.info)
  return info_;
}
::msg_maj::RoomInfo* EnterRoomResp::release_info() {
  // @@protoc_insertion_point(field_release:msg_maj.EnterRoomResp.info)
  clear_has_info();
  ::msg_maj::RoomInfo* temp = info_;
  info_ = NULL;
  return temp;
}
void EnterRoomResp::set_allocated_info(::msg_maj::RoomInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
  // @@protoc_insertion_point(field_set_allocated:msg_maj.EnterRoomResp.info)
}

// repeated .msg_maj.RoleInfo roleList = 3;
int EnterRoomResp::rolelist_size() const {
  return rolelist_.size();
}
void EnterRoomResp::clear_rolelist() {
  rolelist_.Clear();
}
const ::msg_maj::RoleInfo& EnterRoomResp::rolelist(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.EnterRoomResp.roleList)
  return rolelist_.Get(index);
}
::msg_maj::RoleInfo* EnterRoomResp::mutable_rolelist(int index) {
  // @@protoc_insertion_point(field_mutable:msg_maj.EnterRoomResp.roleList)
  return rolelist_.Mutable(index);
}
::msg_maj::RoleInfo* EnterRoomResp::add_rolelist() {
  // @@protoc_insertion_point(field_add:msg_maj.EnterRoomResp.roleList)
  return rolelist_.Add();
}
::google::protobuf::RepeatedPtrField< ::msg_maj::RoleInfo >*
EnterRoomResp::mutable_rolelist() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.EnterRoomResp.roleList)
  return &rolelist_;
}
const ::google::protobuf::RepeatedPtrField< ::msg_maj::RoleInfo >&
EnterRoomResp::rolelist() const {
  // @@protoc_insertion_point(field_list:msg_maj.EnterRoomResp.roleList)
  return rolelist_;
}

// optional uint32 self_seat = 4;
bool EnterRoomResp::has_self_seat() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void EnterRoomResp::set_has_self_seat() {
  _has_bits_[0] |= 0x00000008u;
}
void EnterRoomResp::clear_has_self_seat() {
  _has_bits_[0] &= ~0x00000008u;
}
void EnterRoomResp::clear_self_seat() {
  self_seat_ = 0u;
  clear_has_self_seat();
}
 ::google::protobuf::uint32 EnterRoomResp::self_seat() const {
  // @@protoc_insertion_point(field_get:msg_maj.EnterRoomResp.self_seat)
  return self_seat_;
}
 void EnterRoomResp::set_self_seat(::google::protobuf::uint32 value) {
  set_has_self_seat();
  self_seat_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.EnterRoomResp.self_seat)
}

// optional uint32 banker_seat = 5;
bool EnterRoomResp::has_banker_seat() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void EnterRoomResp::set_has_banker_seat() {
  _has_bits_[0] |= 0x00000010u;
}
void EnterRoomResp::clear_has_banker_seat() {
  _has_bits_[0] &= ~0x00000010u;
}
void EnterRoomResp::clear_banker_seat() {
  banker_seat_ = 0u;
  clear_has_banker_seat();
}
 ::google::protobuf::uint32 EnterRoomResp::banker_seat() const {
  // @@protoc_insertion_point(field_get:msg_maj.EnterRoomResp.banker_seat)
  return banker_seat_;
}
 void EnterRoomResp::set_banker_seat(::google::protobuf::uint32 value) {
  set_has_banker_seat();
  banker_seat_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.EnterRoomResp.banker_seat)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnterRoomReady::EnterRoomReady()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.EnterRoomReady)
}

void EnterRoomReady::InitAsDefaultInstance() {
}

EnterRoomReady::EnterRoomReady(const EnterRoomReady& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.EnterRoomReady)
}

void EnterRoomReady::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EnterRoomReady::~EnterRoomReady() {
  // @@protoc_insertion_point(destructor:msg_maj.EnterRoomReady)
  SharedDtor();
}

void EnterRoomReady::SharedDtor() {
  if (this != default_instance_) {
  }
}

void EnterRoomReady::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnterRoomReady::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EnterRoomReady_descriptor_;
}

const EnterRoomReady& EnterRoomReady::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5froom_2eproto();
  return *default_instance_;
}

EnterRoomReady* EnterRoomReady::default_instance_ = NULL;

EnterRoomReady* EnterRoomReady::New(::google::protobuf::Arena* arena) const {
  EnterRoomReady* n = new EnterRoomReady;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnterRoomReady::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.EnterRoomReady)
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool EnterRoomReady::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.EnterRoomReady)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.EnterRoomReady)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.EnterRoomReady)
  return false;
#undef DO_
}

void EnterRoomReady::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.EnterRoomReady)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.EnterRoomReady)
}

::google::protobuf::uint8* EnterRoomReady::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.EnterRoomReady)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.EnterRoomReady)
  return target;
}

int EnterRoomReady::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.EnterRoomReady)
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnterRoomReady::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.EnterRoomReady)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const EnterRoomReady* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const EnterRoomReady>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.EnterRoomReady)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.EnterRoomReady)
    MergeFrom(*source);
  }
}

void EnterRoomReady::MergeFrom(const EnterRoomReady& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.EnterRoomReady)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void EnterRoomReady::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.EnterRoomReady)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnterRoomReady::CopyFrom(const EnterRoomReady& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.EnterRoomReady)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnterRoomReady::IsInitialized() const {

  return true;
}

void EnterRoomReady::Swap(EnterRoomReady* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnterRoomReady::InternalSwap(EnterRoomReady* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EnterRoomReady::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EnterRoomReady_descriptor_;
  metadata.reflection = EnterRoomReady_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnterRoomReady

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SyncRoomRoleInfo::kRoleListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SyncRoomRoleInfo::SyncRoomRoleInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.SyncRoomRoleInfo)
}

void SyncRoomRoleInfo::InitAsDefaultInstance() {
}

SyncRoomRoleInfo::SyncRoomRoleInfo(const SyncRoomRoleInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.SyncRoomRoleInfo)
}

void SyncRoomRoleInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SyncRoomRoleInfo::~SyncRoomRoleInfo() {
  // @@protoc_insertion_point(destructor:msg_maj.SyncRoomRoleInfo)
  SharedDtor();
}

void SyncRoomRoleInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SyncRoomRoleInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SyncRoomRoleInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SyncRoomRoleInfo_descriptor_;
}

const SyncRoomRoleInfo& SyncRoomRoleInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5froom_2eproto();
  return *default_instance_;
}

SyncRoomRoleInfo* SyncRoomRoleInfo::default_instance_ = NULL;

SyncRoomRoleInfo* SyncRoomRoleInfo::New(::google::protobuf::Arena* arena) const {
  SyncRoomRoleInfo* n = new SyncRoomRoleInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SyncRoomRoleInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.SyncRoomRoleInfo)
  rolelist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SyncRoomRoleInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.SyncRoomRoleInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .msg_maj.RoleInfo roleList = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_roleList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_rolelist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_roleList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.SyncRoomRoleInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.SyncRoomRoleInfo)
  return false;
#undef DO_
}

void SyncRoomRoleInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.SyncRoomRoleInfo)
  // repeated .msg_maj.RoleInfo roleList = 1;
  for (unsigned int i = 0, n = this->rolelist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rolelist(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.SyncRoomRoleInfo)
}

::google::protobuf::uint8* SyncRoomRoleInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.SyncRoomRoleInfo)
  // repeated .msg_maj.RoleInfo roleList = 1;
  for (unsigned int i = 0, n = this->rolelist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->rolelist(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.SyncRoomRoleInfo)
  return target;
}

int SyncRoomRoleInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.SyncRoomRoleInfo)
  int total_size = 0;

  // repeated .msg_maj.RoleInfo roleList = 1;
  total_size += 1 * this->rolelist_size();
  for (int i = 0; i < this->rolelist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rolelist(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncRoomRoleInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.SyncRoomRoleInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SyncRoomRoleInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SyncRoomRoleInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.SyncRoomRoleInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.SyncRoomRoleInfo)
    MergeFrom(*source);
  }
}

void SyncRoomRoleInfo::MergeFrom(const SyncRoomRoleInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.SyncRoomRoleInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  rolelist_.MergeFrom(from.rolelist_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SyncRoomRoleInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.SyncRoomRoleInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncRoomRoleInfo::CopyFrom(const SyncRoomRoleInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.SyncRoomRoleInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncRoomRoleInfo::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->rolelist())) return false;
  return true;
}

void SyncRoomRoleInfo::Swap(SyncRoomRoleInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SyncRoomRoleInfo::InternalSwap(SyncRoomRoleInfo* other) {
  rolelist_.UnsafeArenaSwap(&other->rolelist_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SyncRoomRoleInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SyncRoomRoleInfo_descriptor_;
  metadata.reflection = SyncRoomRoleInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SyncRoomRoleInfo

// repeated .msg_maj.RoleInfo roleList = 1;
int SyncRoomRoleInfo::rolelist_size() const {
  return rolelist_.size();
}
void SyncRoomRoleInfo::clear_rolelist() {
  rolelist_.Clear();
}
const ::msg_maj::RoleInfo& SyncRoomRoleInfo::rolelist(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.SyncRoomRoleInfo.roleList)
  return rolelist_.Get(index);
}
::msg_maj::RoleInfo* SyncRoomRoleInfo::mutable_rolelist(int index) {
  // @@protoc_insertion_point(field_mutable:msg_maj.SyncRoomRoleInfo.roleList)
  return rolelist_.Mutable(index);
}
::msg_maj::RoleInfo* SyncRoomRoleInfo::add_rolelist() {
  // @@protoc_insertion_point(field_add:msg_maj.SyncRoomRoleInfo.roleList)
  return rolelist_.Add();
}
::google::protobuf::RepeatedPtrField< ::msg_maj::RoleInfo >*
SyncRoomRoleInfo::mutable_rolelist() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.SyncRoomRoleInfo.roleList)
  return &rolelist_;
}
const ::google::protobuf::RepeatedPtrField< ::msg_maj::RoleInfo >&
SyncRoomRoleInfo::rolelist() const {
  // @@protoc_insertion_point(field_list:msg_maj.SyncRoomRoleInfo.roleList)
  return rolelist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LeaveRoomReq::LeaveRoomReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.LeaveRoomReq)
}

void LeaveRoomReq::InitAsDefaultInstance() {
}

LeaveRoomReq::LeaveRoomReq(const LeaveRoomReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.LeaveRoomReq)
}

void LeaveRoomReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LeaveRoomReq::~LeaveRoomReq() {
  // @@protoc_insertion_point(destructor:msg_maj.LeaveRoomReq)
  SharedDtor();
}

void LeaveRoomReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LeaveRoomReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LeaveRoomReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LeaveRoomReq_descriptor_;
}

const LeaveRoomReq& LeaveRoomReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5froom_2eproto();
  return *default_instance_;
}

LeaveRoomReq* LeaveRoomReq::default_instance_ = NULL;

LeaveRoomReq* LeaveRoomReq::New(::google::protobuf::Arena* arena) const {
  LeaveRoomReq* n = new LeaveRoomReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LeaveRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.LeaveRoomReq)
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool LeaveRoomReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.LeaveRoomReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.LeaveRoomReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.LeaveRoomReq)
  return false;
#undef DO_
}

void LeaveRoomReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.LeaveRoomReq)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.LeaveRoomReq)
}

::google::protobuf::uint8* LeaveRoomReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.LeaveRoomReq)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.LeaveRoomReq)
  return target;
}

int LeaveRoomReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.LeaveRoomReq)
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LeaveRoomReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.LeaveRoomReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const LeaveRoomReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LeaveRoomReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.LeaveRoomReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.LeaveRoomReq)
    MergeFrom(*source);
  }
}

void LeaveRoomReq::MergeFrom(const LeaveRoomReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.LeaveRoomReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void LeaveRoomReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.LeaveRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LeaveRoomReq::CopyFrom(const LeaveRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.LeaveRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LeaveRoomReq::IsInitialized() const {

  return true;
}

void LeaveRoomReq::Swap(LeaveRoomReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LeaveRoomReq::InternalSwap(LeaveRoomReq* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LeaveRoomReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LeaveRoomReq_descriptor_;
  metadata.reflection = LeaveRoomReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LeaveRoomReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* LeaveRoomResp_error_code_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LeaveRoomResp_error_code_descriptor_;
}
bool LeaveRoomResp_error_code_IsValid(int value) {
  switch(value) {
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const LeaveRoomResp_error_code LeaveRoomResp::HAS_LEAVE_ROOM;
const LeaveRoomResp_error_code LeaveRoomResp::error_code_MIN;
const LeaveRoomResp_error_code LeaveRoomResp::error_code_MAX;
const int LeaveRoomResp::error_code_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LeaveRoomResp::kCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LeaveRoomResp::LeaveRoomResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.LeaveRoomResp)
}

void LeaveRoomResp::InitAsDefaultInstance() {
}

LeaveRoomResp::LeaveRoomResp(const LeaveRoomResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.LeaveRoomResp)
}

void LeaveRoomResp::SharedCtor() {
  _cached_size_ = 0;
  code_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LeaveRoomResp::~LeaveRoomResp() {
  // @@protoc_insertion_point(destructor:msg_maj.LeaveRoomResp)
  SharedDtor();
}

void LeaveRoomResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LeaveRoomResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LeaveRoomResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LeaveRoomResp_descriptor_;
}

const LeaveRoomResp& LeaveRoomResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5froom_2eproto();
  return *default_instance_;
}

LeaveRoomResp* LeaveRoomResp::default_instance_ = NULL;

LeaveRoomResp* LeaveRoomResp::New(::google::protobuf::Arena* arena) const {
  LeaveRoomResp* n = new LeaveRoomResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LeaveRoomResp::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.LeaveRoomResp)
  code_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool LeaveRoomResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.LeaveRoomResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .msg_maj.LeaveRoomResp.error_code code = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::msg_maj::LeaveRoomResp_error_code_IsValid(value)) {
            set_code(static_cast< ::msg_maj::LeaveRoomResp_error_code >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.LeaveRoomResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.LeaveRoomResp)
  return false;
#undef DO_
}

void LeaveRoomResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.LeaveRoomResp)
  // required .msg_maj.LeaveRoomResp.error_code code = 1;
  if (has_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->code(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.LeaveRoomResp)
}

::google::protobuf::uint8* LeaveRoomResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.LeaveRoomResp)
  // required .msg_maj.LeaveRoomResp.error_code code = 1;
  if (has_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->code(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.LeaveRoomResp)
  return target;
}

int LeaveRoomResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.LeaveRoomResp)
  int total_size = 0;

  // required .msg_maj.LeaveRoomResp.error_code code = 1;
  if (has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->code());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LeaveRoomResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.LeaveRoomResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const LeaveRoomResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LeaveRoomResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.LeaveRoomResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.LeaveRoomResp)
    MergeFrom(*source);
  }
}

void LeaveRoomResp::MergeFrom(const LeaveRoomResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.LeaveRoomResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_code()) {
      set_code(from.code());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void LeaveRoomResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.LeaveRoomResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LeaveRoomResp::CopyFrom(const LeaveRoomResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.LeaveRoomResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LeaveRoomResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void LeaveRoomResp::Swap(LeaveRoomResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LeaveRoomResp::InternalSwap(LeaveRoomResp* other) {
  std::swap(code_, other->code_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LeaveRoomResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LeaveRoomResp_descriptor_;
  metadata.reflection = LeaveRoomResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LeaveRoomResp

// required .msg_maj.LeaveRoomResp.error_code code = 1;
bool LeaveRoomResp::has_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LeaveRoomResp::set_has_code() {
  _has_bits_[0] |= 0x00000001u;
}
void LeaveRoomResp::clear_has_code() {
  _has_bits_[0] &= ~0x00000001u;
}
void LeaveRoomResp::clear_code() {
  code_ = 1;
  clear_has_code();
}
 ::msg_maj::LeaveRoomResp_error_code LeaveRoomResp::code() const {
  // @@protoc_insertion_point(field_get:msg_maj.LeaveRoomResp.code)
  return static_cast< ::msg_maj::LeaveRoomResp_error_code >(code_);
}
 void LeaveRoomResp::set_code(::msg_maj::LeaveRoomResp_error_code value) {
  assert(::msg_maj::LeaveRoomResp_error_code_IsValid(value));
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.LeaveRoomResp.code)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleEnterRoomNotify::kRoleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleEnterRoomNotify::RoleEnterRoomNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.RoleEnterRoomNotify)
}

void RoleEnterRoomNotify::InitAsDefaultInstance() {
  role_ = const_cast< ::msg_maj::RoleInfo*>(&::msg_maj::RoleInfo::default_instance());
}

RoleEnterRoomNotify::RoleEnterRoomNotify(const RoleEnterRoomNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.RoleEnterRoomNotify)
}

void RoleEnterRoomNotify::SharedCtor() {
  _cached_size_ = 0;
  role_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RoleEnterRoomNotify::~RoleEnterRoomNotify() {
  // @@protoc_insertion_point(destructor:msg_maj.RoleEnterRoomNotify)
  SharedDtor();
}

void RoleEnterRoomNotify::SharedDtor() {
  if (this != default_instance_) {
    delete role_;
  }
}

void RoleEnterRoomNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleEnterRoomNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoleEnterRoomNotify_descriptor_;
}

const RoleEnterRoomNotify& RoleEnterRoomNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5froom_2eproto();
  return *default_instance_;
}

RoleEnterRoomNotify* RoleEnterRoomNotify::default_instance_ = NULL;

RoleEnterRoomNotify* RoleEnterRoomNotify::New(::google::protobuf::Arena* arena) const {
  RoleEnterRoomNotify* n = new RoleEnterRoomNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleEnterRoomNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.RoleEnterRoomNotify)
  if (has_role()) {
    if (role_ != NULL) role_->::msg_maj::RoleInfo::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RoleEnterRoomNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.RoleEnterRoomNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .msg_maj.RoleInfo role = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_role()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.RoleEnterRoomNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.RoleEnterRoomNotify)
  return false;
#undef DO_
}

void RoleEnterRoomNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.RoleEnterRoomNotify)
  // required .msg_maj.RoleInfo role = 1;
  if (has_role()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->role_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.RoleEnterRoomNotify)
}

::google::protobuf::uint8* RoleEnterRoomNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.RoleEnterRoomNotify)
  // required .msg_maj.RoleInfo role = 1;
  if (has_role()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->role_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.RoleEnterRoomNotify)
  return target;
}

int RoleEnterRoomNotify::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.RoleEnterRoomNotify)
  int total_size = 0;

  // required .msg_maj.RoleInfo role = 1;
  if (has_role()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->role_);
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleEnterRoomNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.RoleEnterRoomNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RoleEnterRoomNotify* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleEnterRoomNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.RoleEnterRoomNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.RoleEnterRoomNotify)
    MergeFrom(*source);
  }
}

void RoleEnterRoomNotify::MergeFrom(const RoleEnterRoomNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.RoleEnterRoomNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role()) {
      mutable_role()->::msg_maj::RoleInfo::MergeFrom(from.role());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void RoleEnterRoomNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.RoleEnterRoomNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleEnterRoomNotify::CopyFrom(const RoleEnterRoomNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.RoleEnterRoomNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleEnterRoomNotify::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_role()) {
    if (!this->role_->IsInitialized()) return false;
  }
  return true;
}

void RoleEnterRoomNotify::Swap(RoleEnterRoomNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleEnterRoomNotify::InternalSwap(RoleEnterRoomNotify* other) {
  std::swap(role_, other->role_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleEnterRoomNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RoleEnterRoomNotify_descriptor_;
  metadata.reflection = RoleEnterRoomNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoleEnterRoomNotify

// required .msg_maj.RoleInfo role = 1;
bool RoleEnterRoomNotify::has_role() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RoleEnterRoomNotify::set_has_role() {
  _has_bits_[0] |= 0x00000001u;
}
void RoleEnterRoomNotify::clear_has_role() {
  _has_bits_[0] &= ~0x00000001u;
}
void RoleEnterRoomNotify::clear_role() {
  if (role_ != NULL) role_->::msg_maj::RoleInfo::Clear();
  clear_has_role();
}
const ::msg_maj::RoleInfo& RoleEnterRoomNotify::role() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleEnterRoomNotify.role)
  return role_ != NULL ? *role_ : *default_instance_->role_;
}
::msg_maj::RoleInfo* RoleEnterRoomNotify::mutable_role() {
  set_has_role();
  if (role_ == NULL) {
    role_ = new ::msg_maj::RoleInfo;
  }
  // @@protoc_insertion_point(field_mutable:msg_maj.RoleEnterRoomNotify.role)
  return role_;
}
::msg_maj::RoleInfo* RoleEnterRoomNotify::release_role() {
  // @@protoc_insertion_point(field_release:msg_maj.RoleEnterRoomNotify.role)
  clear_has_role();
  ::msg_maj::RoleInfo* temp = role_;
  role_ = NULL;
  return temp;
}
void RoleEnterRoomNotify::set_allocated_role(::msg_maj::RoleInfo* role) {
  delete role_;
  role_ = role;
  if (role) {
    set_has_role();
  } else {
    clear_has_role();
  }
  // @@protoc_insertion_point(field_set_allocated:msg_maj.RoleEnterRoomNotify.role)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleLeaveRoomNotify::kSeatFieldNumber;
const int RoleLeaveRoomNotify::kIsRoomerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleLeaveRoomNotify::RoleLeaveRoomNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.RoleLeaveRoomNotify)
}

void RoleLeaveRoomNotify::InitAsDefaultInstance() {
}

RoleLeaveRoomNotify::RoleLeaveRoomNotify(const RoleLeaveRoomNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.RoleLeaveRoomNotify)
}

void RoleLeaveRoomNotify::SharedCtor() {
  _cached_size_ = 0;
  seat_ = 0u;
  is_roomer_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RoleLeaveRoomNotify::~RoleLeaveRoomNotify() {
  // @@protoc_insertion_point(destructor:msg_maj.RoleLeaveRoomNotify)
  SharedDtor();
}

void RoleLeaveRoomNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RoleLeaveRoomNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleLeaveRoomNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoleLeaveRoomNotify_descriptor_;
}

const RoleLeaveRoomNotify& RoleLeaveRoomNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5froom_2eproto();
  return *default_instance_;
}

RoleLeaveRoomNotify* RoleLeaveRoomNotify::default_instance_ = NULL;

RoleLeaveRoomNotify* RoleLeaveRoomNotify::New(::google::protobuf::Arena* arena) const {
  RoleLeaveRoomNotify* n = new RoleLeaveRoomNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleLeaveRoomNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.RoleLeaveRoomNotify)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(RoleLeaveRoomNotify, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<RoleLeaveRoomNotify*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(seat_, is_roomer_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RoleLeaveRoomNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.RoleLeaveRoomNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 seat = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seat_)));
          set_has_seat();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_is_roomer;
        break;
      }

      // required bool is_roomer = 2;
      case 2: {
        if (tag == 16) {
         parse_is_roomer:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_roomer_)));
          set_has_is_roomer();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.RoleLeaveRoomNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.RoleLeaveRoomNotify)
  return false;
#undef DO_
}

void RoleLeaveRoomNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.RoleLeaveRoomNotify)
  // required uint32 seat = 1;
  if (has_seat()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->seat(), output);
  }

  // required bool is_roomer = 2;
  if (has_is_roomer()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_roomer(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.RoleLeaveRoomNotify)
}

::google::protobuf::uint8* RoleLeaveRoomNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.RoleLeaveRoomNotify)
  // required uint32 seat = 1;
  if (has_seat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->seat(), target);
  }

  // required bool is_roomer = 2;
  if (has_is_roomer()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_roomer(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.RoleLeaveRoomNotify)
  return target;
}

int RoleLeaveRoomNotify::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:msg_maj.RoleLeaveRoomNotify)
  int total_size = 0;

  if (has_seat()) {
    // required uint32 seat = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->seat());
  }

  if (has_is_roomer()) {
    // required bool is_roomer = 2;
    total_size += 1 + 1;
  }

  return total_size;
}
int RoleLeaveRoomNotify::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.RoleLeaveRoomNotify)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint32 seat = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->seat());

    // required bool is_roomer = 2;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleLeaveRoomNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.RoleLeaveRoomNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RoleLeaveRoomNotify* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleLeaveRoomNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.RoleLeaveRoomNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.RoleLeaveRoomNotify)
    MergeFrom(*source);
  }
}

void RoleLeaveRoomNotify::MergeFrom(const RoleLeaveRoomNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.RoleLeaveRoomNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_seat()) {
      set_seat(from.seat());
    }
    if (from.has_is_roomer()) {
      set_is_roomer(from.is_roomer());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void RoleLeaveRoomNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.RoleLeaveRoomNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleLeaveRoomNotify::CopyFrom(const RoleLeaveRoomNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.RoleLeaveRoomNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleLeaveRoomNotify::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void RoleLeaveRoomNotify::Swap(RoleLeaveRoomNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleLeaveRoomNotify::InternalSwap(RoleLeaveRoomNotify* other) {
  std::swap(seat_, other->seat_);
  std::swap(is_roomer_, other->is_roomer_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleLeaveRoomNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RoleLeaveRoomNotify_descriptor_;
  metadata.reflection = RoleLeaveRoomNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoleLeaveRoomNotify

// required uint32 seat = 1;
bool RoleLeaveRoomNotify::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RoleLeaveRoomNotify::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
void RoleLeaveRoomNotify::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
void RoleLeaveRoomNotify::clear_seat() {
  seat_ = 0u;
  clear_has_seat();
}
 ::google::protobuf::uint32 RoleLeaveRoomNotify::seat() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleLeaveRoomNotify.seat)
  return seat_;
}
 void RoleLeaveRoomNotify::set_seat(::google::protobuf::uint32 value) {
  set_has_seat();
  seat_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RoleLeaveRoomNotify.seat)
}

// required bool is_roomer = 2;
bool RoleLeaveRoomNotify::has_is_roomer() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RoleLeaveRoomNotify::set_has_is_roomer() {
  _has_bits_[0] |= 0x00000002u;
}
void RoleLeaveRoomNotify::clear_has_is_roomer() {
  _has_bits_[0] &= ~0x00000002u;
}
void RoleLeaveRoomNotify::clear_is_roomer() {
  is_roomer_ = false;
  clear_has_is_roomer();
}
 bool RoleLeaveRoomNotify::is_roomer() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleLeaveRoomNotify.is_roomer)
  return is_roomer_;
}
 void RoleLeaveRoomNotify::set_is_roomer(bool value) {
  set_has_is_roomer();
  is_roomer_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RoleLeaveRoomNotify.is_roomer)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DismissRoomReq::DismissRoomReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.DismissRoomReq)
}

void DismissRoomReq::InitAsDefaultInstance() {
}

DismissRoomReq::DismissRoomReq(const DismissRoomReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.DismissRoomReq)
}

void DismissRoomReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DismissRoomReq::~DismissRoomReq() {
  // @@protoc_insertion_point(destructor:msg_maj.DismissRoomReq)
  SharedDtor();
}

void DismissRoomReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DismissRoomReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DismissRoomReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DismissRoomReq_descriptor_;
}

const DismissRoomReq& DismissRoomReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5froom_2eproto();
  return *default_instance_;
}

DismissRoomReq* DismissRoomReq::default_instance_ = NULL;

DismissRoomReq* DismissRoomReq::New(::google::protobuf::Arena* arena) const {
  DismissRoomReq* n = new DismissRoomReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DismissRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.DismissRoomReq)
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DismissRoomReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.DismissRoomReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.DismissRoomReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.DismissRoomReq)
  return false;
#undef DO_
}

void DismissRoomReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.DismissRoomReq)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.DismissRoomReq)
}

::google::protobuf::uint8* DismissRoomReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.DismissRoomReq)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.DismissRoomReq)
  return target;
}

int DismissRoomReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.DismissRoomReq)
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DismissRoomReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.DismissRoomReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DismissRoomReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DismissRoomReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.DismissRoomReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.DismissRoomReq)
    MergeFrom(*source);
  }
}

void DismissRoomReq::MergeFrom(const DismissRoomReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.DismissRoomReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void DismissRoomReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.DismissRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DismissRoomReq::CopyFrom(const DismissRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.DismissRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DismissRoomReq::IsInitialized() const {

  return true;
}

void DismissRoomReq::Swap(DismissRoomReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DismissRoomReq::InternalSwap(DismissRoomReq* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DismissRoomReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DismissRoomReq_descriptor_;
  metadata.reflection = DismissRoomReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DismissRoomReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DismissRoomNotify::kNicknameFieldNumber;
const int DismissRoomNotify::kSeatFieldNumber;
const int DismissRoomNotify::kTimerSecFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DismissRoomNotify::DismissRoomNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.DismissRoomNotify)
}

void DismissRoomNotify::InitAsDefaultInstance() {
}

DismissRoomNotify::DismissRoomNotify(const DismissRoomNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.DismissRoomNotify)
}

void DismissRoomNotify::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  seat_ = 0u;
  timer_sec_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DismissRoomNotify::~DismissRoomNotify() {
  // @@protoc_insertion_point(destructor:msg_maj.DismissRoomNotify)
  SharedDtor();
}

void DismissRoomNotify::SharedDtor() {
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void DismissRoomNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DismissRoomNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DismissRoomNotify_descriptor_;
}

const DismissRoomNotify& DismissRoomNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5froom_2eproto();
  return *default_instance_;
}

DismissRoomNotify* DismissRoomNotify::default_instance_ = NULL;

DismissRoomNotify* DismissRoomNotify::New(::google::protobuf::Arena* arena) const {
  DismissRoomNotify* n = new DismissRoomNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DismissRoomNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.DismissRoomNotify)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(DismissRoomNotify, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<DismissRoomNotify*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 7u) {
    ZR_(seat_, timer_sec_);
    if (has_nickname()) {
      nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DismissRoomNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.DismissRoomNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string nickname = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nickname().data(), this->nickname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "msg_maj.DismissRoomNotify.nickname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_seat;
        break;
      }

      // required uint32 seat = 2;
      case 2: {
        if (tag == 16) {
         parse_seat:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seat_)));
          set_has_seat();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_timer_sec;
        break;
      }

      // optional uint32 timer_sec = 3;
      case 3: {
        if (tag == 24) {
         parse_timer_sec:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timer_sec_)));
          set_has_timer_sec();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.DismissRoomNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.DismissRoomNotify)
  return false;
#undef DO_
}

void DismissRoomNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.DismissRoomNotify)
  // required string nickname = 1;
  if (has_nickname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg_maj.DismissRoomNotify.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->nickname(), output);
  }

  // required uint32 seat = 2;
  if (has_seat()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->seat(), output);
  }

  // optional uint32 timer_sec = 3;
  if (has_timer_sec()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->timer_sec(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.DismissRoomNotify)
}

::google::protobuf::uint8* DismissRoomNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.DismissRoomNotify)
  // required string nickname = 1;
  if (has_nickname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg_maj.DismissRoomNotify.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->nickname(), target);
  }

  // required uint32 seat = 2;
  if (has_seat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->seat(), target);
  }

  // optional uint32 timer_sec = 3;
  if (has_timer_sec()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->timer_sec(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.DismissRoomNotify)
  return target;
}

int DismissRoomNotify::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:msg_maj.DismissRoomNotify)
  int total_size = 0;

  if (has_nickname()) {
    // required string nickname = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nickname());
  }

  if (has_seat()) {
    // required uint32 seat = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->seat());
  }

  return total_size;
}
int DismissRoomNotify::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.DismissRoomNotify)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string nickname = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nickname());

    // required uint32 seat = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->seat());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional uint32 timer_sec = 3;
  if (has_timer_sec()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->timer_sec());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DismissRoomNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.DismissRoomNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DismissRoomNotify* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DismissRoomNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.DismissRoomNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.DismissRoomNotify)
    MergeFrom(*source);
  }
}

void DismissRoomNotify::MergeFrom(const DismissRoomNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.DismissRoomNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_nickname()) {
      set_has_nickname();
      nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
    }
    if (from.has_seat()) {
      set_seat(from.seat());
    }
    if (from.has_timer_sec()) {
      set_timer_sec(from.timer_sec());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void DismissRoomNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.DismissRoomNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DismissRoomNotify::CopyFrom(const DismissRoomNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.DismissRoomNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DismissRoomNotify::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void DismissRoomNotify::Swap(DismissRoomNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DismissRoomNotify::InternalSwap(DismissRoomNotify* other) {
  nickname_.Swap(&other->nickname_);
  std::swap(seat_, other->seat_);
  std::swap(timer_sec_, other->timer_sec_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DismissRoomNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DismissRoomNotify_descriptor_;
  metadata.reflection = DismissRoomNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DismissRoomNotify

// required string nickname = 1;
bool DismissRoomNotify::has_nickname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DismissRoomNotify::set_has_nickname() {
  _has_bits_[0] |= 0x00000001u;
}
void DismissRoomNotify::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000001u;
}
void DismissRoomNotify::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
 const ::std::string& DismissRoomNotify::nickname() const {
  // @@protoc_insertion_point(field_get:msg_maj.DismissRoomNotify.nickname)
  return nickname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DismissRoomNotify::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.DismissRoomNotify.nickname)
}
 void DismissRoomNotify::set_nickname(const char* value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.DismissRoomNotify.nickname)
}
 void DismissRoomNotify::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.DismissRoomNotify.nickname)
}
 ::std::string* DismissRoomNotify::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:msg_maj.DismissRoomNotify.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DismissRoomNotify::release_nickname() {
  // @@protoc_insertion_point(field_release:msg_maj.DismissRoomNotify.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DismissRoomNotify::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.DismissRoomNotify.nickname)
}

// required uint32 seat = 2;
bool DismissRoomNotify::has_seat() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DismissRoomNotify::set_has_seat() {
  _has_bits_[0] |= 0x00000002u;
}
void DismissRoomNotify::clear_has_seat() {
  _has_bits_[0] &= ~0x00000002u;
}
void DismissRoomNotify::clear_seat() {
  seat_ = 0u;
  clear_has_seat();
}
 ::google::protobuf::uint32 DismissRoomNotify::seat() const {
  // @@protoc_insertion_point(field_get:msg_maj.DismissRoomNotify.seat)
  return seat_;
}
 void DismissRoomNotify::set_seat(::google::protobuf::uint32 value) {
  set_has_seat();
  seat_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.DismissRoomNotify.seat)
}

// optional uint32 timer_sec = 3;
bool DismissRoomNotify::has_timer_sec() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void DismissRoomNotify::set_has_timer_sec() {
  _has_bits_[0] |= 0x00000004u;
}
void DismissRoomNotify::clear_has_timer_sec() {
  _has_bits_[0] &= ~0x00000004u;
}
void DismissRoomNotify::clear_timer_sec() {
  timer_sec_ = 0u;
  clear_has_timer_sec();
}
 ::google::protobuf::uint32 DismissRoomNotify::timer_sec() const {
  // @@protoc_insertion_point(field_get:msg_maj.DismissRoomNotify.timer_sec)
  return timer_sec_;
}
 void DismissRoomNotify::set_timer_sec(::google::protobuf::uint32 value) {
  set_has_timer_sec();
  timer_sec_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.DismissRoomNotify.timer_sec)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DismissRoomVoteNotify::kInfoListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DismissRoomVoteNotify::DismissRoomVoteNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.DismissRoomVoteNotify)
}

void DismissRoomVoteNotify::InitAsDefaultInstance() {
}

DismissRoomVoteNotify::DismissRoomVoteNotify(const DismissRoomVoteNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.DismissRoomVoteNotify)
}

void DismissRoomVoteNotify::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DismissRoomVoteNotify::~DismissRoomVoteNotify() {
  // @@protoc_insertion_point(destructor:msg_maj.DismissRoomVoteNotify)
  SharedDtor();
}

void DismissRoomVoteNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DismissRoomVoteNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DismissRoomVoteNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DismissRoomVoteNotify_descriptor_;
}

const DismissRoomVoteNotify& DismissRoomVoteNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5froom_2eproto();
  return *default_instance_;
}

DismissRoomVoteNotify* DismissRoomVoteNotify::default_instance_ = NULL;

DismissRoomVoteNotify* DismissRoomVoteNotify::New(::google::protobuf::Arena* arena) const {
  DismissRoomVoteNotify* n = new DismissRoomVoteNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DismissRoomVoteNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.DismissRoomVoteNotify)
  infolist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DismissRoomVoteNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.DismissRoomVoteNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .msg_maj.VoteInfo infoList = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_infoList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_infolist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_infoList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.DismissRoomVoteNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.DismissRoomVoteNotify)
  return false;
#undef DO_
}

void DismissRoomVoteNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.DismissRoomVoteNotify)
  // repeated .msg_maj.VoteInfo infoList = 1;
  for (unsigned int i = 0, n = this->infolist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->infolist(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.DismissRoomVoteNotify)
}

::google::protobuf::uint8* DismissRoomVoteNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.DismissRoomVoteNotify)
  // repeated .msg_maj.VoteInfo infoList = 1;
  for (unsigned int i = 0, n = this->infolist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->infolist(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.DismissRoomVoteNotify)
  return target;
}

int DismissRoomVoteNotify::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.DismissRoomVoteNotify)
  int total_size = 0;

  // repeated .msg_maj.VoteInfo infoList = 1;
  total_size += 1 * this->infolist_size();
  for (int i = 0; i < this->infolist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->infolist(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DismissRoomVoteNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.DismissRoomVoteNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DismissRoomVoteNotify* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DismissRoomVoteNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.DismissRoomVoteNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.DismissRoomVoteNotify)
    MergeFrom(*source);
  }
}

void DismissRoomVoteNotify::MergeFrom(const DismissRoomVoteNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.DismissRoomVoteNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  infolist_.MergeFrom(from.infolist_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void DismissRoomVoteNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.DismissRoomVoteNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DismissRoomVoteNotify::CopyFrom(const DismissRoomVoteNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.DismissRoomVoteNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DismissRoomVoteNotify::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->infolist())) return false;
  return true;
}

void DismissRoomVoteNotify::Swap(DismissRoomVoteNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DismissRoomVoteNotify::InternalSwap(DismissRoomVoteNotify* other) {
  infolist_.UnsafeArenaSwap(&other->infolist_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DismissRoomVoteNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DismissRoomVoteNotify_descriptor_;
  metadata.reflection = DismissRoomVoteNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DismissRoomVoteNotify

// repeated .msg_maj.VoteInfo infoList = 1;
int DismissRoomVoteNotify::infolist_size() const {
  return infolist_.size();
}
void DismissRoomVoteNotify::clear_infolist() {
  infolist_.Clear();
}
const ::msg_maj::VoteInfo& DismissRoomVoteNotify::infolist(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.DismissRoomVoteNotify.infoList)
  return infolist_.Get(index);
}
::msg_maj::VoteInfo* DismissRoomVoteNotify::mutable_infolist(int index) {
  // @@protoc_insertion_point(field_mutable:msg_maj.DismissRoomVoteNotify.infoList)
  return infolist_.Mutable(index);
}
::msg_maj::VoteInfo* DismissRoomVoteNotify::add_infolist() {
  // @@protoc_insertion_point(field_add:msg_maj.DismissRoomVoteNotify.infoList)
  return infolist_.Add();
}
::google::protobuf::RepeatedPtrField< ::msg_maj::VoteInfo >*
DismissRoomVoteNotify::mutable_infolist() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.DismissRoomVoteNotify.infoList)
  return &infolist_;
}
const ::google::protobuf::RepeatedPtrField< ::msg_maj::VoteInfo >&
DismissRoomVoteNotify::infolist() const {
  // @@protoc_insertion_point(field_list:msg_maj.DismissRoomVoteNotify.infoList)
  return infolist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VoteInfo::kNicknameFieldNumber;
const int VoteInfo::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VoteInfo::VoteInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.VoteInfo)
}

void VoteInfo::InitAsDefaultInstance() {
}

VoteInfo::VoteInfo(const VoteInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.VoteInfo)
}

void VoteInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

VoteInfo::~VoteInfo() {
  // @@protoc_insertion_point(destructor:msg_maj.VoteInfo)
  SharedDtor();
}

void VoteInfo::SharedDtor() {
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void VoteInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VoteInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return VoteInfo_descriptor_;
}

const VoteInfo& VoteInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5froom_2eproto();
  return *default_instance_;
}

VoteInfo* VoteInfo::default_instance_ = NULL;

VoteInfo* VoteInfo::New(::google::protobuf::Arena* arena) const {
  VoteInfo* n = new VoteInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VoteInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.VoteInfo)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_nickname()) {
      nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    state_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool VoteInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.VoteInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string nickname = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nickname().data(), this->nickname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "msg_maj.VoteInfo.nickname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_state;
        break;
      }

      // required .msg_maj.VoteState state = 2;
      case 2: {
        if (tag == 16) {
         parse_state:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::msg_maj::VoteState_IsValid(value)) {
            set_state(static_cast< ::msg_maj::VoteState >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.VoteInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.VoteInfo)
  return false;
#undef DO_
}

void VoteInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.VoteInfo)
  // required string nickname = 1;
  if (has_nickname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg_maj.VoteInfo.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->nickname(), output);
  }

  // required .msg_maj.VoteState state = 2;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->state(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.VoteInfo)
}

::google::protobuf::uint8* VoteInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.VoteInfo)
  // required string nickname = 1;
  if (has_nickname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg_maj.VoteInfo.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->nickname(), target);
  }

  // required .msg_maj.VoteState state = 2;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->state(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.VoteInfo)
  return target;
}

int VoteInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:msg_maj.VoteInfo)
  int total_size = 0;

  if (has_nickname()) {
    // required string nickname = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nickname());
  }

  if (has_state()) {
    // required .msg_maj.VoteState state = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  return total_size;
}
int VoteInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.VoteInfo)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string nickname = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nickname());

    // required .msg_maj.VoteState state = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VoteInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.VoteInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const VoteInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const VoteInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.VoteInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.VoteInfo)
    MergeFrom(*source);
  }
}

void VoteInfo::MergeFrom(const VoteInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.VoteInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_nickname()) {
      set_has_nickname();
      nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
    }
    if (from.has_state()) {
      set_state(from.state());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void VoteInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.VoteInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VoteInfo::CopyFrom(const VoteInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.VoteInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VoteInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void VoteInfo::Swap(VoteInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VoteInfo::InternalSwap(VoteInfo* other) {
  nickname_.Swap(&other->nickname_);
  std::swap(state_, other->state_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VoteInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = VoteInfo_descriptor_;
  metadata.reflection = VoteInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// VoteInfo

// required string nickname = 1;
bool VoteInfo::has_nickname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void VoteInfo::set_has_nickname() {
  _has_bits_[0] |= 0x00000001u;
}
void VoteInfo::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000001u;
}
void VoteInfo::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
 const ::std::string& VoteInfo::nickname() const {
  // @@protoc_insertion_point(field_get:msg_maj.VoteInfo.nickname)
  return nickname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void VoteInfo::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.VoteInfo.nickname)
}
 void VoteInfo::set_nickname(const char* value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.VoteInfo.nickname)
}
 void VoteInfo::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.VoteInfo.nickname)
}
 ::std::string* VoteInfo::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:msg_maj.VoteInfo.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* VoteInfo::release_nickname() {
  // @@protoc_insertion_point(field_release:msg_maj.VoteInfo.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void VoteInfo::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.VoteInfo.nickname)
}

// required .msg_maj.VoteState state = 2;
bool VoteInfo::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void VoteInfo::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
void VoteInfo::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
void VoteInfo::clear_state() {
  state_ = 0;
  clear_has_state();
}
 ::msg_maj::VoteState VoteInfo::state() const {
  // @@protoc_insertion_point(field_get:msg_maj.VoteInfo.state)
  return static_cast< ::msg_maj::VoteState >(state_);
}
 void VoteInfo::set_state(::msg_maj::VoteState value) {
  assert(::msg_maj::VoteState_IsValid(value));
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.VoteInfo.state)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DismissRoomVoteAcceptReq::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DismissRoomVoteAcceptReq::DismissRoomVoteAcceptReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.DismissRoomVoteAcceptReq)
}

void DismissRoomVoteAcceptReq::InitAsDefaultInstance() {
}

DismissRoomVoteAcceptReq::DismissRoomVoteAcceptReq(const DismissRoomVoteAcceptReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.DismissRoomVoteAcceptReq)
}

void DismissRoomVoteAcceptReq::SharedCtor() {
  _cached_size_ = 0;
  state_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DismissRoomVoteAcceptReq::~DismissRoomVoteAcceptReq() {
  // @@protoc_insertion_point(destructor:msg_maj.DismissRoomVoteAcceptReq)
  SharedDtor();
}

void DismissRoomVoteAcceptReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DismissRoomVoteAcceptReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DismissRoomVoteAcceptReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DismissRoomVoteAcceptReq_descriptor_;
}

const DismissRoomVoteAcceptReq& DismissRoomVoteAcceptReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5froom_2eproto();
  return *default_instance_;
}

DismissRoomVoteAcceptReq* DismissRoomVoteAcceptReq::default_instance_ = NULL;

DismissRoomVoteAcceptReq* DismissRoomVoteAcceptReq::New(::google::protobuf::Arena* arena) const {
  DismissRoomVoteAcceptReq* n = new DismissRoomVoteAcceptReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DismissRoomVoteAcceptReq::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.DismissRoomVoteAcceptReq)
  state_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DismissRoomVoteAcceptReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.DismissRoomVoteAcceptReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .msg_maj.VoteState state = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::msg_maj::VoteState_IsValid(value)) {
            set_state(static_cast< ::msg_maj::VoteState >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.DismissRoomVoteAcceptReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.DismissRoomVoteAcceptReq)
  return false;
#undef DO_
}

void DismissRoomVoteAcceptReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.DismissRoomVoteAcceptReq)
  // required .msg_maj.VoteState state = 1;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->state(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.DismissRoomVoteAcceptReq)
}

::google::protobuf::uint8* DismissRoomVoteAcceptReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.DismissRoomVoteAcceptReq)
  // required .msg_maj.VoteState state = 1;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->state(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.DismissRoomVoteAcceptReq)
  return target;
}

int DismissRoomVoteAcceptReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.DismissRoomVoteAcceptReq)
  int total_size = 0;

  // required .msg_maj.VoteState state = 1;
  if (has_state()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DismissRoomVoteAcceptReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.DismissRoomVoteAcceptReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DismissRoomVoteAcceptReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DismissRoomVoteAcceptReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.DismissRoomVoteAcceptReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.DismissRoomVoteAcceptReq)
    MergeFrom(*source);
  }
}

void DismissRoomVoteAcceptReq::MergeFrom(const DismissRoomVoteAcceptReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.DismissRoomVoteAcceptReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_state()) {
      set_state(from.state());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void DismissRoomVoteAcceptReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.DismissRoomVoteAcceptReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DismissRoomVoteAcceptReq::CopyFrom(const DismissRoomVoteAcceptReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.DismissRoomVoteAcceptReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DismissRoomVoteAcceptReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void DismissRoomVoteAcceptReq::Swap(DismissRoomVoteAcceptReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DismissRoomVoteAcceptReq::InternalSwap(DismissRoomVoteAcceptReq* other) {
  std::swap(state_, other->state_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DismissRoomVoteAcceptReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DismissRoomVoteAcceptReq_descriptor_;
  metadata.reflection = DismissRoomVoteAcceptReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DismissRoomVoteAcceptReq

// required .msg_maj.VoteState state = 1;
bool DismissRoomVoteAcceptReq::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DismissRoomVoteAcceptReq::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
void DismissRoomVoteAcceptReq::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
void DismissRoomVoteAcceptReq::clear_state() {
  state_ = 0;
  clear_has_state();
}
 ::msg_maj::VoteState DismissRoomVoteAcceptReq::state() const {
  // @@protoc_insertion_point(field_get:msg_maj.DismissRoomVoteAcceptReq.state)
  return static_cast< ::msg_maj::VoteState >(state_);
}
 void DismissRoomVoteAcceptReq::set_state(::msg_maj::VoteState value) {
  assert(::msg_maj::VoteState_IsValid(value));
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.DismissRoomVoteAcceptReq.state)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* DismissRoomResp_error_code_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DismissRoomResp_error_code_descriptor_;
}
bool DismissRoomResp_error_code_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DismissRoomResp_error_code DismissRoomResp::SUCCESS;
const DismissRoomResp_error_code DismissRoomResp::FAIL;
const DismissRoomResp_error_code DismissRoomResp::PROTECTION_TIME;
const DismissRoomResp_error_code DismissRoomResp::error_code_MIN;
const DismissRoomResp_error_code DismissRoomResp::error_code_MAX;
const int DismissRoomResp::error_code_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DismissRoomResp::kCodeFieldNumber;
const int DismissRoomResp::kRemainTimeFieldNumber;
const int DismissRoomResp::kIsDissMisFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DismissRoomResp::DismissRoomResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.DismissRoomResp)
}

void DismissRoomResp::InitAsDefaultInstance() {
}

DismissRoomResp::DismissRoomResp(const DismissRoomResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.DismissRoomResp)
}

void DismissRoomResp::SharedCtor() {
  _cached_size_ = 0;
  code_ = 1;
  remain_time_ = 0u;
  isdissmis_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DismissRoomResp::~DismissRoomResp() {
  // @@protoc_insertion_point(destructor:msg_maj.DismissRoomResp)
  SharedDtor();
}

void DismissRoomResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DismissRoomResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DismissRoomResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DismissRoomResp_descriptor_;
}

const DismissRoomResp& DismissRoomResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5froom_2eproto();
  return *default_instance_;
}

DismissRoomResp* DismissRoomResp::default_instance_ = NULL;

DismissRoomResp* DismissRoomResp::New(::google::protobuf::Arena* arena) const {
  DismissRoomResp* n = new DismissRoomResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DismissRoomResp::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.DismissRoomResp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(DismissRoomResp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<DismissRoomResp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 7u) {
    ZR_(remain_time_, isdissmis_);
    code_ = 1;
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DismissRoomResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.DismissRoomResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .msg_maj.DismissRoomResp.error_code code = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::msg_maj::DismissRoomResp_error_code_IsValid(value)) {
            set_code(static_cast< ::msg_maj::DismissRoomResp_error_code >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_remain_time;
        break;
      }

      // optional uint32 remain_time = 2;
      case 2: {
        if (tag == 16) {
         parse_remain_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &remain_time_)));
          set_has_remain_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_isDissMis;
        break;
      }

      // optional bool isDissMis = 3;
      case 3: {
        if (tag == 24) {
         parse_isDissMis:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isdissmis_)));
          set_has_isdissmis();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.DismissRoomResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.DismissRoomResp)
  return false;
#undef DO_
}

void DismissRoomResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.DismissRoomResp)
  // optional .msg_maj.DismissRoomResp.error_code code = 1;
  if (has_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->code(), output);
  }

  // optional uint32 remain_time = 2;
  if (has_remain_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->remain_time(), output);
  }

  // optional bool isDissMis = 3;
  if (has_isdissmis()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->isdissmis(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.DismissRoomResp)
}

::google::protobuf::uint8* DismissRoomResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.DismissRoomResp)
  // optional .msg_maj.DismissRoomResp.error_code code = 1;
  if (has_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->code(), target);
  }

  // optional uint32 remain_time = 2;
  if (has_remain_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->remain_time(), target);
  }

  // optional bool isDissMis = 3;
  if (has_isdissmis()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->isdissmis(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.DismissRoomResp)
  return target;
}

int DismissRoomResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.DismissRoomResp)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional .msg_maj.DismissRoomResp.error_code code = 1;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->code());
    }

    // optional uint32 remain_time = 2;
    if (has_remain_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->remain_time());
    }

    // optional bool isDissMis = 3;
    if (has_isdissmis()) {
      total_size += 1 + 1;
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DismissRoomResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.DismissRoomResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DismissRoomResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DismissRoomResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.DismissRoomResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.DismissRoomResp)
    MergeFrom(*source);
  }
}

void DismissRoomResp::MergeFrom(const DismissRoomResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.DismissRoomResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_code()) {
      set_code(from.code());
    }
    if (from.has_remain_time()) {
      set_remain_time(from.remain_time());
    }
    if (from.has_isdissmis()) {
      set_isdissmis(from.isdissmis());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void DismissRoomResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.DismissRoomResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DismissRoomResp::CopyFrom(const DismissRoomResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.DismissRoomResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DismissRoomResp::IsInitialized() const {

  return true;
}

void DismissRoomResp::Swap(DismissRoomResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DismissRoomResp::InternalSwap(DismissRoomResp* other) {
  std::swap(code_, other->code_);
  std::swap(remain_time_, other->remain_time_);
  std::swap(isdissmis_, other->isdissmis_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DismissRoomResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DismissRoomResp_descriptor_;
  metadata.reflection = DismissRoomResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DismissRoomResp

// optional .msg_maj.DismissRoomResp.error_code code = 1;
bool DismissRoomResp::has_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DismissRoomResp::set_has_code() {
  _has_bits_[0] |= 0x00000001u;
}
void DismissRoomResp::clear_has_code() {
  _has_bits_[0] &= ~0x00000001u;
}
void DismissRoomResp::clear_code() {
  code_ = 1;
  clear_has_code();
}
 ::msg_maj::DismissRoomResp_error_code DismissRoomResp::code() const {
  // @@protoc_insertion_point(field_get:msg_maj.DismissRoomResp.code)
  return static_cast< ::msg_maj::DismissRoomResp_error_code >(code_);
}
 void DismissRoomResp::set_code(::msg_maj::DismissRoomResp_error_code value) {
  assert(::msg_maj::DismissRoomResp_error_code_IsValid(value));
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.DismissRoomResp.code)
}

// optional uint32 remain_time = 2;
bool DismissRoomResp::has_remain_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DismissRoomResp::set_has_remain_time() {
  _has_bits_[0] |= 0x00000002u;
}
void DismissRoomResp::clear_has_remain_time() {
  _has_bits_[0] &= ~0x00000002u;
}
void DismissRoomResp::clear_remain_time() {
  remain_time_ = 0u;
  clear_has_remain_time();
}
 ::google::protobuf::uint32 DismissRoomResp::remain_time() const {
  // @@protoc_insertion_point(field_get:msg_maj.DismissRoomResp.remain_time)
  return remain_time_;
}
 void DismissRoomResp::set_remain_time(::google::protobuf::uint32 value) {
  set_has_remain_time();
  remain_time_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.DismissRoomResp.remain_time)
}

// optional bool isDissMis = 3;
bool DismissRoomResp::has_isdissmis() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void DismissRoomResp::set_has_isdissmis() {
  _has_bits_[0] |= 0x00000004u;
}
void DismissRoomResp::clear_has_isdissmis() {
  _has_bits_[0] &= ~0x00000004u;
}
void DismissRoomResp::clear_isdissmis() {
  isdissmis_ = false;
  clear_has_isdissmis();
}
 bool DismissRoomResp::isdissmis() const {
  // @@protoc_insertion_point(field_get:msg_maj.DismissRoomResp.isDissMis)
  return isdissmis_;
}
 void DismissRoomResp::set_isdissmis(bool value) {
  set_has_isdissmis();
  isdissmis_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.DismissRoomResp.isDissMis)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoomReadyNotify::kRoomerAcitonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoomReadyNotify::RoomReadyNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.RoomReadyNotify)
}

void RoomReadyNotify::InitAsDefaultInstance() {
}

RoomReadyNotify::RoomReadyNotify(const RoomReadyNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.RoomReadyNotify)
}

void RoomReadyNotify::SharedCtor() {
  _cached_size_ = 0;
  roomer_aciton_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RoomReadyNotify::~RoomReadyNotify() {
  // @@protoc_insertion_point(destructor:msg_maj.RoomReadyNotify)
  SharedDtor();
}

void RoomReadyNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RoomReadyNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoomReadyNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoomReadyNotify_descriptor_;
}

const RoomReadyNotify& RoomReadyNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5froom_2eproto();
  return *default_instance_;
}

RoomReadyNotify* RoomReadyNotify::default_instance_ = NULL;

RoomReadyNotify* RoomReadyNotify::New(::google::protobuf::Arena* arena) const {
  RoomReadyNotify* n = new RoomReadyNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoomReadyNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.RoomReadyNotify)
  roomer_aciton_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RoomReadyNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.RoomReadyNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .msg_maj.RoomerAction roomer_aciton = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::msg_maj::RoomerAction_IsValid(value)) {
            set_roomer_aciton(static_cast< ::msg_maj::RoomerAction >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.RoomReadyNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.RoomReadyNotify)
  return false;
#undef DO_
}

void RoomReadyNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.RoomReadyNotify)
  // required .msg_maj.RoomerAction roomer_aciton = 1;
  if (has_roomer_aciton()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->roomer_aciton(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.RoomReadyNotify)
}

::google::protobuf::uint8* RoomReadyNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.RoomReadyNotify)
  // required .msg_maj.RoomerAction roomer_aciton = 1;
  if (has_roomer_aciton()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->roomer_aciton(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.RoomReadyNotify)
  return target;
}

int RoomReadyNotify::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.RoomReadyNotify)
  int total_size = 0;

  // required .msg_maj.RoomerAction roomer_aciton = 1;
  if (has_roomer_aciton()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->roomer_aciton());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoomReadyNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.RoomReadyNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RoomReadyNotify* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RoomReadyNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.RoomReadyNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.RoomReadyNotify)
    MergeFrom(*source);
  }
}

void RoomReadyNotify::MergeFrom(const RoomReadyNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.RoomReadyNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_roomer_aciton()) {
      set_roomer_aciton(from.roomer_aciton());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void RoomReadyNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.RoomReadyNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoomReadyNotify::CopyFrom(const RoomReadyNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.RoomReadyNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoomReadyNotify::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RoomReadyNotify::Swap(RoomReadyNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoomReadyNotify::InternalSwap(RoomReadyNotify* other) {
  std::swap(roomer_aciton_, other->roomer_aciton_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoomReadyNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RoomReadyNotify_descriptor_;
  metadata.reflection = RoomReadyNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoomReadyNotify

// required .msg_maj.RoomerAction roomer_aciton = 1;
bool RoomReadyNotify::has_roomer_aciton() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RoomReadyNotify::set_has_roomer_aciton() {
  _has_bits_[0] |= 0x00000001u;
}
void RoomReadyNotify::clear_has_roomer_aciton() {
  _has_bits_[0] &= ~0x00000001u;
}
void RoomReadyNotify::clear_roomer_aciton() {
  roomer_aciton_ = 1;
  clear_has_roomer_aciton();
}
 ::msg_maj::RoomerAction RoomReadyNotify::roomer_aciton() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoomReadyNotify.roomer_aciton)
  return static_cast< ::msg_maj::RoomerAction >(roomer_aciton_);
}
 void RoomReadyNotify::set_roomer_aciton(::msg_maj::RoomerAction value) {
  assert(::msg_maj::RoomerAction_IsValid(value));
  set_has_roomer_aciton();
  roomer_aciton_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RoomReadyNotify.roomer_aciton)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReconnectReq::ReconnectReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.ReconnectReq)
}

void ReconnectReq::InitAsDefaultInstance() {
}

ReconnectReq::ReconnectReq(const ReconnectReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.ReconnectReq)
}

void ReconnectReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReconnectReq::~ReconnectReq() {
  // @@protoc_insertion_point(destructor:msg_maj.ReconnectReq)
  SharedDtor();
}

void ReconnectReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ReconnectReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReconnectReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReconnectReq_descriptor_;
}

const ReconnectReq& ReconnectReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5froom_2eproto();
  return *default_instance_;
}

ReconnectReq* ReconnectReq::default_instance_ = NULL;

ReconnectReq* ReconnectReq::New(::google::protobuf::Arena* arena) const {
  ReconnectReq* n = new ReconnectReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReconnectReq::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.ReconnectReq)
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ReconnectReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.ReconnectReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.ReconnectReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.ReconnectReq)
  return false;
#undef DO_
}

void ReconnectReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.ReconnectReq)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.ReconnectReq)
}

::google::protobuf::uint8* ReconnectReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.ReconnectReq)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.ReconnectReq)
  return target;
}

int ReconnectReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.ReconnectReq)
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReconnectReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.ReconnectReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ReconnectReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ReconnectReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.ReconnectReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.ReconnectReq)
    MergeFrom(*source);
  }
}

void ReconnectReq::MergeFrom(const ReconnectReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.ReconnectReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ReconnectReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.ReconnectReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReconnectReq::CopyFrom(const ReconnectReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.ReconnectReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReconnectReq::IsInitialized() const {

  return true;
}

void ReconnectReq::Swap(ReconnectReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReconnectReq::InternalSwap(ReconnectReq* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReconnectReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReconnectReq_descriptor_;
  metadata.reflection = ReconnectReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReconnectReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* ReconnectResp_error_code_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReconnectResp_error_code_descriptor_;
}
bool ReconnectResp_error_code_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ReconnectResp_error_code ReconnectResp::SUCCESS;
const ReconnectResp_error_code ReconnectResp::FAIL;
const ReconnectResp_error_code ReconnectResp::NOT_IN_ROOM;
const ReconnectResp_error_code ReconnectResp::error_code_MIN;
const ReconnectResp_error_code ReconnectResp::error_code_MAX;
const int ReconnectResp::error_code_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReconnectResp::kCodeFieldNumber;
const int ReconnectResp::kRoomInfoFieldNumber;
const int ReconnectResp::kUserListFieldNumber;
const int ReconnectResp::kSelfSeatFieldNumber;
const int ReconnectResp::kBankerSeatFieldNumber;
const int ReconnectResp::kIsRoomerFieldNumber;
const int ReconnectResp::kIsStartFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReconnectResp::ReconnectResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.ReconnectResp)
}

void ReconnectResp::InitAsDefaultInstance() {
  room_info_ = const_cast< ::msg_maj::RoomInfo*>(&::msg_maj::RoomInfo::default_instance());
}

ReconnectResp::ReconnectResp(const ReconnectResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.ReconnectResp)
}

void ReconnectResp::SharedCtor() {
  _cached_size_ = 0;
  code_ = 1;
  room_info_ = NULL;
  self_seat_ = 0u;
  banker_seat_ = 0u;
  is_roomer_ = false;
  is_start_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReconnectResp::~ReconnectResp() {
  // @@protoc_insertion_point(destructor:msg_maj.ReconnectResp)
  SharedDtor();
}

void ReconnectResp::SharedDtor() {
  if (this != default_instance_) {
    delete room_info_;
  }
}

void ReconnectResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReconnectResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReconnectResp_descriptor_;
}

const ReconnectResp& ReconnectResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5froom_2eproto();
  return *default_instance_;
}

ReconnectResp* ReconnectResp::default_instance_ = NULL;

ReconnectResp* ReconnectResp::New(::google::protobuf::Arena* arena) const {
  ReconnectResp* n = new ReconnectResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReconnectResp::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.ReconnectResp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ReconnectResp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ReconnectResp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 123u) {
    ZR_(banker_seat_, is_start_);
    code_ = 1;
    if (has_room_info()) {
      if (room_info_ != NULL) room_info_->::msg_maj::RoomInfo::Clear();
    }
    self_seat_ = 0u;
  }

#undef ZR_HELPER_
#undef ZR_

  user_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ReconnectResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.ReconnectResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .msg_maj.ReconnectResp.error_code code = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::msg_maj::ReconnectResp_error_code_IsValid(value)) {
            set_code(static_cast< ::msg_maj::ReconnectResp_error_code >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_room_info;
        break;
      }

      // optional .msg_maj.RoomInfo room_info = 2;
      case 2: {
        if (tag == 18) {
         parse_room_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_room_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_user_list;
        break;
      }

      // repeated .msg_maj.RoleInfo user_list = 3;
      case 3: {
        if (tag == 26) {
         parse_user_list:
          DO_(input->IncrementRecursionDepth());
         parse_loop_user_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_user_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_user_list;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(32)) goto parse_self_seat;
        break;
      }

      // optional uint32 self_seat = 4;
      case 4: {
        if (tag == 32) {
         parse_self_seat:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &self_seat_)));
          set_has_self_seat();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_banker_seat;
        break;
      }

      // optional uint32 banker_seat = 5;
      case 5: {
        if (tag == 40) {
         parse_banker_seat:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &banker_seat_)));
          set_has_banker_seat();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_is_roomer;
        break;
      }

      // optional bool is_roomer = 6;
      case 6: {
        if (tag == 48) {
         parse_is_roomer:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_roomer_)));
          set_has_is_roomer();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_is_start;
        break;
      }

      // optional bool is_start = 7;
      case 7: {
        if (tag == 56) {
         parse_is_start:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_start_)));
          set_has_is_start();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.ReconnectResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.ReconnectResp)
  return false;
#undef DO_
}

void ReconnectResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.ReconnectResp)
  // required .msg_maj.ReconnectResp.error_code code = 1;
  if (has_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->code(), output);
  }

  // optional .msg_maj.RoomInfo room_info = 2;
  if (has_room_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->room_info_, output);
  }

  // repeated .msg_maj.RoleInfo user_list = 3;
  for (unsigned int i = 0, n = this->user_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->user_list(i), output);
  }

  // optional uint32 self_seat = 4;
  if (has_self_seat()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->self_seat(), output);
  }

  // optional uint32 banker_seat = 5;
  if (has_banker_seat()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->banker_seat(), output);
  }

  // optional bool is_roomer = 6;
  if (has_is_roomer()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->is_roomer(), output);
  }

  // optional bool is_start = 7;
  if (has_is_start()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->is_start(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.ReconnectResp)
}

::google::protobuf::uint8* ReconnectResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.ReconnectResp)
  // required .msg_maj.ReconnectResp.error_code code = 1;
  if (has_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->code(), target);
  }

  // optional .msg_maj.RoomInfo room_info = 2;
  if (has_room_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->room_info_, false, target);
  }

  // repeated .msg_maj.RoleInfo user_list = 3;
  for (unsigned int i = 0, n = this->user_list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->user_list(i), false, target);
  }

  // optional uint32 self_seat = 4;
  if (has_self_seat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->self_seat(), target);
  }

  // optional uint32 banker_seat = 5;
  if (has_banker_seat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->banker_seat(), target);
  }

  // optional bool is_roomer = 6;
  if (has_is_roomer()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->is_roomer(), target);
  }

  // optional bool is_start = 7;
  if (has_is_start()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->is_start(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.ReconnectResp)
  return target;
}

int ReconnectResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.ReconnectResp)
  int total_size = 0;

  // required .msg_maj.ReconnectResp.error_code code = 1;
  if (has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->code());
  }
  if (_has_bits_[1 / 32] & 122u) {
    // optional .msg_maj.RoomInfo room_info = 2;
    if (has_room_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->room_info_);
    }

    // optional uint32 self_seat = 4;
    if (has_self_seat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->self_seat());
    }

    // optional uint32 banker_seat = 5;
    if (has_banker_seat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->banker_seat());
    }

    // optional bool is_roomer = 6;
    if (has_is_roomer()) {
      total_size += 1 + 1;
    }

    // optional bool is_start = 7;
    if (has_is_start()) {
      total_size += 1 + 1;
    }

  }
  // repeated .msg_maj.RoleInfo user_list = 3;
  total_size += 1 * this->user_list_size();
  for (int i = 0; i < this->user_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->user_list(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReconnectResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.ReconnectResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ReconnectResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ReconnectResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.ReconnectResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.ReconnectResp)
    MergeFrom(*source);
  }
}

void ReconnectResp::MergeFrom(const ReconnectResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.ReconnectResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  user_list_.MergeFrom(from.user_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_code()) {
      set_code(from.code());
    }
    if (from.has_room_info()) {
      mutable_room_info()->::msg_maj::RoomInfo::MergeFrom(from.room_info());
    }
    if (from.has_self_seat()) {
      set_self_seat(from.self_seat());
    }
    if (from.has_banker_seat()) {
      set_banker_seat(from.banker_seat());
    }
    if (from.has_is_roomer()) {
      set_is_roomer(from.is_roomer());
    }
    if (from.has_is_start()) {
      set_is_start(from.is_start());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ReconnectResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.ReconnectResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReconnectResp::CopyFrom(const ReconnectResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.ReconnectResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReconnectResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_room_info()) {
    if (!this->room_info_->IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->user_list())) return false;
  return true;
}

void ReconnectResp::Swap(ReconnectResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReconnectResp::InternalSwap(ReconnectResp* other) {
  std::swap(code_, other->code_);
  std::swap(room_info_, other->room_info_);
  user_list_.UnsafeArenaSwap(&other->user_list_);
  std::swap(self_seat_, other->self_seat_);
  std::swap(banker_seat_, other->banker_seat_);
  std::swap(is_roomer_, other->is_roomer_);
  std::swap(is_start_, other->is_start_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReconnectResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReconnectResp_descriptor_;
  metadata.reflection = ReconnectResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReconnectResp

// required .msg_maj.ReconnectResp.error_code code = 1;
bool ReconnectResp::has_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ReconnectResp::set_has_code() {
  _has_bits_[0] |= 0x00000001u;
}
void ReconnectResp::clear_has_code() {
  _has_bits_[0] &= ~0x00000001u;
}
void ReconnectResp::clear_code() {
  code_ = 1;
  clear_has_code();
}
 ::msg_maj::ReconnectResp_error_code ReconnectResp::code() const {
  // @@protoc_insertion_point(field_get:msg_maj.ReconnectResp.code)
  return static_cast< ::msg_maj::ReconnectResp_error_code >(code_);
}
 void ReconnectResp::set_code(::msg_maj::ReconnectResp_error_code value) {
  assert(::msg_maj::ReconnectResp_error_code_IsValid(value));
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.ReconnectResp.code)
}

// optional .msg_maj.RoomInfo room_info = 2;
bool ReconnectResp::has_room_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ReconnectResp::set_has_room_info() {
  _has_bits_[0] |= 0x00000002u;
}
void ReconnectResp::clear_has_room_info() {
  _has_bits_[0] &= ~0x00000002u;
}
void ReconnectResp::clear_room_info() {
  if (room_info_ != NULL) room_info_->::msg_maj::RoomInfo::Clear();
  clear_has_room_info();
}
const ::msg_maj::RoomInfo& ReconnectResp::room_info() const {
  // @@protoc_insertion_point(field_get:msg_maj.ReconnectResp.room_info)
  return room_info_ != NULL ? *room_info_ : *default_instance_->room_info_;
}
::msg_maj::RoomInfo* ReconnectResp::mutable_room_info() {
  set_has_room_info();
  if (room_info_ == NULL) {
    room_info_ = new ::msg_maj::RoomInfo;
  }
  // @@protoc_insertion_point(field_mutable:msg_maj.ReconnectResp.room_info)
  return room_info_;
}
::msg_maj::RoomInfo* ReconnectResp::release_room_info() {
  // @@protoc_insertion_point(field_release:msg_maj.ReconnectResp.room_info)
  clear_has_room_info();
  ::msg_maj::RoomInfo* temp = room_info_;
  room_info_ = NULL;
  return temp;
}
void ReconnectResp::set_allocated_room_info(::msg_maj::RoomInfo* room_info) {
  delete room_info_;
  room_info_ = room_info;
  if (room_info) {
    set_has_room_info();
  } else {
    clear_has_room_info();
  }
  // @@protoc_insertion_point(field_set_allocated:msg_maj.ReconnectResp.room_info)
}

// repeated .msg_maj.RoleInfo user_list = 3;
int ReconnectResp::user_list_size() const {
  return user_list_.size();
}
void ReconnectResp::clear_user_list() {
  user_list_.Clear();
}
const ::msg_maj::RoleInfo& ReconnectResp::user_list(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.ReconnectResp.user_list)
  return user_list_.Get(index);
}
::msg_maj::RoleInfo* ReconnectResp::mutable_user_list(int index) {
  // @@protoc_insertion_point(field_mutable:msg_maj.ReconnectResp.user_list)
  return user_list_.Mutable(index);
}
::msg_maj::RoleInfo* ReconnectResp::add_user_list() {
  // @@protoc_insertion_point(field_add:msg_maj.ReconnectResp.user_list)
  return user_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::msg_maj::RoleInfo >*
ReconnectResp::mutable_user_list() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.ReconnectResp.user_list)
  return &user_list_;
}
const ::google::protobuf::RepeatedPtrField< ::msg_maj::RoleInfo >&
ReconnectResp::user_list() const {
  // @@protoc_insertion_point(field_list:msg_maj.ReconnectResp.user_list)
  return user_list_;
}

// optional uint32 self_seat = 4;
bool ReconnectResp::has_self_seat() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ReconnectResp::set_has_self_seat() {
  _has_bits_[0] |= 0x00000008u;
}
void ReconnectResp::clear_has_self_seat() {
  _has_bits_[0] &= ~0x00000008u;
}
void ReconnectResp::clear_self_seat() {
  self_seat_ = 0u;
  clear_has_self_seat();
}
 ::google::protobuf::uint32 ReconnectResp::self_seat() const {
  // @@protoc_insertion_point(field_get:msg_maj.ReconnectResp.self_seat)
  return self_seat_;
}
 void ReconnectResp::set_self_seat(::google::protobuf::uint32 value) {
  set_has_self_seat();
  self_seat_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.ReconnectResp.self_seat)
}

// optional uint32 banker_seat = 5;
bool ReconnectResp::has_banker_seat() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ReconnectResp::set_has_banker_seat() {
  _has_bits_[0] |= 0x00000010u;
}
void ReconnectResp::clear_has_banker_seat() {
  _has_bits_[0] &= ~0x00000010u;
}
void ReconnectResp::clear_banker_seat() {
  banker_seat_ = 0u;
  clear_has_banker_seat();
}
 ::google::protobuf::uint32 ReconnectResp::banker_seat() const {
  // @@protoc_insertion_point(field_get:msg_maj.ReconnectResp.banker_seat)
  return banker_seat_;
}
 void ReconnectResp::set_banker_seat(::google::protobuf::uint32 value) {
  set_has_banker_seat();
  banker_seat_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.ReconnectResp.banker_seat)
}

// optional bool is_roomer = 6;
bool ReconnectResp::has_is_roomer() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ReconnectResp::set_has_is_roomer() {
  _has_bits_[0] |= 0x00000020u;
}
void ReconnectResp::clear_has_is_roomer() {
  _has_bits_[0] &= ~0x00000020u;
}
void ReconnectResp::clear_is_roomer() {
  is_roomer_ = false;
  clear_has_is_roomer();
}
 bool ReconnectResp::is_roomer() const {
  // @@protoc_insertion_point(field_get:msg_maj.ReconnectResp.is_roomer)
  return is_roomer_;
}
 void ReconnectResp::set_is_roomer(bool value) {
  set_has_is_roomer();
  is_roomer_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.ReconnectResp.is_roomer)
}

// optional bool is_start = 7;
bool ReconnectResp::has_is_start() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void ReconnectResp::set_has_is_start() {
  _has_bits_[0] |= 0x00000040u;
}
void ReconnectResp::clear_has_is_start() {
  _has_bits_[0] &= ~0x00000040u;
}
void ReconnectResp::clear_is_start() {
  is_start_ = false;
  clear_has_is_start();
}
 bool ReconnectResp::is_start() const {
  // @@protoc_insertion_point(field_get:msg_maj.ReconnectResp.is_start)
  return is_start_;
}
 void ReconnectResp::set_is_start(bool value) {
  set_has_is_start();
  is_start_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.ReconnectResp.is_start)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReconnectFin::ReconnectFin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.ReconnectFin)
}

void ReconnectFin::InitAsDefaultInstance() {
}

ReconnectFin::ReconnectFin(const ReconnectFin& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.ReconnectFin)
}

void ReconnectFin::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReconnectFin::~ReconnectFin() {
  // @@protoc_insertion_point(destructor:msg_maj.ReconnectFin)
  SharedDtor();
}

void ReconnectFin::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ReconnectFin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReconnectFin::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReconnectFin_descriptor_;
}

const ReconnectFin& ReconnectFin::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5froom_2eproto();
  return *default_instance_;
}

ReconnectFin* ReconnectFin::default_instance_ = NULL;

ReconnectFin* ReconnectFin::New(::google::protobuf::Arena* arena) const {
  ReconnectFin* n = new ReconnectFin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReconnectFin::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.ReconnectFin)
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ReconnectFin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.ReconnectFin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.ReconnectFin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.ReconnectFin)
  return false;
#undef DO_
}

void ReconnectFin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.ReconnectFin)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.ReconnectFin)
}

::google::protobuf::uint8* ReconnectFin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.ReconnectFin)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.ReconnectFin)
  return target;
}

int ReconnectFin::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.ReconnectFin)
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReconnectFin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.ReconnectFin)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ReconnectFin* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ReconnectFin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.ReconnectFin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.ReconnectFin)
    MergeFrom(*source);
  }
}

void ReconnectFin::MergeFrom(const ReconnectFin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.ReconnectFin)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ReconnectFin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.ReconnectFin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReconnectFin::CopyFrom(const ReconnectFin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.ReconnectFin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReconnectFin::IsInitialized() const {

  return true;
}

void ReconnectFin::Swap(ReconnectFin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReconnectFin::InternalSwap(ReconnectFin* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReconnectFin::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReconnectFin_descriptor_;
  metadata.reflection = ReconnectFin_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReconnectFin

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleOnlineNotify::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleOnlineNotify::RoleOnlineNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.RoleOnlineNotify)
}

void RoleOnlineNotify::InitAsDefaultInstance() {
}

RoleOnlineNotify::RoleOnlineNotify(const RoleOnlineNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.RoleOnlineNotify)
}

void RoleOnlineNotify::SharedCtor() {
  _cached_size_ = 0;
  state_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RoleOnlineNotify::~RoleOnlineNotify() {
  // @@protoc_insertion_point(destructor:msg_maj.RoleOnlineNotify)
  SharedDtor();
}

void RoleOnlineNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RoleOnlineNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleOnlineNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoleOnlineNotify_descriptor_;
}

const RoleOnlineNotify& RoleOnlineNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5froom_2eproto();
  return *default_instance_;
}

RoleOnlineNotify* RoleOnlineNotify::default_instance_ = NULL;

RoleOnlineNotify* RoleOnlineNotify::New(::google::protobuf::Arena* arena) const {
  RoleOnlineNotify* n = new RoleOnlineNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleOnlineNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.RoleOnlineNotify)
  state_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RoleOnlineNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.RoleOnlineNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .msg_maj.online_state_room state = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::msg_maj::online_state_room_IsValid(value)) {
            set_state(static_cast< ::msg_maj::online_state_room >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.RoleOnlineNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.RoleOnlineNotify)
  return false;
#undef DO_
}

void RoleOnlineNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.RoleOnlineNotify)
  // required .msg_maj.online_state_room state = 1;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->state(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.RoleOnlineNotify)
}

::google::protobuf::uint8* RoleOnlineNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.RoleOnlineNotify)
  // required .msg_maj.online_state_room state = 1;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->state(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.RoleOnlineNotify)
  return target;
}

int RoleOnlineNotify::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.RoleOnlineNotify)
  int total_size = 0;

  // required .msg_maj.online_state_room state = 1;
  if (has_state()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleOnlineNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.RoleOnlineNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RoleOnlineNotify* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleOnlineNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.RoleOnlineNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.RoleOnlineNotify)
    MergeFrom(*source);
  }
}

void RoleOnlineNotify::MergeFrom(const RoleOnlineNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.RoleOnlineNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_state()) {
      set_state(from.state());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void RoleOnlineNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.RoleOnlineNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleOnlineNotify::CopyFrom(const RoleOnlineNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.RoleOnlineNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleOnlineNotify::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RoleOnlineNotify::Swap(RoleOnlineNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleOnlineNotify::InternalSwap(RoleOnlineNotify* other) {
  std::swap(state_, other->state_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleOnlineNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RoleOnlineNotify_descriptor_;
  metadata.reflection = RoleOnlineNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoleOnlineNotify

// required .msg_maj.online_state_room state = 1;
bool RoleOnlineNotify::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RoleOnlineNotify::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
void RoleOnlineNotify::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
void RoleOnlineNotify::clear_state() {
  state_ = 1;
  clear_has_state();
}
 ::msg_maj::online_state_room RoleOnlineNotify::state() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleOnlineNotify.state)
  return static_cast< ::msg_maj::online_state_room >(state_);
}
 void RoleOnlineNotify::set_state(::msg_maj::online_state_room value) {
  assert(::msg_maj::online_state_room_IsValid(value));
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RoleOnlineNotify.state)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoomInfo::kRoomIdFieldNumber;
const int RoomInfo::kRoomTypeFieldNumber;
const int RoomInfo::kOptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoomInfo::RoomInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.RoomInfo)
}

void RoomInfo::InitAsDefaultInstance() {
  option_ = const_cast< ::msg_maj::RoomOption*>(&::msg_maj::RoomOption::default_instance());
}

RoomInfo::RoomInfo(const RoomInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.RoomInfo)
}

void RoomInfo::SharedCtor() {
  _cached_size_ = 0;
  room_id_ = 0u;
  room_type_ = 0;
  option_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RoomInfo::~RoomInfo() {
  // @@protoc_insertion_point(destructor:msg_maj.RoomInfo)
  SharedDtor();
}

void RoomInfo::SharedDtor() {
  if (this != default_instance_) {
    delete option_;
  }
}

void RoomInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoomInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoomInfo_descriptor_;
}

const RoomInfo& RoomInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5froom_2eproto();
  return *default_instance_;
}

RoomInfo* RoomInfo::default_instance_ = NULL;

RoomInfo* RoomInfo::New(::google::protobuf::Arena* arena) const {
  RoomInfo* n = new RoomInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoomInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.RoomInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(RoomInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<RoomInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 7u) {
    ZR_(room_id_, room_type_);
    if (has_option()) {
      if (option_ != NULL) option_->::msg_maj::RoomOption::Clear();
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RoomInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.RoomInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 room_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &room_id_)));
          set_has_room_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_room_type;
        break;
      }

      // required .msg_maj.RoomType room_type = 2;
      case 2: {
        if (tag == 16) {
         parse_room_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::msg_maj::RoomType_IsValid(value)) {
            set_room_type(static_cast< ::msg_maj::RoomType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_option;
        break;
      }

      // required .msg_maj.RoomOption option = 3;
      case 3: {
        if (tag == 26) {
         parse_option:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_option()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.RoomInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.RoomInfo)
  return false;
#undef DO_
}

void RoomInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.RoomInfo)
  // required uint32 room_id = 1;
  if (has_room_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->room_id(), output);
  }

  // required .msg_maj.RoomType room_type = 2;
  if (has_room_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->room_type(), output);
  }

  // required .msg_maj.RoomOption option = 3;
  if (has_option()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->option_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.RoomInfo)
}

::google::protobuf::uint8* RoomInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.RoomInfo)
  // required uint32 room_id = 1;
  if (has_room_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->room_id(), target);
  }

  // required .msg_maj.RoomType room_type = 2;
  if (has_room_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->room_type(), target);
  }

  // required .msg_maj.RoomOption option = 3;
  if (has_option()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->option_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.RoomInfo)
  return target;
}

int RoomInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:msg_maj.RoomInfo)
  int total_size = 0;

  if (has_room_id()) {
    // required uint32 room_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->room_id());
  }

  if (has_room_type()) {
    // required .msg_maj.RoomType room_type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->room_type());
  }

  if (has_option()) {
    // required .msg_maj.RoomOption option = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->option_);
  }

  return total_size;
}
int RoomInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.RoomInfo)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required uint32 room_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->room_id());

    // required .msg_maj.RoomType room_type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->room_type());

    // required .msg_maj.RoomOption option = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->option_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoomInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.RoomInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RoomInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RoomInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.RoomInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.RoomInfo)
    MergeFrom(*source);
  }
}

void RoomInfo::MergeFrom(const RoomInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.RoomInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_room_id()) {
      set_room_id(from.room_id());
    }
    if (from.has_room_type()) {
      set_room_type(from.room_type());
    }
    if (from.has_option()) {
      mutable_option()->::msg_maj::RoomOption::MergeFrom(from.option());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void RoomInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.RoomInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoomInfo::CopyFrom(const RoomInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.RoomInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoomInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void RoomInfo::Swap(RoomInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoomInfo::InternalSwap(RoomInfo* other) {
  std::swap(room_id_, other->room_id_);
  std::swap(room_type_, other->room_type_);
  std::swap(option_, other->option_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoomInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RoomInfo_descriptor_;
  metadata.reflection = RoomInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoomInfo

// required uint32 room_id = 1;
bool RoomInfo::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RoomInfo::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
void RoomInfo::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void RoomInfo::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
 ::google::protobuf::uint32 RoomInfo::room_id() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoomInfo.room_id)
  return room_id_;
}
 void RoomInfo::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RoomInfo.room_id)
}

// required .msg_maj.RoomType room_type = 2;
bool RoomInfo::has_room_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RoomInfo::set_has_room_type() {
  _has_bits_[0] |= 0x00000002u;
}
void RoomInfo::clear_has_room_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void RoomInfo::clear_room_type() {
  room_type_ = 0;
  clear_has_room_type();
}
 ::msg_maj::RoomType RoomInfo::room_type() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoomInfo.room_type)
  return static_cast< ::msg_maj::RoomType >(room_type_);
}
 void RoomInfo::set_room_type(::msg_maj::RoomType value) {
  assert(::msg_maj::RoomType_IsValid(value));
  set_has_room_type();
  room_type_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RoomInfo.room_type)
}

// required .msg_maj.RoomOption option = 3;
bool RoomInfo::has_option() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void RoomInfo::set_has_option() {
  _has_bits_[0] |= 0x00000004u;
}
void RoomInfo::clear_has_option() {
  _has_bits_[0] &= ~0x00000004u;
}
void RoomInfo::clear_option() {
  if (option_ != NULL) option_->::msg_maj::RoomOption::Clear();
  clear_has_option();
}
const ::msg_maj::RoomOption& RoomInfo::option() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoomInfo.option)
  return option_ != NULL ? *option_ : *default_instance_->option_;
}
::msg_maj::RoomOption* RoomInfo::mutable_option() {
  set_has_option();
  if (option_ == NULL) {
    option_ = new ::msg_maj::RoomOption;
  }
  // @@protoc_insertion_point(field_mutable:msg_maj.RoomInfo.option)
  return option_;
}
::msg_maj::RoomOption* RoomInfo::release_option() {
  // @@protoc_insertion_point(field_release:msg_maj.RoomInfo.option)
  clear_has_option();
  ::msg_maj::RoomOption* temp = option_;
  option_ = NULL;
  return temp;
}
void RoomInfo::set_allocated_option(::msg_maj::RoomOption* option) {
  delete option_;
  option_ = option;
  if (option) {
    set_has_option();
  } else {
    clear_has_option();
  }
  // @@protoc_insertion_point(field_set_allocated:msg_maj.RoomInfo.option)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoomListInfo::kLvlelFieldNumber;
const int RoomListInfo::kNameFieldNumber;
const int RoomListInfo::kBetxFieldNumber;
const int RoomListInfo::kMinCoinFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoomListInfo::RoomListInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.RoomListInfo)
}

void RoomListInfo::InitAsDefaultInstance() {
}

RoomListInfo::RoomListInfo(const RoomListInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.RoomListInfo)
}

void RoomListInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  lvlel_ = 0u;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  betx_ = 0u;
  min_coin_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RoomListInfo::~RoomListInfo() {
  // @@protoc_insertion_point(destructor:msg_maj.RoomListInfo)
  SharedDtor();
}

void RoomListInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void RoomListInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoomListInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoomListInfo_descriptor_;
}

const RoomListInfo& RoomListInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5froom_2eproto();
  return *default_instance_;
}

RoomListInfo* RoomListInfo::default_instance_ = NULL;

RoomListInfo* RoomListInfo::New(::google::protobuf::Arena* arena) const {
  RoomListInfo* n = new RoomListInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoomListInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.RoomListInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(RoomListInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<RoomListInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 15u) {
    ZR_(lvlel_, min_coin_);
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RoomListInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.RoomListInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 lvlel = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lvlel_)));
          set_has_lvlel();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // required string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "msg_maj.RoomListInfo.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_betx;
        break;
      }

      // required uint32 betx = 3;
      case 3: {
        if (tag == 24) {
         parse_betx:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &betx_)));
          set_has_betx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_min_coin;
        break;
      }

      // required uint32 min_coin = 4;
      case 4: {
        if (tag == 32) {
         parse_min_coin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &min_coin_)));
          set_has_min_coin();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.RoomListInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.RoomListInfo)
  return false;
#undef DO_
}

void RoomListInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.RoomListInfo)
  // required uint32 lvlel = 1;
  if (has_lvlel()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->lvlel(), output);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg_maj.RoomListInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // required uint32 betx = 3;
  if (has_betx()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->betx(), output);
  }

  // required uint32 min_coin = 4;
  if (has_min_coin()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->min_coin(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.RoomListInfo)
}

::google::protobuf::uint8* RoomListInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.RoomListInfo)
  // required uint32 lvlel = 1;
  if (has_lvlel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->lvlel(), target);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg_maj.RoomListInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // required uint32 betx = 3;
  if (has_betx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->betx(), target);
  }

  // required uint32 min_coin = 4;
  if (has_min_coin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->min_coin(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.RoomListInfo)
  return target;
}

int RoomListInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:msg_maj.RoomListInfo)
  int total_size = 0;

  if (has_lvlel()) {
    // required uint32 lvlel = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->lvlel());
  }

  if (has_name()) {
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_betx()) {
    // required uint32 betx = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->betx());
  }

  if (has_min_coin()) {
    // required uint32 min_coin = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->min_coin());
  }

  return total_size;
}
int RoomListInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.RoomListInfo)
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required uint32 lvlel = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->lvlel());

    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required uint32 betx = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->betx());

    // required uint32 min_coin = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->min_coin());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoomListInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.RoomListInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RoomListInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RoomListInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.RoomListInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.RoomListInfo)
    MergeFrom(*source);
  }
}

void RoomListInfo::MergeFrom(const RoomListInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.RoomListInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_lvlel()) {
      set_lvlel(from.lvlel());
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_betx()) {
      set_betx(from.betx());
    }
    if (from.has_min_coin()) {
      set_min_coin(from.min_coin());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void RoomListInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.RoomListInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoomListInfo::CopyFrom(const RoomListInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.RoomListInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoomListInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void RoomListInfo::Swap(RoomListInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoomListInfo::InternalSwap(RoomListInfo* other) {
  std::swap(lvlel_, other->lvlel_);
  name_.Swap(&other->name_);
  std::swap(betx_, other->betx_);
  std::swap(min_coin_, other->min_coin_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoomListInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RoomListInfo_descriptor_;
  metadata.reflection = RoomListInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoomListInfo

// required uint32 lvlel = 1;
bool RoomListInfo::has_lvlel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RoomListInfo::set_has_lvlel() {
  _has_bits_[0] |= 0x00000001u;
}
void RoomListInfo::clear_has_lvlel() {
  _has_bits_[0] &= ~0x00000001u;
}
void RoomListInfo::clear_lvlel() {
  lvlel_ = 0u;
  clear_has_lvlel();
}
 ::google::protobuf::uint32 RoomListInfo::lvlel() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoomListInfo.lvlel)
  return lvlel_;
}
 void RoomListInfo::set_lvlel(::google::protobuf::uint32 value) {
  set_has_lvlel();
  lvlel_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RoomListInfo.lvlel)
}

// required string name = 2;
bool RoomListInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RoomListInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
void RoomListInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void RoomListInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& RoomListInfo::name() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoomListInfo.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RoomListInfo::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.RoomListInfo.name)
}
 void RoomListInfo::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.RoomListInfo.name)
}
 void RoomListInfo::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.RoomListInfo.name)
}
 ::std::string* RoomListInfo::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:msg_maj.RoomListInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* RoomListInfo::release_name() {
  // @@protoc_insertion_point(field_release:msg_maj.RoomListInfo.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RoomListInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.RoomListInfo.name)
}

// required uint32 betx = 3;
bool RoomListInfo::has_betx() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void RoomListInfo::set_has_betx() {
  _has_bits_[0] |= 0x00000004u;
}
void RoomListInfo::clear_has_betx() {
  _has_bits_[0] &= ~0x00000004u;
}
void RoomListInfo::clear_betx() {
  betx_ = 0u;
  clear_has_betx();
}
 ::google::protobuf::uint32 RoomListInfo::betx() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoomListInfo.betx)
  return betx_;
}
 void RoomListInfo::set_betx(::google::protobuf::uint32 value) {
  set_has_betx();
  betx_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RoomListInfo.betx)
}

// required uint32 min_coin = 4;
bool RoomListInfo::has_min_coin() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void RoomListInfo::set_has_min_coin() {
  _has_bits_[0] |= 0x00000008u;
}
void RoomListInfo::clear_has_min_coin() {
  _has_bits_[0] &= ~0x00000008u;
}
void RoomListInfo::clear_min_coin() {
  min_coin_ = 0u;
  clear_has_min_coin();
}
 ::google::protobuf::uint32 RoomListInfo::min_coin() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoomListInfo.min_coin)
  return min_coin_;
}
 void RoomListInfo::set_min_coin(::google::protobuf::uint32 value) {
  set_has_min_coin();
  min_coin_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RoomListInfo.min_coin)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleInfo::kUidFieldNumber;
const int RoleInfo::kNicknameFieldNumber;
const int RoleInfo::kLogoIconFieldNumber;
const int RoleInfo::kSexualFieldNumber;
const int RoleInfo::kSeatIdFieldNumber;
const int RoleInfo::kStatusFieldNumber;
const int RoleInfo::kScoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleInfo::RoleInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.RoleInfo)
}

void RoleInfo::InitAsDefaultInstance() {
}

RoleInfo::RoleInfo(const RoleInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.RoleInfo)
}

void RoleInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  uid_ = GOOGLE_ULONGLONG(0);
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logo_icon_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sexual_ = 0;
  seat_id_ = 0;
  status_ = 0;
  score_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RoleInfo::~RoleInfo() {
  // @@protoc_insertion_point(destructor:msg_maj.RoleInfo)
  SharedDtor();
}

void RoleInfo::SharedDtor() {
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logo_icon_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void RoleInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoleInfo_descriptor_;
}

const RoleInfo& RoleInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5froom_2eproto();
  return *default_instance_;
}

RoleInfo* RoleInfo::default_instance_ = NULL;

RoleInfo* RoleInfo::New(::google::protobuf::Arena* arena) const {
  RoleInfo* n = new RoleInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.RoleInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(RoleInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<RoleInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 127u) {
    ZR_(sexual_, score_);
    uid_ = GOOGLE_ULONGLONG(0);
    if (has_nickname()) {
      nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_logo_icon()) {
      logo_icon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RoleInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.RoleInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 uid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_nickname;
        break;
      }

      // required string nickname = 2;
      case 2: {
        if (tag == 18) {
         parse_nickname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nickname().data(), this->nickname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "msg_maj.RoleInfo.nickname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_logo_icon;
        break;
      }

      // required string logo_icon = 3;
      case 3: {
        if (tag == 26) {
         parse_logo_icon:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_logo_icon()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->logo_icon().data(), this->logo_icon().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "msg_maj.RoleInfo.logo_icon");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_sexual;
        break;
      }

      // required int32 sexual = 4;
      case 4: {
        if (tag == 32) {
         parse_sexual:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sexual_)));
          set_has_sexual();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_seat_id;
        break;
      }

      // required int32 seat_id = 5;
      case 5: {
        if (tag == 40) {
         parse_seat_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &seat_id_)));
          set_has_seat_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_status;
        break;
      }

      // required int32 status = 6;
      case 6: {
        if (tag == 48) {
         parse_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_score;
        break;
      }

      // required int32 score = 7;
      case 7: {
        if (tag == 56) {
         parse_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &score_)));
          set_has_score();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.RoleInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.RoleInfo)
  return false;
#undef DO_
}

void RoleInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.RoleInfo)
  // required uint64 uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->uid(), output);
  }

  // required string nickname = 2;
  if (has_nickname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg_maj.RoleInfo.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->nickname(), output);
  }

  // required string logo_icon = 3;
  if (has_logo_icon()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->logo_icon().data(), this->logo_icon().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg_maj.RoleInfo.logo_icon");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->logo_icon(), output);
  }

  // required int32 sexual = 4;
  if (has_sexual()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->sexual(), output);
  }

  // required int32 seat_id = 5;
  if (has_seat_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->seat_id(), output);
  }

  // required int32 status = 6;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->status(), output);
  }

  // required int32 score = 7;
  if (has_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->score(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.RoleInfo)
}

::google::protobuf::uint8* RoleInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.RoleInfo)
  // required uint64 uid = 1;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->uid(), target);
  }

  // required string nickname = 2;
  if (has_nickname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg_maj.RoleInfo.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->nickname(), target);
  }

  // required string logo_icon = 3;
  if (has_logo_icon()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->logo_icon().data(), this->logo_icon().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg_maj.RoleInfo.logo_icon");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->logo_icon(), target);
  }

  // required int32 sexual = 4;
  if (has_sexual()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->sexual(), target);
  }

  // required int32 seat_id = 5;
  if (has_seat_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->seat_id(), target);
  }

  // required int32 status = 6;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->status(), target);
  }

  // required int32 score = 7;
  if (has_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->score(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.RoleInfo)
  return target;
}

int RoleInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:msg_maj.RoleInfo)
  int total_size = 0;

  if (has_uid()) {
    // required uint64 uid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uid());
  }

  if (has_nickname()) {
    // required string nickname = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nickname());
  }

  if (has_logo_icon()) {
    // required string logo_icon = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->logo_icon());
  }

  if (has_sexual()) {
    // required int32 sexual = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sexual());
  }

  if (has_seat_id()) {
    // required int32 seat_id = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->seat_id());
  }

  if (has_status()) {
    // required int32 status = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  if (has_score()) {
    // required int32 score = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->score());
  }

  return total_size;
}
int RoleInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.RoleInfo)
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000007f) ^ 0x0000007f) == 0) {  // All required fields are present.
    // required uint64 uid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uid());

    // required string nickname = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nickname());

    // required string logo_icon = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->logo_icon());

    // required int32 sexual = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sexual());

    // required int32 seat_id = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->seat_id());

    // required int32 status = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());

    // required int32 score = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->score());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.RoleInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RoleInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.RoleInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.RoleInfo)
    MergeFrom(*source);
  }
}

void RoleInfo::MergeFrom(const RoleInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.RoleInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_nickname()) {
      set_has_nickname();
      nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
    }
    if (from.has_logo_icon()) {
      set_has_logo_icon();
      logo_icon_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logo_icon_);
    }
    if (from.has_sexual()) {
      set_sexual(from.sexual());
    }
    if (from.has_seat_id()) {
      set_seat_id(from.seat_id());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_score()) {
      set_score(from.score());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void RoleInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.RoleInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleInfo::CopyFrom(const RoleInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.RoleInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000007f) != 0x0000007f) return false;

  return true;
}

void RoleInfo::Swap(RoleInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleInfo::InternalSwap(RoleInfo* other) {
  std::swap(uid_, other->uid_);
  nickname_.Swap(&other->nickname_);
  logo_icon_.Swap(&other->logo_icon_);
  std::swap(sexual_, other->sexual_);
  std::swap(seat_id_, other->seat_id_);
  std::swap(status_, other->status_);
  std::swap(score_, other->score_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RoleInfo_descriptor_;
  metadata.reflection = RoleInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoleInfo

// required uint64 uid = 1;
bool RoleInfo::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RoleInfo::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
void RoleInfo::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
void RoleInfo::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
 ::google::protobuf::uint64 RoleInfo::uid() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleInfo.uid)
  return uid_;
}
 void RoleInfo::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RoleInfo.uid)
}

// required string nickname = 2;
bool RoleInfo::has_nickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RoleInfo::set_has_nickname() {
  _has_bits_[0] |= 0x00000002u;
}
void RoleInfo::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000002u;
}
void RoleInfo::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
 const ::std::string& RoleInfo::nickname() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleInfo.nickname)
  return nickname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RoleInfo::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.RoleInfo.nickname)
}
 void RoleInfo::set_nickname(const char* value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.RoleInfo.nickname)
}
 void RoleInfo::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.RoleInfo.nickname)
}
 ::std::string* RoleInfo::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:msg_maj.RoleInfo.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* RoleInfo::release_nickname() {
  // @@protoc_insertion_point(field_release:msg_maj.RoleInfo.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RoleInfo::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.RoleInfo.nickname)
}

// required string logo_icon = 3;
bool RoleInfo::has_logo_icon() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void RoleInfo::set_has_logo_icon() {
  _has_bits_[0] |= 0x00000004u;
}
void RoleInfo::clear_has_logo_icon() {
  _has_bits_[0] &= ~0x00000004u;
}
void RoleInfo::clear_logo_icon() {
  logo_icon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_logo_icon();
}
 const ::std::string& RoleInfo::logo_icon() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleInfo.logo_icon)
  return logo_icon_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RoleInfo::set_logo_icon(const ::std::string& value) {
  set_has_logo_icon();
  logo_icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.RoleInfo.logo_icon)
}
 void RoleInfo::set_logo_icon(const char* value) {
  set_has_logo_icon();
  logo_icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.RoleInfo.logo_icon)
}
 void RoleInfo::set_logo_icon(const char* value, size_t size) {
  set_has_logo_icon();
  logo_icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.RoleInfo.logo_icon)
}
 ::std::string* RoleInfo::mutable_logo_icon() {
  set_has_logo_icon();
  // @@protoc_insertion_point(field_mutable:msg_maj.RoleInfo.logo_icon)
  return logo_icon_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* RoleInfo::release_logo_icon() {
  // @@protoc_insertion_point(field_release:msg_maj.RoleInfo.logo_icon)
  clear_has_logo_icon();
  return logo_icon_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RoleInfo::set_allocated_logo_icon(::std::string* logo_icon) {
  if (logo_icon != NULL) {
    set_has_logo_icon();
  } else {
    clear_has_logo_icon();
  }
  logo_icon_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), logo_icon);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.RoleInfo.logo_icon)
}

// required int32 sexual = 4;
bool RoleInfo::has_sexual() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void RoleInfo::set_has_sexual() {
  _has_bits_[0] |= 0x00000008u;
}
void RoleInfo::clear_has_sexual() {
  _has_bits_[0] &= ~0x00000008u;
}
void RoleInfo::clear_sexual() {
  sexual_ = 0;
  clear_has_sexual();
}
 ::google::protobuf::int32 RoleInfo::sexual() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleInfo.sexual)
  return sexual_;
}
 void RoleInfo::set_sexual(::google::protobuf::int32 value) {
  set_has_sexual();
  sexual_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RoleInfo.sexual)
}

// required int32 seat_id = 5;
bool RoleInfo::has_seat_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void RoleInfo::set_has_seat_id() {
  _has_bits_[0] |= 0x00000010u;
}
void RoleInfo::clear_has_seat_id() {
  _has_bits_[0] &= ~0x00000010u;
}
void RoleInfo::clear_seat_id() {
  seat_id_ = 0;
  clear_has_seat_id();
}
 ::google::protobuf::int32 RoleInfo::seat_id() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleInfo.seat_id)
  return seat_id_;
}
 void RoleInfo::set_seat_id(::google::protobuf::int32 value) {
  set_has_seat_id();
  seat_id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RoleInfo.seat_id)
}

// required int32 status = 6;
bool RoleInfo::has_status() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void RoleInfo::set_has_status() {
  _has_bits_[0] |= 0x00000020u;
}
void RoleInfo::clear_has_status() {
  _has_bits_[0] &= ~0x00000020u;
}
void RoleInfo::clear_status() {
  status_ = 0;
  clear_has_status();
}
 ::google::protobuf::int32 RoleInfo::status() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleInfo.status)
  return status_;
}
 void RoleInfo::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RoleInfo.status)
}

// required int32 score = 7;
bool RoleInfo::has_score() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void RoleInfo::set_has_score() {
  _has_bits_[0] |= 0x00000040u;
}
void RoleInfo::clear_has_score() {
  _has_bits_[0] &= ~0x00000040u;
}
void RoleInfo::clear_score() {
  score_ = 0;
  clear_has_score();
}
 ::google::protobuf::int32 RoleInfo::score() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleInfo.score)
  return score_;
}
 void RoleInfo::set_score(::google::protobuf::int32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RoleInfo.score)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AgreeDismissReq::kSeatFieldNumber;
const int AgreeDismissReq::kIsAgreeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AgreeDismissReq::AgreeDismissReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.AgreeDismissReq)
}

void AgreeDismissReq::InitAsDefaultInstance() {
}

AgreeDismissReq::AgreeDismissReq(const AgreeDismissReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.AgreeDismissReq)
}

void AgreeDismissReq::SharedCtor() {
  _cached_size_ = 0;
  seat_ = 0u;
  isagree_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AgreeDismissReq::~AgreeDismissReq() {
  // @@protoc_insertion_point(destructor:msg_maj.AgreeDismissReq)
  SharedDtor();
}

void AgreeDismissReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AgreeDismissReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AgreeDismissReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AgreeDismissReq_descriptor_;
}

const AgreeDismissReq& AgreeDismissReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5froom_2eproto();
  return *default_instance_;
}

AgreeDismissReq* AgreeDismissReq::default_instance_ = NULL;

AgreeDismissReq* AgreeDismissReq::New(::google::protobuf::Arena* arena) const {
  AgreeDismissReq* n = new AgreeDismissReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AgreeDismissReq::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.AgreeDismissReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(AgreeDismissReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<AgreeDismissReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(seat_, isagree_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool AgreeDismissReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.AgreeDismissReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 seat = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seat_)));
          set_has_seat();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_isAgree;
        break;
      }

      // required bool isAgree = 2;
      case 2: {
        if (tag == 16) {
         parse_isAgree:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isagree_)));
          set_has_isagree();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.AgreeDismissReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.AgreeDismissReq)
  return false;
#undef DO_
}

void AgreeDismissReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.AgreeDismissReq)
  // required uint32 seat = 1;
  if (has_seat()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->seat(), output);
  }

  // required bool isAgree = 2;
  if (has_isagree()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->isagree(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.AgreeDismissReq)
}

::google::protobuf::uint8* AgreeDismissReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.AgreeDismissReq)
  // required uint32 seat = 1;
  if (has_seat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->seat(), target);
  }

  // required bool isAgree = 2;
  if (has_isagree()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->isagree(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.AgreeDismissReq)
  return target;
}

int AgreeDismissReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:msg_maj.AgreeDismissReq)
  int total_size = 0;

  if (has_seat()) {
    // required uint32 seat = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->seat());
  }

  if (has_isagree()) {
    // required bool isAgree = 2;
    total_size += 1 + 1;
  }

  return total_size;
}
int AgreeDismissReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.AgreeDismissReq)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint32 seat = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->seat());

    // required bool isAgree = 2;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AgreeDismissReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.AgreeDismissReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AgreeDismissReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AgreeDismissReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.AgreeDismissReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.AgreeDismissReq)
    MergeFrom(*source);
  }
}

void AgreeDismissReq::MergeFrom(const AgreeDismissReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.AgreeDismissReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_seat()) {
      set_seat(from.seat());
    }
    if (from.has_isagree()) {
      set_isagree(from.isagree());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void AgreeDismissReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.AgreeDismissReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AgreeDismissReq::CopyFrom(const AgreeDismissReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.AgreeDismissReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgreeDismissReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void AgreeDismissReq::Swap(AgreeDismissReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AgreeDismissReq::InternalSwap(AgreeDismissReq* other) {
  std::swap(seat_, other->seat_);
  std::swap(isagree_, other->isagree_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AgreeDismissReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AgreeDismissReq_descriptor_;
  metadata.reflection = AgreeDismissReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AgreeDismissReq

// required uint32 seat = 1;
bool AgreeDismissReq::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AgreeDismissReq::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
void AgreeDismissReq::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
void AgreeDismissReq::clear_seat() {
  seat_ = 0u;
  clear_has_seat();
}
 ::google::protobuf::uint32 AgreeDismissReq::seat() const {
  // @@protoc_insertion_point(field_get:msg_maj.AgreeDismissReq.seat)
  return seat_;
}
 void AgreeDismissReq::set_seat(::google::protobuf::uint32 value) {
  set_has_seat();
  seat_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.AgreeDismissReq.seat)
}

// required bool isAgree = 2;
bool AgreeDismissReq::has_isagree() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AgreeDismissReq::set_has_isagree() {
  _has_bits_[0] |= 0x00000002u;
}
void AgreeDismissReq::clear_has_isagree() {
  _has_bits_[0] &= ~0x00000002u;
}
void AgreeDismissReq::clear_isagree() {
  isagree_ = false;
  clear_has_isagree();
}
 bool AgreeDismissReq::isagree() const {
  // @@protoc_insertion_point(field_get:msg_maj.AgreeDismissReq.isAgree)
  return isagree_;
}
 void AgreeDismissReq::set_isagree(bool value) {
  set_has_isagree();
  isagree_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.AgreeDismissReq.isAgree)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DismissStatus::kSeatFieldNumber;
const int DismissStatus::kIsagreeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DismissStatus::DismissStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.DismissStatus)
}

void DismissStatus::InitAsDefaultInstance() {
}

DismissStatus::DismissStatus(const DismissStatus& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.DismissStatus)
}

void DismissStatus::SharedCtor() {
  _cached_size_ = 0;
  seat_ = 0u;
  isagree_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DismissStatus::~DismissStatus() {
  // @@protoc_insertion_point(destructor:msg_maj.DismissStatus)
  SharedDtor();
}

void DismissStatus::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DismissStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DismissStatus::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DismissStatus_descriptor_;
}

const DismissStatus& DismissStatus::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5froom_2eproto();
  return *default_instance_;
}

DismissStatus* DismissStatus::default_instance_ = NULL;

DismissStatus* DismissStatus::New(::google::protobuf::Arena* arena) const {
  DismissStatus* n = new DismissStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DismissStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.DismissStatus)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(DismissStatus, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<DismissStatus*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(seat_, isagree_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DismissStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.DismissStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 seat = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seat_)));
          set_has_seat();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_isagree;
        break;
      }

      // optional bool isagree = 2;
      case 2: {
        if (tag == 16) {
         parse_isagree:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isagree_)));
          set_has_isagree();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.DismissStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.DismissStatus)
  return false;
#undef DO_
}

void DismissStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.DismissStatus)
  // optional uint32 seat = 1;
  if (has_seat()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->seat(), output);
  }

  // optional bool isagree = 2;
  if (has_isagree()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->isagree(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.DismissStatus)
}

::google::protobuf::uint8* DismissStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.DismissStatus)
  // optional uint32 seat = 1;
  if (has_seat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->seat(), target);
  }

  // optional bool isagree = 2;
  if (has_isagree()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->isagree(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.DismissStatus)
  return target;
}

int DismissStatus::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.DismissStatus)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 seat = 1;
    if (has_seat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->seat());
    }

    // optional bool isagree = 2;
    if (has_isagree()) {
      total_size += 1 + 1;
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DismissStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.DismissStatus)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DismissStatus* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DismissStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.DismissStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.DismissStatus)
    MergeFrom(*source);
  }
}

void DismissStatus::MergeFrom(const DismissStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.DismissStatus)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_seat()) {
      set_seat(from.seat());
    }
    if (from.has_isagree()) {
      set_isagree(from.isagree());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void DismissStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.DismissStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DismissStatus::CopyFrom(const DismissStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.DismissStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DismissStatus::IsInitialized() const {

  return true;
}

void DismissStatus::Swap(DismissStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DismissStatus::InternalSwap(DismissStatus* other) {
  std::swap(seat_, other->seat_);
  std::swap(isagree_, other->isagree_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DismissStatus::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DismissStatus_descriptor_;
  metadata.reflection = DismissStatus_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DismissStatus

// optional uint32 seat = 1;
bool DismissStatus::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DismissStatus::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
void DismissStatus::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
void DismissStatus::clear_seat() {
  seat_ = 0u;
  clear_has_seat();
}
 ::google::protobuf::uint32 DismissStatus::seat() const {
  // @@protoc_insertion_point(field_get:msg_maj.DismissStatus.seat)
  return seat_;
}
 void DismissStatus::set_seat(::google::protobuf::uint32 value) {
  set_has_seat();
  seat_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.DismissStatus.seat)
}

// optional bool isagree = 2;
bool DismissStatus::has_isagree() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DismissStatus::set_has_isagree() {
  _has_bits_[0] |= 0x00000002u;
}
void DismissStatus::clear_has_isagree() {
  _has_bits_[0] &= ~0x00000002u;
}
void DismissStatus::clear_isagree() {
  isagree_ = false;
  clear_has_isagree();
}
 bool DismissStatus::isagree() const {
  // @@protoc_insertion_point(field_get:msg_maj.DismissStatus.isagree)
  return isagree_;
}
 void DismissStatus::set_isagree(bool value) {
  set_has_isagree();
  isagree_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.DismissStatus.isagree)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AgreeDismissResp::kSeatFieldNumber;
const int AgreeDismissResp::kIsAgreeFieldNumber;
const int AgreeDismissResp::kDismissListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AgreeDismissResp::AgreeDismissResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.AgreeDismissResp)
}

void AgreeDismissResp::InitAsDefaultInstance() {
}

AgreeDismissResp::AgreeDismissResp(const AgreeDismissResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.AgreeDismissResp)
}

void AgreeDismissResp::SharedCtor() {
  _cached_size_ = 0;
  seat_ = 0u;
  isagree_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AgreeDismissResp::~AgreeDismissResp() {
  // @@protoc_insertion_point(destructor:msg_maj.AgreeDismissResp)
  SharedDtor();
}

void AgreeDismissResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AgreeDismissResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AgreeDismissResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AgreeDismissResp_descriptor_;
}

const AgreeDismissResp& AgreeDismissResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5froom_2eproto();
  return *default_instance_;
}

AgreeDismissResp* AgreeDismissResp::default_instance_ = NULL;

AgreeDismissResp* AgreeDismissResp::New(::google::protobuf::Arena* arena) const {
  AgreeDismissResp* n = new AgreeDismissResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AgreeDismissResp::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.AgreeDismissResp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(AgreeDismissResp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<AgreeDismissResp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(seat_, isagree_);

#undef ZR_HELPER_
#undef ZR_

  dismiss_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool AgreeDismissResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.AgreeDismissResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 seat = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seat_)));
          set_has_seat();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_isAgree;
        break;
      }

      // required bool isAgree = 2;
      case 2: {
        if (tag == 16) {
         parse_isAgree:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isagree_)));
          set_has_isagree();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_dismiss_list;
        break;
      }

      // repeated .msg_maj.DismissStatus dismiss_list = 3;
      case 3: {
        if (tag == 26) {
         parse_dismiss_list:
          DO_(input->IncrementRecursionDepth());
         parse_loop_dismiss_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_dismiss_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_dismiss_list;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.AgreeDismissResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.AgreeDismissResp)
  return false;
#undef DO_
}

void AgreeDismissResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.AgreeDismissResp)
  // required uint32 seat = 1;
  if (has_seat()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->seat(), output);
  }

  // required bool isAgree = 2;
  if (has_isagree()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->isagree(), output);
  }

  // repeated .msg_maj.DismissStatus dismiss_list = 3;
  for (unsigned int i = 0, n = this->dismiss_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->dismiss_list(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.AgreeDismissResp)
}

::google::protobuf::uint8* AgreeDismissResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.AgreeDismissResp)
  // required uint32 seat = 1;
  if (has_seat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->seat(), target);
  }

  // required bool isAgree = 2;
  if (has_isagree()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->isagree(), target);
  }

  // repeated .msg_maj.DismissStatus dismiss_list = 3;
  for (unsigned int i = 0, n = this->dismiss_list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->dismiss_list(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.AgreeDismissResp)
  return target;
}

int AgreeDismissResp::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:msg_maj.AgreeDismissResp)
  int total_size = 0;

  if (has_seat()) {
    // required uint32 seat = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->seat());
  }

  if (has_isagree()) {
    // required bool isAgree = 2;
    total_size += 1 + 1;
  }

  return total_size;
}
int AgreeDismissResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.AgreeDismissResp)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint32 seat = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->seat());

    // required bool isAgree = 2;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .msg_maj.DismissStatus dismiss_list = 3;
  total_size += 1 * this->dismiss_list_size();
  for (int i = 0; i < this->dismiss_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->dismiss_list(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AgreeDismissResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.AgreeDismissResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AgreeDismissResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AgreeDismissResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.AgreeDismissResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.AgreeDismissResp)
    MergeFrom(*source);
  }
}

void AgreeDismissResp::MergeFrom(const AgreeDismissResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.AgreeDismissResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  dismiss_list_.MergeFrom(from.dismiss_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_seat()) {
      set_seat(from.seat());
    }
    if (from.has_isagree()) {
      set_isagree(from.isagree());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void AgreeDismissResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.AgreeDismissResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AgreeDismissResp::CopyFrom(const AgreeDismissResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.AgreeDismissResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgreeDismissResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void AgreeDismissResp::Swap(AgreeDismissResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AgreeDismissResp::InternalSwap(AgreeDismissResp* other) {
  std::swap(seat_, other->seat_);
  std::swap(isagree_, other->isagree_);
  dismiss_list_.UnsafeArenaSwap(&other->dismiss_list_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AgreeDismissResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AgreeDismissResp_descriptor_;
  metadata.reflection = AgreeDismissResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AgreeDismissResp

// required uint32 seat = 1;
bool AgreeDismissResp::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AgreeDismissResp::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
void AgreeDismissResp::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
void AgreeDismissResp::clear_seat() {
  seat_ = 0u;
  clear_has_seat();
}
 ::google::protobuf::uint32 AgreeDismissResp::seat() const {
  // @@protoc_insertion_point(field_get:msg_maj.AgreeDismissResp.seat)
  return seat_;
}
 void AgreeDismissResp::set_seat(::google::protobuf::uint32 value) {
  set_has_seat();
  seat_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.AgreeDismissResp.seat)
}

// required bool isAgree = 2;
bool AgreeDismissResp::has_isagree() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AgreeDismissResp::set_has_isagree() {
  _has_bits_[0] |= 0x00000002u;
}
void AgreeDismissResp::clear_has_isagree() {
  _has_bits_[0] &= ~0x00000002u;
}
void AgreeDismissResp::clear_isagree() {
  isagree_ = false;
  clear_has_isagree();
}
 bool AgreeDismissResp::isagree() const {
  // @@protoc_insertion_point(field_get:msg_maj.AgreeDismissResp.isAgree)
  return isagree_;
}
 void AgreeDismissResp::set_isagree(bool value) {
  set_has_isagree();
  isagree_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.AgreeDismissResp.isAgree)
}

// repeated .msg_maj.DismissStatus dismiss_list = 3;
int AgreeDismissResp::dismiss_list_size() const {
  return dismiss_list_.size();
}
void AgreeDismissResp::clear_dismiss_list() {
  dismiss_list_.Clear();
}
const ::msg_maj::DismissStatus& AgreeDismissResp::dismiss_list(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.AgreeDismissResp.dismiss_list)
  return dismiss_list_.Get(index);
}
::msg_maj::DismissStatus* AgreeDismissResp::mutable_dismiss_list(int index) {
  // @@protoc_insertion_point(field_mutable:msg_maj.AgreeDismissResp.dismiss_list)
  return dismiss_list_.Mutable(index);
}
::msg_maj::DismissStatus* AgreeDismissResp::add_dismiss_list() {
  // @@protoc_insertion_point(field_add:msg_maj.AgreeDismissResp.dismiss_list)
  return dismiss_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::msg_maj::DismissStatus >*
AgreeDismissResp::mutable_dismiss_list() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.AgreeDismissResp.dismiss_list)
  return &dismiss_list_;
}
const ::google::protobuf::RepeatedPtrField< ::msg_maj::DismissStatus >&
AgreeDismissResp::dismiss_list() const {
  // @@protoc_insertion_point(field_list:msg_maj.AgreeDismissResp.dismiss_list)
  return dismiss_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KickRoleReq::kVictimSeatFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KickRoleReq::KickRoleReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.KickRoleReq)
}

void KickRoleReq::InitAsDefaultInstance() {
}

KickRoleReq::KickRoleReq(const KickRoleReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.KickRoleReq)
}

void KickRoleReq::SharedCtor() {
  _cached_size_ = 0;
  victim_seat_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

KickRoleReq::~KickRoleReq() {
  // @@protoc_insertion_point(destructor:msg_maj.KickRoleReq)
  SharedDtor();
}

void KickRoleReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void KickRoleReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KickRoleReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return KickRoleReq_descriptor_;
}

const KickRoleReq& KickRoleReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5froom_2eproto();
  return *default_instance_;
}

KickRoleReq* KickRoleReq::default_instance_ = NULL;

KickRoleReq* KickRoleReq::New(::google::protobuf::Arena* arena) const {
  KickRoleReq* n = new KickRoleReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void KickRoleReq::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.KickRoleReq)
  victim_seat_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool KickRoleReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.KickRoleReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 victim_seat = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &victim_seat_)));
          set_has_victim_seat();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.KickRoleReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.KickRoleReq)
  return false;
#undef DO_
}

void KickRoleReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.KickRoleReq)
  // required uint32 victim_seat = 1;
  if (has_victim_seat()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->victim_seat(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.KickRoleReq)
}

::google::protobuf::uint8* KickRoleReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.KickRoleReq)
  // required uint32 victim_seat = 1;
  if (has_victim_seat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->victim_seat(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.KickRoleReq)
  return target;
}

int KickRoleReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.KickRoleReq)
  int total_size = 0;

  // required uint32 victim_seat = 1;
  if (has_victim_seat()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->victim_seat());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void KickRoleReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.KickRoleReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const KickRoleReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const KickRoleReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.KickRoleReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.KickRoleReq)
    MergeFrom(*source);
  }
}

void KickRoleReq::MergeFrom(const KickRoleReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.KickRoleReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_victim_seat()) {
      set_victim_seat(from.victim_seat());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void KickRoleReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.KickRoleReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KickRoleReq::CopyFrom(const KickRoleReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.KickRoleReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KickRoleReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void KickRoleReq::Swap(KickRoleReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KickRoleReq::InternalSwap(KickRoleReq* other) {
  std::swap(victim_seat_, other->victim_seat_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata KickRoleReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = KickRoleReq_descriptor_;
  metadata.reflection = KickRoleReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// KickRoleReq

// required uint32 victim_seat = 1;
bool KickRoleReq::has_victim_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void KickRoleReq::set_has_victim_seat() {
  _has_bits_[0] |= 0x00000001u;
}
void KickRoleReq::clear_has_victim_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
void KickRoleReq::clear_victim_seat() {
  victim_seat_ = 0u;
  clear_has_victim_seat();
}
 ::google::protobuf::uint32 KickRoleReq::victim_seat() const {
  // @@protoc_insertion_point(field_get:msg_maj.KickRoleReq.victim_seat)
  return victim_seat_;
}
 void KickRoleReq::set_victim_seat(::google::protobuf::uint32 value) {
  set_has_victim_seat();
  victim_seat_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.KickRoleReq.victim_seat)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KickRoleNotify::kSeatFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KickRoleNotify::KickRoleNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.KickRoleNotify)
}

void KickRoleNotify::InitAsDefaultInstance() {
}

KickRoleNotify::KickRoleNotify(const KickRoleNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.KickRoleNotify)
}

void KickRoleNotify::SharedCtor() {
  _cached_size_ = 0;
  seat_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

KickRoleNotify::~KickRoleNotify() {
  // @@protoc_insertion_point(destructor:msg_maj.KickRoleNotify)
  SharedDtor();
}

void KickRoleNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void KickRoleNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KickRoleNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return KickRoleNotify_descriptor_;
}

const KickRoleNotify& KickRoleNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5froom_2eproto();
  return *default_instance_;
}

KickRoleNotify* KickRoleNotify::default_instance_ = NULL;

KickRoleNotify* KickRoleNotify::New(::google::protobuf::Arena* arena) const {
  KickRoleNotify* n = new KickRoleNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void KickRoleNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.KickRoleNotify)
  seat_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool KickRoleNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.KickRoleNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 seat = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seat_)));
          set_has_seat();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.KickRoleNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.KickRoleNotify)
  return false;
#undef DO_
}

void KickRoleNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.KickRoleNotify)
  // required uint32 seat = 1;
  if (has_seat()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->seat(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.KickRoleNotify)
}

::google::protobuf::uint8* KickRoleNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.KickRoleNotify)
  // required uint32 seat = 1;
  if (has_seat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->seat(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.KickRoleNotify)
  return target;
}

int KickRoleNotify::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.KickRoleNotify)
  int total_size = 0;

  // required uint32 seat = 1;
  if (has_seat()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->seat());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void KickRoleNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.KickRoleNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const KickRoleNotify* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const KickRoleNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.KickRoleNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.KickRoleNotify)
    MergeFrom(*source);
  }
}

void KickRoleNotify::MergeFrom(const KickRoleNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.KickRoleNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_seat()) {
      set_seat(from.seat());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void KickRoleNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.KickRoleNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KickRoleNotify::CopyFrom(const KickRoleNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.KickRoleNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KickRoleNotify::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void KickRoleNotify::Swap(KickRoleNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KickRoleNotify::InternalSwap(KickRoleNotify* other) {
  std::swap(seat_, other->seat_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata KickRoleNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = KickRoleNotify_descriptor_;
  metadata.reflection = KickRoleNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// KickRoleNotify

// required uint32 seat = 1;
bool KickRoleNotify::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void KickRoleNotify::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
void KickRoleNotify::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
void KickRoleNotify::clear_seat() {
  seat_ = 0u;
  clear_has_seat();
}
 ::google::protobuf::uint32 KickRoleNotify::seat() const {
  // @@protoc_insertion_point(field_get:msg_maj.KickRoleNotify.seat)
  return seat_;
}
 void KickRoleNotify::set_seat(::google::protobuf::uint32 value) {
  set_has_seat();
  seat_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.KickRoleNotify.seat)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YLOption::kUseTypeFieldNumber;
const int YLOption::kWanFaTypeFieldNumber;
const int YLOption::kMaiMaTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YLOption::YLOption()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.YLOption)
}

void YLOption::InitAsDefaultInstance() {
}

YLOption::YLOption(const YLOption& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.YLOption)
}

void YLOption::SharedCtor() {
  _cached_size_ = 0;
  usetype_ = 0;
  wanfatype_ = 0;
  maimatype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

YLOption::~YLOption() {
  // @@protoc_insertion_point(destructor:msg_maj.YLOption)
  SharedDtor();
}

void YLOption::SharedDtor() {
  if (this != default_instance_) {
  }
}

void YLOption::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YLOption::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return YLOption_descriptor_;
}

const YLOption& YLOption::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5froom_2eproto();
  return *default_instance_;
}

YLOption* YLOption::default_instance_ = NULL;

YLOption* YLOption::New(::google::protobuf::Arena* arena) const {
  YLOption* n = new YLOption;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YLOption::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.YLOption)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(YLOption, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<YLOption*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(usetype_, maimatype_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool YLOption::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.YLOption)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 useType = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &usetype_)));
          set_has_usetype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_wanFaType;
        break;
      }

      // optional int32 wanFaType = 2;
      case 2: {
        if (tag == 16) {
         parse_wanFaType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wanfatype_)));
          set_has_wanfatype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_maiMaType;
        break;
      }

      // optional int32 maiMaType = 3;
      case 3: {
        if (tag == 24) {
         parse_maiMaType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maimatype_)));
          set_has_maimatype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.YLOption)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.YLOption)
  return false;
#undef DO_
}

void YLOption::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.YLOption)
  // optional int32 useType = 1;
  if (has_usetype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->usetype(), output);
  }

  // optional int32 wanFaType = 2;
  if (has_wanfatype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->wanfatype(), output);
  }

  // optional int32 maiMaType = 3;
  if (has_maimatype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->maimatype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.YLOption)
}

::google::protobuf::uint8* YLOption::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.YLOption)
  // optional int32 useType = 1;
  if (has_usetype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->usetype(), target);
  }

  // optional int32 wanFaType = 2;
  if (has_wanfatype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->wanfatype(), target);
  }

  // optional int32 maiMaType = 3;
  if (has_maimatype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->maimatype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.YLOption)
  return target;
}

int YLOption::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.YLOption)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 useType = 1;
    if (has_usetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->usetype());
    }

    // optional int32 wanFaType = 2;
    if (has_wanfatype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->wanfatype());
    }

    // optional int32 maiMaType = 3;
    if (has_maimatype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->maimatype());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YLOption::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.YLOption)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const YLOption* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const YLOption>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.YLOption)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.YLOption)
    MergeFrom(*source);
  }
}

void YLOption::MergeFrom(const YLOption& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.YLOption)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_usetype()) {
      set_usetype(from.usetype());
    }
    if (from.has_wanfatype()) {
      set_wanfatype(from.wanfatype());
    }
    if (from.has_maimatype()) {
      set_maimatype(from.maimatype());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void YLOption::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.YLOption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YLOption::CopyFrom(const YLOption& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.YLOption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YLOption::IsInitialized() const {

  return true;
}

void YLOption::Swap(YLOption* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YLOption::InternalSwap(YLOption* other) {
  std::swap(usetype_, other->usetype_);
  std::swap(wanfatype_, other->wanfatype_);
  std::swap(maimatype_, other->maimatype_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YLOption::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = YLOption_descriptor_;
  metadata.reflection = YLOption_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YLOption

// optional int32 useType = 1;
bool YLOption::has_usetype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void YLOption::set_has_usetype() {
  _has_bits_[0] |= 0x00000001u;
}
void YLOption::clear_has_usetype() {
  _has_bits_[0] &= ~0x00000001u;
}
void YLOption::clear_usetype() {
  usetype_ = 0;
  clear_has_usetype();
}
 ::google::protobuf::int32 YLOption::usetype() const {
  // @@protoc_insertion_point(field_get:msg_maj.YLOption.useType)
  return usetype_;
}
 void YLOption::set_usetype(::google::protobuf::int32 value) {
  set_has_usetype();
  usetype_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.YLOption.useType)
}

// optional int32 wanFaType = 2;
bool YLOption::has_wanfatype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void YLOption::set_has_wanfatype() {
  _has_bits_[0] |= 0x00000002u;
}
void YLOption::clear_has_wanfatype() {
  _has_bits_[0] &= ~0x00000002u;
}
void YLOption::clear_wanfatype() {
  wanfatype_ = 0;
  clear_has_wanfatype();
}
 ::google::protobuf::int32 YLOption::wanfatype() const {
  // @@protoc_insertion_point(field_get:msg_maj.YLOption.wanFaType)
  return wanfatype_;
}
 void YLOption::set_wanfatype(::google::protobuf::int32 value) {
  set_has_wanfatype();
  wanfatype_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.YLOption.wanFaType)
}

// optional int32 maiMaType = 3;
bool YLOption::has_maimatype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void YLOption::set_has_maimatype() {
  _has_bits_[0] |= 0x00000004u;
}
void YLOption::clear_has_maimatype() {
  _has_bits_[0] &= ~0x00000004u;
}
void YLOption::clear_maimatype() {
  maimatype_ = 0;
  clear_has_maimatype();
}
 ::google::protobuf::int32 YLOption::maimatype() const {
  // @@protoc_insertion_point(field_get:msg_maj.YLOption.maiMaType)
  return maimatype_;
}
 void YLOption::set_maimatype(::google::protobuf::int32 value) {
  set_has_maimatype();
  maimatype_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.YLOption.maiMaType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BBOption::kUseTypeFieldNumber;
const int BBOption::kWanFaTypeFieldNumber;
const int BBOption::kMaiMaTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BBOption::BBOption()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.BBOption)
}

void BBOption::InitAsDefaultInstance() {
}

BBOption::BBOption(const BBOption& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.BBOption)
}

void BBOption::SharedCtor() {
  _cached_size_ = 0;
  usetype_ = 0;
  wanfatype_ = 0;
  maimatype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BBOption::~BBOption() {
  // @@protoc_insertion_point(destructor:msg_maj.BBOption)
  SharedDtor();
}

void BBOption::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BBOption::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BBOption::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BBOption_descriptor_;
}

const BBOption& BBOption::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5froom_2eproto();
  return *default_instance_;
}

BBOption* BBOption::default_instance_ = NULL;

BBOption* BBOption::New(::google::protobuf::Arena* arena) const {
  BBOption* n = new BBOption;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BBOption::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.BBOption)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(BBOption, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<BBOption*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(usetype_, maimatype_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool BBOption::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.BBOption)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 useType = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &usetype_)));
          set_has_usetype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_wanFaType;
        break;
      }

      // optional int32 wanFaType = 2;
      case 2: {
        if (tag == 16) {
         parse_wanFaType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wanfatype_)));
          set_has_wanfatype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_maiMaType;
        break;
      }

      // optional int32 maiMaType = 3;
      case 3: {
        if (tag == 24) {
         parse_maiMaType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maimatype_)));
          set_has_maimatype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.BBOption)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.BBOption)
  return false;
#undef DO_
}

void BBOption::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.BBOption)
  // optional int32 useType = 1;
  if (has_usetype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->usetype(), output);
  }

  // optional int32 wanFaType = 2;
  if (has_wanfatype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->wanfatype(), output);
  }

  // optional int32 maiMaType = 3;
  if (has_maimatype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->maimatype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.BBOption)
}

::google::protobuf::uint8* BBOption::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.BBOption)
  // optional int32 useType = 1;
  if (has_usetype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->usetype(), target);
  }

  // optional int32 wanFaType = 2;
  if (has_wanfatype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->wanfatype(), target);
  }

  // optional int32 maiMaType = 3;
  if (has_maimatype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->maimatype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.BBOption)
  return target;
}

int BBOption::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.BBOption)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 useType = 1;
    if (has_usetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->usetype());
    }

    // optional int32 wanFaType = 2;
    if (has_wanfatype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->wanfatype());
    }

    // optional int32 maiMaType = 3;
    if (has_maimatype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->maimatype());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BBOption::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.BBOption)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BBOption* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BBOption>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.BBOption)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.BBOption)
    MergeFrom(*source);
  }
}

void BBOption::MergeFrom(const BBOption& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.BBOption)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_usetype()) {
      set_usetype(from.usetype());
    }
    if (from.has_wanfatype()) {
      set_wanfatype(from.wanfatype());
    }
    if (from.has_maimatype()) {
      set_maimatype(from.maimatype());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void BBOption::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.BBOption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BBOption::CopyFrom(const BBOption& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.BBOption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BBOption::IsInitialized() const {

  return true;
}

void BBOption::Swap(BBOption* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BBOption::InternalSwap(BBOption* other) {
  std::swap(usetype_, other->usetype_);
  std::swap(wanfatype_, other->wanfatype_);
  std::swap(maimatype_, other->maimatype_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BBOption::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BBOption_descriptor_;
  metadata.reflection = BBOption_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BBOption

// optional int32 useType = 1;
bool BBOption::has_usetype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BBOption::set_has_usetype() {
  _has_bits_[0] |= 0x00000001u;
}
void BBOption::clear_has_usetype() {
  _has_bits_[0] &= ~0x00000001u;
}
void BBOption::clear_usetype() {
  usetype_ = 0;
  clear_has_usetype();
}
 ::google::protobuf::int32 BBOption::usetype() const {
  // @@protoc_insertion_point(field_get:msg_maj.BBOption.useType)
  return usetype_;
}
 void BBOption::set_usetype(::google::protobuf::int32 value) {
  set_has_usetype();
  usetype_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.BBOption.useType)
}

// optional int32 wanFaType = 2;
bool BBOption::has_wanfatype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BBOption::set_has_wanfatype() {
  _has_bits_[0] |= 0x00000002u;
}
void BBOption::clear_has_wanfatype() {
  _has_bits_[0] &= ~0x00000002u;
}
void BBOption::clear_wanfatype() {
  wanfatype_ = 0;
  clear_has_wanfatype();
}
 ::google::protobuf::int32 BBOption::wanfatype() const {
  // @@protoc_insertion_point(field_get:msg_maj.BBOption.wanFaType)
  return wanfatype_;
}
 void BBOption::set_wanfatype(::google::protobuf::int32 value) {
  set_has_wanfatype();
  wanfatype_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.BBOption.wanFaType)
}

// optional int32 maiMaType = 3;
bool BBOption::has_maimatype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BBOption::set_has_maimatype() {
  _has_bits_[0] |= 0x00000004u;
}
void BBOption::clear_has_maimatype() {
  _has_bits_[0] &= ~0x00000004u;
}
void BBOption::clear_maimatype() {
  maimatype_ = 0;
  clear_has_maimatype();
}
 ::google::protobuf::int32 BBOption::maimatype() const {
  // @@protoc_insertion_point(field_get:msg_maj.BBOption.maiMaType)
  return maimatype_;
}
 void BBOption::set_maimatype(::google::protobuf::int32 value) {
  set_has_maimatype();
  maimatype_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.BBOption.maiMaType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LCOption::kUseTypeFieldNumber;
const int LCOption::kWanFaTypeFieldNumber;
const int LCOption::kMaiMaTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LCOption::LCOption()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.LCOption)
}

void LCOption::InitAsDefaultInstance() {
}

LCOption::LCOption(const LCOption& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.LCOption)
}

void LCOption::SharedCtor() {
  _cached_size_ = 0;
  usetype_ = 0;
  wanfatype_ = 0;
  maimatype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LCOption::~LCOption() {
  // @@protoc_insertion_point(destructor:msg_maj.LCOption)
  SharedDtor();
}

void LCOption::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LCOption::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LCOption::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LCOption_descriptor_;
}

const LCOption& LCOption::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5froom_2eproto();
  return *default_instance_;
}

LCOption* LCOption::default_instance_ = NULL;

LCOption* LCOption::New(::google::protobuf::Arena* arena) const {
  LCOption* n = new LCOption;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LCOption::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.LCOption)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(LCOption, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<LCOption*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(usetype_, maimatype_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool LCOption::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.LCOption)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 useType = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &usetype_)));
          set_has_usetype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_wanFaType;
        break;
      }

      // optional int32 wanFaType = 2;
      case 2: {
        if (tag == 16) {
         parse_wanFaType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wanfatype_)));
          set_has_wanfatype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_maiMaType;
        break;
      }

      // optional int32 maiMaType = 3;
      case 3: {
        if (tag == 24) {
         parse_maiMaType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maimatype_)));
          set_has_maimatype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.LCOption)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.LCOption)
  return false;
#undef DO_
}

void LCOption::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.LCOption)
  // optional int32 useType = 1;
  if (has_usetype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->usetype(), output);
  }

  // optional int32 wanFaType = 2;
  if (has_wanfatype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->wanfatype(), output);
  }

  // optional int32 maiMaType = 3;
  if (has_maimatype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->maimatype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.LCOption)
}

::google::protobuf::uint8* LCOption::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.LCOption)
  // optional int32 useType = 1;
  if (has_usetype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->usetype(), target);
  }

  // optional int32 wanFaType = 2;
  if (has_wanfatype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->wanfatype(), target);
  }

  // optional int32 maiMaType = 3;
  if (has_maimatype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->maimatype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.LCOption)
  return target;
}

int LCOption::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.LCOption)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 useType = 1;
    if (has_usetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->usetype());
    }

    // optional int32 wanFaType = 2;
    if (has_wanfatype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->wanfatype());
    }

    // optional int32 maiMaType = 3;
    if (has_maimatype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->maimatype());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LCOption::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.LCOption)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const LCOption* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LCOption>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.LCOption)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.LCOption)
    MergeFrom(*source);
  }
}

void LCOption::MergeFrom(const LCOption& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.LCOption)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_usetype()) {
      set_usetype(from.usetype());
    }
    if (from.has_wanfatype()) {
      set_wanfatype(from.wanfatype());
    }
    if (from.has_maimatype()) {
      set_maimatype(from.maimatype());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void LCOption::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.LCOption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LCOption::CopyFrom(const LCOption& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.LCOption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LCOption::IsInitialized() const {

  return true;
}

void LCOption::Swap(LCOption* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LCOption::InternalSwap(LCOption* other) {
  std::swap(usetype_, other->usetype_);
  std::swap(wanfatype_, other->wanfatype_);
  std::swap(maimatype_, other->maimatype_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LCOption::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LCOption_descriptor_;
  metadata.reflection = LCOption_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LCOption

// optional int32 useType = 1;
bool LCOption::has_usetype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LCOption::set_has_usetype() {
  _has_bits_[0] |= 0x00000001u;
}
void LCOption::clear_has_usetype() {
  _has_bits_[0] &= ~0x00000001u;
}
void LCOption::clear_usetype() {
  usetype_ = 0;
  clear_has_usetype();
}
 ::google::protobuf::int32 LCOption::usetype() const {
  // @@protoc_insertion_point(field_get:msg_maj.LCOption.useType)
  return usetype_;
}
 void LCOption::set_usetype(::google::protobuf::int32 value) {
  set_has_usetype();
  usetype_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.LCOption.useType)
}

// optional int32 wanFaType = 2;
bool LCOption::has_wanfatype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LCOption::set_has_wanfatype() {
  _has_bits_[0] |= 0x00000002u;
}
void LCOption::clear_has_wanfatype() {
  _has_bits_[0] &= ~0x00000002u;
}
void LCOption::clear_wanfatype() {
  wanfatype_ = 0;
  clear_has_wanfatype();
}
 ::google::protobuf::int32 LCOption::wanfatype() const {
  // @@protoc_insertion_point(field_get:msg_maj.LCOption.wanFaType)
  return wanfatype_;
}
 void LCOption::set_wanfatype(::google::protobuf::int32 value) {
  set_has_wanfatype();
  wanfatype_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.LCOption.wanFaType)
}

// optional int32 maiMaType = 3;
bool LCOption::has_maimatype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void LCOption::set_has_maimatype() {
  _has_bits_[0] |= 0x00000004u;
}
void LCOption::clear_has_maimatype() {
  _has_bits_[0] &= ~0x00000004u;
}
void LCOption::clear_maimatype() {
  maimatype_ = 0;
  clear_has_maimatype();
}
 ::google::protobuf::int32 LCOption::maimatype() const {
  // @@protoc_insertion_point(field_get:msg_maj.LCOption.maiMaType)
  return maimatype_;
}
 void LCOption::set_maimatype(::google::protobuf::int32 value) {
  set_has_maimatype();
  maimatype_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.LCOption.maiMaType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XZOption::kModeFieldNumber;
const int XZOption::kZimoFieldNumber;
const int XZOption::kDiangangFieldNumber;
const int XZOption::kWanFaTypeFieldNumber;
const int XZOption::kMultiFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XZOption::XZOption()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.XZOption)
}

void XZOption::InitAsDefaultInstance() {
}

XZOption::XZOption(const XZOption& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.XZOption)
}

void XZOption::SharedCtor() {
  _cached_size_ = 0;
  mode_ = 0;
  zimo_ = 0;
  diangang_ = 0;
  wanfatype_ = 0;
  multi_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

XZOption::~XZOption() {
  // @@protoc_insertion_point(destructor:msg_maj.XZOption)
  SharedDtor();
}

void XZOption::SharedDtor() {
  if (this != default_instance_) {
  }
}

void XZOption::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XZOption::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return XZOption_descriptor_;
}

const XZOption& XZOption::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5froom_2eproto();
  return *default_instance_;
}

XZOption* XZOption::default_instance_ = NULL;

XZOption* XZOption::New(::google::protobuf::Arena* arena) const {
  XZOption* n = new XZOption;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XZOption::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.XZOption)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(XZOption, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<XZOption*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31u) {
    ZR_(mode_, multi_);
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool XZOption::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.XZOption)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 mode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mode_)));
          set_has_mode();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_zimo;
        break;
      }

      // optional int32 zimo = 2;
      case 2: {
        if (tag == 16) {
         parse_zimo:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &zimo_)));
          set_has_zimo();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_diangang;
        break;
      }

      // optional int32 diangang = 3;
      case 3: {
        if (tag == 24) {
         parse_diangang:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &diangang_)));
          set_has_diangang();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_wanFaType;
        break;
      }

      // optional int32 wanFaType = 4;
      case 4: {
        if (tag == 32) {
         parse_wanFaType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wanfatype_)));
          set_has_wanfatype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_multi;
        break;
      }

      // optional int32 multi = 5;
      case 5: {
        if (tag == 40) {
         parse_multi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &multi_)));
          set_has_multi();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.XZOption)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.XZOption)
  return false;
#undef DO_
}

void XZOption::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.XZOption)
  // optional int32 mode = 1;
  if (has_mode()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->mode(), output);
  }

  // optional int32 zimo = 2;
  if (has_zimo()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->zimo(), output);
  }

  // optional int32 diangang = 3;
  if (has_diangang()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->diangang(), output);
  }

  // optional int32 wanFaType = 4;
  if (has_wanfatype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->wanfatype(), output);
  }

  // optional int32 multi = 5;
  if (has_multi()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->multi(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.XZOption)
}

::google::protobuf::uint8* XZOption::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.XZOption)
  // optional int32 mode = 1;
  if (has_mode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->mode(), target);
  }

  // optional int32 zimo = 2;
  if (has_zimo()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->zimo(), target);
  }

  // optional int32 diangang = 3;
  if (has_diangang()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->diangang(), target);
  }

  // optional int32 wanFaType = 4;
  if (has_wanfatype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->wanfatype(), target);
  }

  // optional int32 multi = 5;
  if (has_multi()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->multi(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.XZOption)
  return target;
}

int XZOption::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.XZOption)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 31u) {
    // optional int32 mode = 1;
    if (has_mode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mode());
    }

    // optional int32 zimo = 2;
    if (has_zimo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->zimo());
    }

    // optional int32 diangang = 3;
    if (has_diangang()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->diangang());
    }

    // optional int32 wanFaType = 4;
    if (has_wanfatype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->wanfatype());
    }

    // optional int32 multi = 5;
    if (has_multi()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->multi());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XZOption::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.XZOption)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const XZOption* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const XZOption>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.XZOption)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.XZOption)
    MergeFrom(*source);
  }
}

void XZOption::MergeFrom(const XZOption& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.XZOption)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mode()) {
      set_mode(from.mode());
    }
    if (from.has_zimo()) {
      set_zimo(from.zimo());
    }
    if (from.has_diangang()) {
      set_diangang(from.diangang());
    }
    if (from.has_wanfatype()) {
      set_wanfatype(from.wanfatype());
    }
    if (from.has_multi()) {
      set_multi(from.multi());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void XZOption::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.XZOption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XZOption::CopyFrom(const XZOption& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.XZOption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XZOption::IsInitialized() const {

  return true;
}

void XZOption::Swap(XZOption* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XZOption::InternalSwap(XZOption* other) {
  std::swap(mode_, other->mode_);
  std::swap(zimo_, other->zimo_);
  std::swap(diangang_, other->diangang_);
  std::swap(wanfatype_, other->wanfatype_);
  std::swap(multi_, other->multi_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XZOption::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = XZOption_descriptor_;
  metadata.reflection = XZOption_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// XZOption

// optional int32 mode = 1;
bool XZOption::has_mode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void XZOption::set_has_mode() {
  _has_bits_[0] |= 0x00000001u;
}
void XZOption::clear_has_mode() {
  _has_bits_[0] &= ~0x00000001u;
}
void XZOption::clear_mode() {
  mode_ = 0;
  clear_has_mode();
}
 ::google::protobuf::int32 XZOption::mode() const {
  // @@protoc_insertion_point(field_get:msg_maj.XZOption.mode)
  return mode_;
}
 void XZOption::set_mode(::google::protobuf::int32 value) {
  set_has_mode();
  mode_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.XZOption.mode)
}

// optional int32 zimo = 2;
bool XZOption::has_zimo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void XZOption::set_has_zimo() {
  _has_bits_[0] |= 0x00000002u;
}
void XZOption::clear_has_zimo() {
  _has_bits_[0] &= ~0x00000002u;
}
void XZOption::clear_zimo() {
  zimo_ = 0;
  clear_has_zimo();
}
 ::google::protobuf::int32 XZOption::zimo() const {
  // @@protoc_insertion_point(field_get:msg_maj.XZOption.zimo)
  return zimo_;
}
 void XZOption::set_zimo(::google::protobuf::int32 value) {
  set_has_zimo();
  zimo_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.XZOption.zimo)
}

// optional int32 diangang = 3;
bool XZOption::has_diangang() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void XZOption::set_has_diangang() {
  _has_bits_[0] |= 0x00000004u;
}
void XZOption::clear_has_diangang() {
  _has_bits_[0] &= ~0x00000004u;
}
void XZOption::clear_diangang() {
  diangang_ = 0;
  clear_has_diangang();
}
 ::google::protobuf::int32 XZOption::diangang() const {
  // @@protoc_insertion_point(field_get:msg_maj.XZOption.diangang)
  return diangang_;
}
 void XZOption::set_diangang(::google::protobuf::int32 value) {
  set_has_diangang();
  diangang_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.XZOption.diangang)
}

// optional int32 wanFaType = 4;
bool XZOption::has_wanfatype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void XZOption::set_has_wanfatype() {
  _has_bits_[0] |= 0x00000008u;
}
void XZOption::clear_has_wanfatype() {
  _has_bits_[0] &= ~0x00000008u;
}
void XZOption::clear_wanfatype() {
  wanfatype_ = 0;
  clear_has_wanfatype();
}
 ::google::protobuf::int32 XZOption::wanfatype() const {
  // @@protoc_insertion_point(field_get:msg_maj.XZOption.wanFaType)
  return wanfatype_;
}
 void XZOption::set_wanfatype(::google::protobuf::int32 value) {
  set_has_wanfatype();
  wanfatype_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.XZOption.wanFaType)
}

// optional int32 multi = 5;
bool XZOption::has_multi() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void XZOption::set_has_multi() {
  _has_bits_[0] |= 0x00000010u;
}
void XZOption::clear_has_multi() {
  _has_bits_[0] &= ~0x00000010u;
}
void XZOption::clear_multi() {
  multi_ = 0;
  clear_has_multi();
}
 ::google::protobuf::int32 XZOption::multi() const {
  // @@protoc_insertion_point(field_get:msg_maj.XZOption.multi)
  return multi_;
}
 void XZOption::set_multi(::google::protobuf::int32 value) {
  set_has_multi();
  multi_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.XZOption.multi)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XLOption::kModeFieldNumber;
const int XLOption::kZimoFieldNumber;
const int XLOption::kDiangangFieldNumber;
const int XLOption::kWanFaTypeFieldNumber;
const int XLOption::kMultiFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XLOption::XLOption()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.XLOption)
}

void XLOption::InitAsDefaultInstance() {
}

XLOption::XLOption(const XLOption& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.XLOption)
}

void XLOption::SharedCtor() {
  _cached_size_ = 0;
  mode_ = 0;
  zimo_ = 0;
  diangang_ = 0;
  wanfatype_ = 0;
  multi_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

XLOption::~XLOption() {
  // @@protoc_insertion_point(destructor:msg_maj.XLOption)
  SharedDtor();
}

void XLOption::SharedDtor() {
  if (this != default_instance_) {
  }
}

void XLOption::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XLOption::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return XLOption_descriptor_;
}

const XLOption& XLOption::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5froom_2eproto();
  return *default_instance_;
}

XLOption* XLOption::default_instance_ = NULL;

XLOption* XLOption::New(::google::protobuf::Arena* arena) const {
  XLOption* n = new XLOption;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XLOption::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.XLOption)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(XLOption, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<XLOption*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31u) {
    ZR_(mode_, multi_);
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool XLOption::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.XLOption)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 mode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mode_)));
          set_has_mode();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_zimo;
        break;
      }

      // optional int32 zimo = 2;
      case 2: {
        if (tag == 16) {
         parse_zimo:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &zimo_)));
          set_has_zimo();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_diangang;
        break;
      }

      // optional int32 diangang = 3;
      case 3: {
        if (tag == 24) {
         parse_diangang:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &diangang_)));
          set_has_diangang();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_wanFaType;
        break;
      }

      // optional int32 wanFaType = 4;
      case 4: {
        if (tag == 32) {
         parse_wanFaType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wanfatype_)));
          set_has_wanfatype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_multi;
        break;
      }

      // optional int32 multi = 5;
      case 5: {
        if (tag == 40) {
         parse_multi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &multi_)));
          set_has_multi();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.XLOption)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.XLOption)
  return false;
#undef DO_
}

void XLOption::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.XLOption)
  // optional int32 mode = 1;
  if (has_mode()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->mode(), output);
  }

  // optional int32 zimo = 2;
  if (has_zimo()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->zimo(), output);
  }

  // optional int32 diangang = 3;
  if (has_diangang()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->diangang(), output);
  }

  // optional int32 wanFaType = 4;
  if (has_wanfatype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->wanfatype(), output);
  }

  // optional int32 multi = 5;
  if (has_multi()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->multi(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.XLOption)
}

::google::protobuf::uint8* XLOption::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.XLOption)
  // optional int32 mode = 1;
  if (has_mode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->mode(), target);
  }

  // optional int32 zimo = 2;
  if (has_zimo()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->zimo(), target);
  }

  // optional int32 diangang = 3;
  if (has_diangang()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->diangang(), target);
  }

  // optional int32 wanFaType = 4;
  if (has_wanfatype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->wanfatype(), target);
  }

  // optional int32 multi = 5;
  if (has_multi()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->multi(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.XLOption)
  return target;
}

int XLOption::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.XLOption)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 31u) {
    // optional int32 mode = 1;
    if (has_mode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mode());
    }

    // optional int32 zimo = 2;
    if (has_zimo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->zimo());
    }

    // optional int32 diangang = 3;
    if (has_diangang()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->diangang());
    }

    // optional int32 wanFaType = 4;
    if (has_wanfatype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->wanfatype());
    }

    // optional int32 multi = 5;
    if (has_multi()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->multi());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XLOption::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.XLOption)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const XLOption* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const XLOption>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.XLOption)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.XLOption)
    MergeFrom(*source);
  }
}

void XLOption::MergeFrom(const XLOption& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.XLOption)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mode()) {
      set_mode(from.mode());
    }
    if (from.has_zimo()) {
      set_zimo(from.zimo());
    }
    if (from.has_diangang()) {
      set_diangang(from.diangang());
    }
    if (from.has_wanfatype()) {
      set_wanfatype(from.wanfatype());
    }
    if (from.has_multi()) {
      set_multi(from.multi());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void XLOption::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.XLOption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XLOption::CopyFrom(const XLOption& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.XLOption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XLOption::IsInitialized() const {

  return true;
}

void XLOption::Swap(XLOption* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XLOption::InternalSwap(XLOption* other) {
  std::swap(mode_, other->mode_);
  std::swap(zimo_, other->zimo_);
  std::swap(diangang_, other->diangang_);
  std::swap(wanfatype_, other->wanfatype_);
  std::swap(multi_, other->multi_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XLOption::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = XLOption_descriptor_;
  metadata.reflection = XLOption_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// XLOption

// optional int32 mode = 1;
bool XLOption::has_mode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void XLOption::set_has_mode() {
  _has_bits_[0] |= 0x00000001u;
}
void XLOption::clear_has_mode() {
  _has_bits_[0] &= ~0x00000001u;
}
void XLOption::clear_mode() {
  mode_ = 0;
  clear_has_mode();
}
 ::google::protobuf::int32 XLOption::mode() const {
  // @@protoc_insertion_point(field_get:msg_maj.XLOption.mode)
  return mode_;
}
 void XLOption::set_mode(::google::protobuf::int32 value) {
  set_has_mode();
  mode_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.XLOption.mode)
}

// optional int32 zimo = 2;
bool XLOption::has_zimo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void XLOption::set_has_zimo() {
  _has_bits_[0] |= 0x00000002u;
}
void XLOption::clear_has_zimo() {
  _has_bits_[0] &= ~0x00000002u;
}
void XLOption::clear_zimo() {
  zimo_ = 0;
  clear_has_zimo();
}
 ::google::protobuf::int32 XLOption::zimo() const {
  // @@protoc_insertion_point(field_get:msg_maj.XLOption.zimo)
  return zimo_;
}
 void XLOption::set_zimo(::google::protobuf::int32 value) {
  set_has_zimo();
  zimo_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.XLOption.zimo)
}

// optional int32 diangang = 3;
bool XLOption::has_diangang() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void XLOption::set_has_diangang() {
  _has_bits_[0] |= 0x00000004u;
}
void XLOption::clear_has_diangang() {
  _has_bits_[0] &= ~0x00000004u;
}
void XLOption::clear_diangang() {
  diangang_ = 0;
  clear_has_diangang();
}
 ::google::protobuf::int32 XLOption::diangang() const {
  // @@protoc_insertion_point(field_get:msg_maj.XLOption.diangang)
  return diangang_;
}
 void XLOption::set_diangang(::google::protobuf::int32 value) {
  set_has_diangang();
  diangang_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.XLOption.diangang)
}

// optional int32 wanFaType = 4;
bool XLOption::has_wanfatype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void XLOption::set_has_wanfatype() {
  _has_bits_[0] |= 0x00000008u;
}
void XLOption::clear_has_wanfatype() {
  _has_bits_[0] &= ~0x00000008u;
}
void XLOption::clear_wanfatype() {
  wanfatype_ = 0;
  clear_has_wanfatype();
}
 ::google::protobuf::int32 XLOption::wanfatype() const {
  // @@protoc_insertion_point(field_get:msg_maj.XLOption.wanFaType)
  return wanfatype_;
}
 void XLOption::set_wanfatype(::google::protobuf::int32 value) {
  set_has_wanfatype();
  wanfatype_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.XLOption.wanFaType)
}

// optional int32 multi = 5;
bool XLOption::has_multi() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void XLOption::set_has_multi() {
  _has_bits_[0] |= 0x00000010u;
}
void XLOption::clear_has_multi() {
  _has_bits_[0] &= ~0x00000010u;
}
void XLOption::clear_multi() {
  multi_ = 0;
  clear_has_multi();
}
 ::google::protobuf::int32 XLOption::multi() const {
  // @@protoc_insertion_point(field_get:msg_maj.XLOption.multi)
  return multi_;
}
 void XLOption::set_multi(::google::protobuf::int32 value) {
  set_has_multi();
  multi_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.XLOption.multi)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoomOption::kGameTypeFieldNumber;
const int RoomOption::kRenShuTypeFieldNumber;
const int RoomOption::kPayTypeFieldNumber;
const int RoomOption::kBaseScoreTypeFieldNumber;
const int RoomOption::kJuShuTypeFieldNumber;
const int RoomOption::kFengDingTypeFieldNumber;
const int RoomOption::kTotalPaiNumFieldNumber;
const int RoomOption::kYlOptionFieldNumber;
const int RoomOption::kBbOptionFieldNumber;
const int RoomOption::kLcOptionFieldNumber;
const int RoomOption::kXzOptionFieldNumber;
const int RoomOption::kXlOptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoomOption::RoomOption()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.RoomOption)
}

void RoomOption::InitAsDefaultInstance() {
  yl_option_ = const_cast< ::msg_maj::YLOption*>(&::msg_maj::YLOption::default_instance());
  bb_option_ = const_cast< ::msg_maj::BBOption*>(&::msg_maj::BBOption::default_instance());
  lc_option_ = const_cast< ::msg_maj::LCOption*>(&::msg_maj::LCOption::default_instance());
  xz_option_ = const_cast< ::msg_maj::XZOption*>(&::msg_maj::XZOption::default_instance());
  xl_option_ = const_cast< ::msg_maj::XLOption*>(&::msg_maj::XLOption::default_instance());
}

RoomOption::RoomOption(const RoomOption& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.RoomOption)
}

void RoomOption::SharedCtor() {
  _cached_size_ = 0;
  game_type_ = 0;
  renshutype_ = 0;
  paytype_ = 0;
  basescoretype_ = 0;
  jushutype_ = 0;
  fengdingtype_ = 0;
  total_pai_num_ = 0;
  yl_option_ = NULL;
  bb_option_ = NULL;
  lc_option_ = NULL;
  xz_option_ = NULL;
  xl_option_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RoomOption::~RoomOption() {
  // @@protoc_insertion_point(destructor:msg_maj.RoomOption)
  SharedDtor();
}

void RoomOption::SharedDtor() {
  if (this != default_instance_) {
    delete yl_option_;
    delete bb_option_;
    delete lc_option_;
    delete xz_option_;
    delete xl_option_;
  }
}

void RoomOption::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoomOption::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoomOption_descriptor_;
}

const RoomOption& RoomOption::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5froom_2eproto();
  return *default_instance_;
}

RoomOption* RoomOption::default_instance_ = NULL;

RoomOption* RoomOption::New(::google::protobuf::Arena* arena) const {
  RoomOption* n = new RoomOption;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoomOption::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.RoomOption)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(RoomOption, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<RoomOption*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(game_type_, fengdingtype_);
    total_pai_num_ = 0;
    if (has_yl_option()) {
      if (yl_option_ != NULL) yl_option_->::msg_maj::YLOption::Clear();
    }
  }
  if (_has_bits_[8 / 32] & 3840u) {
    if (has_bb_option()) {
      if (bb_option_ != NULL) bb_option_->::msg_maj::BBOption::Clear();
    }
    if (has_lc_option()) {
      if (lc_option_ != NULL) lc_option_->::msg_maj::LCOption::Clear();
    }
    if (has_xz_option()) {
      if (xz_option_ != NULL) xz_option_->::msg_maj::XZOption::Clear();
    }
    if (has_xl_option()) {
      if (xl_option_ != NULL) xl_option_->::msg_maj::XLOption::Clear();
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RoomOption::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.RoomOption)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 game_type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &game_type_)));
          set_has_game_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_renShuType;
        break;
      }

      // optional int32 renShuType = 2;
      case 2: {
        if (tag == 16) {
         parse_renShuType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &renshutype_)));
          set_has_renshutype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_payType;
        break;
      }

      // optional int32 payType = 3;
      case 3: {
        if (tag == 24) {
         parse_payType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &paytype_)));
          set_has_paytype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_baseScoreType;
        break;
      }

      // optional int32 baseScoreType = 4;
      case 4: {
        if (tag == 32) {
         parse_baseScoreType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &basescoretype_)));
          set_has_basescoretype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_juShuType;
        break;
      }

      // optional int32 juShuType = 5;
      case 5: {
        if (tag == 40) {
         parse_juShuType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &jushutype_)));
          set_has_jushutype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_fengDingType;
        break;
      }

      // optional int32 fengDingType = 6;
      case 6: {
        if (tag == 48) {
         parse_fengDingType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fengdingtype_)));
          set_has_fengdingtype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_total_pai_num;
        break;
      }

      // optional int32 total_pai_num = 7;
      case 7: {
        if (tag == 56) {
         parse_total_pai_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_pai_num_)));
          set_has_total_pai_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_yl_option;
        break;
      }

      // optional .msg_maj.YLOption yl_option = 11;
      case 11: {
        if (tag == 90) {
         parse_yl_option:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_yl_option()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_bb_option;
        break;
      }

      // optional .msg_maj.BBOption bb_option = 12;
      case 12: {
        if (tag == 98) {
         parse_bb_option:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bb_option()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_lc_option;
        break;
      }

      // optional .msg_maj.LCOption lc_option = 13;
      case 13: {
        if (tag == 106) {
         parse_lc_option:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_lc_option()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_xz_option;
        break;
      }

      // optional .msg_maj.XZOption xz_option = 14;
      case 14: {
        if (tag == 114) {
         parse_xz_option:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_xz_option()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_xl_option;
        break;
      }

      // optional .msg_maj.XLOption xl_option = 15;
      case 15: {
        if (tag == 122) {
         parse_xl_option:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_xl_option()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.RoomOption)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.RoomOption)
  return false;
#undef DO_
}

void RoomOption::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.RoomOption)
  // optional int32 game_type = 1;
  if (has_game_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->game_type(), output);
  }

  // optional int32 renShuType = 2;
  if (has_renshutype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->renshutype(), output);
  }

  // optional int32 payType = 3;
  if (has_paytype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->paytype(), output);
  }

  // optional int32 baseScoreType = 4;
  if (has_basescoretype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->basescoretype(), output);
  }

  // optional int32 juShuType = 5;
  if (has_jushutype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->jushutype(), output);
  }

  // optional int32 fengDingType = 6;
  if (has_fengdingtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->fengdingtype(), output);
  }

  // optional int32 total_pai_num = 7;
  if (has_total_pai_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->total_pai_num(), output);
  }

  // optional .msg_maj.YLOption yl_option = 11;
  if (has_yl_option()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->yl_option_, output);
  }

  // optional .msg_maj.BBOption bb_option = 12;
  if (has_bb_option()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->bb_option_, output);
  }

  // optional .msg_maj.LCOption lc_option = 13;
  if (has_lc_option()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, *this->lc_option_, output);
  }

  // optional .msg_maj.XZOption xz_option = 14;
  if (has_xz_option()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, *this->xz_option_, output);
  }

  // optional .msg_maj.XLOption xl_option = 15;
  if (has_xl_option()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, *this->xl_option_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.RoomOption)
}

::google::protobuf::uint8* RoomOption::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.RoomOption)
  // optional int32 game_type = 1;
  if (has_game_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->game_type(), target);
  }

  // optional int32 renShuType = 2;
  if (has_renshutype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->renshutype(), target);
  }

  // optional int32 payType = 3;
  if (has_paytype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->paytype(), target);
  }

  // optional int32 baseScoreType = 4;
  if (has_basescoretype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->basescoretype(), target);
  }

  // optional int32 juShuType = 5;
  if (has_jushutype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->jushutype(), target);
  }

  // optional int32 fengDingType = 6;
  if (has_fengdingtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->fengdingtype(), target);
  }

  // optional int32 total_pai_num = 7;
  if (has_total_pai_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->total_pai_num(), target);
  }

  // optional .msg_maj.YLOption yl_option = 11;
  if (has_yl_option()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, *this->yl_option_, false, target);
  }

  // optional .msg_maj.BBOption bb_option = 12;
  if (has_bb_option()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *this->bb_option_, false, target);
  }

  // optional .msg_maj.LCOption lc_option = 13;
  if (has_lc_option()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, *this->lc_option_, false, target);
  }

  // optional .msg_maj.XZOption xz_option = 14;
  if (has_xz_option()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        14, *this->xz_option_, false, target);
  }

  // optional .msg_maj.XLOption xl_option = 15;
  if (has_xl_option()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        15, *this->xl_option_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.RoomOption)
  return target;
}

int RoomOption::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.RoomOption)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional int32 game_type = 1;
    if (has_game_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->game_type());
    }

    // optional int32 renShuType = 2;
    if (has_renshutype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->renshutype());
    }

    // optional int32 payType = 3;
    if (has_paytype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->paytype());
    }

    // optional int32 baseScoreType = 4;
    if (has_basescoretype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->basescoretype());
    }

    // optional int32 juShuType = 5;
    if (has_jushutype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->jushutype());
    }

    // optional int32 fengDingType = 6;
    if (has_fengdingtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fengdingtype());
    }

    // optional int32 total_pai_num = 7;
    if (has_total_pai_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_pai_num());
    }

    // optional .msg_maj.YLOption yl_option = 11;
    if (has_yl_option()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->yl_option_);
    }

  }
  if (_has_bits_[8 / 32] & 3840u) {
    // optional .msg_maj.BBOption bb_option = 12;
    if (has_bb_option()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->bb_option_);
    }

    // optional .msg_maj.LCOption lc_option = 13;
    if (has_lc_option()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->lc_option_);
    }

    // optional .msg_maj.XZOption xz_option = 14;
    if (has_xz_option()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->xz_option_);
    }

    // optional .msg_maj.XLOption xl_option = 15;
    if (has_xl_option()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->xl_option_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoomOption::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.RoomOption)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RoomOption* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RoomOption>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.RoomOption)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.RoomOption)
    MergeFrom(*source);
  }
}

void RoomOption::MergeFrom(const RoomOption& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.RoomOption)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_game_type()) {
      set_game_type(from.game_type());
    }
    if (from.has_renshutype()) {
      set_renshutype(from.renshutype());
    }
    if (from.has_paytype()) {
      set_paytype(from.paytype());
    }
    if (from.has_basescoretype()) {
      set_basescoretype(from.basescoretype());
    }
    if (from.has_jushutype()) {
      set_jushutype(from.jushutype());
    }
    if (from.has_fengdingtype()) {
      set_fengdingtype(from.fengdingtype());
    }
    if (from.has_total_pai_num()) {
      set_total_pai_num(from.total_pai_num());
    }
    if (from.has_yl_option()) {
      mutable_yl_option()->::msg_maj::YLOption::MergeFrom(from.yl_option());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_bb_option()) {
      mutable_bb_option()->::msg_maj::BBOption::MergeFrom(from.bb_option());
    }
    if (from.has_lc_option()) {
      mutable_lc_option()->::msg_maj::LCOption::MergeFrom(from.lc_option());
    }
    if (from.has_xz_option()) {
      mutable_xz_option()->::msg_maj::XZOption::MergeFrom(from.xz_option());
    }
    if (from.has_xl_option()) {
      mutable_xl_option()->::msg_maj::XLOption::MergeFrom(from.xl_option());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void RoomOption::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.RoomOption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoomOption::CopyFrom(const RoomOption& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.RoomOption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoomOption::IsInitialized() const {

  return true;
}

void RoomOption::Swap(RoomOption* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoomOption::InternalSwap(RoomOption* other) {
  std::swap(game_type_, other->game_type_);
  std::swap(renshutype_, other->renshutype_);
  std::swap(paytype_, other->paytype_);
  std::swap(basescoretype_, other->basescoretype_);
  std::swap(jushutype_, other->jushutype_);
  std::swap(fengdingtype_, other->fengdingtype_);
  std::swap(total_pai_num_, other->total_pai_num_);
  std::swap(yl_option_, other->yl_option_);
  std::swap(bb_option_, other->bb_option_);
  std::swap(lc_option_, other->lc_option_);
  std::swap(xz_option_, other->xz_option_);
  std::swap(xl_option_, other->xl_option_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoomOption::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RoomOption_descriptor_;
  metadata.reflection = RoomOption_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoomOption

// optional int32 game_type = 1;
bool RoomOption::has_game_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RoomOption::set_has_game_type() {
  _has_bits_[0] |= 0x00000001u;
}
void RoomOption::clear_has_game_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void RoomOption::clear_game_type() {
  game_type_ = 0;
  clear_has_game_type();
}
 ::google::protobuf::int32 RoomOption::game_type() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoomOption.game_type)
  return game_type_;
}
 void RoomOption::set_game_type(::google::protobuf::int32 value) {
  set_has_game_type();
  game_type_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RoomOption.game_type)
}

// optional int32 renShuType = 2;
bool RoomOption::has_renshutype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RoomOption::set_has_renshutype() {
  _has_bits_[0] |= 0x00000002u;
}
void RoomOption::clear_has_renshutype() {
  _has_bits_[0] &= ~0x00000002u;
}
void RoomOption::clear_renshutype() {
  renshutype_ = 0;
  clear_has_renshutype();
}
 ::google::protobuf::int32 RoomOption::renshutype() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoomOption.renShuType)
  return renshutype_;
}
 void RoomOption::set_renshutype(::google::protobuf::int32 value) {
  set_has_renshutype();
  renshutype_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RoomOption.renShuType)
}

// optional int32 payType = 3;
bool RoomOption::has_paytype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void RoomOption::set_has_paytype() {
  _has_bits_[0] |= 0x00000004u;
}
void RoomOption::clear_has_paytype() {
  _has_bits_[0] &= ~0x00000004u;
}
void RoomOption::clear_paytype() {
  paytype_ = 0;
  clear_has_paytype();
}
 ::google::protobuf::int32 RoomOption::paytype() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoomOption.payType)
  return paytype_;
}
 void RoomOption::set_paytype(::google::protobuf::int32 value) {
  set_has_paytype();
  paytype_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RoomOption.payType)
}

// optional int32 baseScoreType = 4;
bool RoomOption::has_basescoretype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void RoomOption::set_has_basescoretype() {
  _has_bits_[0] |= 0x00000008u;
}
void RoomOption::clear_has_basescoretype() {
  _has_bits_[0] &= ~0x00000008u;
}
void RoomOption::clear_basescoretype() {
  basescoretype_ = 0;
  clear_has_basescoretype();
}
 ::google::protobuf::int32 RoomOption::basescoretype() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoomOption.baseScoreType)
  return basescoretype_;
}
 void RoomOption::set_basescoretype(::google::protobuf::int32 value) {
  set_has_basescoretype();
  basescoretype_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RoomOption.baseScoreType)
}

// optional int32 juShuType = 5;
bool RoomOption::has_jushutype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void RoomOption::set_has_jushutype() {
  _has_bits_[0] |= 0x00000010u;
}
void RoomOption::clear_has_jushutype() {
  _has_bits_[0] &= ~0x00000010u;
}
void RoomOption::clear_jushutype() {
  jushutype_ = 0;
  clear_has_jushutype();
}
 ::google::protobuf::int32 RoomOption::jushutype() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoomOption.juShuType)
  return jushutype_;
}
 void RoomOption::set_jushutype(::google::protobuf::int32 value) {
  set_has_jushutype();
  jushutype_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RoomOption.juShuType)
}

// optional int32 fengDingType = 6;
bool RoomOption::has_fengdingtype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void RoomOption::set_has_fengdingtype() {
  _has_bits_[0] |= 0x00000020u;
}
void RoomOption::clear_has_fengdingtype() {
  _has_bits_[0] &= ~0x00000020u;
}
void RoomOption::clear_fengdingtype() {
  fengdingtype_ = 0;
  clear_has_fengdingtype();
}
 ::google::protobuf::int32 RoomOption::fengdingtype() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoomOption.fengDingType)
  return fengdingtype_;
}
 void RoomOption::set_fengdingtype(::google::protobuf::int32 value) {
  set_has_fengdingtype();
  fengdingtype_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RoomOption.fengDingType)
}

// optional int32 total_pai_num = 7;
bool RoomOption::has_total_pai_num() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void RoomOption::set_has_total_pai_num() {
  _has_bits_[0] |= 0x00000040u;
}
void RoomOption::clear_has_total_pai_num() {
  _has_bits_[0] &= ~0x00000040u;
}
void RoomOption::clear_total_pai_num() {
  total_pai_num_ = 0;
  clear_has_total_pai_num();
}
 ::google::protobuf::int32 RoomOption::total_pai_num() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoomOption.total_pai_num)
  return total_pai_num_;
}
 void RoomOption::set_total_pai_num(::google::protobuf::int32 value) {
  set_has_total_pai_num();
  total_pai_num_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RoomOption.total_pai_num)
}

// optional .msg_maj.YLOption yl_option = 11;
bool RoomOption::has_yl_option() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void RoomOption::set_has_yl_option() {
  _has_bits_[0] |= 0x00000080u;
}
void RoomOption::clear_has_yl_option() {
  _has_bits_[0] &= ~0x00000080u;
}
void RoomOption::clear_yl_option() {
  if (yl_option_ != NULL) yl_option_->::msg_maj::YLOption::Clear();
  clear_has_yl_option();
}
const ::msg_maj::YLOption& RoomOption::yl_option() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoomOption.yl_option)
  return yl_option_ != NULL ? *yl_option_ : *default_instance_->yl_option_;
}
::msg_maj::YLOption* RoomOption::mutable_yl_option() {
  set_has_yl_option();
  if (yl_option_ == NULL) {
    yl_option_ = new ::msg_maj::YLOption;
  }
  // @@protoc_insertion_point(field_mutable:msg_maj.RoomOption.yl_option)
  return yl_option_;
}
::msg_maj::YLOption* RoomOption::release_yl_option() {
  // @@protoc_insertion_point(field_release:msg_maj.RoomOption.yl_option)
  clear_has_yl_option();
  ::msg_maj::YLOption* temp = yl_option_;
  yl_option_ = NULL;
  return temp;
}
void RoomOption::set_allocated_yl_option(::msg_maj::YLOption* yl_option) {
  delete yl_option_;
  yl_option_ = yl_option;
  if (yl_option) {
    set_has_yl_option();
  } else {
    clear_has_yl_option();
  }
  // @@protoc_insertion_point(field_set_allocated:msg_maj.RoomOption.yl_option)
}

// optional .msg_maj.BBOption bb_option = 12;
bool RoomOption::has_bb_option() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void RoomOption::set_has_bb_option() {
  _has_bits_[0] |= 0x00000100u;
}
void RoomOption::clear_has_bb_option() {
  _has_bits_[0] &= ~0x00000100u;
}
void RoomOption::clear_bb_option() {
  if (bb_option_ != NULL) bb_option_->::msg_maj::BBOption::Clear();
  clear_has_bb_option();
}
const ::msg_maj::BBOption& RoomOption::bb_option() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoomOption.bb_option)
  return bb_option_ != NULL ? *bb_option_ : *default_instance_->bb_option_;
}
::msg_maj::BBOption* RoomOption::mutable_bb_option() {
  set_has_bb_option();
  if (bb_option_ == NULL) {
    bb_option_ = new ::msg_maj::BBOption;
  }
  // @@protoc_insertion_point(field_mutable:msg_maj.RoomOption.bb_option)
  return bb_option_;
}
::msg_maj::BBOption* RoomOption::release_bb_option() {
  // @@protoc_insertion_point(field_release:msg_maj.RoomOption.bb_option)
  clear_has_bb_option();
  ::msg_maj::BBOption* temp = bb_option_;
  bb_option_ = NULL;
  return temp;
}
void RoomOption::set_allocated_bb_option(::msg_maj::BBOption* bb_option) {
  delete bb_option_;
  bb_option_ = bb_option;
  if (bb_option) {
    set_has_bb_option();
  } else {
    clear_has_bb_option();
  }
  // @@protoc_insertion_point(field_set_allocated:msg_maj.RoomOption.bb_option)
}

// optional .msg_maj.LCOption lc_option = 13;
bool RoomOption::has_lc_option() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void RoomOption::set_has_lc_option() {
  _has_bits_[0] |= 0x00000200u;
}
void RoomOption::clear_has_lc_option() {
  _has_bits_[0] &= ~0x00000200u;
}
void RoomOption::clear_lc_option() {
  if (lc_option_ != NULL) lc_option_->::msg_maj::LCOption::Clear();
  clear_has_lc_option();
}
const ::msg_maj::LCOption& RoomOption::lc_option() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoomOption.lc_option)
  return lc_option_ != NULL ? *lc_option_ : *default_instance_->lc_option_;
}
::msg_maj::LCOption* RoomOption::mutable_lc_option() {
  set_has_lc_option();
  if (lc_option_ == NULL) {
    lc_option_ = new ::msg_maj::LCOption;
  }
  // @@protoc_insertion_point(field_mutable:msg_maj.RoomOption.lc_option)
  return lc_option_;
}
::msg_maj::LCOption* RoomOption::release_lc_option() {
  // @@protoc_insertion_point(field_release:msg_maj.RoomOption.lc_option)
  clear_has_lc_option();
  ::msg_maj::LCOption* temp = lc_option_;
  lc_option_ = NULL;
  return temp;
}
void RoomOption::set_allocated_lc_option(::msg_maj::LCOption* lc_option) {
  delete lc_option_;
  lc_option_ = lc_option;
  if (lc_option) {
    set_has_lc_option();
  } else {
    clear_has_lc_option();
  }
  // @@protoc_insertion_point(field_set_allocated:msg_maj.RoomOption.lc_option)
}

// optional .msg_maj.XZOption xz_option = 14;
bool RoomOption::has_xz_option() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void RoomOption::set_has_xz_option() {
  _has_bits_[0] |= 0x00000400u;
}
void RoomOption::clear_has_xz_option() {
  _has_bits_[0] &= ~0x00000400u;
}
void RoomOption::clear_xz_option() {
  if (xz_option_ != NULL) xz_option_->::msg_maj::XZOption::Clear();
  clear_has_xz_option();
}
const ::msg_maj::XZOption& RoomOption::xz_option() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoomOption.xz_option)
  return xz_option_ != NULL ? *xz_option_ : *default_instance_->xz_option_;
}
::msg_maj::XZOption* RoomOption::mutable_xz_option() {
  set_has_xz_option();
  if (xz_option_ == NULL) {
    xz_option_ = new ::msg_maj::XZOption;
  }
  // @@protoc_insertion_point(field_mutable:msg_maj.RoomOption.xz_option)
  return xz_option_;
}
::msg_maj::XZOption* RoomOption::release_xz_option() {
  // @@protoc_insertion_point(field_release:msg_maj.RoomOption.xz_option)
  clear_has_xz_option();
  ::msg_maj::XZOption* temp = xz_option_;
  xz_option_ = NULL;
  return temp;
}
void RoomOption::set_allocated_xz_option(::msg_maj::XZOption* xz_option) {
  delete xz_option_;
  xz_option_ = xz_option;
  if (xz_option) {
    set_has_xz_option();
  } else {
    clear_has_xz_option();
  }
  // @@protoc_insertion_point(field_set_allocated:msg_maj.RoomOption.xz_option)
}

// optional .msg_maj.XLOption xl_option = 15;
bool RoomOption::has_xl_option() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void RoomOption::set_has_xl_option() {
  _has_bits_[0] |= 0x00000800u;
}
void RoomOption::clear_has_xl_option() {
  _has_bits_[0] &= ~0x00000800u;
}
void RoomOption::clear_xl_option() {
  if (xl_option_ != NULL) xl_option_->::msg_maj::XLOption::Clear();
  clear_has_xl_option();
}
const ::msg_maj::XLOption& RoomOption::xl_option() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoomOption.xl_option)
  return xl_option_ != NULL ? *xl_option_ : *default_instance_->xl_option_;
}
::msg_maj::XLOption* RoomOption::mutable_xl_option() {
  set_has_xl_option();
  if (xl_option_ == NULL) {
    xl_option_ = new ::msg_maj::XLOption;
  }
  // @@protoc_insertion_point(field_mutable:msg_maj.RoomOption.xl_option)
  return xl_option_;
}
::msg_maj::XLOption* RoomOption::release_xl_option() {
  // @@protoc_insertion_point(field_release:msg_maj.RoomOption.xl_option)
  clear_has_xl_option();
  ::msg_maj::XLOption* temp = xl_option_;
  xl_option_ = NULL;
  return temp;
}
void RoomOption::set_allocated_xl_option(::msg_maj::XLOption* xl_option) {
  delete xl_option_;
  xl_option_ = xl_option;
  if (xl_option) {
    set_has_xl_option();
  } else {
    clear_has_xl_option();
  }
  // @@protoc_insertion_point(field_set_allocated:msg_maj.RoomOption.xl_option)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoomCardPriceReq::RoomCardPriceReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.RoomCardPriceReq)
}

void RoomCardPriceReq::InitAsDefaultInstance() {
}

RoomCardPriceReq::RoomCardPriceReq(const RoomCardPriceReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.RoomCardPriceReq)
}

void RoomCardPriceReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RoomCardPriceReq::~RoomCardPriceReq() {
  // @@protoc_insertion_point(destructor:msg_maj.RoomCardPriceReq)
  SharedDtor();
}

void RoomCardPriceReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RoomCardPriceReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoomCardPriceReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoomCardPriceReq_descriptor_;
}

const RoomCardPriceReq& RoomCardPriceReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5froom_2eproto();
  return *default_instance_;
}

RoomCardPriceReq* RoomCardPriceReq::default_instance_ = NULL;

RoomCardPriceReq* RoomCardPriceReq::New(::google::protobuf::Arena* arena) const {
  RoomCardPriceReq* n = new RoomCardPriceReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoomCardPriceReq::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.RoomCardPriceReq)
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RoomCardPriceReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.RoomCardPriceReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.RoomCardPriceReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.RoomCardPriceReq)
  return false;
#undef DO_
}

void RoomCardPriceReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.RoomCardPriceReq)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.RoomCardPriceReq)
}

::google::protobuf::uint8* RoomCardPriceReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.RoomCardPriceReq)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.RoomCardPriceReq)
  return target;
}

int RoomCardPriceReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.RoomCardPriceReq)
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoomCardPriceReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.RoomCardPriceReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RoomCardPriceReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RoomCardPriceReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.RoomCardPriceReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.RoomCardPriceReq)
    MergeFrom(*source);
  }
}

void RoomCardPriceReq::MergeFrom(const RoomCardPriceReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.RoomCardPriceReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void RoomCardPriceReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.RoomCardPriceReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoomCardPriceReq::CopyFrom(const RoomCardPriceReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.RoomCardPriceReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoomCardPriceReq::IsInitialized() const {

  return true;
}

void RoomCardPriceReq::Swap(RoomCardPriceReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoomCardPriceReq::InternalSwap(RoomCardPriceReq* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoomCardPriceReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RoomCardPriceReq_descriptor_;
  metadata.reflection = RoomCardPriceReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoomCardPriceReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoomCardPriceResp::kRoomCardsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoomCardPriceResp::RoomCardPriceResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.RoomCardPriceResp)
}

void RoomCardPriceResp::InitAsDefaultInstance() {
}

RoomCardPriceResp::RoomCardPriceResp(const RoomCardPriceResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.RoomCardPriceResp)
}

void RoomCardPriceResp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RoomCardPriceResp::~RoomCardPriceResp() {
  // @@protoc_insertion_point(destructor:msg_maj.RoomCardPriceResp)
  SharedDtor();
}

void RoomCardPriceResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RoomCardPriceResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoomCardPriceResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoomCardPriceResp_descriptor_;
}

const RoomCardPriceResp& RoomCardPriceResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5froom_2eproto();
  return *default_instance_;
}

RoomCardPriceResp* RoomCardPriceResp::default_instance_ = NULL;

RoomCardPriceResp* RoomCardPriceResp::New(::google::protobuf::Arena* arena) const {
  RoomCardPriceResp* n = new RoomCardPriceResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoomCardPriceResp::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.RoomCardPriceResp)
  room_cards_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RoomCardPriceResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.RoomCardPriceResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 room_cards = 1;
      case 1: {
        if (tag == 8) {
         parse_room_cards:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8, input, this->mutable_room_cards())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_room_cards())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_room_cards;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.RoomCardPriceResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.RoomCardPriceResp)
  return false;
#undef DO_
}

void RoomCardPriceResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.RoomCardPriceResp)
  // repeated uint32 room_cards = 1;
  for (int i = 0; i < this->room_cards_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->room_cards(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.RoomCardPriceResp)
}

::google::protobuf::uint8* RoomCardPriceResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.RoomCardPriceResp)
  // repeated uint32 room_cards = 1;
  for (int i = 0; i < this->room_cards_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(1, this->room_cards(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.RoomCardPriceResp)
  return target;
}

int RoomCardPriceResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.RoomCardPriceResp)
  int total_size = 0;

  // repeated uint32 room_cards = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->room_cards_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->room_cards(i));
    }
    total_size += 1 * this->room_cards_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoomCardPriceResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.RoomCardPriceResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RoomCardPriceResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RoomCardPriceResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.RoomCardPriceResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.RoomCardPriceResp)
    MergeFrom(*source);
  }
}

void RoomCardPriceResp::MergeFrom(const RoomCardPriceResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.RoomCardPriceResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  room_cards_.MergeFrom(from.room_cards_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void RoomCardPriceResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.RoomCardPriceResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoomCardPriceResp::CopyFrom(const RoomCardPriceResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.RoomCardPriceResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoomCardPriceResp::IsInitialized() const {

  return true;
}

void RoomCardPriceResp::Swap(RoomCardPriceResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoomCardPriceResp::InternalSwap(RoomCardPriceResp* other) {
  room_cards_.UnsafeArenaSwap(&other->room_cards_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoomCardPriceResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RoomCardPriceResp_descriptor_;
  metadata.reflection = RoomCardPriceResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoomCardPriceResp

// repeated uint32 room_cards = 1;
int RoomCardPriceResp::room_cards_size() const {
  return room_cards_.size();
}
void RoomCardPriceResp::clear_room_cards() {
  room_cards_.Clear();
}
 ::google::protobuf::uint32 RoomCardPriceResp::room_cards(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.RoomCardPriceResp.room_cards)
  return room_cards_.Get(index);
}
 void RoomCardPriceResp::set_room_cards(int index, ::google::protobuf::uint32 value) {
  room_cards_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg_maj.RoomCardPriceResp.room_cards)
}
 void RoomCardPriceResp::add_room_cards(::google::protobuf::uint32 value) {
  room_cards_.Add(value);
  // @@protoc_insertion_point(field_add:msg_maj.RoomCardPriceResp.room_cards)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
RoomCardPriceResp::room_cards() const {
  // @@protoc_insertion_point(field_list:msg_maj.RoomCardPriceResp.room_cards)
  return room_cards_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
RoomCardPriceResp::mutable_room_cards() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.RoomCardPriceResp.room_cards)
  return &room_cards_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SyncRommInnInfo::kInnIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SyncRommInnInfo::SyncRommInnInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.SyncRommInnInfo)
}

void SyncRommInnInfo::InitAsDefaultInstance() {
}

SyncRommInnInfo::SyncRommInnInfo(const SyncRommInnInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.SyncRommInnInfo)
}

void SyncRommInnInfo::SharedCtor() {
  _cached_size_ = 0;
  inn_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SyncRommInnInfo::~SyncRommInnInfo() {
  // @@protoc_insertion_point(destructor:msg_maj.SyncRommInnInfo)
  SharedDtor();
}

void SyncRommInnInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SyncRommInnInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SyncRommInnInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SyncRommInnInfo_descriptor_;
}

const SyncRommInnInfo& SyncRommInnInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5froom_2eproto();
  return *default_instance_;
}

SyncRommInnInfo* SyncRommInnInfo::default_instance_ = NULL;

SyncRommInnInfo* SyncRommInnInfo::New(::google::protobuf::Arena* arena) const {
  SyncRommInnInfo* n = new SyncRommInnInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SyncRommInnInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.SyncRommInnInfo)
  inn_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SyncRommInnInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.SyncRommInnInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 inn_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &inn_id_)));
          set_has_inn_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.SyncRommInnInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.SyncRommInnInfo)
  return false;
#undef DO_
}

void SyncRommInnInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.SyncRommInnInfo)
  // required int32 inn_id = 1;
  if (has_inn_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->inn_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.SyncRommInnInfo)
}

::google::protobuf::uint8* SyncRommInnInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.SyncRommInnInfo)
  // required int32 inn_id = 1;
  if (has_inn_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->inn_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.SyncRommInnInfo)
  return target;
}

int SyncRommInnInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.SyncRommInnInfo)
  int total_size = 0;

  // required int32 inn_id = 1;
  if (has_inn_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->inn_id());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncRommInnInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.SyncRommInnInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SyncRommInnInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SyncRommInnInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.SyncRommInnInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.SyncRommInnInfo)
    MergeFrom(*source);
  }
}

void SyncRommInnInfo::MergeFrom(const SyncRommInnInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.SyncRommInnInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_inn_id()) {
      set_inn_id(from.inn_id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SyncRommInnInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.SyncRommInnInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncRommInnInfo::CopyFrom(const SyncRommInnInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.SyncRommInnInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncRommInnInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SyncRommInnInfo::Swap(SyncRommInnInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SyncRommInnInfo::InternalSwap(SyncRommInnInfo* other) {
  std::swap(inn_id_, other->inn_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SyncRommInnInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SyncRommInnInfo_descriptor_;
  metadata.reflection = SyncRommInnInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SyncRommInnInfo

// required int32 inn_id = 1;
bool SyncRommInnInfo::has_inn_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SyncRommInnInfo::set_has_inn_id() {
  _has_bits_[0] |= 0x00000001u;
}
void SyncRommInnInfo::clear_has_inn_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void SyncRommInnInfo::clear_inn_id() {
  inn_id_ = 0;
  clear_has_inn_id();
}
 ::google::protobuf::int32 SyncRommInnInfo::inn_id() const {
  // @@protoc_insertion_point(field_get:msg_maj.SyncRommInnInfo.inn_id)
  return inn_id_;
}
 void SyncRommInnInfo::set_inn_id(::google::protobuf::int32 value) {
  set_has_inn_id();
  inn_id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.SyncRommInnInfo.inn_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NotifyRoomDismiss::NotifyRoomDismiss()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.NotifyRoomDismiss)
}

void NotifyRoomDismiss::InitAsDefaultInstance() {
}

NotifyRoomDismiss::NotifyRoomDismiss(const NotifyRoomDismiss& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.NotifyRoomDismiss)
}

void NotifyRoomDismiss::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotifyRoomDismiss::~NotifyRoomDismiss() {
  // @@protoc_insertion_point(destructor:msg_maj.NotifyRoomDismiss)
  SharedDtor();
}

void NotifyRoomDismiss::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NotifyRoomDismiss::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifyRoomDismiss::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifyRoomDismiss_descriptor_;
}

const NotifyRoomDismiss& NotifyRoomDismiss::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5froom_2eproto();
  return *default_instance_;
}

NotifyRoomDismiss* NotifyRoomDismiss::default_instance_ = NULL;

NotifyRoomDismiss* NotifyRoomDismiss::New(::google::protobuf::Arena* arena) const {
  NotifyRoomDismiss* n = new NotifyRoomDismiss;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NotifyRoomDismiss::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.NotifyRoomDismiss)
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool NotifyRoomDismiss::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.NotifyRoomDismiss)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.NotifyRoomDismiss)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.NotifyRoomDismiss)
  return false;
#undef DO_
}

void NotifyRoomDismiss::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.NotifyRoomDismiss)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.NotifyRoomDismiss)
}

::google::protobuf::uint8* NotifyRoomDismiss::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.NotifyRoomDismiss)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.NotifyRoomDismiss)
  return target;
}

int NotifyRoomDismiss::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.NotifyRoomDismiss)
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifyRoomDismiss::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.NotifyRoomDismiss)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const NotifyRoomDismiss* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const NotifyRoomDismiss>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.NotifyRoomDismiss)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.NotifyRoomDismiss)
    MergeFrom(*source);
  }
}

void NotifyRoomDismiss::MergeFrom(const NotifyRoomDismiss& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.NotifyRoomDismiss)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void NotifyRoomDismiss::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.NotifyRoomDismiss)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyRoomDismiss::CopyFrom(const NotifyRoomDismiss& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.NotifyRoomDismiss)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyRoomDismiss::IsInitialized() const {

  return true;
}

void NotifyRoomDismiss::Swap(NotifyRoomDismiss* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NotifyRoomDismiss::InternalSwap(NotifyRoomDismiss* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NotifyRoomDismiss::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifyRoomDismiss_descriptor_;
  metadata.reflection = NotifyRoomDismiss_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NotifyRoomDismiss

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StartRobotReq::kSessionIdFieldNumber;
const int StartRobotReq::kUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StartRobotReq::StartRobotReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.StartRobotReq)
}

void StartRobotReq::InitAsDefaultInstance() {
}

StartRobotReq::StartRobotReq(const StartRobotReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.StartRobotReq)
}

void StartRobotReq::SharedCtor() {
  _cached_size_ = 0;
  session_id_ = 0u;
  uid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StartRobotReq::~StartRobotReq() {
  // @@protoc_insertion_point(destructor:msg_maj.StartRobotReq)
  SharedDtor();
}

void StartRobotReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void StartRobotReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StartRobotReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StartRobotReq_descriptor_;
}

const StartRobotReq& StartRobotReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5froom_2eproto();
  return *default_instance_;
}

StartRobotReq* StartRobotReq::default_instance_ = NULL;

StartRobotReq* StartRobotReq::New(::google::protobuf::Arena* arena) const {
  StartRobotReq* n = new StartRobotReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StartRobotReq::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.StartRobotReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(StartRobotReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<StartRobotReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(uid_, session_id_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool StartRobotReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.StartRobotReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 session_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &session_id_)));
          set_has_session_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_uid;
        break;
      }

      // required uint64 uid = 2;
      case 2: {
        if (tag == 16) {
         parse_uid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.StartRobotReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.StartRobotReq)
  return false;
#undef DO_
}

void StartRobotReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.StartRobotReq)
  // required uint32 session_id = 1;
  if (has_session_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->session_id(), output);
  }

  // required uint64 uid = 2;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->uid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.StartRobotReq)
}

::google::protobuf::uint8* StartRobotReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.StartRobotReq)
  // required uint32 session_id = 1;
  if (has_session_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->session_id(), target);
  }

  // required uint64 uid = 2;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->uid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.StartRobotReq)
  return target;
}

int StartRobotReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:msg_maj.StartRobotReq)
  int total_size = 0;

  if (has_session_id()) {
    // required uint32 session_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->session_id());
  }

  if (has_uid()) {
    // required uint64 uid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uid());
  }

  return total_size;
}
int StartRobotReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.StartRobotReq)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint32 session_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->session_id());

    // required uint64 uid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StartRobotReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.StartRobotReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const StartRobotReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const StartRobotReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.StartRobotReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.StartRobotReq)
    MergeFrom(*source);
  }
}

void StartRobotReq::MergeFrom(const StartRobotReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.StartRobotReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_session_id()) {
      set_session_id(from.session_id());
    }
    if (from.has_uid()) {
      set_uid(from.uid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void StartRobotReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.StartRobotReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartRobotReq::CopyFrom(const StartRobotReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.StartRobotReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartRobotReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void StartRobotReq::Swap(StartRobotReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StartRobotReq::InternalSwap(StartRobotReq* other) {
  std::swap(session_id_, other->session_id_);
  std::swap(uid_, other->uid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StartRobotReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StartRobotReq_descriptor_;
  metadata.reflection = StartRobotReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StartRobotReq

// required uint32 session_id = 1;
bool StartRobotReq::has_session_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void StartRobotReq::set_has_session_id() {
  _has_bits_[0] |= 0x00000001u;
}
void StartRobotReq::clear_has_session_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void StartRobotReq::clear_session_id() {
  session_id_ = 0u;
  clear_has_session_id();
}
 ::google::protobuf::uint32 StartRobotReq::session_id() const {
  // @@protoc_insertion_point(field_get:msg_maj.StartRobotReq.session_id)
  return session_id_;
}
 void StartRobotReq::set_session_id(::google::protobuf::uint32 value) {
  set_has_session_id();
  session_id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.StartRobotReq.session_id)
}

// required uint64 uid = 2;
bool StartRobotReq::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void StartRobotReq::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
void StartRobotReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
void StartRobotReq::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
 ::google::protobuf::uint64 StartRobotReq::uid() const {
  // @@protoc_insertion_point(field_get:msg_maj.StartRobotReq.uid)
  return uid_;
}
 void StartRobotReq::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.StartRobotReq.uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StopRobotReq::kUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StopRobotReq::StopRobotReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.StopRobotReq)
}

void StopRobotReq::InitAsDefaultInstance() {
}

StopRobotReq::StopRobotReq(const StopRobotReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.StopRobotReq)
}

void StopRobotReq::SharedCtor() {
  _cached_size_ = 0;
  uid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StopRobotReq::~StopRobotReq() {
  // @@protoc_insertion_point(destructor:msg_maj.StopRobotReq)
  SharedDtor();
}

void StopRobotReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void StopRobotReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StopRobotReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StopRobotReq_descriptor_;
}

const StopRobotReq& StopRobotReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5froom_2eproto();
  return *default_instance_;
}

StopRobotReq* StopRobotReq::default_instance_ = NULL;

StopRobotReq* StopRobotReq::New(::google::protobuf::Arena* arena) const {
  StopRobotReq* n = new StopRobotReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StopRobotReq::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.StopRobotReq)
  uid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool StopRobotReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.StopRobotReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 uid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.StopRobotReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.StopRobotReq)
  return false;
#undef DO_
}

void StopRobotReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.StopRobotReq)
  // required uint64 uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->uid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.StopRobotReq)
}

::google::protobuf::uint8* StopRobotReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.StopRobotReq)
  // required uint64 uid = 1;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->uid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.StopRobotReq)
  return target;
}

int StopRobotReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.StopRobotReq)
  int total_size = 0;

  // required uint64 uid = 1;
  if (has_uid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uid());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StopRobotReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.StopRobotReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const StopRobotReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const StopRobotReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.StopRobotReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.StopRobotReq)
    MergeFrom(*source);
  }
}

void StopRobotReq::MergeFrom(const StopRobotReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.StopRobotReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uid()) {
      set_uid(from.uid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void StopRobotReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.StopRobotReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopRobotReq::CopyFrom(const StopRobotReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.StopRobotReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopRobotReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void StopRobotReq::Swap(StopRobotReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StopRobotReq::InternalSwap(StopRobotReq* other) {
  std::swap(uid_, other->uid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StopRobotReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StopRobotReq_descriptor_;
  metadata.reflection = StopRobotReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StopRobotReq

// required uint64 uid = 1;
bool StopRobotReq::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void StopRobotReq::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
void StopRobotReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
void StopRobotReq::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
 ::google::protobuf::uint64 StopRobotReq::uid() const {
  // @@protoc_insertion_point(field_get:msg_maj.StopRobotReq.uid)
  return uid_;
}
 void StopRobotReq::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.StopRobotReq.uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddRoomToWs::kRoomIdFieldNumber;
const int AddRoomToWs::kRoomInfoFieldNumber;
const int AddRoomToWs::kRoleListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddRoomToWs::AddRoomToWs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.AddRoomToWs)
}

void AddRoomToWs::InitAsDefaultInstance() {
  room_info_ = const_cast< ::msg_maj::RoomInfo*>(&::msg_maj::RoomInfo::default_instance());
}

AddRoomToWs::AddRoomToWs(const AddRoomToWs& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.AddRoomToWs)
}

void AddRoomToWs::SharedCtor() {
  _cached_size_ = 0;
  room_id_ = 0u;
  room_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AddRoomToWs::~AddRoomToWs() {
  // @@protoc_insertion_point(destructor:msg_maj.AddRoomToWs)
  SharedDtor();
}

void AddRoomToWs::SharedDtor() {
  if (this != default_instance_) {
    delete room_info_;
  }
}

void AddRoomToWs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddRoomToWs::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AddRoomToWs_descriptor_;
}

const AddRoomToWs& AddRoomToWs::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5froom_2eproto();
  return *default_instance_;
}

AddRoomToWs* AddRoomToWs::default_instance_ = NULL;

AddRoomToWs* AddRoomToWs::New(::google::protobuf::Arena* arena) const {
  AddRoomToWs* n = new AddRoomToWs;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddRoomToWs::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.AddRoomToWs)
  if (_has_bits_[0 / 32] & 3u) {
    room_id_ = 0u;
    if (has_room_info()) {
      if (room_info_ != NULL) room_info_->::msg_maj::RoomInfo::Clear();
    }
  }
  role_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool AddRoomToWs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.AddRoomToWs)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 room_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &room_id_)));
          set_has_room_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_room_info;
        break;
      }

      // required .msg_maj.RoomInfo room_info = 2;
      case 2: {
        if (tag == 18) {
         parse_room_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_room_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_role_list;
        break;
      }

      // repeated .msg_maj.RoleInfo role_list = 3;
      case 3: {
        if (tag == 26) {
         parse_role_list:
          DO_(input->IncrementRecursionDepth());
         parse_loop_role_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_role_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_role_list;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.AddRoomToWs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.AddRoomToWs)
  return false;
#undef DO_
}

void AddRoomToWs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.AddRoomToWs)
  // required uint32 room_id = 1;
  if (has_room_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->room_id(), output);
  }

  // required .msg_maj.RoomInfo room_info = 2;
  if (has_room_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->room_info_, output);
  }

  // repeated .msg_maj.RoleInfo role_list = 3;
  for (unsigned int i = 0, n = this->role_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->role_list(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.AddRoomToWs)
}

::google::protobuf::uint8* AddRoomToWs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.AddRoomToWs)
  // required uint32 room_id = 1;
  if (has_room_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->room_id(), target);
  }

  // required .msg_maj.RoomInfo room_info = 2;
  if (has_room_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->room_info_, false, target);
  }

  // repeated .msg_maj.RoleInfo role_list = 3;
  for (unsigned int i = 0, n = this->role_list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->role_list(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.AddRoomToWs)
  return target;
}

int AddRoomToWs::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:msg_maj.AddRoomToWs)
  int total_size = 0;

  if (has_room_id()) {
    // required uint32 room_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->room_id());
  }

  if (has_room_info()) {
    // required .msg_maj.RoomInfo room_info = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->room_info_);
  }

  return total_size;
}
int AddRoomToWs::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.AddRoomToWs)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint32 room_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->room_id());

    // required .msg_maj.RoomInfo room_info = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->room_info_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .msg_maj.RoleInfo role_list = 3;
  total_size += 1 * this->role_list_size();
  for (int i = 0; i < this->role_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->role_list(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddRoomToWs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.AddRoomToWs)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AddRoomToWs* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AddRoomToWs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.AddRoomToWs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.AddRoomToWs)
    MergeFrom(*source);
  }
}

void AddRoomToWs::MergeFrom(const AddRoomToWs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.AddRoomToWs)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  role_list_.MergeFrom(from.role_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_room_id()) {
      set_room_id(from.room_id());
    }
    if (from.has_room_info()) {
      mutable_room_info()->::msg_maj::RoomInfo::MergeFrom(from.room_info());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void AddRoomToWs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.AddRoomToWs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddRoomToWs::CopyFrom(const AddRoomToWs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.AddRoomToWs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddRoomToWs::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_room_info()) {
    if (!this->room_info_->IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->role_list())) return false;
  return true;
}

void AddRoomToWs::Swap(AddRoomToWs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddRoomToWs::InternalSwap(AddRoomToWs* other) {
  std::swap(room_id_, other->room_id_);
  std::swap(room_info_, other->room_info_);
  role_list_.UnsafeArenaSwap(&other->role_list_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddRoomToWs::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AddRoomToWs_descriptor_;
  metadata.reflection = AddRoomToWs_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddRoomToWs

// required uint32 room_id = 1;
bool AddRoomToWs::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AddRoomToWs::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
void AddRoomToWs::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void AddRoomToWs::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
 ::google::protobuf::uint32 AddRoomToWs::room_id() const {
  // @@protoc_insertion_point(field_get:msg_maj.AddRoomToWs.room_id)
  return room_id_;
}
 void AddRoomToWs::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.AddRoomToWs.room_id)
}

// required .msg_maj.RoomInfo room_info = 2;
bool AddRoomToWs::has_room_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AddRoomToWs::set_has_room_info() {
  _has_bits_[0] |= 0x00000002u;
}
void AddRoomToWs::clear_has_room_info() {
  _has_bits_[0] &= ~0x00000002u;
}
void AddRoomToWs::clear_room_info() {
  if (room_info_ != NULL) room_info_->::msg_maj::RoomInfo::Clear();
  clear_has_room_info();
}
const ::msg_maj::RoomInfo& AddRoomToWs::room_info() const {
  // @@protoc_insertion_point(field_get:msg_maj.AddRoomToWs.room_info)
  return room_info_ != NULL ? *room_info_ : *default_instance_->room_info_;
}
::msg_maj::RoomInfo* AddRoomToWs::mutable_room_info() {
  set_has_room_info();
  if (room_info_ == NULL) {
    room_info_ = new ::msg_maj::RoomInfo;
  }
  // @@protoc_insertion_point(field_mutable:msg_maj.AddRoomToWs.room_info)
  return room_info_;
}
::msg_maj::RoomInfo* AddRoomToWs::release_room_info() {
  // @@protoc_insertion_point(field_release:msg_maj.AddRoomToWs.room_info)
  clear_has_room_info();
  ::msg_maj::RoomInfo* temp = room_info_;
  room_info_ = NULL;
  return temp;
}
void AddRoomToWs::set_allocated_room_info(::msg_maj::RoomInfo* room_info) {
  delete room_info_;
  room_info_ = room_info;
  if (room_info) {
    set_has_room_info();
  } else {
    clear_has_room_info();
  }
  // @@protoc_insertion_point(field_set_allocated:msg_maj.AddRoomToWs.room_info)
}

// repeated .msg_maj.RoleInfo role_list = 3;
int AddRoomToWs::role_list_size() const {
  return role_list_.size();
}
void AddRoomToWs::clear_role_list() {
  role_list_.Clear();
}
const ::msg_maj::RoleInfo& AddRoomToWs::role_list(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.AddRoomToWs.role_list)
  return role_list_.Get(index);
}
::msg_maj::RoleInfo* AddRoomToWs::mutable_role_list(int index) {
  // @@protoc_insertion_point(field_mutable:msg_maj.AddRoomToWs.role_list)
  return role_list_.Mutable(index);
}
::msg_maj::RoleInfo* AddRoomToWs::add_role_list() {
  // @@protoc_insertion_point(field_add:msg_maj.AddRoomToWs.role_list)
  return role_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::msg_maj::RoleInfo >*
AddRoomToWs::mutable_role_list() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.AddRoomToWs.role_list)
  return &role_list_;
}
const ::google::protobuf::RepeatedPtrField< ::msg_maj::RoleInfo >&
AddRoomToWs::role_list() const {
  // @@protoc_insertion_point(field_list:msg_maj.AddRoomToWs.role_list)
  return role_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateRoomToWs::kRoomIdFieldNumber;
const int UpdateRoomToWs::kRoleListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateRoomToWs::UpdateRoomToWs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.UpdateRoomToWs)
}

void UpdateRoomToWs::InitAsDefaultInstance() {
}

UpdateRoomToWs::UpdateRoomToWs(const UpdateRoomToWs& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.UpdateRoomToWs)
}

void UpdateRoomToWs::SharedCtor() {
  _cached_size_ = 0;
  room_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpdateRoomToWs::~UpdateRoomToWs() {
  // @@protoc_insertion_point(destructor:msg_maj.UpdateRoomToWs)
  SharedDtor();
}

void UpdateRoomToWs::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UpdateRoomToWs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateRoomToWs::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateRoomToWs_descriptor_;
}

const UpdateRoomToWs& UpdateRoomToWs::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5froom_2eproto();
  return *default_instance_;
}

UpdateRoomToWs* UpdateRoomToWs::default_instance_ = NULL;

UpdateRoomToWs* UpdateRoomToWs::New(::google::protobuf::Arena* arena) const {
  UpdateRoomToWs* n = new UpdateRoomToWs;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateRoomToWs::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.UpdateRoomToWs)
  room_id_ = 0u;
  role_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool UpdateRoomToWs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.UpdateRoomToWs)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 room_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &room_id_)));
          set_has_room_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_role_list;
        break;
      }

      // repeated .msg_maj.RoleInfo role_list = 2;
      case 2: {
        if (tag == 18) {
         parse_role_list:
          DO_(input->IncrementRecursionDepth());
         parse_loop_role_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_role_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_role_list;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.UpdateRoomToWs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.UpdateRoomToWs)
  return false;
#undef DO_
}

void UpdateRoomToWs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.UpdateRoomToWs)
  // required uint32 room_id = 1;
  if (has_room_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->room_id(), output);
  }

  // repeated .msg_maj.RoleInfo role_list = 2;
  for (unsigned int i = 0, n = this->role_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->role_list(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.UpdateRoomToWs)
}

::google::protobuf::uint8* UpdateRoomToWs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.UpdateRoomToWs)
  // required uint32 room_id = 1;
  if (has_room_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->room_id(), target);
  }

  // repeated .msg_maj.RoleInfo role_list = 2;
  for (unsigned int i = 0, n = this->role_list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->role_list(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.UpdateRoomToWs)
  return target;
}

int UpdateRoomToWs::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.UpdateRoomToWs)
  int total_size = 0;

  // required uint32 room_id = 1;
  if (has_room_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->room_id());
  }
  // repeated .msg_maj.RoleInfo role_list = 2;
  total_size += 1 * this->role_list_size();
  for (int i = 0; i < this->role_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->role_list(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateRoomToWs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.UpdateRoomToWs)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const UpdateRoomToWs* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateRoomToWs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.UpdateRoomToWs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.UpdateRoomToWs)
    MergeFrom(*source);
  }
}

void UpdateRoomToWs::MergeFrom(const UpdateRoomToWs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.UpdateRoomToWs)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  role_list_.MergeFrom(from.role_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_room_id()) {
      set_room_id(from.room_id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void UpdateRoomToWs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.UpdateRoomToWs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateRoomToWs::CopyFrom(const UpdateRoomToWs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.UpdateRoomToWs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateRoomToWs::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->role_list())) return false;
  return true;
}

void UpdateRoomToWs::Swap(UpdateRoomToWs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateRoomToWs::InternalSwap(UpdateRoomToWs* other) {
  std::swap(room_id_, other->room_id_);
  role_list_.UnsafeArenaSwap(&other->role_list_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateRoomToWs::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateRoomToWs_descriptor_;
  metadata.reflection = UpdateRoomToWs_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdateRoomToWs

// required uint32 room_id = 1;
bool UpdateRoomToWs::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UpdateRoomToWs::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
void UpdateRoomToWs::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void UpdateRoomToWs::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
 ::google::protobuf::uint32 UpdateRoomToWs::room_id() const {
  // @@protoc_insertion_point(field_get:msg_maj.UpdateRoomToWs.room_id)
  return room_id_;
}
 void UpdateRoomToWs::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.UpdateRoomToWs.room_id)
}

// repeated .msg_maj.RoleInfo role_list = 2;
int UpdateRoomToWs::role_list_size() const {
  return role_list_.size();
}
void UpdateRoomToWs::clear_role_list() {
  role_list_.Clear();
}
const ::msg_maj::RoleInfo& UpdateRoomToWs::role_list(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.UpdateRoomToWs.role_list)
  return role_list_.Get(index);
}
::msg_maj::RoleInfo* UpdateRoomToWs::mutable_role_list(int index) {
  // @@protoc_insertion_point(field_mutable:msg_maj.UpdateRoomToWs.role_list)
  return role_list_.Mutable(index);
}
::msg_maj::RoleInfo* UpdateRoomToWs::add_role_list() {
  // @@protoc_insertion_point(field_add:msg_maj.UpdateRoomToWs.role_list)
  return role_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::msg_maj::RoleInfo >*
UpdateRoomToWs::mutable_role_list() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.UpdateRoomToWs.role_list)
  return &role_list_;
}
const ::google::protobuf::RepeatedPtrField< ::msg_maj::RoleInfo >&
UpdateRoomToWs::role_list() const {
  // @@protoc_insertion_point(field_list:msg_maj.UpdateRoomToWs.role_list)
  return role_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RemoveRoomToWs::kRoomIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemoveRoomToWs::RemoveRoomToWs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.RemoveRoomToWs)
}

void RemoveRoomToWs::InitAsDefaultInstance() {
}

RemoveRoomToWs::RemoveRoomToWs(const RemoveRoomToWs& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.RemoveRoomToWs)
}

void RemoveRoomToWs::SharedCtor() {
  _cached_size_ = 0;
  room_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RemoveRoomToWs::~RemoveRoomToWs() {
  // @@protoc_insertion_point(destructor:msg_maj.RemoveRoomToWs)
  SharedDtor();
}

void RemoveRoomToWs::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RemoveRoomToWs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RemoveRoomToWs::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RemoveRoomToWs_descriptor_;
}

const RemoveRoomToWs& RemoveRoomToWs::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5froom_2eproto();
  return *default_instance_;
}

RemoveRoomToWs* RemoveRoomToWs::default_instance_ = NULL;

RemoveRoomToWs* RemoveRoomToWs::New(::google::protobuf::Arena* arena) const {
  RemoveRoomToWs* n = new RemoveRoomToWs;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RemoveRoomToWs::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.RemoveRoomToWs)
  room_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RemoveRoomToWs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.RemoveRoomToWs)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 room_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &room_id_)));
          set_has_room_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.RemoveRoomToWs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.RemoveRoomToWs)
  return false;
#undef DO_
}

void RemoveRoomToWs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.RemoveRoomToWs)
  // required uint32 room_id = 1;
  if (has_room_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->room_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.RemoveRoomToWs)
}

::google::protobuf::uint8* RemoveRoomToWs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.RemoveRoomToWs)
  // required uint32 room_id = 1;
  if (has_room_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->room_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.RemoveRoomToWs)
  return target;
}

int RemoveRoomToWs::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.RemoveRoomToWs)
  int total_size = 0;

  // required uint32 room_id = 1;
  if (has_room_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->room_id());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RemoveRoomToWs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.RemoveRoomToWs)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RemoveRoomToWs* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RemoveRoomToWs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.RemoveRoomToWs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.RemoveRoomToWs)
    MergeFrom(*source);
  }
}

void RemoveRoomToWs::MergeFrom(const RemoveRoomToWs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.RemoveRoomToWs)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_room_id()) {
      set_room_id(from.room_id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void RemoveRoomToWs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.RemoveRoomToWs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveRoomToWs::CopyFrom(const RemoveRoomToWs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.RemoveRoomToWs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveRoomToWs::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RemoveRoomToWs::Swap(RemoveRoomToWs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemoveRoomToWs::InternalSwap(RemoveRoomToWs* other) {
  std::swap(room_id_, other->room_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RemoveRoomToWs::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RemoveRoomToWs_descriptor_;
  metadata.reflection = RemoveRoomToWs_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RemoveRoomToWs

// required uint32 room_id = 1;
bool RemoveRoomToWs::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RemoveRoomToWs::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
void RemoveRoomToWs::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void RemoveRoomToWs::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
 ::google::protobuf::uint32 RemoveRoomToWs::room_id() const {
  // @@protoc_insertion_point(field_get:msg_maj.RemoveRoomToWs.room_id)
  return room_id_;
}
 void RemoveRoomToWs::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RemoveRoomToWs.room_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NtCoinNotenough::NtCoinNotenough()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.NtCoinNotenough)
}

void NtCoinNotenough::InitAsDefaultInstance() {
}

NtCoinNotenough::NtCoinNotenough(const NtCoinNotenough& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.NtCoinNotenough)
}

void NtCoinNotenough::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NtCoinNotenough::~NtCoinNotenough() {
  // @@protoc_insertion_point(destructor:msg_maj.NtCoinNotenough)
  SharedDtor();
}

void NtCoinNotenough::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NtCoinNotenough::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NtCoinNotenough::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NtCoinNotenough_descriptor_;
}

const NtCoinNotenough& NtCoinNotenough::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5froom_2eproto();
  return *default_instance_;
}

NtCoinNotenough* NtCoinNotenough::default_instance_ = NULL;

NtCoinNotenough* NtCoinNotenough::New(::google::protobuf::Arena* arena) const {
  NtCoinNotenough* n = new NtCoinNotenough;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NtCoinNotenough::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.NtCoinNotenough)
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool NtCoinNotenough::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.NtCoinNotenough)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.NtCoinNotenough)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.NtCoinNotenough)
  return false;
#undef DO_
}

void NtCoinNotenough::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.NtCoinNotenough)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.NtCoinNotenough)
}

::google::protobuf::uint8* NtCoinNotenough::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.NtCoinNotenough)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.NtCoinNotenough)
  return target;
}

int NtCoinNotenough::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.NtCoinNotenough)
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NtCoinNotenough::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.NtCoinNotenough)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const NtCoinNotenough* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const NtCoinNotenough>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.NtCoinNotenough)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.NtCoinNotenough)
    MergeFrom(*source);
  }
}

void NtCoinNotenough::MergeFrom(const NtCoinNotenough& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.NtCoinNotenough)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void NtCoinNotenough::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.NtCoinNotenough)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NtCoinNotenough::CopyFrom(const NtCoinNotenough& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.NtCoinNotenough)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NtCoinNotenough::IsInitialized() const {

  return true;
}

void NtCoinNotenough::Swap(NtCoinNotenough* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NtCoinNotenough::InternalSwap(NtCoinNotenough* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NtCoinNotenough::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NtCoinNotenough_descriptor_;
  metadata.reflection = NtCoinNotenough_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NtCoinNotenough

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace msg_maj

// @@protoc_insertion_point(global_scope)
