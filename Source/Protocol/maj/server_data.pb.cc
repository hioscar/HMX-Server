// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server_data.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "server_data.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace fogs {
namespace proto {
namespace msg {

namespace {

const ::google::protobuf::Descriptor* QueryPlayerRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QueryPlayerRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* QueryPlayerResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QueryPlayerResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* InputInviteCodeReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InputInviteCodeReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* InputInviteCodeResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InputInviteCodeResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* SavePlayerRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SavePlayerRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* DBAccountID_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DBAccountID_reflection_ = NULL;
const ::google::protobuf::Descriptor* QueryRankRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QueryRankRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* QueryBase_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QueryBase_reflection_ = NULL;
const ::google::protobuf::Descriptor* QuerySaveRanks_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QuerySaveRanks_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateSaveRanks_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateSaveRanks_reflection_ = NULL;
const ::google::protobuf::Descriptor* QueryRankReqResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QueryRankReqResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdatePlayerSort_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdatePlayerSort_reflection_ = NULL;
const ::google::protobuf::Descriptor* QueryHistoryRequset_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QueryHistoryRequset_reflection_ = NULL;
const ::google::protobuf::Descriptor* QueryHistoryResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QueryHistoryResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* SaveHistoryRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SaveHistoryRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ZhanjiRecordAdd_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ZhanjiRecordAdd_reflection_ = NULL;
const ::google::protobuf::Descriptor* ZhanJiFinish_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ZhanJiFinish_reflection_ = NULL;
const ::google::protobuf::Descriptor* ZhanjiQueryList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ZhanjiQueryList_reflection_ = NULL;
const ::google::protobuf::Descriptor* ZhanjiQueryResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ZhanjiQueryResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* ZhanjiQueryRoom_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ZhanjiQueryRoom_reflection_ = NULL;
const ::google::protobuf::Descriptor* ZhanjiQueryRoomResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ZhanjiQueryRoomResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* ZhanjiQueryInnReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ZhanjiQueryInnReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ZhanjiQueryInnResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ZhanjiQueryInnResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* ZhanjiQueryReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ZhanjiQueryReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* ZhanjiRespReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ZhanjiRespReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* QueryMailRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QueryMailRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* QueryMailSystemLogRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QueryMailSystemLogRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* QueryMailResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QueryMailResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* QueryMailSystemLogResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QueryMailSystemLogResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* SaveMailRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SaveMailRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* SaveMailSystemLogRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SaveMailSystemLogRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetMaxUUIDRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetMaxUUIDRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* UUID_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UUID_reflection_ = NULL;
const ::google::protobuf::Descriptor* UUIDData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UUIDData_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetMaxUUIDResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetMaxUUIDResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* AccountEnterGame_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AccountEnterGame_reflection_ = NULL;
const ::google::protobuf::Descriptor* AccountLeaveGame_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AccountLeaveGame_reflection_ = NULL;
const ::google::protobuf::Descriptor* ChangeGameServer_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ChangeGameServer_reflection_ = NULL;
const ::google::protobuf::Descriptor* RechargeRoomCard_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RechargeRoomCard_reflection_ = NULL;
const ::google::protobuf::Descriptor* SaveNoticeRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SaveNoticeRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* QueryOfflineUserProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QueryOfflineUserProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* QueryWatchUserProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QueryWatchUserProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* ShareData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ShareData_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetShareDataRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetShareDataRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetShareDataResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetShareDataResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* SaveShareData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SaveShareData_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_server_5fdata_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_server_5fdata_2eproto() {
  protobuf_AddDesc_server_5fdata_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "server_data.proto");
  GOOGLE_CHECK(file != NULL);
  QueryPlayerRequest_descriptor_ = file->message_type(0);
  static const int QueryPlayerRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryPlayerRequest, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryPlayerRequest, account_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryPlayerRequest, room_id_),
  };
  QueryPlayerRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QueryPlayerRequest_descriptor_,
      QueryPlayerRequest::default_instance_,
      QueryPlayerRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryPlayerRequest, _has_bits_[0]),
      -1,
      -1,
      sizeof(QueryPlayerRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryPlayerRequest, _internal_metadata_),
      -1);
  QueryPlayerResponse_descriptor_ = file->message_type(1);
  static const int QueryPlayerResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryPlayerResponse, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryPlayerResponse, role_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryPlayerResponse, room_id_),
  };
  QueryPlayerResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QueryPlayerResponse_descriptor_,
      QueryPlayerResponse::default_instance_,
      QueryPlayerResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryPlayerResponse, _has_bits_[0]),
      -1,
      -1,
      sizeof(QueryPlayerResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryPlayerResponse, _internal_metadata_),
      -1);
  InputInviteCodeReq_descriptor_ = file->message_type(2);
  static const int InputInviteCodeReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputInviteCodeReq, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputInviteCodeReq, code_),
  };
  InputInviteCodeReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      InputInviteCodeReq_descriptor_,
      InputInviteCodeReq::default_instance_,
      InputInviteCodeReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputInviteCodeReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(InputInviteCodeReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputInviteCodeReq, _internal_metadata_),
      -1);
  InputInviteCodeResp_descriptor_ = file->message_type(3);
  static const int InputInviteCodeResp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputInviteCodeResp, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputInviteCodeResp, room_card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputInviteCodeResp, code_info_),
  };
  InputInviteCodeResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      InputInviteCodeResp_descriptor_,
      InputInviteCodeResp::default_instance_,
      InputInviteCodeResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputInviteCodeResp, _has_bits_[0]),
      -1,
      -1,
      sizeof(InputInviteCodeResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputInviteCodeResp, _internal_metadata_),
      -1);
  SavePlayerRequest_descriptor_ = file->message_type(4);
  static const int SavePlayerRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SavePlayerRequest, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SavePlayerRequest, role_info_),
  };
  SavePlayerRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SavePlayerRequest_descriptor_,
      SavePlayerRequest::default_instance_,
      SavePlayerRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SavePlayerRequest, _has_bits_[0]),
      -1,
      -1,
      sizeof(SavePlayerRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SavePlayerRequest, _internal_metadata_),
      -1);
  DBAccountID_descriptor_ = file->message_type(5);
  static const int DBAccountID_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBAccountID, account_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBAccountID, id_),
  };
  DBAccountID_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DBAccountID_descriptor_,
      DBAccountID::default_instance_,
      DBAccountID_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBAccountID, _has_bits_[0]),
      -1,
      -1,
      sizeof(DBAccountID),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBAccountID, _internal_metadata_),
      -1);
  QueryRankRequest_descriptor_ = file->message_type(6);
  static const int QueryRankRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryRankRequest, ranktype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryRankRequest, char_id_),
  };
  QueryRankRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QueryRankRequest_descriptor_,
      QueryRankRequest::default_instance_,
      QueryRankRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryRankRequest, _has_bits_[0]),
      -1,
      -1,
      sizeof(QueryRankRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryRankRequest, _internal_metadata_),
      -1);
  QueryBase_descriptor_ = file->message_type(7);
  static const int QueryBase_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryBase, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryBase, value_),
  };
  QueryBase_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QueryBase_descriptor_,
      QueryBase::default_instance_,
      QueryBase_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryBase, _has_bits_[0]),
      -1,
      -1,
      sizeof(QueryBase),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryBase, _internal_metadata_),
      -1);
  QuerySaveRanks_descriptor_ = file->message_type(8);
  static const int QuerySaveRanks_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuerySaveRanks, ranktype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuerySaveRanks, winsinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuerySaveRanks, scoreinfo_),
  };
  QuerySaveRanks_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QuerySaveRanks_descriptor_,
      QuerySaveRanks::default_instance_,
      QuerySaveRanks_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuerySaveRanks, _has_bits_[0]),
      -1,
      -1,
      sizeof(QuerySaveRanks),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuerySaveRanks, _internal_metadata_),
      -1);
  UpdateSaveRanks_descriptor_ = file->message_type(9);
  static const int UpdateSaveRanks_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateSaveRanks, ranktype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateSaveRanks, winsinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateSaveRanks, scoreinfo_),
  };
  UpdateSaveRanks_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UpdateSaveRanks_descriptor_,
      UpdateSaveRanks::default_instance_,
      UpdateSaveRanks_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateSaveRanks, _has_bits_[0]),
      -1,
      -1,
      sizeof(UpdateSaveRanks),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateSaveRanks, _internal_metadata_),
      -1);
  QueryRankReqResp_descriptor_ = file->message_type(10);
  static const int QueryRankReqResp_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryRankReqResp, ranktype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryRankReqResp, char_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryRankReqResp, last_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryRankReqResp, ranklist_),
  };
  QueryRankReqResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QueryRankReqResp_descriptor_,
      QueryRankReqResp::default_instance_,
      QueryRankReqResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryRankReqResp, _has_bits_[0]),
      -1,
      -1,
      sizeof(QueryRankReqResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryRankReqResp, _internal_metadata_),
      -1);
  UpdatePlayerSort_descriptor_ = file->message_type(11);
  static const int UpdatePlayerSort_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdatePlayerSort, ranktype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdatePlayerSort, char_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdatePlayerSort, sort_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdatePlayerSort, value_),
  };
  UpdatePlayerSort_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UpdatePlayerSort_descriptor_,
      UpdatePlayerSort::default_instance_,
      UpdatePlayerSort_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdatePlayerSort, _has_bits_[0]),
      -1,
      -1,
      sizeof(UpdatePlayerSort),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdatePlayerSort, _internal_metadata_),
      -1);
  QueryHistoryRequset_descriptor_ = file->message_type(12);
  static const int QueryHistoryRequset_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryHistoryRequset, start_index_),
  };
  QueryHistoryRequset_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QueryHistoryRequset_descriptor_,
      QueryHistoryRequset::default_instance_,
      QueryHistoryRequset_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryHistoryRequset, _has_bits_[0]),
      -1,
      -1,
      sizeof(QueryHistoryRequset),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryHistoryRequset, _internal_metadata_),
      -1);
  QueryHistoryResponse_descriptor_ = file->message_type(13);
  static const int QueryHistoryResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryHistoryResponse, last_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryHistoryResponse, record_list_),
  };
  QueryHistoryResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QueryHistoryResponse_descriptor_,
      QueryHistoryResponse::default_instance_,
      QueryHistoryResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryHistoryResponse, _has_bits_[0]),
      -1,
      -1,
      sizeof(QueryHistoryResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryHistoryResponse, _internal_metadata_),
      -1);
  SaveHistoryRequest_descriptor_ = file->message_type(14);
  static const int SaveHistoryRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaveHistoryRequest, records_),
  };
  SaveHistoryRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SaveHistoryRequest_descriptor_,
      SaveHistoryRequest::default_instance_,
      SaveHistoryRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaveHistoryRequest, _has_bits_[0]),
      -1,
      -1,
      sizeof(SaveHistoryRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaveHistoryRequest, _internal_metadata_),
      -1);
  ZhanjiRecordAdd_descriptor_ = file->message_type(15);
  static const int ZhanjiRecordAdd_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhanjiRecordAdd, record_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhanjiRecordAdd, room_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhanjiRecordAdd, room_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhanjiRecordAdd, role_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhanjiRecordAdd, inn_record_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhanjiRecordAdd, inn_replay_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhanjiRecordAdd, start_time_),
  };
  ZhanjiRecordAdd_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ZhanjiRecordAdd_descriptor_,
      ZhanjiRecordAdd::default_instance_,
      ZhanjiRecordAdd_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhanjiRecordAdd, _has_bits_[0]),
      -1,
      -1,
      sizeof(ZhanjiRecordAdd),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhanjiRecordAdd, _internal_metadata_),
      -1);
  ZhanJiFinish_descriptor_ = file->message_type(16);
  static const int ZhanJiFinish_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhanJiFinish, record_id_),
  };
  ZhanJiFinish_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ZhanJiFinish_descriptor_,
      ZhanJiFinish::default_instance_,
      ZhanJiFinish_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhanJiFinish, _has_bits_[0]),
      -1,
      -1,
      sizeof(ZhanJiFinish),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhanJiFinish, _internal_metadata_),
      -1);
  ZhanjiQueryList_descriptor_ = file->message_type(17);
  static const int ZhanjiQueryList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhanjiQueryList, char_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhanjiQueryList, req_),
  };
  ZhanjiQueryList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ZhanjiQueryList_descriptor_,
      ZhanjiQueryList::default_instance_,
      ZhanjiQueryList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhanjiQueryList, _has_bits_[0]),
      -1,
      -1,
      sizeof(ZhanjiQueryList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhanjiQueryList, _internal_metadata_),
      -1);
  ZhanjiQueryResp_descriptor_ = file->message_type(18);
  static const int ZhanjiQueryResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhanjiQueryResp, char_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhanjiQueryResp, resp_),
  };
  ZhanjiQueryResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ZhanjiQueryResp_descriptor_,
      ZhanjiQueryResp::default_instance_,
      ZhanjiQueryResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhanjiQueryResp, _has_bits_[0]),
      -1,
      -1,
      sizeof(ZhanjiQueryResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhanjiQueryResp, _internal_metadata_),
      -1);
  ZhanjiQueryRoom_descriptor_ = file->message_type(19);
  static const int ZhanjiQueryRoom_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhanjiQueryRoom, char_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhanjiQueryRoom, req_),
  };
  ZhanjiQueryRoom_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ZhanjiQueryRoom_descriptor_,
      ZhanjiQueryRoom::default_instance_,
      ZhanjiQueryRoom_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhanjiQueryRoom, _has_bits_[0]),
      -1,
      -1,
      sizeof(ZhanjiQueryRoom),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhanjiQueryRoom, _internal_metadata_),
      -1);
  ZhanjiQueryRoomResp_descriptor_ = file->message_type(20);
  static const int ZhanjiQueryRoomResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhanjiQueryRoomResp, char_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhanjiQueryRoomResp, resp_),
  };
  ZhanjiQueryRoomResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ZhanjiQueryRoomResp_descriptor_,
      ZhanjiQueryRoomResp::default_instance_,
      ZhanjiQueryRoomResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhanjiQueryRoomResp, _has_bits_[0]),
      -1,
      -1,
      sizeof(ZhanjiQueryRoomResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhanjiQueryRoomResp, _internal_metadata_),
      -1);
  ZhanjiQueryInnReq_descriptor_ = file->message_type(21);
  static const int ZhanjiQueryInnReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhanjiQueryInnReq, char_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhanjiQueryInnReq, req_),
  };
  ZhanjiQueryInnReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ZhanjiQueryInnReq_descriptor_,
      ZhanjiQueryInnReq::default_instance_,
      ZhanjiQueryInnReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhanjiQueryInnReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(ZhanjiQueryInnReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhanjiQueryInnReq, _internal_metadata_),
      -1);
  ZhanjiQueryInnResp_descriptor_ = file->message_type(22);
  static const int ZhanjiQueryInnResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhanjiQueryInnResp, char_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhanjiQueryInnResp, resp_),
  };
  ZhanjiQueryInnResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ZhanjiQueryInnResp_descriptor_,
      ZhanjiQueryInnResp::default_instance_,
      ZhanjiQueryInnResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhanjiQueryInnResp, _has_bits_[0]),
      -1,
      -1,
      sizeof(ZhanjiQueryInnResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhanjiQueryInnResp, _internal_metadata_),
      -1);
  ZhanjiQueryReply_descriptor_ = file->message_type(23);
  static const int ZhanjiQueryReply_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhanjiQueryReply, char_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhanjiQueryReply, req_),
  };
  ZhanjiQueryReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ZhanjiQueryReply_descriptor_,
      ZhanjiQueryReply::default_instance_,
      ZhanjiQueryReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhanjiQueryReply, _has_bits_[0]),
      -1,
      -1,
      sizeof(ZhanjiQueryReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhanjiQueryReply, _internal_metadata_),
      -1);
  ZhanjiRespReply_descriptor_ = file->message_type(24);
  static const int ZhanjiRespReply_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhanjiRespReply, char_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhanjiRespReply, resp_),
  };
  ZhanjiRespReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ZhanjiRespReply_descriptor_,
      ZhanjiRespReply::default_instance_,
      ZhanjiRespReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhanjiRespReply, _has_bits_[0]),
      -1,
      -1,
      sizeof(ZhanjiRespReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZhanjiRespReply, _internal_metadata_),
      -1);
  QueryMailRequest_descriptor_ = file->message_type(25);
  static const int QueryMailRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryMailRequest, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryMailRequest, start_index_),
  };
  QueryMailRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QueryMailRequest_descriptor_,
      QueryMailRequest::default_instance_,
      QueryMailRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryMailRequest, _has_bits_[0]),
      -1,
      -1,
      sizeof(QueryMailRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryMailRequest, _internal_metadata_),
      -1);
  QueryMailSystemLogRequest_descriptor_ = file->message_type(26);
  static const int QueryMailSystemLogRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryMailSystemLogRequest, uid_),
  };
  QueryMailSystemLogRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QueryMailSystemLogRequest_descriptor_,
      QueryMailSystemLogRequest::default_instance_,
      QueryMailSystemLogRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryMailSystemLogRequest, _has_bits_[0]),
      -1,
      -1,
      sizeof(QueryMailSystemLogRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryMailSystemLogRequest, _internal_metadata_),
      -1);
  QueryMailResponse_descriptor_ = file->message_type(27);
  static const int QueryMailResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryMailResponse, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryMailResponse, last_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryMailResponse, record_list_),
  };
  QueryMailResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QueryMailResponse_descriptor_,
      QueryMailResponse::default_instance_,
      QueryMailResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryMailResponse, _has_bits_[0]),
      -1,
      -1,
      sizeof(QueryMailResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryMailResponse, _internal_metadata_),
      -1);
  QueryMailSystemLogResponse_descriptor_ = file->message_type(28);
  static const int QueryMailSystemLogResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryMailSystemLogResponse, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryMailSystemLogResponse, last_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryMailSystemLogResponse, record_list_),
  };
  QueryMailSystemLogResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QueryMailSystemLogResponse_descriptor_,
      QueryMailSystemLogResponse::default_instance_,
      QueryMailSystemLogResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryMailSystemLogResponse, _has_bits_[0]),
      -1,
      -1,
      sizeof(QueryMailSystemLogResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryMailSystemLogResponse, _internal_metadata_),
      -1);
  SaveMailRequest_descriptor_ = file->message_type(29);
  static const int SaveMailRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaveMailRequest, records_),
  };
  SaveMailRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SaveMailRequest_descriptor_,
      SaveMailRequest::default_instance_,
      SaveMailRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaveMailRequest, _has_bits_[0]),
      -1,
      -1,
      sizeof(SaveMailRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaveMailRequest, _internal_metadata_),
      -1);
  SaveMailSystemLogRequest_descriptor_ = file->message_type(30);
  static const int SaveMailSystemLogRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaveMailSystemLogRequest, records_),
  };
  SaveMailSystemLogRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SaveMailSystemLogRequest_descriptor_,
      SaveMailSystemLogRequest::default_instance_,
      SaveMailSystemLogRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaveMailSystemLogRequest, _has_bits_[0]),
      -1,
      -1,
      sizeof(SaveMailSystemLogRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaveMailSystemLogRequest, _internal_metadata_),
      -1);
  GetMaxUUIDRequest_descriptor_ = file->message_type(31);
  static const int GetMaxUUIDRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMaxUUIDRequest, server_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMaxUUIDRequest, uuid_type_list_),
  };
  GetMaxUUIDRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetMaxUUIDRequest_descriptor_,
      GetMaxUUIDRequest::default_instance_,
      GetMaxUUIDRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMaxUUIDRequest, _has_bits_[0]),
      -1,
      -1,
      sizeof(GetMaxUUIDRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMaxUUIDRequest, _internal_metadata_),
      -1);
  UUID_descriptor_ = file->message_type(32);
  static const int UUID_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UUID, uuid_),
  };
  UUID_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UUID_descriptor_,
      UUID::default_instance_,
      UUID_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UUID, _has_bits_[0]),
      -1,
      -1,
      sizeof(UUID),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UUID, _internal_metadata_),
      -1);
  UUIDData_descriptor_ = file->message_type(33);
  static const int UUIDData_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UUIDData, uuid_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UUIDData, uuid_),
  };
  UUIDData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UUIDData_descriptor_,
      UUIDData::default_instance_,
      UUIDData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UUIDData, _has_bits_[0]),
      -1,
      -1,
      sizeof(UUIDData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UUIDData, _internal_metadata_),
      -1);
  GetMaxUUIDResponse_descriptor_ = file->message_type(34);
  static const int GetMaxUUIDResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMaxUUIDResponse, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMaxUUIDResponse, server_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMaxUUIDResponse, uuid_list_),
  };
  GetMaxUUIDResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetMaxUUIDResponse_descriptor_,
      GetMaxUUIDResponse::default_instance_,
      GetMaxUUIDResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMaxUUIDResponse, _has_bits_[0]),
      -1,
      -1,
      sizeof(GetMaxUUIDResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMaxUUIDResponse, _internal_metadata_),
      -1);
  AccountEnterGame_descriptor_ = file->message_type(35);
  static const int AccountEnterGame_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountEnterGame, account_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountEnterGame, server_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountEnterGame, charid_),
  };
  AccountEnterGame_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AccountEnterGame_descriptor_,
      AccountEnterGame::default_instance_,
      AccountEnterGame_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountEnterGame, _has_bits_[0]),
      -1,
      -1,
      sizeof(AccountEnterGame),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountEnterGame, _internal_metadata_),
      -1);
  AccountLeaveGame_descriptor_ = file->message_type(36);
  static const int AccountLeaveGame_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountLeaveGame, account_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountLeaveGame, charid_),
  };
  AccountLeaveGame_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AccountLeaveGame_descriptor_,
      AccountLeaveGame::default_instance_,
      AccountLeaveGame_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountLeaveGame, _has_bits_[0]),
      -1,
      -1,
      sizeof(AccountLeaveGame),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountLeaveGame, _internal_metadata_),
      -1);
  ChangeGameServer_descriptor_ = file->message_type(37);
  static const int ChangeGameServer_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeGameServer, role_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeGameServer, session_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeGameServer, fepserverid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeGameServer, room_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeGameServer, icon_addr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeGameServer, mail_list_),
  };
  ChangeGameServer_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ChangeGameServer_descriptor_,
      ChangeGameServer::default_instance_,
      ChangeGameServer_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeGameServer, _has_bits_[0]),
      -1,
      -1,
      sizeof(ChangeGameServer),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeGameServer, _internal_metadata_),
      -1);
  RechargeRoomCard_descriptor_ = file->message_type(38);
  static const int RechargeRoomCard_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeRoomCard, order_no_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeRoomCard, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeRoomCard, room_card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeRoomCard, is_add_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeRoomCard, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeRoomCard, from_uid_),
  };
  RechargeRoomCard_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RechargeRoomCard_descriptor_,
      RechargeRoomCard::default_instance_,
      RechargeRoomCard_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeRoomCard, _has_bits_[0]),
      -1,
      -1,
      sizeof(RechargeRoomCard),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeRoomCard, _internal_metadata_),
      -1);
  SaveNoticeRequest_descriptor_ = file->message_type(39);
  static const int SaveNoticeRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaveNoticeRequest, records_),
  };
  SaveNoticeRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SaveNoticeRequest_descriptor_,
      SaveNoticeRequest::default_instance_,
      SaveNoticeRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaveNoticeRequest, _has_bits_[0]),
      -1,
      -1,
      sizeof(SaveNoticeRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaveNoticeRequest, _internal_metadata_),
      -1);
  QueryOfflineUserProto_descriptor_ = file->message_type(40);
  static const int QueryOfflineUserProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryOfflineUserProto, user_list_),
  };
  QueryOfflineUserProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QueryOfflineUserProto_descriptor_,
      QueryOfflineUserProto::default_instance_,
      QueryOfflineUserProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryOfflineUserProto, _has_bits_[0]),
      -1,
      -1,
      sizeof(QueryOfflineUserProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryOfflineUserProto, _internal_metadata_),
      -1);
  QueryWatchUserProto_descriptor_ = file->message_type(41);
  static const int QueryWatchUserProto_offsets_[1] = {
  };
  QueryWatchUserProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QueryWatchUserProto_descriptor_,
      QueryWatchUserProto::default_instance_,
      QueryWatchUserProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryWatchUserProto, _has_bits_[0]),
      -1,
      -1,
      sizeof(QueryWatchUserProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryWatchUserProto, _internal_metadata_),
      -1);
  ShareData_descriptor_ = file->message_type(42);
  static const int ShareData_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShareData, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShareData, num_),
  };
  ShareData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ShareData_descriptor_,
      ShareData::default_instance_,
      ShareData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShareData, _has_bits_[0]),
      -1,
      -1,
      sizeof(ShareData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShareData, _internal_metadata_),
      -1);
  GetShareDataRequest_descriptor_ = file->message_type(43);
  static const int GetShareDataRequest_offsets_[1] = {
  };
  GetShareDataRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetShareDataRequest_descriptor_,
      GetShareDataRequest::default_instance_,
      GetShareDataRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetShareDataRequest, _has_bits_[0]),
      -1,
      -1,
      sizeof(GetShareDataRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetShareDataRequest, _internal_metadata_),
      -1);
  GetShareDataResponse_descriptor_ = file->message_type(44);
  static const int GetShareDataResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetShareDataResponse, share_list_),
  };
  GetShareDataResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetShareDataResponse_descriptor_,
      GetShareDataResponse::default_instance_,
      GetShareDataResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetShareDataResponse, _has_bits_[0]),
      -1,
      -1,
      sizeof(GetShareDataResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetShareDataResponse, _internal_metadata_),
      -1);
  SaveShareData_descriptor_ = file->message_type(45);
  static const int SaveShareData_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaveShareData, share_list_),
  };
  SaveShareData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SaveShareData_descriptor_,
      SaveShareData::default_instance_,
      SaveShareData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaveShareData, _has_bits_[0]),
      -1,
      -1,
      sizeof(SaveShareData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaveShareData, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_server_5fdata_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QueryPlayerRequest_descriptor_, &QueryPlayerRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QueryPlayerResponse_descriptor_, &QueryPlayerResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      InputInviteCodeReq_descriptor_, &InputInviteCodeReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      InputInviteCodeResp_descriptor_, &InputInviteCodeResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SavePlayerRequest_descriptor_, &SavePlayerRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DBAccountID_descriptor_, &DBAccountID::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QueryRankRequest_descriptor_, &QueryRankRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QueryBase_descriptor_, &QueryBase::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QuerySaveRanks_descriptor_, &QuerySaveRanks::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UpdateSaveRanks_descriptor_, &UpdateSaveRanks::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QueryRankReqResp_descriptor_, &QueryRankReqResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UpdatePlayerSort_descriptor_, &UpdatePlayerSort::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QueryHistoryRequset_descriptor_, &QueryHistoryRequset::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QueryHistoryResponse_descriptor_, &QueryHistoryResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SaveHistoryRequest_descriptor_, &SaveHistoryRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ZhanjiRecordAdd_descriptor_, &ZhanjiRecordAdd::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ZhanJiFinish_descriptor_, &ZhanJiFinish::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ZhanjiQueryList_descriptor_, &ZhanjiQueryList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ZhanjiQueryResp_descriptor_, &ZhanjiQueryResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ZhanjiQueryRoom_descriptor_, &ZhanjiQueryRoom::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ZhanjiQueryRoomResp_descriptor_, &ZhanjiQueryRoomResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ZhanjiQueryInnReq_descriptor_, &ZhanjiQueryInnReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ZhanjiQueryInnResp_descriptor_, &ZhanjiQueryInnResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ZhanjiQueryReply_descriptor_, &ZhanjiQueryReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ZhanjiRespReply_descriptor_, &ZhanjiRespReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QueryMailRequest_descriptor_, &QueryMailRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QueryMailSystemLogRequest_descriptor_, &QueryMailSystemLogRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QueryMailResponse_descriptor_, &QueryMailResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QueryMailSystemLogResponse_descriptor_, &QueryMailSystemLogResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SaveMailRequest_descriptor_, &SaveMailRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SaveMailSystemLogRequest_descriptor_, &SaveMailSystemLogRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetMaxUUIDRequest_descriptor_, &GetMaxUUIDRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UUID_descriptor_, &UUID::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UUIDData_descriptor_, &UUIDData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetMaxUUIDResponse_descriptor_, &GetMaxUUIDResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AccountEnterGame_descriptor_, &AccountEnterGame::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AccountLeaveGame_descriptor_, &AccountLeaveGame::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ChangeGameServer_descriptor_, &ChangeGameServer::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RechargeRoomCard_descriptor_, &RechargeRoomCard::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SaveNoticeRequest_descriptor_, &SaveNoticeRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QueryOfflineUserProto_descriptor_, &QueryOfflineUserProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QueryWatchUserProto_descriptor_, &QueryWatchUserProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ShareData_descriptor_, &ShareData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetShareDataRequest_descriptor_, &GetShareDataRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetShareDataResponse_descriptor_, &GetShareDataResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SaveShareData_descriptor_, &SaveShareData::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_server_5fdata_2eproto() {
  delete QueryPlayerRequest::default_instance_;
  delete QueryPlayerRequest_reflection_;
  delete QueryPlayerResponse::default_instance_;
  delete QueryPlayerResponse_reflection_;
  delete InputInviteCodeReq::default_instance_;
  delete InputInviteCodeReq_reflection_;
  delete InputInviteCodeResp::default_instance_;
  delete InputInviteCodeResp_reflection_;
  delete SavePlayerRequest::default_instance_;
  delete SavePlayerRequest_reflection_;
  delete DBAccountID::default_instance_;
  delete DBAccountID_reflection_;
  delete QueryRankRequest::default_instance_;
  delete QueryRankRequest_reflection_;
  delete QueryBase::default_instance_;
  delete QueryBase_reflection_;
  delete QuerySaveRanks::default_instance_;
  delete QuerySaveRanks_reflection_;
  delete UpdateSaveRanks::default_instance_;
  delete UpdateSaveRanks_reflection_;
  delete QueryRankReqResp::default_instance_;
  delete QueryRankReqResp_reflection_;
  delete UpdatePlayerSort::default_instance_;
  delete UpdatePlayerSort_reflection_;
  delete QueryHistoryRequset::default_instance_;
  delete QueryHistoryRequset_reflection_;
  delete QueryHistoryResponse::default_instance_;
  delete QueryHistoryResponse_reflection_;
  delete SaveHistoryRequest::default_instance_;
  delete SaveHistoryRequest_reflection_;
  delete ZhanjiRecordAdd::default_instance_;
  delete ZhanjiRecordAdd_reflection_;
  delete ZhanJiFinish::default_instance_;
  delete ZhanJiFinish_reflection_;
  delete ZhanjiQueryList::default_instance_;
  delete ZhanjiQueryList_reflection_;
  delete ZhanjiQueryResp::default_instance_;
  delete ZhanjiQueryResp_reflection_;
  delete ZhanjiQueryRoom::default_instance_;
  delete ZhanjiQueryRoom_reflection_;
  delete ZhanjiQueryRoomResp::default_instance_;
  delete ZhanjiQueryRoomResp_reflection_;
  delete ZhanjiQueryInnReq::default_instance_;
  delete ZhanjiQueryInnReq_reflection_;
  delete ZhanjiQueryInnResp::default_instance_;
  delete ZhanjiQueryInnResp_reflection_;
  delete ZhanjiQueryReply::default_instance_;
  delete ZhanjiQueryReply_reflection_;
  delete ZhanjiRespReply::default_instance_;
  delete ZhanjiRespReply_reflection_;
  delete QueryMailRequest::default_instance_;
  delete QueryMailRequest_reflection_;
  delete QueryMailSystemLogRequest::default_instance_;
  delete QueryMailSystemLogRequest_reflection_;
  delete QueryMailResponse::default_instance_;
  delete QueryMailResponse_reflection_;
  delete QueryMailSystemLogResponse::default_instance_;
  delete QueryMailSystemLogResponse_reflection_;
  delete SaveMailRequest::default_instance_;
  delete SaveMailRequest_reflection_;
  delete SaveMailSystemLogRequest::default_instance_;
  delete SaveMailSystemLogRequest_reflection_;
  delete GetMaxUUIDRequest::default_instance_;
  delete GetMaxUUIDRequest_reflection_;
  delete UUID::default_instance_;
  delete UUID_reflection_;
  delete UUIDData::default_instance_;
  delete UUIDData_reflection_;
  delete GetMaxUUIDResponse::default_instance_;
  delete GetMaxUUIDResponse_reflection_;
  delete AccountEnterGame::default_instance_;
  delete AccountEnterGame_reflection_;
  delete AccountLeaveGame::default_instance_;
  delete AccountLeaveGame_reflection_;
  delete ChangeGameServer::default_instance_;
  delete ChangeGameServer_reflection_;
  delete RechargeRoomCard::default_instance_;
  delete RechargeRoomCard_reflection_;
  delete SaveNoticeRequest::default_instance_;
  delete SaveNoticeRequest_reflection_;
  delete QueryOfflineUserProto::default_instance_;
  delete QueryOfflineUserProto_reflection_;
  delete QueryWatchUserProto::default_instance_;
  delete QueryWatchUserProto_reflection_;
  delete ShareData::default_instance_;
  delete ShareData_reflection_;
  delete GetShareDataRequest::default_instance_;
  delete GetShareDataRequest_reflection_;
  delete GetShareDataResponse::default_instance_;
  delete GetShareDataResponse_reflection_;
  delete SaveShareData::default_instance_;
  delete SaveShareData_reflection_;
}

void protobuf_AddDesc_server_5fdata_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_server_5fdata_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::msg_maj::protobuf_AddDesc_msg_5frole_2eproto();
  ::msg_maj::protobuf_AddDesc_msg_5frank_2eproto();
  ::msg_maj::protobuf_AddDesc_msg_5fmail_2eproto();
  ::msg_maj::protobuf_AddDesc_msg_5fhistory_2eproto();
  ::msg_maj::protobuf_AddDesc_msg_5froom_2eproto();
  ::msg_event::protobuf_AddDesc_msg_5fevent_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021server_data.proto\022\016fogs.proto.msg\032\016msg"
    "_role.proto\032\016msg_rank.proto\032\016msg_mail.pr"
    "oto\032\021msg_history.proto\032\016msg_room.proto\032\017"
    "msg_event.proto\"C\n\022QueryPlayerRequest\022\013\n"
    "\003uid\030\001 \001(\004\022\017\n\007account\030\002 \001(\t\022\017\n\007room_id\030\003"
    " \001(\r\"X\n\023QueryPlayerResponse\022\016\n\006result\030\001 "
    "\001(\005\022 \n\trole_info\030\002 \001(\0132\r.msg_maj.Role\022\017\n"
    "\007room_id\030\003 \001(\r\"3\n\022InputInviteCodeReq\022\017\n\007"
    "user_id\030\001 \001(\004\022\014\n\004code\030\002 \001(\t\"K\n\023InputInvi"
    "teCodeResp\022\016\n\006result\030\001 \001(\r\022\021\n\troom_card\030"
    "\002 \001(\r\022\021\n\tcode_info\030\003 \001(\t\"C\n\021SavePlayerRe"
    "quest\022\014\n\004type\030\001 \002(\005\022 \n\trole_info\030\002 \002(\0132\r"
    ".msg_maj.Role\"*\n\013DBAccountID\022\017\n\007account\030"
    "\001 \001(\t\022\n\n\002id\030\002 \001(\r\"I\n\020QueryRankRequest\022$\n"
    "\010ranktype\030\001 \001(\0162\022.msg_maj.rank_type\022\017\n\007c"
    "har_id\030\002 \002(\004\"&\n\tQueryBase\022\n\n\002id\030\001 \001(\r\022\r\n"
    "\005value\030\002 \001(\004\"\202\001\n\016QuerySaveRanks\022$\n\010rankt"
    "ype\030\001 \001(\0162\022.msg_maj.rank_type\022#\n\010winsinf"
    "o\030\002 \003(\0132\021.msg_maj.WinsInfo\022%\n\tscoreinfo\030"
    "\003 \003(\0132\022.msg_maj.ScoreInfo\"\203\001\n\017UpdateSave"
    "Ranks\022$\n\010ranktype\030\001 \001(\0162\022.msg_maj.rank_t"
    "ype\022#\n\010winsinfo\030\002 \001(\0132\021.msg_maj.WinsInfo"
    "\022%\n\tscoreinfo\030\003 \001(\0132\022.msg_maj.ScoreInfo\""
    "|\n\020QueryRankReqResp\022$\n\010ranktype\030\001 \002(\0162\022."
    "msg_maj.rank_type\022\017\n\007char_id\030\002 \002(\004\022\014\n\004la"
    "st\030\003 \001(\005\022#\n\010ranklist\030\004 \001(\0132\021.msg_maj.Ran"
    "kResp\"f\n\020UpdatePlayerSort\022$\n\010ranktype\030\001 "
    "\002(\0162\022.msg_maj.rank_type\022\017\n\007char_id\030\002 \002(\004"
    "\022\014\n\004sort\030\003 \002(\r\022\r\n\005value\030\004 \002(\r\"*\n\023QueryHi"
    "storyRequset\022\023\n\013start_index\030\001 \002(\004\"V\n\024Que"
    "ryHistoryResponse\022\020\n\010last_num\030\001 \002(\r\022,\n\013r"
    "ecord_list\030\002 \003(\0132\027.msg_maj.HistoryRecord"
    "S\">\n\022SaveHistoryRequest\022(\n\007records\030\001 \002(\013"
    "2\027.msg_maj.HistoryRecordS\"\362\001\n\017ZhanjiReco"
    "rdAdd\022\021\n\trecord_id\030\001 \002(\004\022\017\n\007room_id\030\002 \001("
    "\r\022$\n\troom_info\030\003 \001(\0132\021.msg_maj.RoomInfo\022"
    ")\n\trole_info\030\004 \001(\0132\026.msg_maj.RoleInfoLis"
    "tS\022\'\n\ninn_record\030\005 \002(\0132\023.msg_maj.InnReco"
    "rdS\022-\n\ninn_replay\030\006 \002(\0132\031.msg_maj.InnRep"
    "layActionS\022\022\n\nstart_time\030\007 \001(\004\"!\n\014ZhanJi"
    "Finish\022\021\n\trecord_id\030\001 \002(\004\"H\n\017ZhanjiQuery"
    "List\022\017\n\007char_id\030\001 \002(\004\022$\n\003req\030\002 \002(\0132\027.msg"
    "_maj.HistoryListReq\"J\n\017ZhanjiQueryResp\022\017"
    "\n\007char_id\030\001 \002(\004\022&\n\004resp\030\002 \002(\0132\030.msg_maj."
    "HistoryListResp\"H\n\017ZhanjiQueryRoom\022\017\n\007ch"
    "ar_id\030\001 \002(\004\022$\n\003req\030\002 \002(\0132\027.msg_maj.Histo"
    "ryRoomReq\"N\n\023ZhanjiQueryRoomResp\022\017\n\007char"
    "_id\030\001 \002(\004\022&\n\004resp\030\002 \002(\0132\030.msg_maj.Histor"
    "yRoomResp\"I\n\021ZhanjiQueryInnReq\022\017\n\007char_i"
    "d\030\001 \002(\004\022#\n\003req\030\002 \002(\0132\026.msg_maj.HistoryIn"
    "nReq\"L\n\022ZhanjiQueryInnResp\022\017\n\007char_id\030\001 "
    "\002(\004\022%\n\004resp\030\002 \002(\0132\027.msg_maj.HistoryInnRe"
    "sp\"D\n\020ZhanjiQueryReply\022\017\n\007char_id\030\001 \002(\004\022"
    "\037\n\003req\030\002 \002(\0132\022.msg_maj.ReplayReq\"E\n\017Zhan"
    "jiRespReply\022\017\n\007char_id\030\001 \002(\004\022!\n\004resp\030\002 \002"
    "(\0132\023.msg_maj.ReplayResp\"4\n\020QueryMailRequ"
    "est\022\013\n\003uid\030\001 \002(\004\022\023\n\013start_index\030\002 \002(\004\"(\n"
    "\031QueryMailSystemLogRequest\022\013\n\003uid\030\001 \002(\004\""
    "]\n\021QueryMailResponse\022\013\n\003uid\030\001 \002(\004\022\020\n\010las"
    "t_num\030\002 \002(\r\022)\n\013record_list\030\003 \003(\0132\024.msg_m"
    "aj.MailRecordS\"i\n\032QueryMailSystemLogResp"
    "onse\022\013\n\003uid\030\001 \002(\004\022\020\n\010last_num\030\002 \002(\r\022,\n\013r"
    "ecord_list\030\003 \003(\0132\027.msg_maj.MailSystemLog"
    "S\"8\n\017SaveMailRequest\022%\n\007records\030\001 \002(\0132\024."
    "msg_maj.MailRecordS\"D\n\030SaveMailSystemLog"
    "Request\022(\n\007records\030\001 \002(\0132\027.msg_maj.MailS"
    "ystemLogS\">\n\021GetMaxUUIDRequest\022\021\n\tserver"
    "_id\030\001 \001(\r\022\026\n\016uuid_type_list\030\002 \003(\r\"\024\n\004UUI"
    "D\022\014\n\004uuid\030\001 \001(\004\"+\n\010UUIDData\022\021\n\tuuid_type"
    "\030\001 \001(\r\022\014\n\004uuid\030\002 \001(\004\"d\n\022GetMaxUUIDRespon"
    "se\022\016\n\006result\030\001 \001(\005\022\021\n\tserver_id\030\002 \001(\r\022+\n"
    "\tuuid_list\030\003 \003(\0132\030.fogs.proto.msg.UUIDDa"
    "ta\"F\n\020AccountEnterGame\022\017\n\007account\030\001 \001(\t\022"
    "\021\n\tserver_id\030\002 \001(\r\022\016\n\006charid\030\003 \001(\004\"3\n\020Ac"
    "countLeaveGame\022\017\n\007account\030\001 \001(\t\022\016\n\006chari"
    "d\030\002 \001(\004\"\252\001\n\020ChangeGameServer\022 \n\trole_inf"
    "o\030\001 \002(\0132\r.msg_maj.Role\022\022\n\nsession_id\030\002 \001"
    "(\004\022\023\n\013fepserverid\030\003 \001(\r\022\017\n\007room_id\030\004 \001(\r"
    "\022\021\n\ticon_addr\030\005 \001(\t\022\'\n\tmail_list\030\006 \003(\0132\024"
    ".msg_maj.MailRecordS\"x\n\020RechargeRoomCard"
    "\022\020\n\010order_no\030\001 \001(\t\022\017\n\007user_id\030\002 \001(\r\022\021\n\tr"
    "oom_card\030\003 \001(\r\022\016\n\006is_add\030\004 \001(\r\022\014\n\004time\030\005"
    " \001(\004\022\020\n\010from_uid\030\006 \001(\r\"8\n\021SaveNoticeRequ"
    "est\022#\n\007records\030\001 \002(\0132\022.msg_event.NoticeS"
    "\"<\n\025QueryOfflineUserProto\022#\n\tuser_list\030\002"
    " \003(\0132\020.msg_maj.RoleOff\"\025\n\023QueryWatchUser"
    "Proto\")\n\tShareData\022\017\n\007user_id\030\001 \001(\r\022\013\n\003n"
    "um\030\002 \001(\r\"\025\n\023GetShareDataRequest\"E\n\024GetSh"
    "areDataResponse\022-\n\nshare_list\030\001 \003(\0132\031.fo"
    "gs.proto.msg.ShareData\">\n\rSaveShareData\022"
    "-\n\nshare_list\030\001 \003(\0132\031.fogs.proto.msg.Sha"
    "reData", 3646);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "server_data.proto", &protobuf_RegisterTypes);
  QueryPlayerRequest::default_instance_ = new QueryPlayerRequest();
  QueryPlayerResponse::default_instance_ = new QueryPlayerResponse();
  InputInviteCodeReq::default_instance_ = new InputInviteCodeReq();
  InputInviteCodeResp::default_instance_ = new InputInviteCodeResp();
  SavePlayerRequest::default_instance_ = new SavePlayerRequest();
  DBAccountID::default_instance_ = new DBAccountID();
  QueryRankRequest::default_instance_ = new QueryRankRequest();
  QueryBase::default_instance_ = new QueryBase();
  QuerySaveRanks::default_instance_ = new QuerySaveRanks();
  UpdateSaveRanks::default_instance_ = new UpdateSaveRanks();
  QueryRankReqResp::default_instance_ = new QueryRankReqResp();
  UpdatePlayerSort::default_instance_ = new UpdatePlayerSort();
  QueryHistoryRequset::default_instance_ = new QueryHistoryRequset();
  QueryHistoryResponse::default_instance_ = new QueryHistoryResponse();
  SaveHistoryRequest::default_instance_ = new SaveHistoryRequest();
  ZhanjiRecordAdd::default_instance_ = new ZhanjiRecordAdd();
  ZhanJiFinish::default_instance_ = new ZhanJiFinish();
  ZhanjiQueryList::default_instance_ = new ZhanjiQueryList();
  ZhanjiQueryResp::default_instance_ = new ZhanjiQueryResp();
  ZhanjiQueryRoom::default_instance_ = new ZhanjiQueryRoom();
  ZhanjiQueryRoomResp::default_instance_ = new ZhanjiQueryRoomResp();
  ZhanjiQueryInnReq::default_instance_ = new ZhanjiQueryInnReq();
  ZhanjiQueryInnResp::default_instance_ = new ZhanjiQueryInnResp();
  ZhanjiQueryReply::default_instance_ = new ZhanjiQueryReply();
  ZhanjiRespReply::default_instance_ = new ZhanjiRespReply();
  QueryMailRequest::default_instance_ = new QueryMailRequest();
  QueryMailSystemLogRequest::default_instance_ = new QueryMailSystemLogRequest();
  QueryMailResponse::default_instance_ = new QueryMailResponse();
  QueryMailSystemLogResponse::default_instance_ = new QueryMailSystemLogResponse();
  SaveMailRequest::default_instance_ = new SaveMailRequest();
  SaveMailSystemLogRequest::default_instance_ = new SaveMailSystemLogRequest();
  GetMaxUUIDRequest::default_instance_ = new GetMaxUUIDRequest();
  UUID::default_instance_ = new UUID();
  UUIDData::default_instance_ = new UUIDData();
  GetMaxUUIDResponse::default_instance_ = new GetMaxUUIDResponse();
  AccountEnterGame::default_instance_ = new AccountEnterGame();
  AccountLeaveGame::default_instance_ = new AccountLeaveGame();
  ChangeGameServer::default_instance_ = new ChangeGameServer();
  RechargeRoomCard::default_instance_ = new RechargeRoomCard();
  SaveNoticeRequest::default_instance_ = new SaveNoticeRequest();
  QueryOfflineUserProto::default_instance_ = new QueryOfflineUserProto();
  QueryWatchUserProto::default_instance_ = new QueryWatchUserProto();
  ShareData::default_instance_ = new ShareData();
  GetShareDataRequest::default_instance_ = new GetShareDataRequest();
  GetShareDataResponse::default_instance_ = new GetShareDataResponse();
  SaveShareData::default_instance_ = new SaveShareData();
  QueryPlayerRequest::default_instance_->InitAsDefaultInstance();
  QueryPlayerResponse::default_instance_->InitAsDefaultInstance();
  InputInviteCodeReq::default_instance_->InitAsDefaultInstance();
  InputInviteCodeResp::default_instance_->InitAsDefaultInstance();
  SavePlayerRequest::default_instance_->InitAsDefaultInstance();
  DBAccountID::default_instance_->InitAsDefaultInstance();
  QueryRankRequest::default_instance_->InitAsDefaultInstance();
  QueryBase::default_instance_->InitAsDefaultInstance();
  QuerySaveRanks::default_instance_->InitAsDefaultInstance();
  UpdateSaveRanks::default_instance_->InitAsDefaultInstance();
  QueryRankReqResp::default_instance_->InitAsDefaultInstance();
  UpdatePlayerSort::default_instance_->InitAsDefaultInstance();
  QueryHistoryRequset::default_instance_->InitAsDefaultInstance();
  QueryHistoryResponse::default_instance_->InitAsDefaultInstance();
  SaveHistoryRequest::default_instance_->InitAsDefaultInstance();
  ZhanjiRecordAdd::default_instance_->InitAsDefaultInstance();
  ZhanJiFinish::default_instance_->InitAsDefaultInstance();
  ZhanjiQueryList::default_instance_->InitAsDefaultInstance();
  ZhanjiQueryResp::default_instance_->InitAsDefaultInstance();
  ZhanjiQueryRoom::default_instance_->InitAsDefaultInstance();
  ZhanjiQueryRoomResp::default_instance_->InitAsDefaultInstance();
  ZhanjiQueryInnReq::default_instance_->InitAsDefaultInstance();
  ZhanjiQueryInnResp::default_instance_->InitAsDefaultInstance();
  ZhanjiQueryReply::default_instance_->InitAsDefaultInstance();
  ZhanjiRespReply::default_instance_->InitAsDefaultInstance();
  QueryMailRequest::default_instance_->InitAsDefaultInstance();
  QueryMailSystemLogRequest::default_instance_->InitAsDefaultInstance();
  QueryMailResponse::default_instance_->InitAsDefaultInstance();
  QueryMailSystemLogResponse::default_instance_->InitAsDefaultInstance();
  SaveMailRequest::default_instance_->InitAsDefaultInstance();
  SaveMailSystemLogRequest::default_instance_->InitAsDefaultInstance();
  GetMaxUUIDRequest::default_instance_->InitAsDefaultInstance();
  UUID::default_instance_->InitAsDefaultInstance();
  UUIDData::default_instance_->InitAsDefaultInstance();
  GetMaxUUIDResponse::default_instance_->InitAsDefaultInstance();
  AccountEnterGame::default_instance_->InitAsDefaultInstance();
  AccountLeaveGame::default_instance_->InitAsDefaultInstance();
  ChangeGameServer::default_instance_->InitAsDefaultInstance();
  RechargeRoomCard::default_instance_->InitAsDefaultInstance();
  SaveNoticeRequest::default_instance_->InitAsDefaultInstance();
  QueryOfflineUserProto::default_instance_->InitAsDefaultInstance();
  QueryWatchUserProto::default_instance_->InitAsDefaultInstance();
  ShareData::default_instance_->InitAsDefaultInstance();
  GetShareDataRequest::default_instance_->InitAsDefaultInstance();
  GetShareDataResponse::default_instance_->InitAsDefaultInstance();
  SaveShareData::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_server_5fdata_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_server_5fdata_2eproto {
  StaticDescriptorInitializer_server_5fdata_2eproto() {
    protobuf_AddDesc_server_5fdata_2eproto();
  }
} static_descriptor_initializer_server_5fdata_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryPlayerRequest::kUidFieldNumber;
const int QueryPlayerRequest::kAccountFieldNumber;
const int QueryPlayerRequest::kRoomIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryPlayerRequest::QueryPlayerRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.QueryPlayerRequest)
}

void QueryPlayerRequest::InitAsDefaultInstance() {
}

QueryPlayerRequest::QueryPlayerRequest(const QueryPlayerRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.QueryPlayerRequest)
}

void QueryPlayerRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  uid_ = GOOGLE_ULONGLONG(0);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  room_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QueryPlayerRequest::~QueryPlayerRequest() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.QueryPlayerRequest)
  SharedDtor();
}

void QueryPlayerRequest::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void QueryPlayerRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryPlayerRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QueryPlayerRequest_descriptor_;
}

const QueryPlayerRequest& QueryPlayerRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fdata_2eproto();
  return *default_instance_;
}

QueryPlayerRequest* QueryPlayerRequest::default_instance_ = NULL;

QueryPlayerRequest* QueryPlayerRequest::New(::google::protobuf::Arena* arena) const {
  QueryPlayerRequest* n = new QueryPlayerRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryPlayerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.QueryPlayerRequest)
  if (_has_bits_[0 / 32] & 7u) {
    uid_ = GOOGLE_ULONGLONG(0);
    if (has_account()) {
      account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    room_id_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QueryPlayerRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.QueryPlayerRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 uid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_account;
        break;
      }

      // optional string account = 2;
      case 2: {
        if (tag == 18) {
         parse_account:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account().data(), this->account().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fogs.proto.msg.QueryPlayerRequest.account");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_room_id;
        break;
      }

      // optional uint32 room_id = 3;
      case 3: {
        if (tag == 24) {
         parse_room_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &room_id_)));
          set_has_room_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.QueryPlayerRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.QueryPlayerRequest)
  return false;
#undef DO_
}

void QueryPlayerRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.QueryPlayerRequest)
  // optional uint64 uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->uid(), output);
  }

  // optional string account = 2;
  if (has_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fogs.proto.msg.QueryPlayerRequest.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->account(), output);
  }

  // optional uint32 room_id = 3;
  if (has_room_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->room_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.QueryPlayerRequest)
}

::google::protobuf::uint8* QueryPlayerRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.QueryPlayerRequest)
  // optional uint64 uid = 1;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->uid(), target);
  }

  // optional string account = 2;
  if (has_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fogs.proto.msg.QueryPlayerRequest.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->account(), target);
  }

  // optional uint32 room_id = 3;
  if (has_room_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->room_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.QueryPlayerRequest)
  return target;
}

int QueryPlayerRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.QueryPlayerRequest)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional uint64 uid = 1;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->uid());
    }

    // optional string account = 2;
    if (has_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account());
    }

    // optional uint32 room_id = 3;
    if (has_room_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->room_id());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryPlayerRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.QueryPlayerRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const QueryPlayerRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryPlayerRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.QueryPlayerRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.QueryPlayerRequest)
    MergeFrom(*source);
  }
}

void QueryPlayerRequest::MergeFrom(const QueryPlayerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.QueryPlayerRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_account()) {
      set_has_account();
      account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
    }
    if (from.has_room_id()) {
      set_room_id(from.room_id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void QueryPlayerRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.QueryPlayerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryPlayerRequest::CopyFrom(const QueryPlayerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.QueryPlayerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryPlayerRequest::IsInitialized() const {

  return true;
}

void QueryPlayerRequest::Swap(QueryPlayerRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryPlayerRequest::InternalSwap(QueryPlayerRequest* other) {
  std::swap(uid_, other->uid_);
  account_.Swap(&other->account_);
  std::swap(room_id_, other->room_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryPlayerRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QueryPlayerRequest_descriptor_;
  metadata.reflection = QueryPlayerRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryPlayerRequest

// optional uint64 uid = 1;
bool QueryPlayerRequest::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QueryPlayerRequest::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
void QueryPlayerRequest::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
void QueryPlayerRequest::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
 ::google::protobuf::uint64 QueryPlayerRequest::uid() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.QueryPlayerRequest.uid)
  return uid_;
}
 void QueryPlayerRequest::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.QueryPlayerRequest.uid)
}

// optional string account = 2;
bool QueryPlayerRequest::has_account() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void QueryPlayerRequest::set_has_account() {
  _has_bits_[0] |= 0x00000002u;
}
void QueryPlayerRequest::clear_has_account() {
  _has_bits_[0] &= ~0x00000002u;
}
void QueryPlayerRequest::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
 const ::std::string& QueryPlayerRequest::account() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.QueryPlayerRequest.account)
  return account_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QueryPlayerRequest::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fogs.proto.msg.QueryPlayerRequest.account)
}
 void QueryPlayerRequest::set_account(const char* value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fogs.proto.msg.QueryPlayerRequest.account)
}
 void QueryPlayerRequest::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fogs.proto.msg.QueryPlayerRequest.account)
}
 ::std::string* QueryPlayerRequest::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.QueryPlayerRequest.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QueryPlayerRequest::release_account() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.QueryPlayerRequest.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QueryPlayerRequest::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.QueryPlayerRequest.account)
}

// optional uint32 room_id = 3;
bool QueryPlayerRequest::has_room_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void QueryPlayerRequest::set_has_room_id() {
  _has_bits_[0] |= 0x00000004u;
}
void QueryPlayerRequest::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void QueryPlayerRequest::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
 ::google::protobuf::uint32 QueryPlayerRequest::room_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.QueryPlayerRequest.room_id)
  return room_id_;
}
 void QueryPlayerRequest::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.QueryPlayerRequest.room_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryPlayerResponse::kResultFieldNumber;
const int QueryPlayerResponse::kRoleInfoFieldNumber;
const int QueryPlayerResponse::kRoomIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryPlayerResponse::QueryPlayerResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.QueryPlayerResponse)
}

void QueryPlayerResponse::InitAsDefaultInstance() {
  role_info_ = const_cast< ::msg_maj::Role*>(&::msg_maj::Role::default_instance());
}

QueryPlayerResponse::QueryPlayerResponse(const QueryPlayerResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.QueryPlayerResponse)
}

void QueryPlayerResponse::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  role_info_ = NULL;
  room_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QueryPlayerResponse::~QueryPlayerResponse() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.QueryPlayerResponse)
  SharedDtor();
}

void QueryPlayerResponse::SharedDtor() {
  if (this != default_instance_) {
    delete role_info_;
  }
}

void QueryPlayerResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryPlayerResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QueryPlayerResponse_descriptor_;
}

const QueryPlayerResponse& QueryPlayerResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fdata_2eproto();
  return *default_instance_;
}

QueryPlayerResponse* QueryPlayerResponse::default_instance_ = NULL;

QueryPlayerResponse* QueryPlayerResponse::New(::google::protobuf::Arena* arena) const {
  QueryPlayerResponse* n = new QueryPlayerResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryPlayerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.QueryPlayerResponse)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(QueryPlayerResponse, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<QueryPlayerResponse*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 7u) {
    ZR_(result_, room_id_);
    if (has_role_info()) {
      if (role_info_ != NULL) role_info_->::msg_maj::Role::Clear();
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QueryPlayerResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.QueryPlayerResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_role_info;
        break;
      }

      // optional .msg_maj.Role role_info = 2;
      case 2: {
        if (tag == 18) {
         parse_role_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_role_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_room_id;
        break;
      }

      // optional uint32 room_id = 3;
      case 3: {
        if (tag == 24) {
         parse_room_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &room_id_)));
          set_has_room_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.QueryPlayerResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.QueryPlayerResponse)
  return false;
#undef DO_
}

void QueryPlayerResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.QueryPlayerResponse)
  // optional int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional .msg_maj.Role role_info = 2;
  if (has_role_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->role_info_, output);
  }

  // optional uint32 room_id = 3;
  if (has_room_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->room_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.QueryPlayerResponse)
}

::google::protobuf::uint8* QueryPlayerResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.QueryPlayerResponse)
  // optional int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional .msg_maj.Role role_info = 2;
  if (has_role_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->role_info_, false, target);
  }

  // optional uint32 room_id = 3;
  if (has_room_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->room_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.QueryPlayerResponse)
  return target;
}

int QueryPlayerResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.QueryPlayerResponse)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional .msg_maj.Role role_info = 2;
    if (has_role_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->role_info_);
    }

    // optional uint32 room_id = 3;
    if (has_room_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->room_id());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryPlayerResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.QueryPlayerResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const QueryPlayerResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryPlayerResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.QueryPlayerResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.QueryPlayerResponse)
    MergeFrom(*source);
  }
}

void QueryPlayerResponse::MergeFrom(const QueryPlayerResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.QueryPlayerResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_role_info()) {
      mutable_role_info()->::msg_maj::Role::MergeFrom(from.role_info());
    }
    if (from.has_room_id()) {
      set_room_id(from.room_id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void QueryPlayerResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.QueryPlayerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryPlayerResponse::CopyFrom(const QueryPlayerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.QueryPlayerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryPlayerResponse::IsInitialized() const {

  return true;
}

void QueryPlayerResponse::Swap(QueryPlayerResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryPlayerResponse::InternalSwap(QueryPlayerResponse* other) {
  std::swap(result_, other->result_);
  std::swap(role_info_, other->role_info_);
  std::swap(room_id_, other->room_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryPlayerResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QueryPlayerResponse_descriptor_;
  metadata.reflection = QueryPlayerResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryPlayerResponse

// optional int32 result = 1;
bool QueryPlayerResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QueryPlayerResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void QueryPlayerResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void QueryPlayerResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
 ::google::protobuf::int32 QueryPlayerResponse::result() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.QueryPlayerResponse.result)
  return result_;
}
 void QueryPlayerResponse::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.QueryPlayerResponse.result)
}

// optional .msg_maj.Role role_info = 2;
bool QueryPlayerResponse::has_role_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void QueryPlayerResponse::set_has_role_info() {
  _has_bits_[0] |= 0x00000002u;
}
void QueryPlayerResponse::clear_has_role_info() {
  _has_bits_[0] &= ~0x00000002u;
}
void QueryPlayerResponse::clear_role_info() {
  if (role_info_ != NULL) role_info_->::msg_maj::Role::Clear();
  clear_has_role_info();
}
const ::msg_maj::Role& QueryPlayerResponse::role_info() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.QueryPlayerResponse.role_info)
  return role_info_ != NULL ? *role_info_ : *default_instance_->role_info_;
}
::msg_maj::Role* QueryPlayerResponse::mutable_role_info() {
  set_has_role_info();
  if (role_info_ == NULL) {
    role_info_ = new ::msg_maj::Role;
  }
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.QueryPlayerResponse.role_info)
  return role_info_;
}
::msg_maj::Role* QueryPlayerResponse::release_role_info() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.QueryPlayerResponse.role_info)
  clear_has_role_info();
  ::msg_maj::Role* temp = role_info_;
  role_info_ = NULL;
  return temp;
}
void QueryPlayerResponse::set_allocated_role_info(::msg_maj::Role* role_info) {
  delete role_info_;
  role_info_ = role_info;
  if (role_info) {
    set_has_role_info();
  } else {
    clear_has_role_info();
  }
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.QueryPlayerResponse.role_info)
}

// optional uint32 room_id = 3;
bool QueryPlayerResponse::has_room_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void QueryPlayerResponse::set_has_room_id() {
  _has_bits_[0] |= 0x00000004u;
}
void QueryPlayerResponse::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void QueryPlayerResponse::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
 ::google::protobuf::uint32 QueryPlayerResponse::room_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.QueryPlayerResponse.room_id)
  return room_id_;
}
 void QueryPlayerResponse::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.QueryPlayerResponse.room_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InputInviteCodeReq::kUserIdFieldNumber;
const int InputInviteCodeReq::kCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InputInviteCodeReq::InputInviteCodeReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.InputInviteCodeReq)
}

void InputInviteCodeReq::InitAsDefaultInstance() {
}

InputInviteCodeReq::InputInviteCodeReq(const InputInviteCodeReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.InputInviteCodeReq)
}

void InputInviteCodeReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  user_id_ = GOOGLE_ULONGLONG(0);
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InputInviteCodeReq::~InputInviteCodeReq() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.InputInviteCodeReq)
  SharedDtor();
}

void InputInviteCodeReq::SharedDtor() {
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void InputInviteCodeReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InputInviteCodeReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InputInviteCodeReq_descriptor_;
}

const InputInviteCodeReq& InputInviteCodeReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fdata_2eproto();
  return *default_instance_;
}

InputInviteCodeReq* InputInviteCodeReq::default_instance_ = NULL;

InputInviteCodeReq* InputInviteCodeReq::New(::google::protobuf::Arena* arena) const {
  InputInviteCodeReq* n = new InputInviteCodeReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InputInviteCodeReq::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.InputInviteCodeReq)
  if (_has_bits_[0 / 32] & 3u) {
    user_id_ = GOOGLE_ULONGLONG(0);
    if (has_code()) {
      code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool InputInviteCodeReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.InputInviteCodeReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 user_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &user_id_)));
          set_has_user_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_code;
        break;
      }

      // optional string code = 2;
      case 2: {
        if (tag == 18) {
         parse_code:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->code().data(), this->code().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fogs.proto.msg.InputInviteCodeReq.code");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.InputInviteCodeReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.InputInviteCodeReq)
  return false;
#undef DO_
}

void InputInviteCodeReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.InputInviteCodeReq)
  // optional uint64 user_id = 1;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->user_id(), output);
  }

  // optional string code = 2;
  if (has_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fogs.proto.msg.InputInviteCodeReq.code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->code(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.InputInviteCodeReq)
}

::google::protobuf::uint8* InputInviteCodeReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.InputInviteCodeReq)
  // optional uint64 user_id = 1;
  if (has_user_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->user_id(), target);
  }

  // optional string code = 2;
  if (has_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fogs.proto.msg.InputInviteCodeReq.code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->code(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.InputInviteCodeReq)
  return target;
}

int InputInviteCodeReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.InputInviteCodeReq)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 user_id = 1;
    if (has_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->user_id());
    }

    // optional string code = 2;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->code());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InputInviteCodeReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.InputInviteCodeReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const InputInviteCodeReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const InputInviteCodeReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.InputInviteCodeReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.InputInviteCodeReq)
    MergeFrom(*source);
  }
}

void InputInviteCodeReq::MergeFrom(const InputInviteCodeReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.InputInviteCodeReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_user_id()) {
      set_user_id(from.user_id());
    }
    if (from.has_code()) {
      set_has_code();
      code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void InputInviteCodeReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.InputInviteCodeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InputInviteCodeReq::CopyFrom(const InputInviteCodeReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.InputInviteCodeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InputInviteCodeReq::IsInitialized() const {

  return true;
}

void InputInviteCodeReq::Swap(InputInviteCodeReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InputInviteCodeReq::InternalSwap(InputInviteCodeReq* other) {
  std::swap(user_id_, other->user_id_);
  code_.Swap(&other->code_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InputInviteCodeReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InputInviteCodeReq_descriptor_;
  metadata.reflection = InputInviteCodeReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InputInviteCodeReq

// optional uint64 user_id = 1;
bool InputInviteCodeReq::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void InputInviteCodeReq::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
void InputInviteCodeReq::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void InputInviteCodeReq::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
 ::google::protobuf::uint64 InputInviteCodeReq::user_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.InputInviteCodeReq.user_id)
  return user_id_;
}
 void InputInviteCodeReq::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.InputInviteCodeReq.user_id)
}

// optional string code = 2;
bool InputInviteCodeReq::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void InputInviteCodeReq::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
void InputInviteCodeReq::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
void InputInviteCodeReq::clear_code() {
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_code();
}
 const ::std::string& InputInviteCodeReq::code() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.InputInviteCodeReq.code)
  return code_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InputInviteCodeReq::set_code(const ::std::string& value) {
  set_has_code();
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fogs.proto.msg.InputInviteCodeReq.code)
}
 void InputInviteCodeReq::set_code(const char* value) {
  set_has_code();
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fogs.proto.msg.InputInviteCodeReq.code)
}
 void InputInviteCodeReq::set_code(const char* value, size_t size) {
  set_has_code();
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fogs.proto.msg.InputInviteCodeReq.code)
}
 ::std::string* InputInviteCodeReq::mutable_code() {
  set_has_code();
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.InputInviteCodeReq.code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* InputInviteCodeReq::release_code() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.InputInviteCodeReq.code)
  clear_has_code();
  return code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InputInviteCodeReq::set_allocated_code(::std::string* code) {
  if (code != NULL) {
    set_has_code();
  } else {
    clear_has_code();
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.InputInviteCodeReq.code)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InputInviteCodeResp::kResultFieldNumber;
const int InputInviteCodeResp::kRoomCardFieldNumber;
const int InputInviteCodeResp::kCodeInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InputInviteCodeResp::InputInviteCodeResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.InputInviteCodeResp)
}

void InputInviteCodeResp::InitAsDefaultInstance() {
}

InputInviteCodeResp::InputInviteCodeResp(const InputInviteCodeResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.InputInviteCodeResp)
}

void InputInviteCodeResp::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  result_ = 0u;
  room_card_ = 0u;
  code_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InputInviteCodeResp::~InputInviteCodeResp() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.InputInviteCodeResp)
  SharedDtor();
}

void InputInviteCodeResp::SharedDtor() {
  code_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void InputInviteCodeResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InputInviteCodeResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InputInviteCodeResp_descriptor_;
}

const InputInviteCodeResp& InputInviteCodeResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fdata_2eproto();
  return *default_instance_;
}

InputInviteCodeResp* InputInviteCodeResp::default_instance_ = NULL;

InputInviteCodeResp* InputInviteCodeResp::New(::google::protobuf::Arena* arena) const {
  InputInviteCodeResp* n = new InputInviteCodeResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InputInviteCodeResp::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.InputInviteCodeResp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(InputInviteCodeResp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<InputInviteCodeResp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 7u) {
    ZR_(result_, room_card_);
    if (has_code_info()) {
      code_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool InputInviteCodeResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.InputInviteCodeResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_room_card;
        break;
      }

      // optional uint32 room_card = 2;
      case 2: {
        if (tag == 16) {
         parse_room_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &room_card_)));
          set_has_room_card();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_code_info;
        break;
      }

      // optional string code_info = 3;
      case 3: {
        if (tag == 26) {
         parse_code_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code_info()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->code_info().data(), this->code_info().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fogs.proto.msg.InputInviteCodeResp.code_info");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.InputInviteCodeResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.InputInviteCodeResp)
  return false;
#undef DO_
}

void InputInviteCodeResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.InputInviteCodeResp)
  // optional uint32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  // optional uint32 room_card = 2;
  if (has_room_card()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->room_card(), output);
  }

  // optional string code_info = 3;
  if (has_code_info()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code_info().data(), this->code_info().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fogs.proto.msg.InputInviteCodeResp.code_info");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->code_info(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.InputInviteCodeResp)
}

::google::protobuf::uint8* InputInviteCodeResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.InputInviteCodeResp)
  // optional uint32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  // optional uint32 room_card = 2;
  if (has_room_card()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->room_card(), target);
  }

  // optional string code_info = 3;
  if (has_code_info()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code_info().data(), this->code_info().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fogs.proto.msg.InputInviteCodeResp.code_info");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->code_info(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.InputInviteCodeResp)
  return target;
}

int InputInviteCodeResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.InputInviteCodeResp)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->result());
    }

    // optional uint32 room_card = 2;
    if (has_room_card()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->room_card());
    }

    // optional string code_info = 3;
    if (has_code_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->code_info());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InputInviteCodeResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.InputInviteCodeResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const InputInviteCodeResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const InputInviteCodeResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.InputInviteCodeResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.InputInviteCodeResp)
    MergeFrom(*source);
  }
}

void InputInviteCodeResp::MergeFrom(const InputInviteCodeResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.InputInviteCodeResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_room_card()) {
      set_room_card(from.room_card());
    }
    if (from.has_code_info()) {
      set_has_code_info();
      code_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_info_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void InputInviteCodeResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.InputInviteCodeResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InputInviteCodeResp::CopyFrom(const InputInviteCodeResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.InputInviteCodeResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InputInviteCodeResp::IsInitialized() const {

  return true;
}

void InputInviteCodeResp::Swap(InputInviteCodeResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InputInviteCodeResp::InternalSwap(InputInviteCodeResp* other) {
  std::swap(result_, other->result_);
  std::swap(room_card_, other->room_card_);
  code_info_.Swap(&other->code_info_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InputInviteCodeResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InputInviteCodeResp_descriptor_;
  metadata.reflection = InputInviteCodeResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InputInviteCodeResp

// optional uint32 result = 1;
bool InputInviteCodeResp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void InputInviteCodeResp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void InputInviteCodeResp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void InputInviteCodeResp::clear_result() {
  result_ = 0u;
  clear_has_result();
}
 ::google::protobuf::uint32 InputInviteCodeResp::result() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.InputInviteCodeResp.result)
  return result_;
}
 void InputInviteCodeResp::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.InputInviteCodeResp.result)
}

// optional uint32 room_card = 2;
bool InputInviteCodeResp::has_room_card() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void InputInviteCodeResp::set_has_room_card() {
  _has_bits_[0] |= 0x00000002u;
}
void InputInviteCodeResp::clear_has_room_card() {
  _has_bits_[0] &= ~0x00000002u;
}
void InputInviteCodeResp::clear_room_card() {
  room_card_ = 0u;
  clear_has_room_card();
}
 ::google::protobuf::uint32 InputInviteCodeResp::room_card() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.InputInviteCodeResp.room_card)
  return room_card_;
}
 void InputInviteCodeResp::set_room_card(::google::protobuf::uint32 value) {
  set_has_room_card();
  room_card_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.InputInviteCodeResp.room_card)
}

// optional string code_info = 3;
bool InputInviteCodeResp::has_code_info() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void InputInviteCodeResp::set_has_code_info() {
  _has_bits_[0] |= 0x00000004u;
}
void InputInviteCodeResp::clear_has_code_info() {
  _has_bits_[0] &= ~0x00000004u;
}
void InputInviteCodeResp::clear_code_info() {
  code_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_code_info();
}
 const ::std::string& InputInviteCodeResp::code_info() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.InputInviteCodeResp.code_info)
  return code_info_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InputInviteCodeResp::set_code_info(const ::std::string& value) {
  set_has_code_info();
  code_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fogs.proto.msg.InputInviteCodeResp.code_info)
}
 void InputInviteCodeResp::set_code_info(const char* value) {
  set_has_code_info();
  code_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fogs.proto.msg.InputInviteCodeResp.code_info)
}
 void InputInviteCodeResp::set_code_info(const char* value, size_t size) {
  set_has_code_info();
  code_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fogs.proto.msg.InputInviteCodeResp.code_info)
}
 ::std::string* InputInviteCodeResp::mutable_code_info() {
  set_has_code_info();
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.InputInviteCodeResp.code_info)
  return code_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* InputInviteCodeResp::release_code_info() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.InputInviteCodeResp.code_info)
  clear_has_code_info();
  return code_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InputInviteCodeResp::set_allocated_code_info(::std::string* code_info) {
  if (code_info != NULL) {
    set_has_code_info();
  } else {
    clear_has_code_info();
  }
  code_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code_info);
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.InputInviteCodeResp.code_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SavePlayerRequest::kTypeFieldNumber;
const int SavePlayerRequest::kRoleInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SavePlayerRequest::SavePlayerRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.SavePlayerRequest)
}

void SavePlayerRequest::InitAsDefaultInstance() {
  role_info_ = const_cast< ::msg_maj::Role*>(&::msg_maj::Role::default_instance());
}

SavePlayerRequest::SavePlayerRequest(const SavePlayerRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.SavePlayerRequest)
}

void SavePlayerRequest::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  role_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SavePlayerRequest::~SavePlayerRequest() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.SavePlayerRequest)
  SharedDtor();
}

void SavePlayerRequest::SharedDtor() {
  if (this != default_instance_) {
    delete role_info_;
  }
}

void SavePlayerRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SavePlayerRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SavePlayerRequest_descriptor_;
}

const SavePlayerRequest& SavePlayerRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fdata_2eproto();
  return *default_instance_;
}

SavePlayerRequest* SavePlayerRequest::default_instance_ = NULL;

SavePlayerRequest* SavePlayerRequest::New(::google::protobuf::Arena* arena) const {
  SavePlayerRequest* n = new SavePlayerRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SavePlayerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.SavePlayerRequest)
  if (_has_bits_[0 / 32] & 3u) {
    type_ = 0;
    if (has_role_info()) {
      if (role_info_ != NULL) role_info_->::msg_maj::Role::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SavePlayerRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.SavePlayerRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_role_info;
        break;
      }

      // required .msg_maj.Role role_info = 2;
      case 2: {
        if (tag == 18) {
         parse_role_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_role_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.SavePlayerRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.SavePlayerRequest)
  return false;
#undef DO_
}

void SavePlayerRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.SavePlayerRequest)
  // required int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // required .msg_maj.Role role_info = 2;
  if (has_role_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->role_info_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.SavePlayerRequest)
}

::google::protobuf::uint8* SavePlayerRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.SavePlayerRequest)
  // required int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // required .msg_maj.Role role_info = 2;
  if (has_role_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->role_info_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.SavePlayerRequest)
  return target;
}

int SavePlayerRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:fogs.proto.msg.SavePlayerRequest)
  int total_size = 0;

  if (has_type()) {
    // required int32 type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  if (has_role_info()) {
    // required .msg_maj.Role role_info = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->role_info_);
  }

  return total_size;
}
int SavePlayerRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.SavePlayerRequest)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());

    // required .msg_maj.Role role_info = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->role_info_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SavePlayerRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.SavePlayerRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SavePlayerRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SavePlayerRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.SavePlayerRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.SavePlayerRequest)
    MergeFrom(*source);
  }
}

void SavePlayerRequest::MergeFrom(const SavePlayerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.SavePlayerRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_role_info()) {
      mutable_role_info()->::msg_maj::Role::MergeFrom(from.role_info());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SavePlayerRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.SavePlayerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SavePlayerRequest::CopyFrom(const SavePlayerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.SavePlayerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SavePlayerRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void SavePlayerRequest::Swap(SavePlayerRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SavePlayerRequest::InternalSwap(SavePlayerRequest* other) {
  std::swap(type_, other->type_);
  std::swap(role_info_, other->role_info_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SavePlayerRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SavePlayerRequest_descriptor_;
  metadata.reflection = SavePlayerRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SavePlayerRequest

// required int32 type = 1;
bool SavePlayerRequest::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SavePlayerRequest::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
void SavePlayerRequest::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void SavePlayerRequest::clear_type() {
  type_ = 0;
  clear_has_type();
}
 ::google::protobuf::int32 SavePlayerRequest::type() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.SavePlayerRequest.type)
  return type_;
}
 void SavePlayerRequest::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.SavePlayerRequest.type)
}

// required .msg_maj.Role role_info = 2;
bool SavePlayerRequest::has_role_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SavePlayerRequest::set_has_role_info() {
  _has_bits_[0] |= 0x00000002u;
}
void SavePlayerRequest::clear_has_role_info() {
  _has_bits_[0] &= ~0x00000002u;
}
void SavePlayerRequest::clear_role_info() {
  if (role_info_ != NULL) role_info_->::msg_maj::Role::Clear();
  clear_has_role_info();
}
const ::msg_maj::Role& SavePlayerRequest::role_info() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.SavePlayerRequest.role_info)
  return role_info_ != NULL ? *role_info_ : *default_instance_->role_info_;
}
::msg_maj::Role* SavePlayerRequest::mutable_role_info() {
  set_has_role_info();
  if (role_info_ == NULL) {
    role_info_ = new ::msg_maj::Role;
  }
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.SavePlayerRequest.role_info)
  return role_info_;
}
::msg_maj::Role* SavePlayerRequest::release_role_info() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.SavePlayerRequest.role_info)
  clear_has_role_info();
  ::msg_maj::Role* temp = role_info_;
  role_info_ = NULL;
  return temp;
}
void SavePlayerRequest::set_allocated_role_info(::msg_maj::Role* role_info) {
  delete role_info_;
  role_info_ = role_info;
  if (role_info) {
    set_has_role_info();
  } else {
    clear_has_role_info();
  }
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.SavePlayerRequest.role_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBAccountID::kAccountFieldNumber;
const int DBAccountID::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBAccountID::DBAccountID()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.DBAccountID)
}

void DBAccountID::InitAsDefaultInstance() {
}

DBAccountID::DBAccountID(const DBAccountID& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.DBAccountID)
}

void DBAccountID::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DBAccountID::~DBAccountID() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.DBAccountID)
  SharedDtor();
}

void DBAccountID::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void DBAccountID::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBAccountID::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DBAccountID_descriptor_;
}

const DBAccountID& DBAccountID::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fdata_2eproto();
  return *default_instance_;
}

DBAccountID* DBAccountID::default_instance_ = NULL;

DBAccountID* DBAccountID::New(::google::protobuf::Arena* arena) const {
  DBAccountID* n = new DBAccountID;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBAccountID::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.DBAccountID)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_account()) {
      account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    id_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DBAccountID::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.DBAccountID)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string account = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account().data(), this->account().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fogs.proto.msg.DBAccountID.account");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_id;
        break;
      }

      // optional uint32 id = 2;
      case 2: {
        if (tag == 16) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.DBAccountID)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.DBAccountID)
  return false;
#undef DO_
}

void DBAccountID::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.DBAccountID)
  // optional string account = 1;
  if (has_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fogs.proto.msg.DBAccountID.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account(), output);
  }

  // optional uint32 id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.DBAccountID)
}

::google::protobuf::uint8* DBAccountID::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.DBAccountID)
  // optional string account = 1;
  if (has_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fogs.proto.msg.DBAccountID.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account(), target);
  }

  // optional uint32 id = 2;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.DBAccountID)
  return target;
}

int DBAccountID::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.DBAccountID)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional string account = 1;
    if (has_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account());
    }

    // optional uint32 id = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBAccountID::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.DBAccountID)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DBAccountID* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DBAccountID>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.DBAccountID)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.DBAccountID)
    MergeFrom(*source);
  }
}

void DBAccountID::MergeFrom(const DBAccountID& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.DBAccountID)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_account()) {
      set_has_account();
      account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
    }
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void DBAccountID::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.DBAccountID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBAccountID::CopyFrom(const DBAccountID& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.DBAccountID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBAccountID::IsInitialized() const {

  return true;
}

void DBAccountID::Swap(DBAccountID* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBAccountID::InternalSwap(DBAccountID* other) {
  account_.Swap(&other->account_);
  std::swap(id_, other->id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBAccountID::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DBAccountID_descriptor_;
  metadata.reflection = DBAccountID_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DBAccountID

// optional string account = 1;
bool DBAccountID::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DBAccountID::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
void DBAccountID::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
void DBAccountID::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
 const ::std::string& DBAccountID::account() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.DBAccountID.account)
  return account_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DBAccountID::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fogs.proto.msg.DBAccountID.account)
}
 void DBAccountID::set_account(const char* value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fogs.proto.msg.DBAccountID.account)
}
 void DBAccountID::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fogs.proto.msg.DBAccountID.account)
}
 ::std::string* DBAccountID::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.DBAccountID.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DBAccountID::release_account() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.DBAccountID.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DBAccountID::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.DBAccountID.account)
}

// optional uint32 id = 2;
bool DBAccountID::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DBAccountID::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
void DBAccountID::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void DBAccountID::clear_id() {
  id_ = 0u;
  clear_has_id();
}
 ::google::protobuf::uint32 DBAccountID::id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.DBAccountID.id)
  return id_;
}
 void DBAccountID::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.DBAccountID.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryRankRequest::kRanktypeFieldNumber;
const int QueryRankRequest::kCharIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryRankRequest::QueryRankRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.QueryRankRequest)
}

void QueryRankRequest::InitAsDefaultInstance() {
}

QueryRankRequest::QueryRankRequest(const QueryRankRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.QueryRankRequest)
}

void QueryRankRequest::SharedCtor() {
  _cached_size_ = 0;
  ranktype_ = 1;
  char_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QueryRankRequest::~QueryRankRequest() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.QueryRankRequest)
  SharedDtor();
}

void QueryRankRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void QueryRankRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryRankRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QueryRankRequest_descriptor_;
}

const QueryRankRequest& QueryRankRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fdata_2eproto();
  return *default_instance_;
}

QueryRankRequest* QueryRankRequest::default_instance_ = NULL;

QueryRankRequest* QueryRankRequest::New(::google::protobuf::Arena* arena) const {
  QueryRankRequest* n = new QueryRankRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryRankRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.QueryRankRequest)
  if (_has_bits_[0 / 32] & 3u) {
    ranktype_ = 1;
    char_id_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QueryRankRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.QueryRankRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .msg_maj.rank_type ranktype = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::msg_maj::rank_type_IsValid(value)) {
            set_ranktype(static_cast< ::msg_maj::rank_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_char_id;
        break;
      }

      // required uint64 char_id = 2;
      case 2: {
        if (tag == 16) {
         parse_char_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &char_id_)));
          set_has_char_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.QueryRankRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.QueryRankRequest)
  return false;
#undef DO_
}

void QueryRankRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.QueryRankRequest)
  // optional .msg_maj.rank_type ranktype = 1;
  if (has_ranktype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ranktype(), output);
  }

  // required uint64 char_id = 2;
  if (has_char_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->char_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.QueryRankRequest)
}

::google::protobuf::uint8* QueryRankRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.QueryRankRequest)
  // optional .msg_maj.rank_type ranktype = 1;
  if (has_ranktype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ranktype(), target);
  }

  // required uint64 char_id = 2;
  if (has_char_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->char_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.QueryRankRequest)
  return target;
}

int QueryRankRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.QueryRankRequest)
  int total_size = 0;

  // required uint64 char_id = 2;
  if (has_char_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->char_id());
  }
  // optional .msg_maj.rank_type ranktype = 1;
  if (has_ranktype()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ranktype());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryRankRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.QueryRankRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const QueryRankRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryRankRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.QueryRankRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.QueryRankRequest)
    MergeFrom(*source);
  }
}

void QueryRankRequest::MergeFrom(const QueryRankRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.QueryRankRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ranktype()) {
      set_ranktype(from.ranktype());
    }
    if (from.has_char_id()) {
      set_char_id(from.char_id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void QueryRankRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.QueryRankRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryRankRequest::CopyFrom(const QueryRankRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.QueryRankRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryRankRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;

  return true;
}

void QueryRankRequest::Swap(QueryRankRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryRankRequest::InternalSwap(QueryRankRequest* other) {
  std::swap(ranktype_, other->ranktype_);
  std::swap(char_id_, other->char_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryRankRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QueryRankRequest_descriptor_;
  metadata.reflection = QueryRankRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryRankRequest

// optional .msg_maj.rank_type ranktype = 1;
bool QueryRankRequest::has_ranktype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QueryRankRequest::set_has_ranktype() {
  _has_bits_[0] |= 0x00000001u;
}
void QueryRankRequest::clear_has_ranktype() {
  _has_bits_[0] &= ~0x00000001u;
}
void QueryRankRequest::clear_ranktype() {
  ranktype_ = 1;
  clear_has_ranktype();
}
 ::msg_maj::rank_type QueryRankRequest::ranktype() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.QueryRankRequest.ranktype)
  return static_cast< ::msg_maj::rank_type >(ranktype_);
}
 void QueryRankRequest::set_ranktype(::msg_maj::rank_type value) {
  assert(::msg_maj::rank_type_IsValid(value));
  set_has_ranktype();
  ranktype_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.QueryRankRequest.ranktype)
}

// required uint64 char_id = 2;
bool QueryRankRequest::has_char_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void QueryRankRequest::set_has_char_id() {
  _has_bits_[0] |= 0x00000002u;
}
void QueryRankRequest::clear_has_char_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void QueryRankRequest::clear_char_id() {
  char_id_ = GOOGLE_ULONGLONG(0);
  clear_has_char_id();
}
 ::google::protobuf::uint64 QueryRankRequest::char_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.QueryRankRequest.char_id)
  return char_id_;
}
 void QueryRankRequest::set_char_id(::google::protobuf::uint64 value) {
  set_has_char_id();
  char_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.QueryRankRequest.char_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryBase::kIdFieldNumber;
const int QueryBase::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryBase::QueryBase()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.QueryBase)
}

void QueryBase::InitAsDefaultInstance() {
}

QueryBase::QueryBase(const QueryBase& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.QueryBase)
}

void QueryBase::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  value_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QueryBase::~QueryBase() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.QueryBase)
  SharedDtor();
}

void QueryBase::SharedDtor() {
  if (this != default_instance_) {
  }
}

void QueryBase::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryBase::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QueryBase_descriptor_;
}

const QueryBase& QueryBase::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fdata_2eproto();
  return *default_instance_;
}

QueryBase* QueryBase::default_instance_ = NULL;

QueryBase* QueryBase::New(::google::protobuf::Arena* arena) const {
  QueryBase* n = new QueryBase;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryBase::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.QueryBase)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(QueryBase, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<QueryBase*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(value_, id_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QueryBase::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.QueryBase)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_value;
        break;
      }

      // optional uint64 value = 2;
      case 2: {
        if (tag == 16) {
         parse_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &value_)));
          set_has_value();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.QueryBase)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.QueryBase)
  return false;
#undef DO_
}

void QueryBase::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.QueryBase)
  // optional uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional uint64 value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.QueryBase)
}

::google::protobuf::uint8* QueryBase::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.QueryBase)
  // optional uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional uint64 value = 2;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.QueryBase)
  return target;
}

int QueryBase::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.QueryBase)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // optional uint64 value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->value());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryBase::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.QueryBase)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const QueryBase* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryBase>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.QueryBase)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.QueryBase)
    MergeFrom(*source);
  }
}

void QueryBase::MergeFrom(const QueryBase& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.QueryBase)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_value()) {
      set_value(from.value());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void QueryBase::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.QueryBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryBase::CopyFrom(const QueryBase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.QueryBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryBase::IsInitialized() const {

  return true;
}

void QueryBase::Swap(QueryBase* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryBase::InternalSwap(QueryBase* other) {
  std::swap(id_, other->id_);
  std::swap(value_, other->value_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryBase::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QueryBase_descriptor_;
  metadata.reflection = QueryBase_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryBase

// optional uint32 id = 1;
bool QueryBase::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QueryBase::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void QueryBase::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void QueryBase::clear_id() {
  id_ = 0u;
  clear_has_id();
}
 ::google::protobuf::uint32 QueryBase::id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.QueryBase.id)
  return id_;
}
 void QueryBase::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.QueryBase.id)
}

// optional uint64 value = 2;
bool QueryBase::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void QueryBase::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
void QueryBase::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void QueryBase::clear_value() {
  value_ = GOOGLE_ULONGLONG(0);
  clear_has_value();
}
 ::google::protobuf::uint64 QueryBase::value() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.QueryBase.value)
  return value_;
}
 void QueryBase::set_value(::google::protobuf::uint64 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.QueryBase.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuerySaveRanks::kRanktypeFieldNumber;
const int QuerySaveRanks::kWinsinfoFieldNumber;
const int QuerySaveRanks::kScoreinfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuerySaveRanks::QuerySaveRanks()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.QuerySaveRanks)
}

void QuerySaveRanks::InitAsDefaultInstance() {
}

QuerySaveRanks::QuerySaveRanks(const QuerySaveRanks& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.QuerySaveRanks)
}

void QuerySaveRanks::SharedCtor() {
  _cached_size_ = 0;
  ranktype_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QuerySaveRanks::~QuerySaveRanks() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.QuerySaveRanks)
  SharedDtor();
}

void QuerySaveRanks::SharedDtor() {
  if (this != default_instance_) {
  }
}

void QuerySaveRanks::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuerySaveRanks::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QuerySaveRanks_descriptor_;
}

const QuerySaveRanks& QuerySaveRanks::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fdata_2eproto();
  return *default_instance_;
}

QuerySaveRanks* QuerySaveRanks::default_instance_ = NULL;

QuerySaveRanks* QuerySaveRanks::New(::google::protobuf::Arena* arena) const {
  QuerySaveRanks* n = new QuerySaveRanks;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuerySaveRanks::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.QuerySaveRanks)
  ranktype_ = 1;
  winsinfo_.Clear();
  scoreinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QuerySaveRanks::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.QuerySaveRanks)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .msg_maj.rank_type ranktype = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::msg_maj::rank_type_IsValid(value)) {
            set_ranktype(static_cast< ::msg_maj::rank_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_winsinfo;
        break;
      }

      // repeated .msg_maj.WinsInfo winsinfo = 2;
      case 2: {
        if (tag == 18) {
         parse_winsinfo:
          DO_(input->IncrementRecursionDepth());
         parse_loop_winsinfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_winsinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_winsinfo;
        if (input->ExpectTag(26)) goto parse_loop_scoreinfo;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .msg_maj.ScoreInfo scoreinfo = 3;
      case 3: {
        if (tag == 26) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_scoreinfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_scoreinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_scoreinfo;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.QuerySaveRanks)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.QuerySaveRanks)
  return false;
#undef DO_
}

void QuerySaveRanks::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.QuerySaveRanks)
  // optional .msg_maj.rank_type ranktype = 1;
  if (has_ranktype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ranktype(), output);
  }

  // repeated .msg_maj.WinsInfo winsinfo = 2;
  for (unsigned int i = 0, n = this->winsinfo_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->winsinfo(i), output);
  }

  // repeated .msg_maj.ScoreInfo scoreinfo = 3;
  for (unsigned int i = 0, n = this->scoreinfo_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->scoreinfo(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.QuerySaveRanks)
}

::google::protobuf::uint8* QuerySaveRanks::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.QuerySaveRanks)
  // optional .msg_maj.rank_type ranktype = 1;
  if (has_ranktype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ranktype(), target);
  }

  // repeated .msg_maj.WinsInfo winsinfo = 2;
  for (unsigned int i = 0, n = this->winsinfo_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->winsinfo(i), false, target);
  }

  // repeated .msg_maj.ScoreInfo scoreinfo = 3;
  for (unsigned int i = 0, n = this->scoreinfo_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->scoreinfo(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.QuerySaveRanks)
  return target;
}

int QuerySaveRanks::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.QuerySaveRanks)
  int total_size = 0;

  // optional .msg_maj.rank_type ranktype = 1;
  if (has_ranktype()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ranktype());
  }

  // repeated .msg_maj.WinsInfo winsinfo = 2;
  total_size += 1 * this->winsinfo_size();
  for (int i = 0; i < this->winsinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->winsinfo(i));
  }

  // repeated .msg_maj.ScoreInfo scoreinfo = 3;
  total_size += 1 * this->scoreinfo_size();
  for (int i = 0; i < this->scoreinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->scoreinfo(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuerySaveRanks::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.QuerySaveRanks)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const QuerySaveRanks* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const QuerySaveRanks>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.QuerySaveRanks)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.QuerySaveRanks)
    MergeFrom(*source);
  }
}

void QuerySaveRanks::MergeFrom(const QuerySaveRanks& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.QuerySaveRanks)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  winsinfo_.MergeFrom(from.winsinfo_);
  scoreinfo_.MergeFrom(from.scoreinfo_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ranktype()) {
      set_ranktype(from.ranktype());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void QuerySaveRanks::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.QuerySaveRanks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuerySaveRanks::CopyFrom(const QuerySaveRanks& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.QuerySaveRanks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuerySaveRanks::IsInitialized() const {

  return true;
}

void QuerySaveRanks::Swap(QuerySaveRanks* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuerySaveRanks::InternalSwap(QuerySaveRanks* other) {
  std::swap(ranktype_, other->ranktype_);
  winsinfo_.UnsafeArenaSwap(&other->winsinfo_);
  scoreinfo_.UnsafeArenaSwap(&other->scoreinfo_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuerySaveRanks::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QuerySaveRanks_descriptor_;
  metadata.reflection = QuerySaveRanks_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuerySaveRanks

// optional .msg_maj.rank_type ranktype = 1;
bool QuerySaveRanks::has_ranktype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QuerySaveRanks::set_has_ranktype() {
  _has_bits_[0] |= 0x00000001u;
}
void QuerySaveRanks::clear_has_ranktype() {
  _has_bits_[0] &= ~0x00000001u;
}
void QuerySaveRanks::clear_ranktype() {
  ranktype_ = 1;
  clear_has_ranktype();
}
 ::msg_maj::rank_type QuerySaveRanks::ranktype() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.QuerySaveRanks.ranktype)
  return static_cast< ::msg_maj::rank_type >(ranktype_);
}
 void QuerySaveRanks::set_ranktype(::msg_maj::rank_type value) {
  assert(::msg_maj::rank_type_IsValid(value));
  set_has_ranktype();
  ranktype_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.QuerySaveRanks.ranktype)
}

// repeated .msg_maj.WinsInfo winsinfo = 2;
int QuerySaveRanks::winsinfo_size() const {
  return winsinfo_.size();
}
void QuerySaveRanks::clear_winsinfo() {
  winsinfo_.Clear();
}
const ::msg_maj::WinsInfo& QuerySaveRanks::winsinfo(int index) const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.QuerySaveRanks.winsinfo)
  return winsinfo_.Get(index);
}
::msg_maj::WinsInfo* QuerySaveRanks::mutable_winsinfo(int index) {
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.QuerySaveRanks.winsinfo)
  return winsinfo_.Mutable(index);
}
::msg_maj::WinsInfo* QuerySaveRanks::add_winsinfo() {
  // @@protoc_insertion_point(field_add:fogs.proto.msg.QuerySaveRanks.winsinfo)
  return winsinfo_.Add();
}
::google::protobuf::RepeatedPtrField< ::msg_maj::WinsInfo >*
QuerySaveRanks::mutable_winsinfo() {
  // @@protoc_insertion_point(field_mutable_list:fogs.proto.msg.QuerySaveRanks.winsinfo)
  return &winsinfo_;
}
const ::google::protobuf::RepeatedPtrField< ::msg_maj::WinsInfo >&
QuerySaveRanks::winsinfo() const {
  // @@protoc_insertion_point(field_list:fogs.proto.msg.QuerySaveRanks.winsinfo)
  return winsinfo_;
}

// repeated .msg_maj.ScoreInfo scoreinfo = 3;
int QuerySaveRanks::scoreinfo_size() const {
  return scoreinfo_.size();
}
void QuerySaveRanks::clear_scoreinfo() {
  scoreinfo_.Clear();
}
const ::msg_maj::ScoreInfo& QuerySaveRanks::scoreinfo(int index) const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.QuerySaveRanks.scoreinfo)
  return scoreinfo_.Get(index);
}
::msg_maj::ScoreInfo* QuerySaveRanks::mutable_scoreinfo(int index) {
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.QuerySaveRanks.scoreinfo)
  return scoreinfo_.Mutable(index);
}
::msg_maj::ScoreInfo* QuerySaveRanks::add_scoreinfo() {
  // @@protoc_insertion_point(field_add:fogs.proto.msg.QuerySaveRanks.scoreinfo)
  return scoreinfo_.Add();
}
::google::protobuf::RepeatedPtrField< ::msg_maj::ScoreInfo >*
QuerySaveRanks::mutable_scoreinfo() {
  // @@protoc_insertion_point(field_mutable_list:fogs.proto.msg.QuerySaveRanks.scoreinfo)
  return &scoreinfo_;
}
const ::google::protobuf::RepeatedPtrField< ::msg_maj::ScoreInfo >&
QuerySaveRanks::scoreinfo() const {
  // @@protoc_insertion_point(field_list:fogs.proto.msg.QuerySaveRanks.scoreinfo)
  return scoreinfo_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateSaveRanks::kRanktypeFieldNumber;
const int UpdateSaveRanks::kWinsinfoFieldNumber;
const int UpdateSaveRanks::kScoreinfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateSaveRanks::UpdateSaveRanks()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.UpdateSaveRanks)
}

void UpdateSaveRanks::InitAsDefaultInstance() {
  winsinfo_ = const_cast< ::msg_maj::WinsInfo*>(&::msg_maj::WinsInfo::default_instance());
  scoreinfo_ = const_cast< ::msg_maj::ScoreInfo*>(&::msg_maj::ScoreInfo::default_instance());
}

UpdateSaveRanks::UpdateSaveRanks(const UpdateSaveRanks& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.UpdateSaveRanks)
}

void UpdateSaveRanks::SharedCtor() {
  _cached_size_ = 0;
  ranktype_ = 1;
  winsinfo_ = NULL;
  scoreinfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpdateSaveRanks::~UpdateSaveRanks() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.UpdateSaveRanks)
  SharedDtor();
}

void UpdateSaveRanks::SharedDtor() {
  if (this != default_instance_) {
    delete winsinfo_;
    delete scoreinfo_;
  }
}

void UpdateSaveRanks::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateSaveRanks::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateSaveRanks_descriptor_;
}

const UpdateSaveRanks& UpdateSaveRanks::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fdata_2eproto();
  return *default_instance_;
}

UpdateSaveRanks* UpdateSaveRanks::default_instance_ = NULL;

UpdateSaveRanks* UpdateSaveRanks::New(::google::protobuf::Arena* arena) const {
  UpdateSaveRanks* n = new UpdateSaveRanks;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateSaveRanks::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.UpdateSaveRanks)
  if (_has_bits_[0 / 32] & 7u) {
    ranktype_ = 1;
    if (has_winsinfo()) {
      if (winsinfo_ != NULL) winsinfo_->::msg_maj::WinsInfo::Clear();
    }
    if (has_scoreinfo()) {
      if (scoreinfo_ != NULL) scoreinfo_->::msg_maj::ScoreInfo::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool UpdateSaveRanks::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.UpdateSaveRanks)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .msg_maj.rank_type ranktype = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::msg_maj::rank_type_IsValid(value)) {
            set_ranktype(static_cast< ::msg_maj::rank_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_winsinfo;
        break;
      }

      // optional .msg_maj.WinsInfo winsinfo = 2;
      case 2: {
        if (tag == 18) {
         parse_winsinfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_winsinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_scoreinfo;
        break;
      }

      // optional .msg_maj.ScoreInfo scoreinfo = 3;
      case 3: {
        if (tag == 26) {
         parse_scoreinfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_scoreinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.UpdateSaveRanks)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.UpdateSaveRanks)
  return false;
#undef DO_
}

void UpdateSaveRanks::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.UpdateSaveRanks)
  // optional .msg_maj.rank_type ranktype = 1;
  if (has_ranktype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ranktype(), output);
  }

  // optional .msg_maj.WinsInfo winsinfo = 2;
  if (has_winsinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->winsinfo_, output);
  }

  // optional .msg_maj.ScoreInfo scoreinfo = 3;
  if (has_scoreinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->scoreinfo_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.UpdateSaveRanks)
}

::google::protobuf::uint8* UpdateSaveRanks::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.UpdateSaveRanks)
  // optional .msg_maj.rank_type ranktype = 1;
  if (has_ranktype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ranktype(), target);
  }

  // optional .msg_maj.WinsInfo winsinfo = 2;
  if (has_winsinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->winsinfo_, false, target);
  }

  // optional .msg_maj.ScoreInfo scoreinfo = 3;
  if (has_scoreinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->scoreinfo_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.UpdateSaveRanks)
  return target;
}

int UpdateSaveRanks::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.UpdateSaveRanks)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional .msg_maj.rank_type ranktype = 1;
    if (has_ranktype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->ranktype());
    }

    // optional .msg_maj.WinsInfo winsinfo = 2;
    if (has_winsinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->winsinfo_);
    }

    // optional .msg_maj.ScoreInfo scoreinfo = 3;
    if (has_scoreinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->scoreinfo_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateSaveRanks::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.UpdateSaveRanks)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const UpdateSaveRanks* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateSaveRanks>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.UpdateSaveRanks)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.UpdateSaveRanks)
    MergeFrom(*source);
  }
}

void UpdateSaveRanks::MergeFrom(const UpdateSaveRanks& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.UpdateSaveRanks)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ranktype()) {
      set_ranktype(from.ranktype());
    }
    if (from.has_winsinfo()) {
      mutable_winsinfo()->::msg_maj::WinsInfo::MergeFrom(from.winsinfo());
    }
    if (from.has_scoreinfo()) {
      mutable_scoreinfo()->::msg_maj::ScoreInfo::MergeFrom(from.scoreinfo());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void UpdateSaveRanks::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.UpdateSaveRanks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateSaveRanks::CopyFrom(const UpdateSaveRanks& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.UpdateSaveRanks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateSaveRanks::IsInitialized() const {

  return true;
}

void UpdateSaveRanks::Swap(UpdateSaveRanks* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateSaveRanks::InternalSwap(UpdateSaveRanks* other) {
  std::swap(ranktype_, other->ranktype_);
  std::swap(winsinfo_, other->winsinfo_);
  std::swap(scoreinfo_, other->scoreinfo_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateSaveRanks::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateSaveRanks_descriptor_;
  metadata.reflection = UpdateSaveRanks_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdateSaveRanks

// optional .msg_maj.rank_type ranktype = 1;
bool UpdateSaveRanks::has_ranktype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UpdateSaveRanks::set_has_ranktype() {
  _has_bits_[0] |= 0x00000001u;
}
void UpdateSaveRanks::clear_has_ranktype() {
  _has_bits_[0] &= ~0x00000001u;
}
void UpdateSaveRanks::clear_ranktype() {
  ranktype_ = 1;
  clear_has_ranktype();
}
 ::msg_maj::rank_type UpdateSaveRanks::ranktype() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.UpdateSaveRanks.ranktype)
  return static_cast< ::msg_maj::rank_type >(ranktype_);
}
 void UpdateSaveRanks::set_ranktype(::msg_maj::rank_type value) {
  assert(::msg_maj::rank_type_IsValid(value));
  set_has_ranktype();
  ranktype_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.UpdateSaveRanks.ranktype)
}

// optional .msg_maj.WinsInfo winsinfo = 2;
bool UpdateSaveRanks::has_winsinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void UpdateSaveRanks::set_has_winsinfo() {
  _has_bits_[0] |= 0x00000002u;
}
void UpdateSaveRanks::clear_has_winsinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
void UpdateSaveRanks::clear_winsinfo() {
  if (winsinfo_ != NULL) winsinfo_->::msg_maj::WinsInfo::Clear();
  clear_has_winsinfo();
}
const ::msg_maj::WinsInfo& UpdateSaveRanks::winsinfo() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.UpdateSaveRanks.winsinfo)
  return winsinfo_ != NULL ? *winsinfo_ : *default_instance_->winsinfo_;
}
::msg_maj::WinsInfo* UpdateSaveRanks::mutable_winsinfo() {
  set_has_winsinfo();
  if (winsinfo_ == NULL) {
    winsinfo_ = new ::msg_maj::WinsInfo;
  }
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.UpdateSaveRanks.winsinfo)
  return winsinfo_;
}
::msg_maj::WinsInfo* UpdateSaveRanks::release_winsinfo() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.UpdateSaveRanks.winsinfo)
  clear_has_winsinfo();
  ::msg_maj::WinsInfo* temp = winsinfo_;
  winsinfo_ = NULL;
  return temp;
}
void UpdateSaveRanks::set_allocated_winsinfo(::msg_maj::WinsInfo* winsinfo) {
  delete winsinfo_;
  winsinfo_ = winsinfo;
  if (winsinfo) {
    set_has_winsinfo();
  } else {
    clear_has_winsinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.UpdateSaveRanks.winsinfo)
}

// optional .msg_maj.ScoreInfo scoreinfo = 3;
bool UpdateSaveRanks::has_scoreinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void UpdateSaveRanks::set_has_scoreinfo() {
  _has_bits_[0] |= 0x00000004u;
}
void UpdateSaveRanks::clear_has_scoreinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
void UpdateSaveRanks::clear_scoreinfo() {
  if (scoreinfo_ != NULL) scoreinfo_->::msg_maj::ScoreInfo::Clear();
  clear_has_scoreinfo();
}
const ::msg_maj::ScoreInfo& UpdateSaveRanks::scoreinfo() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.UpdateSaveRanks.scoreinfo)
  return scoreinfo_ != NULL ? *scoreinfo_ : *default_instance_->scoreinfo_;
}
::msg_maj::ScoreInfo* UpdateSaveRanks::mutable_scoreinfo() {
  set_has_scoreinfo();
  if (scoreinfo_ == NULL) {
    scoreinfo_ = new ::msg_maj::ScoreInfo;
  }
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.UpdateSaveRanks.scoreinfo)
  return scoreinfo_;
}
::msg_maj::ScoreInfo* UpdateSaveRanks::release_scoreinfo() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.UpdateSaveRanks.scoreinfo)
  clear_has_scoreinfo();
  ::msg_maj::ScoreInfo* temp = scoreinfo_;
  scoreinfo_ = NULL;
  return temp;
}
void UpdateSaveRanks::set_allocated_scoreinfo(::msg_maj::ScoreInfo* scoreinfo) {
  delete scoreinfo_;
  scoreinfo_ = scoreinfo;
  if (scoreinfo) {
    set_has_scoreinfo();
  } else {
    clear_has_scoreinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.UpdateSaveRanks.scoreinfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryRankReqResp::kRanktypeFieldNumber;
const int QueryRankReqResp::kCharIdFieldNumber;
const int QueryRankReqResp::kLastFieldNumber;
const int QueryRankReqResp::kRanklistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryRankReqResp::QueryRankReqResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.QueryRankReqResp)
}

void QueryRankReqResp::InitAsDefaultInstance() {
  ranklist_ = const_cast< ::msg_maj::RankResp*>(&::msg_maj::RankResp::default_instance());
}

QueryRankReqResp::QueryRankReqResp(const QueryRankReqResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.QueryRankReqResp)
}

void QueryRankReqResp::SharedCtor() {
  _cached_size_ = 0;
  ranktype_ = 1;
  char_id_ = GOOGLE_ULONGLONG(0);
  last_ = 0;
  ranklist_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QueryRankReqResp::~QueryRankReqResp() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.QueryRankReqResp)
  SharedDtor();
}

void QueryRankReqResp::SharedDtor() {
  if (this != default_instance_) {
    delete ranklist_;
  }
}

void QueryRankReqResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryRankReqResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QueryRankReqResp_descriptor_;
}

const QueryRankReqResp& QueryRankReqResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fdata_2eproto();
  return *default_instance_;
}

QueryRankReqResp* QueryRankReqResp::default_instance_ = NULL;

QueryRankReqResp* QueryRankReqResp::New(::google::protobuf::Arena* arena) const {
  QueryRankReqResp* n = new QueryRankReqResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryRankReqResp::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.QueryRankReqResp)
  if (_has_bits_[0 / 32] & 15u) {
    ranktype_ = 1;
    char_id_ = GOOGLE_ULONGLONG(0);
    last_ = 0;
    if (has_ranklist()) {
      if (ranklist_ != NULL) ranklist_->::msg_maj::RankResp::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QueryRankReqResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.QueryRankReqResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .msg_maj.rank_type ranktype = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::msg_maj::rank_type_IsValid(value)) {
            set_ranktype(static_cast< ::msg_maj::rank_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_char_id;
        break;
      }

      // required uint64 char_id = 2;
      case 2: {
        if (tag == 16) {
         parse_char_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &char_id_)));
          set_has_char_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_last;
        break;
      }

      // optional int32 last = 3;
      case 3: {
        if (tag == 24) {
         parse_last:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &last_)));
          set_has_last();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_ranklist;
        break;
      }

      // optional .msg_maj.RankResp ranklist = 4;
      case 4: {
        if (tag == 34) {
         parse_ranklist:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ranklist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.QueryRankReqResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.QueryRankReqResp)
  return false;
#undef DO_
}

void QueryRankReqResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.QueryRankReqResp)
  // required .msg_maj.rank_type ranktype = 1;
  if (has_ranktype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ranktype(), output);
  }

  // required uint64 char_id = 2;
  if (has_char_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->char_id(), output);
  }

  // optional int32 last = 3;
  if (has_last()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->last(), output);
  }

  // optional .msg_maj.RankResp ranklist = 4;
  if (has_ranklist()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->ranklist_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.QueryRankReqResp)
}

::google::protobuf::uint8* QueryRankReqResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.QueryRankReqResp)
  // required .msg_maj.rank_type ranktype = 1;
  if (has_ranktype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ranktype(), target);
  }

  // required uint64 char_id = 2;
  if (has_char_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->char_id(), target);
  }

  // optional int32 last = 3;
  if (has_last()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->last(), target);
  }

  // optional .msg_maj.RankResp ranklist = 4;
  if (has_ranklist()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->ranklist_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.QueryRankReqResp)
  return target;
}

int QueryRankReqResp::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:fogs.proto.msg.QueryRankReqResp)
  int total_size = 0;

  if (has_ranktype()) {
    // required .msg_maj.rank_type ranktype = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ranktype());
  }

  if (has_char_id()) {
    // required uint64 char_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->char_id());
  }

  return total_size;
}
int QueryRankReqResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.QueryRankReqResp)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .msg_maj.rank_type ranktype = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ranktype());

    // required uint64 char_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->char_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[2 / 32] & 12u) {
    // optional int32 last = 3;
    if (has_last()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->last());
    }

    // optional .msg_maj.RankResp ranklist = 4;
    if (has_ranklist()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->ranklist_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryRankReqResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.QueryRankReqResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const QueryRankReqResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryRankReqResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.QueryRankReqResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.QueryRankReqResp)
    MergeFrom(*source);
  }
}

void QueryRankReqResp::MergeFrom(const QueryRankReqResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.QueryRankReqResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ranktype()) {
      set_ranktype(from.ranktype());
    }
    if (from.has_char_id()) {
      set_char_id(from.char_id());
    }
    if (from.has_last()) {
      set_last(from.last());
    }
    if (from.has_ranklist()) {
      mutable_ranklist()->::msg_maj::RankResp::MergeFrom(from.ranklist());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void QueryRankReqResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.QueryRankReqResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryRankReqResp::CopyFrom(const QueryRankReqResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.QueryRankReqResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryRankReqResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_ranklist()) {
    if (!this->ranklist_->IsInitialized()) return false;
  }
  return true;
}

void QueryRankReqResp::Swap(QueryRankReqResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryRankReqResp::InternalSwap(QueryRankReqResp* other) {
  std::swap(ranktype_, other->ranktype_);
  std::swap(char_id_, other->char_id_);
  std::swap(last_, other->last_);
  std::swap(ranklist_, other->ranklist_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryRankReqResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QueryRankReqResp_descriptor_;
  metadata.reflection = QueryRankReqResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryRankReqResp

// required .msg_maj.rank_type ranktype = 1;
bool QueryRankReqResp::has_ranktype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QueryRankReqResp::set_has_ranktype() {
  _has_bits_[0] |= 0x00000001u;
}
void QueryRankReqResp::clear_has_ranktype() {
  _has_bits_[0] &= ~0x00000001u;
}
void QueryRankReqResp::clear_ranktype() {
  ranktype_ = 1;
  clear_has_ranktype();
}
 ::msg_maj::rank_type QueryRankReqResp::ranktype() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.QueryRankReqResp.ranktype)
  return static_cast< ::msg_maj::rank_type >(ranktype_);
}
 void QueryRankReqResp::set_ranktype(::msg_maj::rank_type value) {
  assert(::msg_maj::rank_type_IsValid(value));
  set_has_ranktype();
  ranktype_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.QueryRankReqResp.ranktype)
}

// required uint64 char_id = 2;
bool QueryRankReqResp::has_char_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void QueryRankReqResp::set_has_char_id() {
  _has_bits_[0] |= 0x00000002u;
}
void QueryRankReqResp::clear_has_char_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void QueryRankReqResp::clear_char_id() {
  char_id_ = GOOGLE_ULONGLONG(0);
  clear_has_char_id();
}
 ::google::protobuf::uint64 QueryRankReqResp::char_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.QueryRankReqResp.char_id)
  return char_id_;
}
 void QueryRankReqResp::set_char_id(::google::protobuf::uint64 value) {
  set_has_char_id();
  char_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.QueryRankReqResp.char_id)
}

// optional int32 last = 3;
bool QueryRankReqResp::has_last() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void QueryRankReqResp::set_has_last() {
  _has_bits_[0] |= 0x00000004u;
}
void QueryRankReqResp::clear_has_last() {
  _has_bits_[0] &= ~0x00000004u;
}
void QueryRankReqResp::clear_last() {
  last_ = 0;
  clear_has_last();
}
 ::google::protobuf::int32 QueryRankReqResp::last() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.QueryRankReqResp.last)
  return last_;
}
 void QueryRankReqResp::set_last(::google::protobuf::int32 value) {
  set_has_last();
  last_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.QueryRankReqResp.last)
}

// optional .msg_maj.RankResp ranklist = 4;
bool QueryRankReqResp::has_ranklist() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void QueryRankReqResp::set_has_ranklist() {
  _has_bits_[0] |= 0x00000008u;
}
void QueryRankReqResp::clear_has_ranklist() {
  _has_bits_[0] &= ~0x00000008u;
}
void QueryRankReqResp::clear_ranklist() {
  if (ranklist_ != NULL) ranklist_->::msg_maj::RankResp::Clear();
  clear_has_ranklist();
}
const ::msg_maj::RankResp& QueryRankReqResp::ranklist() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.QueryRankReqResp.ranklist)
  return ranklist_ != NULL ? *ranklist_ : *default_instance_->ranklist_;
}
::msg_maj::RankResp* QueryRankReqResp::mutable_ranklist() {
  set_has_ranklist();
  if (ranklist_ == NULL) {
    ranklist_ = new ::msg_maj::RankResp;
  }
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.QueryRankReqResp.ranklist)
  return ranklist_;
}
::msg_maj::RankResp* QueryRankReqResp::release_ranklist() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.QueryRankReqResp.ranklist)
  clear_has_ranklist();
  ::msg_maj::RankResp* temp = ranklist_;
  ranklist_ = NULL;
  return temp;
}
void QueryRankReqResp::set_allocated_ranklist(::msg_maj::RankResp* ranklist) {
  delete ranklist_;
  ranklist_ = ranklist;
  if (ranklist) {
    set_has_ranklist();
  } else {
    clear_has_ranklist();
  }
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.QueryRankReqResp.ranklist)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdatePlayerSort::kRanktypeFieldNumber;
const int UpdatePlayerSort::kCharIdFieldNumber;
const int UpdatePlayerSort::kSortFieldNumber;
const int UpdatePlayerSort::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdatePlayerSort::UpdatePlayerSort()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.UpdatePlayerSort)
}

void UpdatePlayerSort::InitAsDefaultInstance() {
}

UpdatePlayerSort::UpdatePlayerSort(const UpdatePlayerSort& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.UpdatePlayerSort)
}

void UpdatePlayerSort::SharedCtor() {
  _cached_size_ = 0;
  ranktype_ = 1;
  char_id_ = GOOGLE_ULONGLONG(0);
  sort_ = 0u;
  value_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpdatePlayerSort::~UpdatePlayerSort() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.UpdatePlayerSort)
  SharedDtor();
}

void UpdatePlayerSort::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UpdatePlayerSort::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdatePlayerSort::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdatePlayerSort_descriptor_;
}

const UpdatePlayerSort& UpdatePlayerSort::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fdata_2eproto();
  return *default_instance_;
}

UpdatePlayerSort* UpdatePlayerSort::default_instance_ = NULL;

UpdatePlayerSort* UpdatePlayerSort::New(::google::protobuf::Arena* arena) const {
  UpdatePlayerSort* n = new UpdatePlayerSort;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdatePlayerSort::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.UpdatePlayerSort)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(UpdatePlayerSort, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<UpdatePlayerSort*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 15u) {
    ZR_(sort_, value_);
    ranktype_ = 1;
    char_id_ = GOOGLE_ULONGLONG(0);
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool UpdatePlayerSort::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.UpdatePlayerSort)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .msg_maj.rank_type ranktype = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::msg_maj::rank_type_IsValid(value)) {
            set_ranktype(static_cast< ::msg_maj::rank_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_char_id;
        break;
      }

      // required uint64 char_id = 2;
      case 2: {
        if (tag == 16) {
         parse_char_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &char_id_)));
          set_has_char_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_sort;
        break;
      }

      // required uint32 sort = 3;
      case 3: {
        if (tag == 24) {
         parse_sort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sort_)));
          set_has_sort();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_value;
        break;
      }

      // required uint32 value = 4;
      case 4: {
        if (tag == 32) {
         parse_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &value_)));
          set_has_value();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.UpdatePlayerSort)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.UpdatePlayerSort)
  return false;
#undef DO_
}

void UpdatePlayerSort::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.UpdatePlayerSort)
  // required .msg_maj.rank_type ranktype = 1;
  if (has_ranktype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ranktype(), output);
  }

  // required uint64 char_id = 2;
  if (has_char_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->char_id(), output);
  }

  // required uint32 sort = 3;
  if (has_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->sort(), output);
  }

  // required uint32 value = 4;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.UpdatePlayerSort)
}

::google::protobuf::uint8* UpdatePlayerSort::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.UpdatePlayerSort)
  // required .msg_maj.rank_type ranktype = 1;
  if (has_ranktype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ranktype(), target);
  }

  // required uint64 char_id = 2;
  if (has_char_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->char_id(), target);
  }

  // required uint32 sort = 3;
  if (has_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->sort(), target);
  }

  // required uint32 value = 4;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.UpdatePlayerSort)
  return target;
}

int UpdatePlayerSort::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:fogs.proto.msg.UpdatePlayerSort)
  int total_size = 0;

  if (has_ranktype()) {
    // required .msg_maj.rank_type ranktype = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ranktype());
  }

  if (has_char_id()) {
    // required uint64 char_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->char_id());
  }

  if (has_sort()) {
    // required uint32 sort = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sort());
  }

  if (has_value()) {
    // required uint32 value = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->value());
  }

  return total_size;
}
int UpdatePlayerSort::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.UpdatePlayerSort)
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required .msg_maj.rank_type ranktype = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ranktype());

    // required uint64 char_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->char_id());

    // required uint32 sort = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sort());

    // required uint32 value = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->value());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdatePlayerSort::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.UpdatePlayerSort)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const UpdatePlayerSort* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdatePlayerSort>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.UpdatePlayerSort)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.UpdatePlayerSort)
    MergeFrom(*source);
  }
}

void UpdatePlayerSort::MergeFrom(const UpdatePlayerSort& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.UpdatePlayerSort)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ranktype()) {
      set_ranktype(from.ranktype());
    }
    if (from.has_char_id()) {
      set_char_id(from.char_id());
    }
    if (from.has_sort()) {
      set_sort(from.sort());
    }
    if (from.has_value()) {
      set_value(from.value());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void UpdatePlayerSort::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.UpdatePlayerSort)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdatePlayerSort::CopyFrom(const UpdatePlayerSort& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.UpdatePlayerSort)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdatePlayerSort::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void UpdatePlayerSort::Swap(UpdatePlayerSort* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdatePlayerSort::InternalSwap(UpdatePlayerSort* other) {
  std::swap(ranktype_, other->ranktype_);
  std::swap(char_id_, other->char_id_);
  std::swap(sort_, other->sort_);
  std::swap(value_, other->value_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdatePlayerSort::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdatePlayerSort_descriptor_;
  metadata.reflection = UpdatePlayerSort_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdatePlayerSort

// required .msg_maj.rank_type ranktype = 1;
bool UpdatePlayerSort::has_ranktype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UpdatePlayerSort::set_has_ranktype() {
  _has_bits_[0] |= 0x00000001u;
}
void UpdatePlayerSort::clear_has_ranktype() {
  _has_bits_[0] &= ~0x00000001u;
}
void UpdatePlayerSort::clear_ranktype() {
  ranktype_ = 1;
  clear_has_ranktype();
}
 ::msg_maj::rank_type UpdatePlayerSort::ranktype() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.UpdatePlayerSort.ranktype)
  return static_cast< ::msg_maj::rank_type >(ranktype_);
}
 void UpdatePlayerSort::set_ranktype(::msg_maj::rank_type value) {
  assert(::msg_maj::rank_type_IsValid(value));
  set_has_ranktype();
  ranktype_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.UpdatePlayerSort.ranktype)
}

// required uint64 char_id = 2;
bool UpdatePlayerSort::has_char_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void UpdatePlayerSort::set_has_char_id() {
  _has_bits_[0] |= 0x00000002u;
}
void UpdatePlayerSort::clear_has_char_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void UpdatePlayerSort::clear_char_id() {
  char_id_ = GOOGLE_ULONGLONG(0);
  clear_has_char_id();
}
 ::google::protobuf::uint64 UpdatePlayerSort::char_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.UpdatePlayerSort.char_id)
  return char_id_;
}
 void UpdatePlayerSort::set_char_id(::google::protobuf::uint64 value) {
  set_has_char_id();
  char_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.UpdatePlayerSort.char_id)
}

// required uint32 sort = 3;
bool UpdatePlayerSort::has_sort() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void UpdatePlayerSort::set_has_sort() {
  _has_bits_[0] |= 0x00000004u;
}
void UpdatePlayerSort::clear_has_sort() {
  _has_bits_[0] &= ~0x00000004u;
}
void UpdatePlayerSort::clear_sort() {
  sort_ = 0u;
  clear_has_sort();
}
 ::google::protobuf::uint32 UpdatePlayerSort::sort() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.UpdatePlayerSort.sort)
  return sort_;
}
 void UpdatePlayerSort::set_sort(::google::protobuf::uint32 value) {
  set_has_sort();
  sort_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.UpdatePlayerSort.sort)
}

// required uint32 value = 4;
bool UpdatePlayerSort::has_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void UpdatePlayerSort::set_has_value() {
  _has_bits_[0] |= 0x00000008u;
}
void UpdatePlayerSort::clear_has_value() {
  _has_bits_[0] &= ~0x00000008u;
}
void UpdatePlayerSort::clear_value() {
  value_ = 0u;
  clear_has_value();
}
 ::google::protobuf::uint32 UpdatePlayerSort::value() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.UpdatePlayerSort.value)
  return value_;
}
 void UpdatePlayerSort::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.UpdatePlayerSort.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryHistoryRequset::kStartIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryHistoryRequset::QueryHistoryRequset()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.QueryHistoryRequset)
}

void QueryHistoryRequset::InitAsDefaultInstance() {
}

QueryHistoryRequset::QueryHistoryRequset(const QueryHistoryRequset& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.QueryHistoryRequset)
}

void QueryHistoryRequset::SharedCtor() {
  _cached_size_ = 0;
  start_index_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QueryHistoryRequset::~QueryHistoryRequset() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.QueryHistoryRequset)
  SharedDtor();
}

void QueryHistoryRequset::SharedDtor() {
  if (this != default_instance_) {
  }
}

void QueryHistoryRequset::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryHistoryRequset::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QueryHistoryRequset_descriptor_;
}

const QueryHistoryRequset& QueryHistoryRequset::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fdata_2eproto();
  return *default_instance_;
}

QueryHistoryRequset* QueryHistoryRequset::default_instance_ = NULL;

QueryHistoryRequset* QueryHistoryRequset::New(::google::protobuf::Arena* arena) const {
  QueryHistoryRequset* n = new QueryHistoryRequset;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryHistoryRequset::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.QueryHistoryRequset)
  start_index_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QueryHistoryRequset::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.QueryHistoryRequset)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 start_index = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &start_index_)));
          set_has_start_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.QueryHistoryRequset)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.QueryHistoryRequset)
  return false;
#undef DO_
}

void QueryHistoryRequset::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.QueryHistoryRequset)
  // required uint64 start_index = 1;
  if (has_start_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->start_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.QueryHistoryRequset)
}

::google::protobuf::uint8* QueryHistoryRequset::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.QueryHistoryRequset)
  // required uint64 start_index = 1;
  if (has_start_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->start_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.QueryHistoryRequset)
  return target;
}

int QueryHistoryRequset::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.QueryHistoryRequset)
  int total_size = 0;

  // required uint64 start_index = 1;
  if (has_start_index()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->start_index());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryHistoryRequset::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.QueryHistoryRequset)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const QueryHistoryRequset* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryHistoryRequset>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.QueryHistoryRequset)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.QueryHistoryRequset)
    MergeFrom(*source);
  }
}

void QueryHistoryRequset::MergeFrom(const QueryHistoryRequset& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.QueryHistoryRequset)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start_index()) {
      set_start_index(from.start_index());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void QueryHistoryRequset::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.QueryHistoryRequset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryHistoryRequset::CopyFrom(const QueryHistoryRequset& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.QueryHistoryRequset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryHistoryRequset::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void QueryHistoryRequset::Swap(QueryHistoryRequset* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryHistoryRequset::InternalSwap(QueryHistoryRequset* other) {
  std::swap(start_index_, other->start_index_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryHistoryRequset::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QueryHistoryRequset_descriptor_;
  metadata.reflection = QueryHistoryRequset_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryHistoryRequset

// required uint64 start_index = 1;
bool QueryHistoryRequset::has_start_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QueryHistoryRequset::set_has_start_index() {
  _has_bits_[0] |= 0x00000001u;
}
void QueryHistoryRequset::clear_has_start_index() {
  _has_bits_[0] &= ~0x00000001u;
}
void QueryHistoryRequset::clear_start_index() {
  start_index_ = GOOGLE_ULONGLONG(0);
  clear_has_start_index();
}
 ::google::protobuf::uint64 QueryHistoryRequset::start_index() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.QueryHistoryRequset.start_index)
  return start_index_;
}
 void QueryHistoryRequset::set_start_index(::google::protobuf::uint64 value) {
  set_has_start_index();
  start_index_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.QueryHistoryRequset.start_index)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryHistoryResponse::kLastNumFieldNumber;
const int QueryHistoryResponse::kRecordListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryHistoryResponse::QueryHistoryResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.QueryHistoryResponse)
}

void QueryHistoryResponse::InitAsDefaultInstance() {
}

QueryHistoryResponse::QueryHistoryResponse(const QueryHistoryResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.QueryHistoryResponse)
}

void QueryHistoryResponse::SharedCtor() {
  _cached_size_ = 0;
  last_num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QueryHistoryResponse::~QueryHistoryResponse() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.QueryHistoryResponse)
  SharedDtor();
}

void QueryHistoryResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void QueryHistoryResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryHistoryResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QueryHistoryResponse_descriptor_;
}

const QueryHistoryResponse& QueryHistoryResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fdata_2eproto();
  return *default_instance_;
}

QueryHistoryResponse* QueryHistoryResponse::default_instance_ = NULL;

QueryHistoryResponse* QueryHistoryResponse::New(::google::protobuf::Arena* arena) const {
  QueryHistoryResponse* n = new QueryHistoryResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryHistoryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.QueryHistoryResponse)
  last_num_ = 0u;
  record_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QueryHistoryResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.QueryHistoryResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 last_num = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_num_)));
          set_has_last_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_record_list;
        break;
      }

      // repeated .msg_maj.HistoryRecordS record_list = 2;
      case 2: {
        if (tag == 18) {
         parse_record_list:
          DO_(input->IncrementRecursionDepth());
         parse_loop_record_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_record_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_record_list;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.QueryHistoryResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.QueryHistoryResponse)
  return false;
#undef DO_
}

void QueryHistoryResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.QueryHistoryResponse)
  // required uint32 last_num = 1;
  if (has_last_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->last_num(), output);
  }

  // repeated .msg_maj.HistoryRecordS record_list = 2;
  for (unsigned int i = 0, n = this->record_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->record_list(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.QueryHistoryResponse)
}

::google::protobuf::uint8* QueryHistoryResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.QueryHistoryResponse)
  // required uint32 last_num = 1;
  if (has_last_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->last_num(), target);
  }

  // repeated .msg_maj.HistoryRecordS record_list = 2;
  for (unsigned int i = 0, n = this->record_list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->record_list(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.QueryHistoryResponse)
  return target;
}

int QueryHistoryResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.QueryHistoryResponse)
  int total_size = 0;

  // required uint32 last_num = 1;
  if (has_last_num()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->last_num());
  }
  // repeated .msg_maj.HistoryRecordS record_list = 2;
  total_size += 1 * this->record_list_size();
  for (int i = 0; i < this->record_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->record_list(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryHistoryResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.QueryHistoryResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const QueryHistoryResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryHistoryResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.QueryHistoryResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.QueryHistoryResponse)
    MergeFrom(*source);
  }
}

void QueryHistoryResponse::MergeFrom(const QueryHistoryResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.QueryHistoryResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  record_list_.MergeFrom(from.record_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_last_num()) {
      set_last_num(from.last_num());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void QueryHistoryResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.QueryHistoryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryHistoryResponse::CopyFrom(const QueryHistoryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.QueryHistoryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryHistoryResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->record_list())) return false;
  return true;
}

void QueryHistoryResponse::Swap(QueryHistoryResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryHistoryResponse::InternalSwap(QueryHistoryResponse* other) {
  std::swap(last_num_, other->last_num_);
  record_list_.UnsafeArenaSwap(&other->record_list_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryHistoryResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QueryHistoryResponse_descriptor_;
  metadata.reflection = QueryHistoryResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryHistoryResponse

// required uint32 last_num = 1;
bool QueryHistoryResponse::has_last_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QueryHistoryResponse::set_has_last_num() {
  _has_bits_[0] |= 0x00000001u;
}
void QueryHistoryResponse::clear_has_last_num() {
  _has_bits_[0] &= ~0x00000001u;
}
void QueryHistoryResponse::clear_last_num() {
  last_num_ = 0u;
  clear_has_last_num();
}
 ::google::protobuf::uint32 QueryHistoryResponse::last_num() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.QueryHistoryResponse.last_num)
  return last_num_;
}
 void QueryHistoryResponse::set_last_num(::google::protobuf::uint32 value) {
  set_has_last_num();
  last_num_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.QueryHistoryResponse.last_num)
}

// repeated .msg_maj.HistoryRecordS record_list = 2;
int QueryHistoryResponse::record_list_size() const {
  return record_list_.size();
}
void QueryHistoryResponse::clear_record_list() {
  record_list_.Clear();
}
const ::msg_maj::HistoryRecordS& QueryHistoryResponse::record_list(int index) const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.QueryHistoryResponse.record_list)
  return record_list_.Get(index);
}
::msg_maj::HistoryRecordS* QueryHistoryResponse::mutable_record_list(int index) {
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.QueryHistoryResponse.record_list)
  return record_list_.Mutable(index);
}
::msg_maj::HistoryRecordS* QueryHistoryResponse::add_record_list() {
  // @@protoc_insertion_point(field_add:fogs.proto.msg.QueryHistoryResponse.record_list)
  return record_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::msg_maj::HistoryRecordS >*
QueryHistoryResponse::mutable_record_list() {
  // @@protoc_insertion_point(field_mutable_list:fogs.proto.msg.QueryHistoryResponse.record_list)
  return &record_list_;
}
const ::google::protobuf::RepeatedPtrField< ::msg_maj::HistoryRecordS >&
QueryHistoryResponse::record_list() const {
  // @@protoc_insertion_point(field_list:fogs.proto.msg.QueryHistoryResponse.record_list)
  return record_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SaveHistoryRequest::kRecordsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SaveHistoryRequest::SaveHistoryRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.SaveHistoryRequest)
}

void SaveHistoryRequest::InitAsDefaultInstance() {
  records_ = const_cast< ::msg_maj::HistoryRecordS*>(&::msg_maj::HistoryRecordS::default_instance());
}

SaveHistoryRequest::SaveHistoryRequest(const SaveHistoryRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.SaveHistoryRequest)
}

void SaveHistoryRequest::SharedCtor() {
  _cached_size_ = 0;
  records_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SaveHistoryRequest::~SaveHistoryRequest() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.SaveHistoryRequest)
  SharedDtor();
}

void SaveHistoryRequest::SharedDtor() {
  if (this != default_instance_) {
    delete records_;
  }
}

void SaveHistoryRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SaveHistoryRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SaveHistoryRequest_descriptor_;
}

const SaveHistoryRequest& SaveHistoryRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fdata_2eproto();
  return *default_instance_;
}

SaveHistoryRequest* SaveHistoryRequest::default_instance_ = NULL;

SaveHistoryRequest* SaveHistoryRequest::New(::google::protobuf::Arena* arena) const {
  SaveHistoryRequest* n = new SaveHistoryRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SaveHistoryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.SaveHistoryRequest)
  if (has_records()) {
    if (records_ != NULL) records_->::msg_maj::HistoryRecordS::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SaveHistoryRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.SaveHistoryRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .msg_maj.HistoryRecordS records = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_records()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.SaveHistoryRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.SaveHistoryRequest)
  return false;
#undef DO_
}

void SaveHistoryRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.SaveHistoryRequest)
  // required .msg_maj.HistoryRecordS records = 1;
  if (has_records()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->records_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.SaveHistoryRequest)
}

::google::protobuf::uint8* SaveHistoryRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.SaveHistoryRequest)
  // required .msg_maj.HistoryRecordS records = 1;
  if (has_records()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->records_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.SaveHistoryRequest)
  return target;
}

int SaveHistoryRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.SaveHistoryRequest)
  int total_size = 0;

  // required .msg_maj.HistoryRecordS records = 1;
  if (has_records()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->records_);
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SaveHistoryRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.SaveHistoryRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SaveHistoryRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SaveHistoryRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.SaveHistoryRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.SaveHistoryRequest)
    MergeFrom(*source);
  }
}

void SaveHistoryRequest::MergeFrom(const SaveHistoryRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.SaveHistoryRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_records()) {
      mutable_records()->::msg_maj::HistoryRecordS::MergeFrom(from.records());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SaveHistoryRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.SaveHistoryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SaveHistoryRequest::CopyFrom(const SaveHistoryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.SaveHistoryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SaveHistoryRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_records()) {
    if (!this->records_->IsInitialized()) return false;
  }
  return true;
}

void SaveHistoryRequest::Swap(SaveHistoryRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SaveHistoryRequest::InternalSwap(SaveHistoryRequest* other) {
  std::swap(records_, other->records_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SaveHistoryRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SaveHistoryRequest_descriptor_;
  metadata.reflection = SaveHistoryRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SaveHistoryRequest

// required .msg_maj.HistoryRecordS records = 1;
bool SaveHistoryRequest::has_records() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SaveHistoryRequest::set_has_records() {
  _has_bits_[0] |= 0x00000001u;
}
void SaveHistoryRequest::clear_has_records() {
  _has_bits_[0] &= ~0x00000001u;
}
void SaveHistoryRequest::clear_records() {
  if (records_ != NULL) records_->::msg_maj::HistoryRecordS::Clear();
  clear_has_records();
}
const ::msg_maj::HistoryRecordS& SaveHistoryRequest::records() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.SaveHistoryRequest.records)
  return records_ != NULL ? *records_ : *default_instance_->records_;
}
::msg_maj::HistoryRecordS* SaveHistoryRequest::mutable_records() {
  set_has_records();
  if (records_ == NULL) {
    records_ = new ::msg_maj::HistoryRecordS;
  }
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.SaveHistoryRequest.records)
  return records_;
}
::msg_maj::HistoryRecordS* SaveHistoryRequest::release_records() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.SaveHistoryRequest.records)
  clear_has_records();
  ::msg_maj::HistoryRecordS* temp = records_;
  records_ = NULL;
  return temp;
}
void SaveHistoryRequest::set_allocated_records(::msg_maj::HistoryRecordS* records) {
  delete records_;
  records_ = records;
  if (records) {
    set_has_records();
  } else {
    clear_has_records();
  }
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.SaveHistoryRequest.records)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ZhanjiRecordAdd::kRecordIdFieldNumber;
const int ZhanjiRecordAdd::kRoomIdFieldNumber;
const int ZhanjiRecordAdd::kRoomInfoFieldNumber;
const int ZhanjiRecordAdd::kRoleInfoFieldNumber;
const int ZhanjiRecordAdd::kInnRecordFieldNumber;
const int ZhanjiRecordAdd::kInnReplayFieldNumber;
const int ZhanjiRecordAdd::kStartTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ZhanjiRecordAdd::ZhanjiRecordAdd()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.ZhanjiRecordAdd)
}

void ZhanjiRecordAdd::InitAsDefaultInstance() {
  room_info_ = const_cast< ::msg_maj::RoomInfo*>(&::msg_maj::RoomInfo::default_instance());
  role_info_ = const_cast< ::msg_maj::RoleInfoListS*>(&::msg_maj::RoleInfoListS::default_instance());
  inn_record_ = const_cast< ::msg_maj::InnRecordS*>(&::msg_maj::InnRecordS::default_instance());
  inn_replay_ = const_cast< ::msg_maj::InnReplayActionS*>(&::msg_maj::InnReplayActionS::default_instance());
}

ZhanjiRecordAdd::ZhanjiRecordAdd(const ZhanjiRecordAdd& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.ZhanjiRecordAdd)
}

void ZhanjiRecordAdd::SharedCtor() {
  _cached_size_ = 0;
  record_id_ = GOOGLE_ULONGLONG(0);
  room_id_ = 0u;
  room_info_ = NULL;
  role_info_ = NULL;
  inn_record_ = NULL;
  inn_replay_ = NULL;
  start_time_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ZhanjiRecordAdd::~ZhanjiRecordAdd() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.ZhanjiRecordAdd)
  SharedDtor();
}

void ZhanjiRecordAdd::SharedDtor() {
  if (this != default_instance_) {
    delete room_info_;
    delete role_info_;
    delete inn_record_;
    delete inn_replay_;
  }
}

void ZhanjiRecordAdd::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ZhanjiRecordAdd::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ZhanjiRecordAdd_descriptor_;
}

const ZhanjiRecordAdd& ZhanjiRecordAdd::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fdata_2eproto();
  return *default_instance_;
}

ZhanjiRecordAdd* ZhanjiRecordAdd::default_instance_ = NULL;

ZhanjiRecordAdd* ZhanjiRecordAdd::New(::google::protobuf::Arena* arena) const {
  ZhanjiRecordAdd* n = new ZhanjiRecordAdd;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ZhanjiRecordAdd::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.ZhanjiRecordAdd)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ZhanjiRecordAdd, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ZhanjiRecordAdd*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 127u) {
    ZR_(start_time_, room_id_);
    record_id_ = GOOGLE_ULONGLONG(0);
    if (has_room_info()) {
      if (room_info_ != NULL) room_info_->::msg_maj::RoomInfo::Clear();
    }
    if (has_role_info()) {
      if (role_info_ != NULL) role_info_->::msg_maj::RoleInfoListS::Clear();
    }
    if (has_inn_record()) {
      if (inn_record_ != NULL) inn_record_->::msg_maj::InnRecordS::Clear();
    }
    if (has_inn_replay()) {
      if (inn_replay_ != NULL) inn_replay_->::msg_maj::InnReplayActionS::Clear();
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ZhanjiRecordAdd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.ZhanjiRecordAdd)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 record_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &record_id_)));
          set_has_record_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_room_id;
        break;
      }

      // optional uint32 room_id = 2;
      case 2: {
        if (tag == 16) {
         parse_room_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &room_id_)));
          set_has_room_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_room_info;
        break;
      }

      // optional .msg_maj.RoomInfo room_info = 3;
      case 3: {
        if (tag == 26) {
         parse_room_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_room_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_role_info;
        break;
      }

      // optional .msg_maj.RoleInfoListS role_info = 4;
      case 4: {
        if (tag == 34) {
         parse_role_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_role_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_inn_record;
        break;
      }

      // required .msg_maj.InnRecordS inn_record = 5;
      case 5: {
        if (tag == 42) {
         parse_inn_record:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_inn_record()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_inn_replay;
        break;
      }

      // required .msg_maj.InnReplayActionS inn_replay = 6;
      case 6: {
        if (tag == 50) {
         parse_inn_replay:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_inn_replay()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_start_time;
        break;
      }

      // optional uint64 start_time = 7;
      case 7: {
        if (tag == 56) {
         parse_start_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.ZhanjiRecordAdd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.ZhanjiRecordAdd)
  return false;
#undef DO_
}

void ZhanjiRecordAdd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.ZhanjiRecordAdd)
  // required uint64 record_id = 1;
  if (has_record_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->record_id(), output);
  }

  // optional uint32 room_id = 2;
  if (has_room_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->room_id(), output);
  }

  // optional .msg_maj.RoomInfo room_info = 3;
  if (has_room_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->room_info_, output);
  }

  // optional .msg_maj.RoleInfoListS role_info = 4;
  if (has_role_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->role_info_, output);
  }

  // required .msg_maj.InnRecordS inn_record = 5;
  if (has_inn_record()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->inn_record_, output);
  }

  // required .msg_maj.InnReplayActionS inn_replay = 6;
  if (has_inn_replay()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->inn_replay_, output);
  }

  // optional uint64 start_time = 7;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->start_time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.ZhanjiRecordAdd)
}

::google::protobuf::uint8* ZhanjiRecordAdd::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.ZhanjiRecordAdd)
  // required uint64 record_id = 1;
  if (has_record_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->record_id(), target);
  }

  // optional uint32 room_id = 2;
  if (has_room_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->room_id(), target);
  }

  // optional .msg_maj.RoomInfo room_info = 3;
  if (has_room_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->room_info_, false, target);
  }

  // optional .msg_maj.RoleInfoListS role_info = 4;
  if (has_role_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->role_info_, false, target);
  }

  // required .msg_maj.InnRecordS inn_record = 5;
  if (has_inn_record()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->inn_record_, false, target);
  }

  // required .msg_maj.InnReplayActionS inn_replay = 6;
  if (has_inn_replay()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->inn_replay_, false, target);
  }

  // optional uint64 start_time = 7;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->start_time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.ZhanjiRecordAdd)
  return target;
}

int ZhanjiRecordAdd::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:fogs.proto.msg.ZhanjiRecordAdd)
  int total_size = 0;

  if (has_record_id()) {
    // required uint64 record_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->record_id());
  }

  if (has_inn_record()) {
    // required .msg_maj.InnRecordS inn_record = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->inn_record_);
  }

  if (has_inn_replay()) {
    // required .msg_maj.InnReplayActionS inn_replay = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->inn_replay_);
  }

  return total_size;
}
int ZhanjiRecordAdd::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.ZhanjiRecordAdd)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000031) ^ 0x00000031) == 0) {  // All required fields are present.
    // required uint64 record_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->record_id());

    // required .msg_maj.InnRecordS inn_record = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->inn_record_);

    // required .msg_maj.InnReplayActionS inn_replay = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->inn_replay_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[1 / 32] & 78u) {
    // optional uint32 room_id = 2;
    if (has_room_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->room_id());
    }

    // optional .msg_maj.RoomInfo room_info = 3;
    if (has_room_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->room_info_);
    }

    // optional .msg_maj.RoleInfoListS role_info = 4;
    if (has_role_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->role_info_);
    }

    // optional uint64 start_time = 7;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->start_time());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ZhanjiRecordAdd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.ZhanjiRecordAdd)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ZhanjiRecordAdd* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ZhanjiRecordAdd>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.ZhanjiRecordAdd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.ZhanjiRecordAdd)
    MergeFrom(*source);
  }
}

void ZhanjiRecordAdd::MergeFrom(const ZhanjiRecordAdd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.ZhanjiRecordAdd)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_record_id()) {
      set_record_id(from.record_id());
    }
    if (from.has_room_id()) {
      set_room_id(from.room_id());
    }
    if (from.has_room_info()) {
      mutable_room_info()->::msg_maj::RoomInfo::MergeFrom(from.room_info());
    }
    if (from.has_role_info()) {
      mutable_role_info()->::msg_maj::RoleInfoListS::MergeFrom(from.role_info());
    }
    if (from.has_inn_record()) {
      mutable_inn_record()->::msg_maj::InnRecordS::MergeFrom(from.inn_record());
    }
    if (from.has_inn_replay()) {
      mutable_inn_replay()->::msg_maj::InnReplayActionS::MergeFrom(from.inn_replay());
    }
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ZhanjiRecordAdd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.ZhanjiRecordAdd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ZhanjiRecordAdd::CopyFrom(const ZhanjiRecordAdd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.ZhanjiRecordAdd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ZhanjiRecordAdd::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000031) != 0x00000031) return false;

  if (has_room_info()) {
    if (!this->room_info_->IsInitialized()) return false;
  }
  if (has_role_info()) {
    if (!this->role_info_->IsInitialized()) return false;
  }
  if (has_inn_record()) {
    if (!this->inn_record_->IsInitialized()) return false;
  }
  if (has_inn_replay()) {
    if (!this->inn_replay_->IsInitialized()) return false;
  }
  return true;
}

void ZhanjiRecordAdd::Swap(ZhanjiRecordAdd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ZhanjiRecordAdd::InternalSwap(ZhanjiRecordAdd* other) {
  std::swap(record_id_, other->record_id_);
  std::swap(room_id_, other->room_id_);
  std::swap(room_info_, other->room_info_);
  std::swap(role_info_, other->role_info_);
  std::swap(inn_record_, other->inn_record_);
  std::swap(inn_replay_, other->inn_replay_);
  std::swap(start_time_, other->start_time_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ZhanjiRecordAdd::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ZhanjiRecordAdd_descriptor_;
  metadata.reflection = ZhanjiRecordAdd_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ZhanjiRecordAdd

// required uint64 record_id = 1;
bool ZhanjiRecordAdd::has_record_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ZhanjiRecordAdd::set_has_record_id() {
  _has_bits_[0] |= 0x00000001u;
}
void ZhanjiRecordAdd::clear_has_record_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void ZhanjiRecordAdd::clear_record_id() {
  record_id_ = GOOGLE_ULONGLONG(0);
  clear_has_record_id();
}
 ::google::protobuf::uint64 ZhanjiRecordAdd::record_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.ZhanjiRecordAdd.record_id)
  return record_id_;
}
 void ZhanjiRecordAdd::set_record_id(::google::protobuf::uint64 value) {
  set_has_record_id();
  record_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.ZhanjiRecordAdd.record_id)
}

// optional uint32 room_id = 2;
bool ZhanjiRecordAdd::has_room_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ZhanjiRecordAdd::set_has_room_id() {
  _has_bits_[0] |= 0x00000002u;
}
void ZhanjiRecordAdd::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void ZhanjiRecordAdd::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
 ::google::protobuf::uint32 ZhanjiRecordAdd::room_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.ZhanjiRecordAdd.room_id)
  return room_id_;
}
 void ZhanjiRecordAdd::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.ZhanjiRecordAdd.room_id)
}

// optional .msg_maj.RoomInfo room_info = 3;
bool ZhanjiRecordAdd::has_room_info() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ZhanjiRecordAdd::set_has_room_info() {
  _has_bits_[0] |= 0x00000004u;
}
void ZhanjiRecordAdd::clear_has_room_info() {
  _has_bits_[0] &= ~0x00000004u;
}
void ZhanjiRecordAdd::clear_room_info() {
  if (room_info_ != NULL) room_info_->::msg_maj::RoomInfo::Clear();
  clear_has_room_info();
}
const ::msg_maj::RoomInfo& ZhanjiRecordAdd::room_info() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.ZhanjiRecordAdd.room_info)
  return room_info_ != NULL ? *room_info_ : *default_instance_->room_info_;
}
::msg_maj::RoomInfo* ZhanjiRecordAdd::mutable_room_info() {
  set_has_room_info();
  if (room_info_ == NULL) {
    room_info_ = new ::msg_maj::RoomInfo;
  }
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.ZhanjiRecordAdd.room_info)
  return room_info_;
}
::msg_maj::RoomInfo* ZhanjiRecordAdd::release_room_info() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.ZhanjiRecordAdd.room_info)
  clear_has_room_info();
  ::msg_maj::RoomInfo* temp = room_info_;
  room_info_ = NULL;
  return temp;
}
void ZhanjiRecordAdd::set_allocated_room_info(::msg_maj::RoomInfo* room_info) {
  delete room_info_;
  room_info_ = room_info;
  if (room_info) {
    set_has_room_info();
  } else {
    clear_has_room_info();
  }
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.ZhanjiRecordAdd.room_info)
}

// optional .msg_maj.RoleInfoListS role_info = 4;
bool ZhanjiRecordAdd::has_role_info() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ZhanjiRecordAdd::set_has_role_info() {
  _has_bits_[0] |= 0x00000008u;
}
void ZhanjiRecordAdd::clear_has_role_info() {
  _has_bits_[0] &= ~0x00000008u;
}
void ZhanjiRecordAdd::clear_role_info() {
  if (role_info_ != NULL) role_info_->::msg_maj::RoleInfoListS::Clear();
  clear_has_role_info();
}
const ::msg_maj::RoleInfoListS& ZhanjiRecordAdd::role_info() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.ZhanjiRecordAdd.role_info)
  return role_info_ != NULL ? *role_info_ : *default_instance_->role_info_;
}
::msg_maj::RoleInfoListS* ZhanjiRecordAdd::mutable_role_info() {
  set_has_role_info();
  if (role_info_ == NULL) {
    role_info_ = new ::msg_maj::RoleInfoListS;
  }
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.ZhanjiRecordAdd.role_info)
  return role_info_;
}
::msg_maj::RoleInfoListS* ZhanjiRecordAdd::release_role_info() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.ZhanjiRecordAdd.role_info)
  clear_has_role_info();
  ::msg_maj::RoleInfoListS* temp = role_info_;
  role_info_ = NULL;
  return temp;
}
void ZhanjiRecordAdd::set_allocated_role_info(::msg_maj::RoleInfoListS* role_info) {
  delete role_info_;
  role_info_ = role_info;
  if (role_info) {
    set_has_role_info();
  } else {
    clear_has_role_info();
  }
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.ZhanjiRecordAdd.role_info)
}

// required .msg_maj.InnRecordS inn_record = 5;
bool ZhanjiRecordAdd::has_inn_record() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ZhanjiRecordAdd::set_has_inn_record() {
  _has_bits_[0] |= 0x00000010u;
}
void ZhanjiRecordAdd::clear_has_inn_record() {
  _has_bits_[0] &= ~0x00000010u;
}
void ZhanjiRecordAdd::clear_inn_record() {
  if (inn_record_ != NULL) inn_record_->::msg_maj::InnRecordS::Clear();
  clear_has_inn_record();
}
const ::msg_maj::InnRecordS& ZhanjiRecordAdd::inn_record() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.ZhanjiRecordAdd.inn_record)
  return inn_record_ != NULL ? *inn_record_ : *default_instance_->inn_record_;
}
::msg_maj::InnRecordS* ZhanjiRecordAdd::mutable_inn_record() {
  set_has_inn_record();
  if (inn_record_ == NULL) {
    inn_record_ = new ::msg_maj::InnRecordS;
  }
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.ZhanjiRecordAdd.inn_record)
  return inn_record_;
}
::msg_maj::InnRecordS* ZhanjiRecordAdd::release_inn_record() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.ZhanjiRecordAdd.inn_record)
  clear_has_inn_record();
  ::msg_maj::InnRecordS* temp = inn_record_;
  inn_record_ = NULL;
  return temp;
}
void ZhanjiRecordAdd::set_allocated_inn_record(::msg_maj::InnRecordS* inn_record) {
  delete inn_record_;
  inn_record_ = inn_record;
  if (inn_record) {
    set_has_inn_record();
  } else {
    clear_has_inn_record();
  }
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.ZhanjiRecordAdd.inn_record)
}

// required .msg_maj.InnReplayActionS inn_replay = 6;
bool ZhanjiRecordAdd::has_inn_replay() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ZhanjiRecordAdd::set_has_inn_replay() {
  _has_bits_[0] |= 0x00000020u;
}
void ZhanjiRecordAdd::clear_has_inn_replay() {
  _has_bits_[0] &= ~0x00000020u;
}
void ZhanjiRecordAdd::clear_inn_replay() {
  if (inn_replay_ != NULL) inn_replay_->::msg_maj::InnReplayActionS::Clear();
  clear_has_inn_replay();
}
const ::msg_maj::InnReplayActionS& ZhanjiRecordAdd::inn_replay() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.ZhanjiRecordAdd.inn_replay)
  return inn_replay_ != NULL ? *inn_replay_ : *default_instance_->inn_replay_;
}
::msg_maj::InnReplayActionS* ZhanjiRecordAdd::mutable_inn_replay() {
  set_has_inn_replay();
  if (inn_replay_ == NULL) {
    inn_replay_ = new ::msg_maj::InnReplayActionS;
  }
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.ZhanjiRecordAdd.inn_replay)
  return inn_replay_;
}
::msg_maj::InnReplayActionS* ZhanjiRecordAdd::release_inn_replay() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.ZhanjiRecordAdd.inn_replay)
  clear_has_inn_replay();
  ::msg_maj::InnReplayActionS* temp = inn_replay_;
  inn_replay_ = NULL;
  return temp;
}
void ZhanjiRecordAdd::set_allocated_inn_replay(::msg_maj::InnReplayActionS* inn_replay) {
  delete inn_replay_;
  inn_replay_ = inn_replay;
  if (inn_replay) {
    set_has_inn_replay();
  } else {
    clear_has_inn_replay();
  }
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.ZhanjiRecordAdd.inn_replay)
}

// optional uint64 start_time = 7;
bool ZhanjiRecordAdd::has_start_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void ZhanjiRecordAdd::set_has_start_time() {
  _has_bits_[0] |= 0x00000040u;
}
void ZhanjiRecordAdd::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000040u;
}
void ZhanjiRecordAdd::clear_start_time() {
  start_time_ = GOOGLE_ULONGLONG(0);
  clear_has_start_time();
}
 ::google::protobuf::uint64 ZhanjiRecordAdd::start_time() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.ZhanjiRecordAdd.start_time)
  return start_time_;
}
 void ZhanjiRecordAdd::set_start_time(::google::protobuf::uint64 value) {
  set_has_start_time();
  start_time_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.ZhanjiRecordAdd.start_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ZhanJiFinish::kRecordIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ZhanJiFinish::ZhanJiFinish()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.ZhanJiFinish)
}

void ZhanJiFinish::InitAsDefaultInstance() {
}

ZhanJiFinish::ZhanJiFinish(const ZhanJiFinish& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.ZhanJiFinish)
}

void ZhanJiFinish::SharedCtor() {
  _cached_size_ = 0;
  record_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ZhanJiFinish::~ZhanJiFinish() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.ZhanJiFinish)
  SharedDtor();
}

void ZhanJiFinish::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ZhanJiFinish::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ZhanJiFinish::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ZhanJiFinish_descriptor_;
}

const ZhanJiFinish& ZhanJiFinish::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fdata_2eproto();
  return *default_instance_;
}

ZhanJiFinish* ZhanJiFinish::default_instance_ = NULL;

ZhanJiFinish* ZhanJiFinish::New(::google::protobuf::Arena* arena) const {
  ZhanJiFinish* n = new ZhanJiFinish;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ZhanJiFinish::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.ZhanJiFinish)
  record_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ZhanJiFinish::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.ZhanJiFinish)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 record_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &record_id_)));
          set_has_record_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.ZhanJiFinish)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.ZhanJiFinish)
  return false;
#undef DO_
}

void ZhanJiFinish::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.ZhanJiFinish)
  // required uint64 record_id = 1;
  if (has_record_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->record_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.ZhanJiFinish)
}

::google::protobuf::uint8* ZhanJiFinish::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.ZhanJiFinish)
  // required uint64 record_id = 1;
  if (has_record_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->record_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.ZhanJiFinish)
  return target;
}

int ZhanJiFinish::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.ZhanJiFinish)
  int total_size = 0;

  // required uint64 record_id = 1;
  if (has_record_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->record_id());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ZhanJiFinish::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.ZhanJiFinish)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ZhanJiFinish* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ZhanJiFinish>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.ZhanJiFinish)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.ZhanJiFinish)
    MergeFrom(*source);
  }
}

void ZhanJiFinish::MergeFrom(const ZhanJiFinish& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.ZhanJiFinish)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_record_id()) {
      set_record_id(from.record_id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ZhanJiFinish::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.ZhanJiFinish)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ZhanJiFinish::CopyFrom(const ZhanJiFinish& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.ZhanJiFinish)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ZhanJiFinish::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ZhanJiFinish::Swap(ZhanJiFinish* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ZhanJiFinish::InternalSwap(ZhanJiFinish* other) {
  std::swap(record_id_, other->record_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ZhanJiFinish::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ZhanJiFinish_descriptor_;
  metadata.reflection = ZhanJiFinish_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ZhanJiFinish

// required uint64 record_id = 1;
bool ZhanJiFinish::has_record_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ZhanJiFinish::set_has_record_id() {
  _has_bits_[0] |= 0x00000001u;
}
void ZhanJiFinish::clear_has_record_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void ZhanJiFinish::clear_record_id() {
  record_id_ = GOOGLE_ULONGLONG(0);
  clear_has_record_id();
}
 ::google::protobuf::uint64 ZhanJiFinish::record_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.ZhanJiFinish.record_id)
  return record_id_;
}
 void ZhanJiFinish::set_record_id(::google::protobuf::uint64 value) {
  set_has_record_id();
  record_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.ZhanJiFinish.record_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ZhanjiQueryList::kCharIdFieldNumber;
const int ZhanjiQueryList::kReqFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ZhanjiQueryList::ZhanjiQueryList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.ZhanjiQueryList)
}

void ZhanjiQueryList::InitAsDefaultInstance() {
  req_ = const_cast< ::msg_maj::HistoryListReq*>(&::msg_maj::HistoryListReq::default_instance());
}

ZhanjiQueryList::ZhanjiQueryList(const ZhanjiQueryList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.ZhanjiQueryList)
}

void ZhanjiQueryList::SharedCtor() {
  _cached_size_ = 0;
  char_id_ = GOOGLE_ULONGLONG(0);
  req_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ZhanjiQueryList::~ZhanjiQueryList() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.ZhanjiQueryList)
  SharedDtor();
}

void ZhanjiQueryList::SharedDtor() {
  if (this != default_instance_) {
    delete req_;
  }
}

void ZhanjiQueryList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ZhanjiQueryList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ZhanjiQueryList_descriptor_;
}

const ZhanjiQueryList& ZhanjiQueryList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fdata_2eproto();
  return *default_instance_;
}

ZhanjiQueryList* ZhanjiQueryList::default_instance_ = NULL;

ZhanjiQueryList* ZhanjiQueryList::New(::google::protobuf::Arena* arena) const {
  ZhanjiQueryList* n = new ZhanjiQueryList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ZhanjiQueryList::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.ZhanjiQueryList)
  if (_has_bits_[0 / 32] & 3u) {
    char_id_ = GOOGLE_ULONGLONG(0);
    if (has_req()) {
      if (req_ != NULL) req_->::msg_maj::HistoryListReq::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ZhanjiQueryList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.ZhanjiQueryList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 char_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &char_id_)));
          set_has_char_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_req;
        break;
      }

      // required .msg_maj.HistoryListReq req = 2;
      case 2: {
        if (tag == 18) {
         parse_req:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_req()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.ZhanjiQueryList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.ZhanjiQueryList)
  return false;
#undef DO_
}

void ZhanjiQueryList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.ZhanjiQueryList)
  // required uint64 char_id = 1;
  if (has_char_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->char_id(), output);
  }

  // required .msg_maj.HistoryListReq req = 2;
  if (has_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->req_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.ZhanjiQueryList)
}

::google::protobuf::uint8* ZhanjiQueryList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.ZhanjiQueryList)
  // required uint64 char_id = 1;
  if (has_char_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->char_id(), target);
  }

  // required .msg_maj.HistoryListReq req = 2;
  if (has_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->req_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.ZhanjiQueryList)
  return target;
}

int ZhanjiQueryList::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:fogs.proto.msg.ZhanjiQueryList)
  int total_size = 0;

  if (has_char_id()) {
    // required uint64 char_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->char_id());
  }

  if (has_req()) {
    // required .msg_maj.HistoryListReq req = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->req_);
  }

  return total_size;
}
int ZhanjiQueryList::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.ZhanjiQueryList)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint64 char_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->char_id());

    // required .msg_maj.HistoryListReq req = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->req_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ZhanjiQueryList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.ZhanjiQueryList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ZhanjiQueryList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ZhanjiQueryList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.ZhanjiQueryList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.ZhanjiQueryList)
    MergeFrom(*source);
  }
}

void ZhanjiQueryList::MergeFrom(const ZhanjiQueryList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.ZhanjiQueryList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_char_id()) {
      set_char_id(from.char_id());
    }
    if (from.has_req()) {
      mutable_req()->::msg_maj::HistoryListReq::MergeFrom(from.req());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ZhanjiQueryList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.ZhanjiQueryList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ZhanjiQueryList::CopyFrom(const ZhanjiQueryList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.ZhanjiQueryList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ZhanjiQueryList::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_req()) {
    if (!this->req_->IsInitialized()) return false;
  }
  return true;
}

void ZhanjiQueryList::Swap(ZhanjiQueryList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ZhanjiQueryList::InternalSwap(ZhanjiQueryList* other) {
  std::swap(char_id_, other->char_id_);
  std::swap(req_, other->req_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ZhanjiQueryList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ZhanjiQueryList_descriptor_;
  metadata.reflection = ZhanjiQueryList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ZhanjiQueryList

// required uint64 char_id = 1;
bool ZhanjiQueryList::has_char_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ZhanjiQueryList::set_has_char_id() {
  _has_bits_[0] |= 0x00000001u;
}
void ZhanjiQueryList::clear_has_char_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void ZhanjiQueryList::clear_char_id() {
  char_id_ = GOOGLE_ULONGLONG(0);
  clear_has_char_id();
}
 ::google::protobuf::uint64 ZhanjiQueryList::char_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.ZhanjiQueryList.char_id)
  return char_id_;
}
 void ZhanjiQueryList::set_char_id(::google::protobuf::uint64 value) {
  set_has_char_id();
  char_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.ZhanjiQueryList.char_id)
}

// required .msg_maj.HistoryListReq req = 2;
bool ZhanjiQueryList::has_req() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ZhanjiQueryList::set_has_req() {
  _has_bits_[0] |= 0x00000002u;
}
void ZhanjiQueryList::clear_has_req() {
  _has_bits_[0] &= ~0x00000002u;
}
void ZhanjiQueryList::clear_req() {
  if (req_ != NULL) req_->::msg_maj::HistoryListReq::Clear();
  clear_has_req();
}
const ::msg_maj::HistoryListReq& ZhanjiQueryList::req() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.ZhanjiQueryList.req)
  return req_ != NULL ? *req_ : *default_instance_->req_;
}
::msg_maj::HistoryListReq* ZhanjiQueryList::mutable_req() {
  set_has_req();
  if (req_ == NULL) {
    req_ = new ::msg_maj::HistoryListReq;
  }
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.ZhanjiQueryList.req)
  return req_;
}
::msg_maj::HistoryListReq* ZhanjiQueryList::release_req() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.ZhanjiQueryList.req)
  clear_has_req();
  ::msg_maj::HistoryListReq* temp = req_;
  req_ = NULL;
  return temp;
}
void ZhanjiQueryList::set_allocated_req(::msg_maj::HistoryListReq* req) {
  delete req_;
  req_ = req;
  if (req) {
    set_has_req();
  } else {
    clear_has_req();
  }
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.ZhanjiQueryList.req)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ZhanjiQueryResp::kCharIdFieldNumber;
const int ZhanjiQueryResp::kRespFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ZhanjiQueryResp::ZhanjiQueryResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.ZhanjiQueryResp)
}

void ZhanjiQueryResp::InitAsDefaultInstance() {
  resp_ = const_cast< ::msg_maj::HistoryListResp*>(&::msg_maj::HistoryListResp::default_instance());
}

ZhanjiQueryResp::ZhanjiQueryResp(const ZhanjiQueryResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.ZhanjiQueryResp)
}

void ZhanjiQueryResp::SharedCtor() {
  _cached_size_ = 0;
  char_id_ = GOOGLE_ULONGLONG(0);
  resp_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ZhanjiQueryResp::~ZhanjiQueryResp() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.ZhanjiQueryResp)
  SharedDtor();
}

void ZhanjiQueryResp::SharedDtor() {
  if (this != default_instance_) {
    delete resp_;
  }
}

void ZhanjiQueryResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ZhanjiQueryResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ZhanjiQueryResp_descriptor_;
}

const ZhanjiQueryResp& ZhanjiQueryResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fdata_2eproto();
  return *default_instance_;
}

ZhanjiQueryResp* ZhanjiQueryResp::default_instance_ = NULL;

ZhanjiQueryResp* ZhanjiQueryResp::New(::google::protobuf::Arena* arena) const {
  ZhanjiQueryResp* n = new ZhanjiQueryResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ZhanjiQueryResp::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.ZhanjiQueryResp)
  if (_has_bits_[0 / 32] & 3u) {
    char_id_ = GOOGLE_ULONGLONG(0);
    if (has_resp()) {
      if (resp_ != NULL) resp_->::msg_maj::HistoryListResp::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ZhanjiQueryResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.ZhanjiQueryResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 char_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &char_id_)));
          set_has_char_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_resp;
        break;
      }

      // required .msg_maj.HistoryListResp resp = 2;
      case 2: {
        if (tag == 18) {
         parse_resp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_resp()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.ZhanjiQueryResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.ZhanjiQueryResp)
  return false;
#undef DO_
}

void ZhanjiQueryResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.ZhanjiQueryResp)
  // required uint64 char_id = 1;
  if (has_char_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->char_id(), output);
  }

  // required .msg_maj.HistoryListResp resp = 2;
  if (has_resp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->resp_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.ZhanjiQueryResp)
}

::google::protobuf::uint8* ZhanjiQueryResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.ZhanjiQueryResp)
  // required uint64 char_id = 1;
  if (has_char_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->char_id(), target);
  }

  // required .msg_maj.HistoryListResp resp = 2;
  if (has_resp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->resp_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.ZhanjiQueryResp)
  return target;
}

int ZhanjiQueryResp::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:fogs.proto.msg.ZhanjiQueryResp)
  int total_size = 0;

  if (has_char_id()) {
    // required uint64 char_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->char_id());
  }

  if (has_resp()) {
    // required .msg_maj.HistoryListResp resp = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->resp_);
  }

  return total_size;
}
int ZhanjiQueryResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.ZhanjiQueryResp)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint64 char_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->char_id());

    // required .msg_maj.HistoryListResp resp = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->resp_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ZhanjiQueryResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.ZhanjiQueryResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ZhanjiQueryResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ZhanjiQueryResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.ZhanjiQueryResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.ZhanjiQueryResp)
    MergeFrom(*source);
  }
}

void ZhanjiQueryResp::MergeFrom(const ZhanjiQueryResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.ZhanjiQueryResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_char_id()) {
      set_char_id(from.char_id());
    }
    if (from.has_resp()) {
      mutable_resp()->::msg_maj::HistoryListResp::MergeFrom(from.resp());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ZhanjiQueryResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.ZhanjiQueryResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ZhanjiQueryResp::CopyFrom(const ZhanjiQueryResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.ZhanjiQueryResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ZhanjiQueryResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_resp()) {
    if (!this->resp_->IsInitialized()) return false;
  }
  return true;
}

void ZhanjiQueryResp::Swap(ZhanjiQueryResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ZhanjiQueryResp::InternalSwap(ZhanjiQueryResp* other) {
  std::swap(char_id_, other->char_id_);
  std::swap(resp_, other->resp_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ZhanjiQueryResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ZhanjiQueryResp_descriptor_;
  metadata.reflection = ZhanjiQueryResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ZhanjiQueryResp

// required uint64 char_id = 1;
bool ZhanjiQueryResp::has_char_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ZhanjiQueryResp::set_has_char_id() {
  _has_bits_[0] |= 0x00000001u;
}
void ZhanjiQueryResp::clear_has_char_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void ZhanjiQueryResp::clear_char_id() {
  char_id_ = GOOGLE_ULONGLONG(0);
  clear_has_char_id();
}
 ::google::protobuf::uint64 ZhanjiQueryResp::char_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.ZhanjiQueryResp.char_id)
  return char_id_;
}
 void ZhanjiQueryResp::set_char_id(::google::protobuf::uint64 value) {
  set_has_char_id();
  char_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.ZhanjiQueryResp.char_id)
}

// required .msg_maj.HistoryListResp resp = 2;
bool ZhanjiQueryResp::has_resp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ZhanjiQueryResp::set_has_resp() {
  _has_bits_[0] |= 0x00000002u;
}
void ZhanjiQueryResp::clear_has_resp() {
  _has_bits_[0] &= ~0x00000002u;
}
void ZhanjiQueryResp::clear_resp() {
  if (resp_ != NULL) resp_->::msg_maj::HistoryListResp::Clear();
  clear_has_resp();
}
const ::msg_maj::HistoryListResp& ZhanjiQueryResp::resp() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.ZhanjiQueryResp.resp)
  return resp_ != NULL ? *resp_ : *default_instance_->resp_;
}
::msg_maj::HistoryListResp* ZhanjiQueryResp::mutable_resp() {
  set_has_resp();
  if (resp_ == NULL) {
    resp_ = new ::msg_maj::HistoryListResp;
  }
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.ZhanjiQueryResp.resp)
  return resp_;
}
::msg_maj::HistoryListResp* ZhanjiQueryResp::release_resp() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.ZhanjiQueryResp.resp)
  clear_has_resp();
  ::msg_maj::HistoryListResp* temp = resp_;
  resp_ = NULL;
  return temp;
}
void ZhanjiQueryResp::set_allocated_resp(::msg_maj::HistoryListResp* resp) {
  delete resp_;
  resp_ = resp;
  if (resp) {
    set_has_resp();
  } else {
    clear_has_resp();
  }
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.ZhanjiQueryResp.resp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ZhanjiQueryRoom::kCharIdFieldNumber;
const int ZhanjiQueryRoom::kReqFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ZhanjiQueryRoom::ZhanjiQueryRoom()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.ZhanjiQueryRoom)
}

void ZhanjiQueryRoom::InitAsDefaultInstance() {
  req_ = const_cast< ::msg_maj::HistoryRoomReq*>(&::msg_maj::HistoryRoomReq::default_instance());
}

ZhanjiQueryRoom::ZhanjiQueryRoom(const ZhanjiQueryRoom& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.ZhanjiQueryRoom)
}

void ZhanjiQueryRoom::SharedCtor() {
  _cached_size_ = 0;
  char_id_ = GOOGLE_ULONGLONG(0);
  req_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ZhanjiQueryRoom::~ZhanjiQueryRoom() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.ZhanjiQueryRoom)
  SharedDtor();
}

void ZhanjiQueryRoom::SharedDtor() {
  if (this != default_instance_) {
    delete req_;
  }
}

void ZhanjiQueryRoom::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ZhanjiQueryRoom::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ZhanjiQueryRoom_descriptor_;
}

const ZhanjiQueryRoom& ZhanjiQueryRoom::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fdata_2eproto();
  return *default_instance_;
}

ZhanjiQueryRoom* ZhanjiQueryRoom::default_instance_ = NULL;

ZhanjiQueryRoom* ZhanjiQueryRoom::New(::google::protobuf::Arena* arena) const {
  ZhanjiQueryRoom* n = new ZhanjiQueryRoom;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ZhanjiQueryRoom::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.ZhanjiQueryRoom)
  if (_has_bits_[0 / 32] & 3u) {
    char_id_ = GOOGLE_ULONGLONG(0);
    if (has_req()) {
      if (req_ != NULL) req_->::msg_maj::HistoryRoomReq::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ZhanjiQueryRoom::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.ZhanjiQueryRoom)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 char_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &char_id_)));
          set_has_char_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_req;
        break;
      }

      // required .msg_maj.HistoryRoomReq req = 2;
      case 2: {
        if (tag == 18) {
         parse_req:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_req()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.ZhanjiQueryRoom)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.ZhanjiQueryRoom)
  return false;
#undef DO_
}

void ZhanjiQueryRoom::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.ZhanjiQueryRoom)
  // required uint64 char_id = 1;
  if (has_char_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->char_id(), output);
  }

  // required .msg_maj.HistoryRoomReq req = 2;
  if (has_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->req_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.ZhanjiQueryRoom)
}

::google::protobuf::uint8* ZhanjiQueryRoom::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.ZhanjiQueryRoom)
  // required uint64 char_id = 1;
  if (has_char_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->char_id(), target);
  }

  // required .msg_maj.HistoryRoomReq req = 2;
  if (has_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->req_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.ZhanjiQueryRoom)
  return target;
}

int ZhanjiQueryRoom::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:fogs.proto.msg.ZhanjiQueryRoom)
  int total_size = 0;

  if (has_char_id()) {
    // required uint64 char_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->char_id());
  }

  if (has_req()) {
    // required .msg_maj.HistoryRoomReq req = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->req_);
  }

  return total_size;
}
int ZhanjiQueryRoom::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.ZhanjiQueryRoom)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint64 char_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->char_id());

    // required .msg_maj.HistoryRoomReq req = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->req_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ZhanjiQueryRoom::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.ZhanjiQueryRoom)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ZhanjiQueryRoom* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ZhanjiQueryRoom>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.ZhanjiQueryRoom)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.ZhanjiQueryRoom)
    MergeFrom(*source);
  }
}

void ZhanjiQueryRoom::MergeFrom(const ZhanjiQueryRoom& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.ZhanjiQueryRoom)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_char_id()) {
      set_char_id(from.char_id());
    }
    if (from.has_req()) {
      mutable_req()->::msg_maj::HistoryRoomReq::MergeFrom(from.req());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ZhanjiQueryRoom::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.ZhanjiQueryRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ZhanjiQueryRoom::CopyFrom(const ZhanjiQueryRoom& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.ZhanjiQueryRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ZhanjiQueryRoom::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_req()) {
    if (!this->req_->IsInitialized()) return false;
  }
  return true;
}

void ZhanjiQueryRoom::Swap(ZhanjiQueryRoom* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ZhanjiQueryRoom::InternalSwap(ZhanjiQueryRoom* other) {
  std::swap(char_id_, other->char_id_);
  std::swap(req_, other->req_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ZhanjiQueryRoom::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ZhanjiQueryRoom_descriptor_;
  metadata.reflection = ZhanjiQueryRoom_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ZhanjiQueryRoom

// required uint64 char_id = 1;
bool ZhanjiQueryRoom::has_char_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ZhanjiQueryRoom::set_has_char_id() {
  _has_bits_[0] |= 0x00000001u;
}
void ZhanjiQueryRoom::clear_has_char_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void ZhanjiQueryRoom::clear_char_id() {
  char_id_ = GOOGLE_ULONGLONG(0);
  clear_has_char_id();
}
 ::google::protobuf::uint64 ZhanjiQueryRoom::char_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.ZhanjiQueryRoom.char_id)
  return char_id_;
}
 void ZhanjiQueryRoom::set_char_id(::google::protobuf::uint64 value) {
  set_has_char_id();
  char_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.ZhanjiQueryRoom.char_id)
}

// required .msg_maj.HistoryRoomReq req = 2;
bool ZhanjiQueryRoom::has_req() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ZhanjiQueryRoom::set_has_req() {
  _has_bits_[0] |= 0x00000002u;
}
void ZhanjiQueryRoom::clear_has_req() {
  _has_bits_[0] &= ~0x00000002u;
}
void ZhanjiQueryRoom::clear_req() {
  if (req_ != NULL) req_->::msg_maj::HistoryRoomReq::Clear();
  clear_has_req();
}
const ::msg_maj::HistoryRoomReq& ZhanjiQueryRoom::req() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.ZhanjiQueryRoom.req)
  return req_ != NULL ? *req_ : *default_instance_->req_;
}
::msg_maj::HistoryRoomReq* ZhanjiQueryRoom::mutable_req() {
  set_has_req();
  if (req_ == NULL) {
    req_ = new ::msg_maj::HistoryRoomReq;
  }
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.ZhanjiQueryRoom.req)
  return req_;
}
::msg_maj::HistoryRoomReq* ZhanjiQueryRoom::release_req() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.ZhanjiQueryRoom.req)
  clear_has_req();
  ::msg_maj::HistoryRoomReq* temp = req_;
  req_ = NULL;
  return temp;
}
void ZhanjiQueryRoom::set_allocated_req(::msg_maj::HistoryRoomReq* req) {
  delete req_;
  req_ = req;
  if (req) {
    set_has_req();
  } else {
    clear_has_req();
  }
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.ZhanjiQueryRoom.req)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ZhanjiQueryRoomResp::kCharIdFieldNumber;
const int ZhanjiQueryRoomResp::kRespFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ZhanjiQueryRoomResp::ZhanjiQueryRoomResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.ZhanjiQueryRoomResp)
}

void ZhanjiQueryRoomResp::InitAsDefaultInstance() {
  resp_ = const_cast< ::msg_maj::HistoryRoomResp*>(&::msg_maj::HistoryRoomResp::default_instance());
}

ZhanjiQueryRoomResp::ZhanjiQueryRoomResp(const ZhanjiQueryRoomResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.ZhanjiQueryRoomResp)
}

void ZhanjiQueryRoomResp::SharedCtor() {
  _cached_size_ = 0;
  char_id_ = GOOGLE_ULONGLONG(0);
  resp_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ZhanjiQueryRoomResp::~ZhanjiQueryRoomResp() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.ZhanjiQueryRoomResp)
  SharedDtor();
}

void ZhanjiQueryRoomResp::SharedDtor() {
  if (this != default_instance_) {
    delete resp_;
  }
}

void ZhanjiQueryRoomResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ZhanjiQueryRoomResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ZhanjiQueryRoomResp_descriptor_;
}

const ZhanjiQueryRoomResp& ZhanjiQueryRoomResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fdata_2eproto();
  return *default_instance_;
}

ZhanjiQueryRoomResp* ZhanjiQueryRoomResp::default_instance_ = NULL;

ZhanjiQueryRoomResp* ZhanjiQueryRoomResp::New(::google::protobuf::Arena* arena) const {
  ZhanjiQueryRoomResp* n = new ZhanjiQueryRoomResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ZhanjiQueryRoomResp::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.ZhanjiQueryRoomResp)
  if (_has_bits_[0 / 32] & 3u) {
    char_id_ = GOOGLE_ULONGLONG(0);
    if (has_resp()) {
      if (resp_ != NULL) resp_->::msg_maj::HistoryRoomResp::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ZhanjiQueryRoomResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.ZhanjiQueryRoomResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 char_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &char_id_)));
          set_has_char_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_resp;
        break;
      }

      // required .msg_maj.HistoryRoomResp resp = 2;
      case 2: {
        if (tag == 18) {
         parse_resp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_resp()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.ZhanjiQueryRoomResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.ZhanjiQueryRoomResp)
  return false;
#undef DO_
}

void ZhanjiQueryRoomResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.ZhanjiQueryRoomResp)
  // required uint64 char_id = 1;
  if (has_char_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->char_id(), output);
  }

  // required .msg_maj.HistoryRoomResp resp = 2;
  if (has_resp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->resp_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.ZhanjiQueryRoomResp)
}

::google::protobuf::uint8* ZhanjiQueryRoomResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.ZhanjiQueryRoomResp)
  // required uint64 char_id = 1;
  if (has_char_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->char_id(), target);
  }

  // required .msg_maj.HistoryRoomResp resp = 2;
  if (has_resp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->resp_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.ZhanjiQueryRoomResp)
  return target;
}

int ZhanjiQueryRoomResp::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:fogs.proto.msg.ZhanjiQueryRoomResp)
  int total_size = 0;

  if (has_char_id()) {
    // required uint64 char_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->char_id());
  }

  if (has_resp()) {
    // required .msg_maj.HistoryRoomResp resp = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->resp_);
  }

  return total_size;
}
int ZhanjiQueryRoomResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.ZhanjiQueryRoomResp)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint64 char_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->char_id());

    // required .msg_maj.HistoryRoomResp resp = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->resp_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ZhanjiQueryRoomResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.ZhanjiQueryRoomResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ZhanjiQueryRoomResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ZhanjiQueryRoomResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.ZhanjiQueryRoomResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.ZhanjiQueryRoomResp)
    MergeFrom(*source);
  }
}

void ZhanjiQueryRoomResp::MergeFrom(const ZhanjiQueryRoomResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.ZhanjiQueryRoomResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_char_id()) {
      set_char_id(from.char_id());
    }
    if (from.has_resp()) {
      mutable_resp()->::msg_maj::HistoryRoomResp::MergeFrom(from.resp());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ZhanjiQueryRoomResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.ZhanjiQueryRoomResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ZhanjiQueryRoomResp::CopyFrom(const ZhanjiQueryRoomResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.ZhanjiQueryRoomResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ZhanjiQueryRoomResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_resp()) {
    if (!this->resp_->IsInitialized()) return false;
  }
  return true;
}

void ZhanjiQueryRoomResp::Swap(ZhanjiQueryRoomResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ZhanjiQueryRoomResp::InternalSwap(ZhanjiQueryRoomResp* other) {
  std::swap(char_id_, other->char_id_);
  std::swap(resp_, other->resp_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ZhanjiQueryRoomResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ZhanjiQueryRoomResp_descriptor_;
  metadata.reflection = ZhanjiQueryRoomResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ZhanjiQueryRoomResp

// required uint64 char_id = 1;
bool ZhanjiQueryRoomResp::has_char_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ZhanjiQueryRoomResp::set_has_char_id() {
  _has_bits_[0] |= 0x00000001u;
}
void ZhanjiQueryRoomResp::clear_has_char_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void ZhanjiQueryRoomResp::clear_char_id() {
  char_id_ = GOOGLE_ULONGLONG(0);
  clear_has_char_id();
}
 ::google::protobuf::uint64 ZhanjiQueryRoomResp::char_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.ZhanjiQueryRoomResp.char_id)
  return char_id_;
}
 void ZhanjiQueryRoomResp::set_char_id(::google::protobuf::uint64 value) {
  set_has_char_id();
  char_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.ZhanjiQueryRoomResp.char_id)
}

// required .msg_maj.HistoryRoomResp resp = 2;
bool ZhanjiQueryRoomResp::has_resp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ZhanjiQueryRoomResp::set_has_resp() {
  _has_bits_[0] |= 0x00000002u;
}
void ZhanjiQueryRoomResp::clear_has_resp() {
  _has_bits_[0] &= ~0x00000002u;
}
void ZhanjiQueryRoomResp::clear_resp() {
  if (resp_ != NULL) resp_->::msg_maj::HistoryRoomResp::Clear();
  clear_has_resp();
}
const ::msg_maj::HistoryRoomResp& ZhanjiQueryRoomResp::resp() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.ZhanjiQueryRoomResp.resp)
  return resp_ != NULL ? *resp_ : *default_instance_->resp_;
}
::msg_maj::HistoryRoomResp* ZhanjiQueryRoomResp::mutable_resp() {
  set_has_resp();
  if (resp_ == NULL) {
    resp_ = new ::msg_maj::HistoryRoomResp;
  }
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.ZhanjiQueryRoomResp.resp)
  return resp_;
}
::msg_maj::HistoryRoomResp* ZhanjiQueryRoomResp::release_resp() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.ZhanjiQueryRoomResp.resp)
  clear_has_resp();
  ::msg_maj::HistoryRoomResp* temp = resp_;
  resp_ = NULL;
  return temp;
}
void ZhanjiQueryRoomResp::set_allocated_resp(::msg_maj::HistoryRoomResp* resp) {
  delete resp_;
  resp_ = resp;
  if (resp) {
    set_has_resp();
  } else {
    clear_has_resp();
  }
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.ZhanjiQueryRoomResp.resp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ZhanjiQueryInnReq::kCharIdFieldNumber;
const int ZhanjiQueryInnReq::kReqFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ZhanjiQueryInnReq::ZhanjiQueryInnReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.ZhanjiQueryInnReq)
}

void ZhanjiQueryInnReq::InitAsDefaultInstance() {
  req_ = const_cast< ::msg_maj::HistoryInnReq*>(&::msg_maj::HistoryInnReq::default_instance());
}

ZhanjiQueryInnReq::ZhanjiQueryInnReq(const ZhanjiQueryInnReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.ZhanjiQueryInnReq)
}

void ZhanjiQueryInnReq::SharedCtor() {
  _cached_size_ = 0;
  char_id_ = GOOGLE_ULONGLONG(0);
  req_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ZhanjiQueryInnReq::~ZhanjiQueryInnReq() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.ZhanjiQueryInnReq)
  SharedDtor();
}

void ZhanjiQueryInnReq::SharedDtor() {
  if (this != default_instance_) {
    delete req_;
  }
}

void ZhanjiQueryInnReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ZhanjiQueryInnReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ZhanjiQueryInnReq_descriptor_;
}

const ZhanjiQueryInnReq& ZhanjiQueryInnReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fdata_2eproto();
  return *default_instance_;
}

ZhanjiQueryInnReq* ZhanjiQueryInnReq::default_instance_ = NULL;

ZhanjiQueryInnReq* ZhanjiQueryInnReq::New(::google::protobuf::Arena* arena) const {
  ZhanjiQueryInnReq* n = new ZhanjiQueryInnReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ZhanjiQueryInnReq::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.ZhanjiQueryInnReq)
  if (_has_bits_[0 / 32] & 3u) {
    char_id_ = GOOGLE_ULONGLONG(0);
    if (has_req()) {
      if (req_ != NULL) req_->::msg_maj::HistoryInnReq::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ZhanjiQueryInnReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.ZhanjiQueryInnReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 char_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &char_id_)));
          set_has_char_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_req;
        break;
      }

      // required .msg_maj.HistoryInnReq req = 2;
      case 2: {
        if (tag == 18) {
         parse_req:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_req()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.ZhanjiQueryInnReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.ZhanjiQueryInnReq)
  return false;
#undef DO_
}

void ZhanjiQueryInnReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.ZhanjiQueryInnReq)
  // required uint64 char_id = 1;
  if (has_char_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->char_id(), output);
  }

  // required .msg_maj.HistoryInnReq req = 2;
  if (has_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->req_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.ZhanjiQueryInnReq)
}

::google::protobuf::uint8* ZhanjiQueryInnReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.ZhanjiQueryInnReq)
  // required uint64 char_id = 1;
  if (has_char_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->char_id(), target);
  }

  // required .msg_maj.HistoryInnReq req = 2;
  if (has_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->req_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.ZhanjiQueryInnReq)
  return target;
}

int ZhanjiQueryInnReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:fogs.proto.msg.ZhanjiQueryInnReq)
  int total_size = 0;

  if (has_char_id()) {
    // required uint64 char_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->char_id());
  }

  if (has_req()) {
    // required .msg_maj.HistoryInnReq req = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->req_);
  }

  return total_size;
}
int ZhanjiQueryInnReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.ZhanjiQueryInnReq)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint64 char_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->char_id());

    // required .msg_maj.HistoryInnReq req = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->req_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ZhanjiQueryInnReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.ZhanjiQueryInnReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ZhanjiQueryInnReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ZhanjiQueryInnReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.ZhanjiQueryInnReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.ZhanjiQueryInnReq)
    MergeFrom(*source);
  }
}

void ZhanjiQueryInnReq::MergeFrom(const ZhanjiQueryInnReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.ZhanjiQueryInnReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_char_id()) {
      set_char_id(from.char_id());
    }
    if (from.has_req()) {
      mutable_req()->::msg_maj::HistoryInnReq::MergeFrom(from.req());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ZhanjiQueryInnReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.ZhanjiQueryInnReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ZhanjiQueryInnReq::CopyFrom(const ZhanjiQueryInnReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.ZhanjiQueryInnReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ZhanjiQueryInnReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_req()) {
    if (!this->req_->IsInitialized()) return false;
  }
  return true;
}

void ZhanjiQueryInnReq::Swap(ZhanjiQueryInnReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ZhanjiQueryInnReq::InternalSwap(ZhanjiQueryInnReq* other) {
  std::swap(char_id_, other->char_id_);
  std::swap(req_, other->req_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ZhanjiQueryInnReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ZhanjiQueryInnReq_descriptor_;
  metadata.reflection = ZhanjiQueryInnReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ZhanjiQueryInnReq

// required uint64 char_id = 1;
bool ZhanjiQueryInnReq::has_char_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ZhanjiQueryInnReq::set_has_char_id() {
  _has_bits_[0] |= 0x00000001u;
}
void ZhanjiQueryInnReq::clear_has_char_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void ZhanjiQueryInnReq::clear_char_id() {
  char_id_ = GOOGLE_ULONGLONG(0);
  clear_has_char_id();
}
 ::google::protobuf::uint64 ZhanjiQueryInnReq::char_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.ZhanjiQueryInnReq.char_id)
  return char_id_;
}
 void ZhanjiQueryInnReq::set_char_id(::google::protobuf::uint64 value) {
  set_has_char_id();
  char_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.ZhanjiQueryInnReq.char_id)
}

// required .msg_maj.HistoryInnReq req = 2;
bool ZhanjiQueryInnReq::has_req() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ZhanjiQueryInnReq::set_has_req() {
  _has_bits_[0] |= 0x00000002u;
}
void ZhanjiQueryInnReq::clear_has_req() {
  _has_bits_[0] &= ~0x00000002u;
}
void ZhanjiQueryInnReq::clear_req() {
  if (req_ != NULL) req_->::msg_maj::HistoryInnReq::Clear();
  clear_has_req();
}
const ::msg_maj::HistoryInnReq& ZhanjiQueryInnReq::req() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.ZhanjiQueryInnReq.req)
  return req_ != NULL ? *req_ : *default_instance_->req_;
}
::msg_maj::HistoryInnReq* ZhanjiQueryInnReq::mutable_req() {
  set_has_req();
  if (req_ == NULL) {
    req_ = new ::msg_maj::HistoryInnReq;
  }
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.ZhanjiQueryInnReq.req)
  return req_;
}
::msg_maj::HistoryInnReq* ZhanjiQueryInnReq::release_req() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.ZhanjiQueryInnReq.req)
  clear_has_req();
  ::msg_maj::HistoryInnReq* temp = req_;
  req_ = NULL;
  return temp;
}
void ZhanjiQueryInnReq::set_allocated_req(::msg_maj::HistoryInnReq* req) {
  delete req_;
  req_ = req;
  if (req) {
    set_has_req();
  } else {
    clear_has_req();
  }
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.ZhanjiQueryInnReq.req)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ZhanjiQueryInnResp::kCharIdFieldNumber;
const int ZhanjiQueryInnResp::kRespFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ZhanjiQueryInnResp::ZhanjiQueryInnResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.ZhanjiQueryInnResp)
}

void ZhanjiQueryInnResp::InitAsDefaultInstance() {
  resp_ = const_cast< ::msg_maj::HistoryInnResp*>(&::msg_maj::HistoryInnResp::default_instance());
}

ZhanjiQueryInnResp::ZhanjiQueryInnResp(const ZhanjiQueryInnResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.ZhanjiQueryInnResp)
}

void ZhanjiQueryInnResp::SharedCtor() {
  _cached_size_ = 0;
  char_id_ = GOOGLE_ULONGLONG(0);
  resp_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ZhanjiQueryInnResp::~ZhanjiQueryInnResp() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.ZhanjiQueryInnResp)
  SharedDtor();
}

void ZhanjiQueryInnResp::SharedDtor() {
  if (this != default_instance_) {
    delete resp_;
  }
}

void ZhanjiQueryInnResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ZhanjiQueryInnResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ZhanjiQueryInnResp_descriptor_;
}

const ZhanjiQueryInnResp& ZhanjiQueryInnResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fdata_2eproto();
  return *default_instance_;
}

ZhanjiQueryInnResp* ZhanjiQueryInnResp::default_instance_ = NULL;

ZhanjiQueryInnResp* ZhanjiQueryInnResp::New(::google::protobuf::Arena* arena) const {
  ZhanjiQueryInnResp* n = new ZhanjiQueryInnResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ZhanjiQueryInnResp::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.ZhanjiQueryInnResp)
  if (_has_bits_[0 / 32] & 3u) {
    char_id_ = GOOGLE_ULONGLONG(0);
    if (has_resp()) {
      if (resp_ != NULL) resp_->::msg_maj::HistoryInnResp::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ZhanjiQueryInnResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.ZhanjiQueryInnResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 char_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &char_id_)));
          set_has_char_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_resp;
        break;
      }

      // required .msg_maj.HistoryInnResp resp = 2;
      case 2: {
        if (tag == 18) {
         parse_resp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_resp()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.ZhanjiQueryInnResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.ZhanjiQueryInnResp)
  return false;
#undef DO_
}

void ZhanjiQueryInnResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.ZhanjiQueryInnResp)
  // required uint64 char_id = 1;
  if (has_char_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->char_id(), output);
  }

  // required .msg_maj.HistoryInnResp resp = 2;
  if (has_resp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->resp_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.ZhanjiQueryInnResp)
}

::google::protobuf::uint8* ZhanjiQueryInnResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.ZhanjiQueryInnResp)
  // required uint64 char_id = 1;
  if (has_char_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->char_id(), target);
  }

  // required .msg_maj.HistoryInnResp resp = 2;
  if (has_resp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->resp_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.ZhanjiQueryInnResp)
  return target;
}

int ZhanjiQueryInnResp::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:fogs.proto.msg.ZhanjiQueryInnResp)
  int total_size = 0;

  if (has_char_id()) {
    // required uint64 char_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->char_id());
  }

  if (has_resp()) {
    // required .msg_maj.HistoryInnResp resp = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->resp_);
  }

  return total_size;
}
int ZhanjiQueryInnResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.ZhanjiQueryInnResp)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint64 char_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->char_id());

    // required .msg_maj.HistoryInnResp resp = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->resp_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ZhanjiQueryInnResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.ZhanjiQueryInnResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ZhanjiQueryInnResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ZhanjiQueryInnResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.ZhanjiQueryInnResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.ZhanjiQueryInnResp)
    MergeFrom(*source);
  }
}

void ZhanjiQueryInnResp::MergeFrom(const ZhanjiQueryInnResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.ZhanjiQueryInnResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_char_id()) {
      set_char_id(from.char_id());
    }
    if (from.has_resp()) {
      mutable_resp()->::msg_maj::HistoryInnResp::MergeFrom(from.resp());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ZhanjiQueryInnResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.ZhanjiQueryInnResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ZhanjiQueryInnResp::CopyFrom(const ZhanjiQueryInnResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.ZhanjiQueryInnResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ZhanjiQueryInnResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_resp()) {
    if (!this->resp_->IsInitialized()) return false;
  }
  return true;
}

void ZhanjiQueryInnResp::Swap(ZhanjiQueryInnResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ZhanjiQueryInnResp::InternalSwap(ZhanjiQueryInnResp* other) {
  std::swap(char_id_, other->char_id_);
  std::swap(resp_, other->resp_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ZhanjiQueryInnResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ZhanjiQueryInnResp_descriptor_;
  metadata.reflection = ZhanjiQueryInnResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ZhanjiQueryInnResp

// required uint64 char_id = 1;
bool ZhanjiQueryInnResp::has_char_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ZhanjiQueryInnResp::set_has_char_id() {
  _has_bits_[0] |= 0x00000001u;
}
void ZhanjiQueryInnResp::clear_has_char_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void ZhanjiQueryInnResp::clear_char_id() {
  char_id_ = GOOGLE_ULONGLONG(0);
  clear_has_char_id();
}
 ::google::protobuf::uint64 ZhanjiQueryInnResp::char_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.ZhanjiQueryInnResp.char_id)
  return char_id_;
}
 void ZhanjiQueryInnResp::set_char_id(::google::protobuf::uint64 value) {
  set_has_char_id();
  char_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.ZhanjiQueryInnResp.char_id)
}

// required .msg_maj.HistoryInnResp resp = 2;
bool ZhanjiQueryInnResp::has_resp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ZhanjiQueryInnResp::set_has_resp() {
  _has_bits_[0] |= 0x00000002u;
}
void ZhanjiQueryInnResp::clear_has_resp() {
  _has_bits_[0] &= ~0x00000002u;
}
void ZhanjiQueryInnResp::clear_resp() {
  if (resp_ != NULL) resp_->::msg_maj::HistoryInnResp::Clear();
  clear_has_resp();
}
const ::msg_maj::HistoryInnResp& ZhanjiQueryInnResp::resp() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.ZhanjiQueryInnResp.resp)
  return resp_ != NULL ? *resp_ : *default_instance_->resp_;
}
::msg_maj::HistoryInnResp* ZhanjiQueryInnResp::mutable_resp() {
  set_has_resp();
  if (resp_ == NULL) {
    resp_ = new ::msg_maj::HistoryInnResp;
  }
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.ZhanjiQueryInnResp.resp)
  return resp_;
}
::msg_maj::HistoryInnResp* ZhanjiQueryInnResp::release_resp() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.ZhanjiQueryInnResp.resp)
  clear_has_resp();
  ::msg_maj::HistoryInnResp* temp = resp_;
  resp_ = NULL;
  return temp;
}
void ZhanjiQueryInnResp::set_allocated_resp(::msg_maj::HistoryInnResp* resp) {
  delete resp_;
  resp_ = resp;
  if (resp) {
    set_has_resp();
  } else {
    clear_has_resp();
  }
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.ZhanjiQueryInnResp.resp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ZhanjiQueryReply::kCharIdFieldNumber;
const int ZhanjiQueryReply::kReqFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ZhanjiQueryReply::ZhanjiQueryReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.ZhanjiQueryReply)
}

void ZhanjiQueryReply::InitAsDefaultInstance() {
  req_ = const_cast< ::msg_maj::ReplayReq*>(&::msg_maj::ReplayReq::default_instance());
}

ZhanjiQueryReply::ZhanjiQueryReply(const ZhanjiQueryReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.ZhanjiQueryReply)
}

void ZhanjiQueryReply::SharedCtor() {
  _cached_size_ = 0;
  char_id_ = GOOGLE_ULONGLONG(0);
  req_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ZhanjiQueryReply::~ZhanjiQueryReply() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.ZhanjiQueryReply)
  SharedDtor();
}

void ZhanjiQueryReply::SharedDtor() {
  if (this != default_instance_) {
    delete req_;
  }
}

void ZhanjiQueryReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ZhanjiQueryReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ZhanjiQueryReply_descriptor_;
}

const ZhanjiQueryReply& ZhanjiQueryReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fdata_2eproto();
  return *default_instance_;
}

ZhanjiQueryReply* ZhanjiQueryReply::default_instance_ = NULL;

ZhanjiQueryReply* ZhanjiQueryReply::New(::google::protobuf::Arena* arena) const {
  ZhanjiQueryReply* n = new ZhanjiQueryReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ZhanjiQueryReply::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.ZhanjiQueryReply)
  if (_has_bits_[0 / 32] & 3u) {
    char_id_ = GOOGLE_ULONGLONG(0);
    if (has_req()) {
      if (req_ != NULL) req_->::msg_maj::ReplayReq::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ZhanjiQueryReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.ZhanjiQueryReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 char_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &char_id_)));
          set_has_char_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_req;
        break;
      }

      // required .msg_maj.ReplayReq req = 2;
      case 2: {
        if (tag == 18) {
         parse_req:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_req()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.ZhanjiQueryReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.ZhanjiQueryReply)
  return false;
#undef DO_
}

void ZhanjiQueryReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.ZhanjiQueryReply)
  // required uint64 char_id = 1;
  if (has_char_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->char_id(), output);
  }

  // required .msg_maj.ReplayReq req = 2;
  if (has_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->req_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.ZhanjiQueryReply)
}

::google::protobuf::uint8* ZhanjiQueryReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.ZhanjiQueryReply)
  // required uint64 char_id = 1;
  if (has_char_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->char_id(), target);
  }

  // required .msg_maj.ReplayReq req = 2;
  if (has_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->req_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.ZhanjiQueryReply)
  return target;
}

int ZhanjiQueryReply::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:fogs.proto.msg.ZhanjiQueryReply)
  int total_size = 0;

  if (has_char_id()) {
    // required uint64 char_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->char_id());
  }

  if (has_req()) {
    // required .msg_maj.ReplayReq req = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->req_);
  }

  return total_size;
}
int ZhanjiQueryReply::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.ZhanjiQueryReply)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint64 char_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->char_id());

    // required .msg_maj.ReplayReq req = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->req_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ZhanjiQueryReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.ZhanjiQueryReply)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ZhanjiQueryReply* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ZhanjiQueryReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.ZhanjiQueryReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.ZhanjiQueryReply)
    MergeFrom(*source);
  }
}

void ZhanjiQueryReply::MergeFrom(const ZhanjiQueryReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.ZhanjiQueryReply)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_char_id()) {
      set_char_id(from.char_id());
    }
    if (from.has_req()) {
      mutable_req()->::msg_maj::ReplayReq::MergeFrom(from.req());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ZhanjiQueryReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.ZhanjiQueryReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ZhanjiQueryReply::CopyFrom(const ZhanjiQueryReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.ZhanjiQueryReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ZhanjiQueryReply::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_req()) {
    if (!this->req_->IsInitialized()) return false;
  }
  return true;
}

void ZhanjiQueryReply::Swap(ZhanjiQueryReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ZhanjiQueryReply::InternalSwap(ZhanjiQueryReply* other) {
  std::swap(char_id_, other->char_id_);
  std::swap(req_, other->req_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ZhanjiQueryReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ZhanjiQueryReply_descriptor_;
  metadata.reflection = ZhanjiQueryReply_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ZhanjiQueryReply

// required uint64 char_id = 1;
bool ZhanjiQueryReply::has_char_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ZhanjiQueryReply::set_has_char_id() {
  _has_bits_[0] |= 0x00000001u;
}
void ZhanjiQueryReply::clear_has_char_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void ZhanjiQueryReply::clear_char_id() {
  char_id_ = GOOGLE_ULONGLONG(0);
  clear_has_char_id();
}
 ::google::protobuf::uint64 ZhanjiQueryReply::char_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.ZhanjiQueryReply.char_id)
  return char_id_;
}
 void ZhanjiQueryReply::set_char_id(::google::protobuf::uint64 value) {
  set_has_char_id();
  char_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.ZhanjiQueryReply.char_id)
}

// required .msg_maj.ReplayReq req = 2;
bool ZhanjiQueryReply::has_req() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ZhanjiQueryReply::set_has_req() {
  _has_bits_[0] |= 0x00000002u;
}
void ZhanjiQueryReply::clear_has_req() {
  _has_bits_[0] &= ~0x00000002u;
}
void ZhanjiQueryReply::clear_req() {
  if (req_ != NULL) req_->::msg_maj::ReplayReq::Clear();
  clear_has_req();
}
const ::msg_maj::ReplayReq& ZhanjiQueryReply::req() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.ZhanjiQueryReply.req)
  return req_ != NULL ? *req_ : *default_instance_->req_;
}
::msg_maj::ReplayReq* ZhanjiQueryReply::mutable_req() {
  set_has_req();
  if (req_ == NULL) {
    req_ = new ::msg_maj::ReplayReq;
  }
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.ZhanjiQueryReply.req)
  return req_;
}
::msg_maj::ReplayReq* ZhanjiQueryReply::release_req() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.ZhanjiQueryReply.req)
  clear_has_req();
  ::msg_maj::ReplayReq* temp = req_;
  req_ = NULL;
  return temp;
}
void ZhanjiQueryReply::set_allocated_req(::msg_maj::ReplayReq* req) {
  delete req_;
  req_ = req;
  if (req) {
    set_has_req();
  } else {
    clear_has_req();
  }
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.ZhanjiQueryReply.req)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ZhanjiRespReply::kCharIdFieldNumber;
const int ZhanjiRespReply::kRespFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ZhanjiRespReply::ZhanjiRespReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.ZhanjiRespReply)
}

void ZhanjiRespReply::InitAsDefaultInstance() {
  resp_ = const_cast< ::msg_maj::ReplayResp*>(&::msg_maj::ReplayResp::default_instance());
}

ZhanjiRespReply::ZhanjiRespReply(const ZhanjiRespReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.ZhanjiRespReply)
}

void ZhanjiRespReply::SharedCtor() {
  _cached_size_ = 0;
  char_id_ = GOOGLE_ULONGLONG(0);
  resp_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ZhanjiRespReply::~ZhanjiRespReply() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.ZhanjiRespReply)
  SharedDtor();
}

void ZhanjiRespReply::SharedDtor() {
  if (this != default_instance_) {
    delete resp_;
  }
}

void ZhanjiRespReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ZhanjiRespReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ZhanjiRespReply_descriptor_;
}

const ZhanjiRespReply& ZhanjiRespReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fdata_2eproto();
  return *default_instance_;
}

ZhanjiRespReply* ZhanjiRespReply::default_instance_ = NULL;

ZhanjiRespReply* ZhanjiRespReply::New(::google::protobuf::Arena* arena) const {
  ZhanjiRespReply* n = new ZhanjiRespReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ZhanjiRespReply::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.ZhanjiRespReply)
  if (_has_bits_[0 / 32] & 3u) {
    char_id_ = GOOGLE_ULONGLONG(0);
    if (has_resp()) {
      if (resp_ != NULL) resp_->::msg_maj::ReplayResp::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ZhanjiRespReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.ZhanjiRespReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 char_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &char_id_)));
          set_has_char_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_resp;
        break;
      }

      // required .msg_maj.ReplayResp resp = 2;
      case 2: {
        if (tag == 18) {
         parse_resp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_resp()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.ZhanjiRespReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.ZhanjiRespReply)
  return false;
#undef DO_
}

void ZhanjiRespReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.ZhanjiRespReply)
  // required uint64 char_id = 1;
  if (has_char_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->char_id(), output);
  }

  // required .msg_maj.ReplayResp resp = 2;
  if (has_resp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->resp_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.ZhanjiRespReply)
}

::google::protobuf::uint8* ZhanjiRespReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.ZhanjiRespReply)
  // required uint64 char_id = 1;
  if (has_char_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->char_id(), target);
  }

  // required .msg_maj.ReplayResp resp = 2;
  if (has_resp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->resp_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.ZhanjiRespReply)
  return target;
}

int ZhanjiRespReply::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:fogs.proto.msg.ZhanjiRespReply)
  int total_size = 0;

  if (has_char_id()) {
    // required uint64 char_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->char_id());
  }

  if (has_resp()) {
    // required .msg_maj.ReplayResp resp = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->resp_);
  }

  return total_size;
}
int ZhanjiRespReply::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.ZhanjiRespReply)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint64 char_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->char_id());

    // required .msg_maj.ReplayResp resp = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->resp_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ZhanjiRespReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.ZhanjiRespReply)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ZhanjiRespReply* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ZhanjiRespReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.ZhanjiRespReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.ZhanjiRespReply)
    MergeFrom(*source);
  }
}

void ZhanjiRespReply::MergeFrom(const ZhanjiRespReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.ZhanjiRespReply)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_char_id()) {
      set_char_id(from.char_id());
    }
    if (from.has_resp()) {
      mutable_resp()->::msg_maj::ReplayResp::MergeFrom(from.resp());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ZhanjiRespReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.ZhanjiRespReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ZhanjiRespReply::CopyFrom(const ZhanjiRespReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.ZhanjiRespReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ZhanjiRespReply::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_resp()) {
    if (!this->resp_->IsInitialized()) return false;
  }
  return true;
}

void ZhanjiRespReply::Swap(ZhanjiRespReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ZhanjiRespReply::InternalSwap(ZhanjiRespReply* other) {
  std::swap(char_id_, other->char_id_);
  std::swap(resp_, other->resp_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ZhanjiRespReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ZhanjiRespReply_descriptor_;
  metadata.reflection = ZhanjiRespReply_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ZhanjiRespReply

// required uint64 char_id = 1;
bool ZhanjiRespReply::has_char_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ZhanjiRespReply::set_has_char_id() {
  _has_bits_[0] |= 0x00000001u;
}
void ZhanjiRespReply::clear_has_char_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void ZhanjiRespReply::clear_char_id() {
  char_id_ = GOOGLE_ULONGLONG(0);
  clear_has_char_id();
}
 ::google::protobuf::uint64 ZhanjiRespReply::char_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.ZhanjiRespReply.char_id)
  return char_id_;
}
 void ZhanjiRespReply::set_char_id(::google::protobuf::uint64 value) {
  set_has_char_id();
  char_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.ZhanjiRespReply.char_id)
}

// required .msg_maj.ReplayResp resp = 2;
bool ZhanjiRespReply::has_resp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ZhanjiRespReply::set_has_resp() {
  _has_bits_[0] |= 0x00000002u;
}
void ZhanjiRespReply::clear_has_resp() {
  _has_bits_[0] &= ~0x00000002u;
}
void ZhanjiRespReply::clear_resp() {
  if (resp_ != NULL) resp_->::msg_maj::ReplayResp::Clear();
  clear_has_resp();
}
const ::msg_maj::ReplayResp& ZhanjiRespReply::resp() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.ZhanjiRespReply.resp)
  return resp_ != NULL ? *resp_ : *default_instance_->resp_;
}
::msg_maj::ReplayResp* ZhanjiRespReply::mutable_resp() {
  set_has_resp();
  if (resp_ == NULL) {
    resp_ = new ::msg_maj::ReplayResp;
  }
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.ZhanjiRespReply.resp)
  return resp_;
}
::msg_maj::ReplayResp* ZhanjiRespReply::release_resp() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.ZhanjiRespReply.resp)
  clear_has_resp();
  ::msg_maj::ReplayResp* temp = resp_;
  resp_ = NULL;
  return temp;
}
void ZhanjiRespReply::set_allocated_resp(::msg_maj::ReplayResp* resp) {
  delete resp_;
  resp_ = resp;
  if (resp) {
    set_has_resp();
  } else {
    clear_has_resp();
  }
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.ZhanjiRespReply.resp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryMailRequest::kUidFieldNumber;
const int QueryMailRequest::kStartIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryMailRequest::QueryMailRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.QueryMailRequest)
}

void QueryMailRequest::InitAsDefaultInstance() {
}

QueryMailRequest::QueryMailRequest(const QueryMailRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.QueryMailRequest)
}

void QueryMailRequest::SharedCtor() {
  _cached_size_ = 0;
  uid_ = GOOGLE_ULONGLONG(0);
  start_index_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QueryMailRequest::~QueryMailRequest() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.QueryMailRequest)
  SharedDtor();
}

void QueryMailRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void QueryMailRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryMailRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QueryMailRequest_descriptor_;
}

const QueryMailRequest& QueryMailRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fdata_2eproto();
  return *default_instance_;
}

QueryMailRequest* QueryMailRequest::default_instance_ = NULL;

QueryMailRequest* QueryMailRequest::New(::google::protobuf::Arena* arena) const {
  QueryMailRequest* n = new QueryMailRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryMailRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.QueryMailRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(QueryMailRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<QueryMailRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(uid_, start_index_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QueryMailRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.QueryMailRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 uid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_start_index;
        break;
      }

      // required uint64 start_index = 2;
      case 2: {
        if (tag == 16) {
         parse_start_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &start_index_)));
          set_has_start_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.QueryMailRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.QueryMailRequest)
  return false;
#undef DO_
}

void QueryMailRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.QueryMailRequest)
  // required uint64 uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->uid(), output);
  }

  // required uint64 start_index = 2;
  if (has_start_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->start_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.QueryMailRequest)
}

::google::protobuf::uint8* QueryMailRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.QueryMailRequest)
  // required uint64 uid = 1;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->uid(), target);
  }

  // required uint64 start_index = 2;
  if (has_start_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->start_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.QueryMailRequest)
  return target;
}

int QueryMailRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:fogs.proto.msg.QueryMailRequest)
  int total_size = 0;

  if (has_uid()) {
    // required uint64 uid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uid());
  }

  if (has_start_index()) {
    // required uint64 start_index = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->start_index());
  }

  return total_size;
}
int QueryMailRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.QueryMailRequest)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint64 uid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uid());

    // required uint64 start_index = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->start_index());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryMailRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.QueryMailRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const QueryMailRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryMailRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.QueryMailRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.QueryMailRequest)
    MergeFrom(*source);
  }
}

void QueryMailRequest::MergeFrom(const QueryMailRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.QueryMailRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_start_index()) {
      set_start_index(from.start_index());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void QueryMailRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.QueryMailRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryMailRequest::CopyFrom(const QueryMailRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.QueryMailRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryMailRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void QueryMailRequest::Swap(QueryMailRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryMailRequest::InternalSwap(QueryMailRequest* other) {
  std::swap(uid_, other->uid_);
  std::swap(start_index_, other->start_index_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryMailRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QueryMailRequest_descriptor_;
  metadata.reflection = QueryMailRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryMailRequest

// required uint64 uid = 1;
bool QueryMailRequest::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QueryMailRequest::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
void QueryMailRequest::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
void QueryMailRequest::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
 ::google::protobuf::uint64 QueryMailRequest::uid() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.QueryMailRequest.uid)
  return uid_;
}
 void QueryMailRequest::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.QueryMailRequest.uid)
}

// required uint64 start_index = 2;
bool QueryMailRequest::has_start_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void QueryMailRequest::set_has_start_index() {
  _has_bits_[0] |= 0x00000002u;
}
void QueryMailRequest::clear_has_start_index() {
  _has_bits_[0] &= ~0x00000002u;
}
void QueryMailRequest::clear_start_index() {
  start_index_ = GOOGLE_ULONGLONG(0);
  clear_has_start_index();
}
 ::google::protobuf::uint64 QueryMailRequest::start_index() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.QueryMailRequest.start_index)
  return start_index_;
}
 void QueryMailRequest::set_start_index(::google::protobuf::uint64 value) {
  set_has_start_index();
  start_index_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.QueryMailRequest.start_index)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryMailSystemLogRequest::kUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryMailSystemLogRequest::QueryMailSystemLogRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.QueryMailSystemLogRequest)
}

void QueryMailSystemLogRequest::InitAsDefaultInstance() {
}

QueryMailSystemLogRequest::QueryMailSystemLogRequest(const QueryMailSystemLogRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.QueryMailSystemLogRequest)
}

void QueryMailSystemLogRequest::SharedCtor() {
  _cached_size_ = 0;
  uid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QueryMailSystemLogRequest::~QueryMailSystemLogRequest() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.QueryMailSystemLogRequest)
  SharedDtor();
}

void QueryMailSystemLogRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void QueryMailSystemLogRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryMailSystemLogRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QueryMailSystemLogRequest_descriptor_;
}

const QueryMailSystemLogRequest& QueryMailSystemLogRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fdata_2eproto();
  return *default_instance_;
}

QueryMailSystemLogRequest* QueryMailSystemLogRequest::default_instance_ = NULL;

QueryMailSystemLogRequest* QueryMailSystemLogRequest::New(::google::protobuf::Arena* arena) const {
  QueryMailSystemLogRequest* n = new QueryMailSystemLogRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryMailSystemLogRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.QueryMailSystemLogRequest)
  uid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QueryMailSystemLogRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.QueryMailSystemLogRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 uid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.QueryMailSystemLogRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.QueryMailSystemLogRequest)
  return false;
#undef DO_
}

void QueryMailSystemLogRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.QueryMailSystemLogRequest)
  // required uint64 uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->uid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.QueryMailSystemLogRequest)
}

::google::protobuf::uint8* QueryMailSystemLogRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.QueryMailSystemLogRequest)
  // required uint64 uid = 1;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->uid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.QueryMailSystemLogRequest)
  return target;
}

int QueryMailSystemLogRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.QueryMailSystemLogRequest)
  int total_size = 0;

  // required uint64 uid = 1;
  if (has_uid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uid());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryMailSystemLogRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.QueryMailSystemLogRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const QueryMailSystemLogRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryMailSystemLogRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.QueryMailSystemLogRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.QueryMailSystemLogRequest)
    MergeFrom(*source);
  }
}

void QueryMailSystemLogRequest::MergeFrom(const QueryMailSystemLogRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.QueryMailSystemLogRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uid()) {
      set_uid(from.uid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void QueryMailSystemLogRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.QueryMailSystemLogRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryMailSystemLogRequest::CopyFrom(const QueryMailSystemLogRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.QueryMailSystemLogRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryMailSystemLogRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void QueryMailSystemLogRequest::Swap(QueryMailSystemLogRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryMailSystemLogRequest::InternalSwap(QueryMailSystemLogRequest* other) {
  std::swap(uid_, other->uid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryMailSystemLogRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QueryMailSystemLogRequest_descriptor_;
  metadata.reflection = QueryMailSystemLogRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryMailSystemLogRequest

// required uint64 uid = 1;
bool QueryMailSystemLogRequest::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QueryMailSystemLogRequest::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
void QueryMailSystemLogRequest::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
void QueryMailSystemLogRequest::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
 ::google::protobuf::uint64 QueryMailSystemLogRequest::uid() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.QueryMailSystemLogRequest.uid)
  return uid_;
}
 void QueryMailSystemLogRequest::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.QueryMailSystemLogRequest.uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryMailResponse::kUidFieldNumber;
const int QueryMailResponse::kLastNumFieldNumber;
const int QueryMailResponse::kRecordListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryMailResponse::QueryMailResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.QueryMailResponse)
}

void QueryMailResponse::InitAsDefaultInstance() {
}

QueryMailResponse::QueryMailResponse(const QueryMailResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.QueryMailResponse)
}

void QueryMailResponse::SharedCtor() {
  _cached_size_ = 0;
  uid_ = GOOGLE_ULONGLONG(0);
  last_num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QueryMailResponse::~QueryMailResponse() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.QueryMailResponse)
  SharedDtor();
}

void QueryMailResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void QueryMailResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryMailResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QueryMailResponse_descriptor_;
}

const QueryMailResponse& QueryMailResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fdata_2eproto();
  return *default_instance_;
}

QueryMailResponse* QueryMailResponse::default_instance_ = NULL;

QueryMailResponse* QueryMailResponse::New(::google::protobuf::Arena* arena) const {
  QueryMailResponse* n = new QueryMailResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryMailResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.QueryMailResponse)
  if (_has_bits_[0 / 32] & 3u) {
    uid_ = GOOGLE_ULONGLONG(0);
    last_num_ = 0u;
  }
  record_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QueryMailResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.QueryMailResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 uid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_last_num;
        break;
      }

      // required uint32 last_num = 2;
      case 2: {
        if (tag == 16) {
         parse_last_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_num_)));
          set_has_last_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_record_list;
        break;
      }

      // repeated .msg_maj.MailRecordS record_list = 3;
      case 3: {
        if (tag == 26) {
         parse_record_list:
          DO_(input->IncrementRecursionDepth());
         parse_loop_record_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_record_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_record_list;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.QueryMailResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.QueryMailResponse)
  return false;
#undef DO_
}

void QueryMailResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.QueryMailResponse)
  // required uint64 uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->uid(), output);
  }

  // required uint32 last_num = 2;
  if (has_last_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->last_num(), output);
  }

  // repeated .msg_maj.MailRecordS record_list = 3;
  for (unsigned int i = 0, n = this->record_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->record_list(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.QueryMailResponse)
}

::google::protobuf::uint8* QueryMailResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.QueryMailResponse)
  // required uint64 uid = 1;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->uid(), target);
  }

  // required uint32 last_num = 2;
  if (has_last_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->last_num(), target);
  }

  // repeated .msg_maj.MailRecordS record_list = 3;
  for (unsigned int i = 0, n = this->record_list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->record_list(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.QueryMailResponse)
  return target;
}

int QueryMailResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:fogs.proto.msg.QueryMailResponse)
  int total_size = 0;

  if (has_uid()) {
    // required uint64 uid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uid());
  }

  if (has_last_num()) {
    // required uint32 last_num = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->last_num());
  }

  return total_size;
}
int QueryMailResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.QueryMailResponse)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint64 uid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uid());

    // required uint32 last_num = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->last_num());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .msg_maj.MailRecordS record_list = 3;
  total_size += 1 * this->record_list_size();
  for (int i = 0; i < this->record_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->record_list(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryMailResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.QueryMailResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const QueryMailResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryMailResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.QueryMailResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.QueryMailResponse)
    MergeFrom(*source);
  }
}

void QueryMailResponse::MergeFrom(const QueryMailResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.QueryMailResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  record_list_.MergeFrom(from.record_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_last_num()) {
      set_last_num(from.last_num());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void QueryMailResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.QueryMailResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryMailResponse::CopyFrom(const QueryMailResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.QueryMailResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryMailResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->record_list())) return false;
  return true;
}

void QueryMailResponse::Swap(QueryMailResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryMailResponse::InternalSwap(QueryMailResponse* other) {
  std::swap(uid_, other->uid_);
  std::swap(last_num_, other->last_num_);
  record_list_.UnsafeArenaSwap(&other->record_list_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryMailResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QueryMailResponse_descriptor_;
  metadata.reflection = QueryMailResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryMailResponse

// required uint64 uid = 1;
bool QueryMailResponse::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QueryMailResponse::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
void QueryMailResponse::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
void QueryMailResponse::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
 ::google::protobuf::uint64 QueryMailResponse::uid() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.QueryMailResponse.uid)
  return uid_;
}
 void QueryMailResponse::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.QueryMailResponse.uid)
}

// required uint32 last_num = 2;
bool QueryMailResponse::has_last_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void QueryMailResponse::set_has_last_num() {
  _has_bits_[0] |= 0x00000002u;
}
void QueryMailResponse::clear_has_last_num() {
  _has_bits_[0] &= ~0x00000002u;
}
void QueryMailResponse::clear_last_num() {
  last_num_ = 0u;
  clear_has_last_num();
}
 ::google::protobuf::uint32 QueryMailResponse::last_num() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.QueryMailResponse.last_num)
  return last_num_;
}
 void QueryMailResponse::set_last_num(::google::protobuf::uint32 value) {
  set_has_last_num();
  last_num_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.QueryMailResponse.last_num)
}

// repeated .msg_maj.MailRecordS record_list = 3;
int QueryMailResponse::record_list_size() const {
  return record_list_.size();
}
void QueryMailResponse::clear_record_list() {
  record_list_.Clear();
}
const ::msg_maj::MailRecordS& QueryMailResponse::record_list(int index) const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.QueryMailResponse.record_list)
  return record_list_.Get(index);
}
::msg_maj::MailRecordS* QueryMailResponse::mutable_record_list(int index) {
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.QueryMailResponse.record_list)
  return record_list_.Mutable(index);
}
::msg_maj::MailRecordS* QueryMailResponse::add_record_list() {
  // @@protoc_insertion_point(field_add:fogs.proto.msg.QueryMailResponse.record_list)
  return record_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::msg_maj::MailRecordS >*
QueryMailResponse::mutable_record_list() {
  // @@protoc_insertion_point(field_mutable_list:fogs.proto.msg.QueryMailResponse.record_list)
  return &record_list_;
}
const ::google::protobuf::RepeatedPtrField< ::msg_maj::MailRecordS >&
QueryMailResponse::record_list() const {
  // @@protoc_insertion_point(field_list:fogs.proto.msg.QueryMailResponse.record_list)
  return record_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryMailSystemLogResponse::kUidFieldNumber;
const int QueryMailSystemLogResponse::kLastNumFieldNumber;
const int QueryMailSystemLogResponse::kRecordListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryMailSystemLogResponse::QueryMailSystemLogResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.QueryMailSystemLogResponse)
}

void QueryMailSystemLogResponse::InitAsDefaultInstance() {
}

QueryMailSystemLogResponse::QueryMailSystemLogResponse(const QueryMailSystemLogResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.QueryMailSystemLogResponse)
}

void QueryMailSystemLogResponse::SharedCtor() {
  _cached_size_ = 0;
  uid_ = GOOGLE_ULONGLONG(0);
  last_num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QueryMailSystemLogResponse::~QueryMailSystemLogResponse() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.QueryMailSystemLogResponse)
  SharedDtor();
}

void QueryMailSystemLogResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void QueryMailSystemLogResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryMailSystemLogResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QueryMailSystemLogResponse_descriptor_;
}

const QueryMailSystemLogResponse& QueryMailSystemLogResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fdata_2eproto();
  return *default_instance_;
}

QueryMailSystemLogResponse* QueryMailSystemLogResponse::default_instance_ = NULL;

QueryMailSystemLogResponse* QueryMailSystemLogResponse::New(::google::protobuf::Arena* arena) const {
  QueryMailSystemLogResponse* n = new QueryMailSystemLogResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryMailSystemLogResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.QueryMailSystemLogResponse)
  if (_has_bits_[0 / 32] & 3u) {
    uid_ = GOOGLE_ULONGLONG(0);
    last_num_ = 0u;
  }
  record_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QueryMailSystemLogResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.QueryMailSystemLogResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 uid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_last_num;
        break;
      }

      // required uint32 last_num = 2;
      case 2: {
        if (tag == 16) {
         parse_last_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_num_)));
          set_has_last_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_record_list;
        break;
      }

      // repeated .msg_maj.MailSystemLogS record_list = 3;
      case 3: {
        if (tag == 26) {
         parse_record_list:
          DO_(input->IncrementRecursionDepth());
         parse_loop_record_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_record_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_record_list;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.QueryMailSystemLogResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.QueryMailSystemLogResponse)
  return false;
#undef DO_
}

void QueryMailSystemLogResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.QueryMailSystemLogResponse)
  // required uint64 uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->uid(), output);
  }

  // required uint32 last_num = 2;
  if (has_last_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->last_num(), output);
  }

  // repeated .msg_maj.MailSystemLogS record_list = 3;
  for (unsigned int i = 0, n = this->record_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->record_list(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.QueryMailSystemLogResponse)
}

::google::protobuf::uint8* QueryMailSystemLogResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.QueryMailSystemLogResponse)
  // required uint64 uid = 1;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->uid(), target);
  }

  // required uint32 last_num = 2;
  if (has_last_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->last_num(), target);
  }

  // repeated .msg_maj.MailSystemLogS record_list = 3;
  for (unsigned int i = 0, n = this->record_list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->record_list(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.QueryMailSystemLogResponse)
  return target;
}

int QueryMailSystemLogResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:fogs.proto.msg.QueryMailSystemLogResponse)
  int total_size = 0;

  if (has_uid()) {
    // required uint64 uid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uid());
  }

  if (has_last_num()) {
    // required uint32 last_num = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->last_num());
  }

  return total_size;
}
int QueryMailSystemLogResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.QueryMailSystemLogResponse)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint64 uid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uid());

    // required uint32 last_num = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->last_num());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .msg_maj.MailSystemLogS record_list = 3;
  total_size += 1 * this->record_list_size();
  for (int i = 0; i < this->record_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->record_list(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryMailSystemLogResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.QueryMailSystemLogResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const QueryMailSystemLogResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryMailSystemLogResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.QueryMailSystemLogResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.QueryMailSystemLogResponse)
    MergeFrom(*source);
  }
}

void QueryMailSystemLogResponse::MergeFrom(const QueryMailSystemLogResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.QueryMailSystemLogResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  record_list_.MergeFrom(from.record_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_last_num()) {
      set_last_num(from.last_num());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void QueryMailSystemLogResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.QueryMailSystemLogResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryMailSystemLogResponse::CopyFrom(const QueryMailSystemLogResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.QueryMailSystemLogResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryMailSystemLogResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->record_list())) return false;
  return true;
}

void QueryMailSystemLogResponse::Swap(QueryMailSystemLogResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryMailSystemLogResponse::InternalSwap(QueryMailSystemLogResponse* other) {
  std::swap(uid_, other->uid_);
  std::swap(last_num_, other->last_num_);
  record_list_.UnsafeArenaSwap(&other->record_list_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryMailSystemLogResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QueryMailSystemLogResponse_descriptor_;
  metadata.reflection = QueryMailSystemLogResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryMailSystemLogResponse

// required uint64 uid = 1;
bool QueryMailSystemLogResponse::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QueryMailSystemLogResponse::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
void QueryMailSystemLogResponse::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
void QueryMailSystemLogResponse::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
 ::google::protobuf::uint64 QueryMailSystemLogResponse::uid() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.QueryMailSystemLogResponse.uid)
  return uid_;
}
 void QueryMailSystemLogResponse::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.QueryMailSystemLogResponse.uid)
}

// required uint32 last_num = 2;
bool QueryMailSystemLogResponse::has_last_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void QueryMailSystemLogResponse::set_has_last_num() {
  _has_bits_[0] |= 0x00000002u;
}
void QueryMailSystemLogResponse::clear_has_last_num() {
  _has_bits_[0] &= ~0x00000002u;
}
void QueryMailSystemLogResponse::clear_last_num() {
  last_num_ = 0u;
  clear_has_last_num();
}
 ::google::protobuf::uint32 QueryMailSystemLogResponse::last_num() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.QueryMailSystemLogResponse.last_num)
  return last_num_;
}
 void QueryMailSystemLogResponse::set_last_num(::google::protobuf::uint32 value) {
  set_has_last_num();
  last_num_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.QueryMailSystemLogResponse.last_num)
}

// repeated .msg_maj.MailSystemLogS record_list = 3;
int QueryMailSystemLogResponse::record_list_size() const {
  return record_list_.size();
}
void QueryMailSystemLogResponse::clear_record_list() {
  record_list_.Clear();
}
const ::msg_maj::MailSystemLogS& QueryMailSystemLogResponse::record_list(int index) const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.QueryMailSystemLogResponse.record_list)
  return record_list_.Get(index);
}
::msg_maj::MailSystemLogS* QueryMailSystemLogResponse::mutable_record_list(int index) {
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.QueryMailSystemLogResponse.record_list)
  return record_list_.Mutable(index);
}
::msg_maj::MailSystemLogS* QueryMailSystemLogResponse::add_record_list() {
  // @@protoc_insertion_point(field_add:fogs.proto.msg.QueryMailSystemLogResponse.record_list)
  return record_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::msg_maj::MailSystemLogS >*
QueryMailSystemLogResponse::mutable_record_list() {
  // @@protoc_insertion_point(field_mutable_list:fogs.proto.msg.QueryMailSystemLogResponse.record_list)
  return &record_list_;
}
const ::google::protobuf::RepeatedPtrField< ::msg_maj::MailSystemLogS >&
QueryMailSystemLogResponse::record_list() const {
  // @@protoc_insertion_point(field_list:fogs.proto.msg.QueryMailSystemLogResponse.record_list)
  return record_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SaveMailRequest::kRecordsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SaveMailRequest::SaveMailRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.SaveMailRequest)
}

void SaveMailRequest::InitAsDefaultInstance() {
  records_ = const_cast< ::msg_maj::MailRecordS*>(&::msg_maj::MailRecordS::default_instance());
}

SaveMailRequest::SaveMailRequest(const SaveMailRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.SaveMailRequest)
}

void SaveMailRequest::SharedCtor() {
  _cached_size_ = 0;
  records_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SaveMailRequest::~SaveMailRequest() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.SaveMailRequest)
  SharedDtor();
}

void SaveMailRequest::SharedDtor() {
  if (this != default_instance_) {
    delete records_;
  }
}

void SaveMailRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SaveMailRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SaveMailRequest_descriptor_;
}

const SaveMailRequest& SaveMailRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fdata_2eproto();
  return *default_instance_;
}

SaveMailRequest* SaveMailRequest::default_instance_ = NULL;

SaveMailRequest* SaveMailRequest::New(::google::protobuf::Arena* arena) const {
  SaveMailRequest* n = new SaveMailRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SaveMailRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.SaveMailRequest)
  if (has_records()) {
    if (records_ != NULL) records_->::msg_maj::MailRecordS::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SaveMailRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.SaveMailRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .msg_maj.MailRecordS records = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_records()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.SaveMailRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.SaveMailRequest)
  return false;
#undef DO_
}

void SaveMailRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.SaveMailRequest)
  // required .msg_maj.MailRecordS records = 1;
  if (has_records()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->records_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.SaveMailRequest)
}

::google::protobuf::uint8* SaveMailRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.SaveMailRequest)
  // required .msg_maj.MailRecordS records = 1;
  if (has_records()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->records_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.SaveMailRequest)
  return target;
}

int SaveMailRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.SaveMailRequest)
  int total_size = 0;

  // required .msg_maj.MailRecordS records = 1;
  if (has_records()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->records_);
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SaveMailRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.SaveMailRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SaveMailRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SaveMailRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.SaveMailRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.SaveMailRequest)
    MergeFrom(*source);
  }
}

void SaveMailRequest::MergeFrom(const SaveMailRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.SaveMailRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_records()) {
      mutable_records()->::msg_maj::MailRecordS::MergeFrom(from.records());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SaveMailRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.SaveMailRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SaveMailRequest::CopyFrom(const SaveMailRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.SaveMailRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SaveMailRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_records()) {
    if (!this->records_->IsInitialized()) return false;
  }
  return true;
}

void SaveMailRequest::Swap(SaveMailRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SaveMailRequest::InternalSwap(SaveMailRequest* other) {
  std::swap(records_, other->records_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SaveMailRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SaveMailRequest_descriptor_;
  metadata.reflection = SaveMailRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SaveMailRequest

// required .msg_maj.MailRecordS records = 1;
bool SaveMailRequest::has_records() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SaveMailRequest::set_has_records() {
  _has_bits_[0] |= 0x00000001u;
}
void SaveMailRequest::clear_has_records() {
  _has_bits_[0] &= ~0x00000001u;
}
void SaveMailRequest::clear_records() {
  if (records_ != NULL) records_->::msg_maj::MailRecordS::Clear();
  clear_has_records();
}
const ::msg_maj::MailRecordS& SaveMailRequest::records() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.SaveMailRequest.records)
  return records_ != NULL ? *records_ : *default_instance_->records_;
}
::msg_maj::MailRecordS* SaveMailRequest::mutable_records() {
  set_has_records();
  if (records_ == NULL) {
    records_ = new ::msg_maj::MailRecordS;
  }
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.SaveMailRequest.records)
  return records_;
}
::msg_maj::MailRecordS* SaveMailRequest::release_records() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.SaveMailRequest.records)
  clear_has_records();
  ::msg_maj::MailRecordS* temp = records_;
  records_ = NULL;
  return temp;
}
void SaveMailRequest::set_allocated_records(::msg_maj::MailRecordS* records) {
  delete records_;
  records_ = records;
  if (records) {
    set_has_records();
  } else {
    clear_has_records();
  }
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.SaveMailRequest.records)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SaveMailSystemLogRequest::kRecordsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SaveMailSystemLogRequest::SaveMailSystemLogRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.SaveMailSystemLogRequest)
}

void SaveMailSystemLogRequest::InitAsDefaultInstance() {
  records_ = const_cast< ::msg_maj::MailSystemLogS*>(&::msg_maj::MailSystemLogS::default_instance());
}

SaveMailSystemLogRequest::SaveMailSystemLogRequest(const SaveMailSystemLogRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.SaveMailSystemLogRequest)
}

void SaveMailSystemLogRequest::SharedCtor() {
  _cached_size_ = 0;
  records_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SaveMailSystemLogRequest::~SaveMailSystemLogRequest() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.SaveMailSystemLogRequest)
  SharedDtor();
}

void SaveMailSystemLogRequest::SharedDtor() {
  if (this != default_instance_) {
    delete records_;
  }
}

void SaveMailSystemLogRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SaveMailSystemLogRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SaveMailSystemLogRequest_descriptor_;
}

const SaveMailSystemLogRequest& SaveMailSystemLogRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fdata_2eproto();
  return *default_instance_;
}

SaveMailSystemLogRequest* SaveMailSystemLogRequest::default_instance_ = NULL;

SaveMailSystemLogRequest* SaveMailSystemLogRequest::New(::google::protobuf::Arena* arena) const {
  SaveMailSystemLogRequest* n = new SaveMailSystemLogRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SaveMailSystemLogRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.SaveMailSystemLogRequest)
  if (has_records()) {
    if (records_ != NULL) records_->::msg_maj::MailSystemLogS::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SaveMailSystemLogRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.SaveMailSystemLogRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .msg_maj.MailSystemLogS records = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_records()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.SaveMailSystemLogRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.SaveMailSystemLogRequest)
  return false;
#undef DO_
}

void SaveMailSystemLogRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.SaveMailSystemLogRequest)
  // required .msg_maj.MailSystemLogS records = 1;
  if (has_records()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->records_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.SaveMailSystemLogRequest)
}

::google::protobuf::uint8* SaveMailSystemLogRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.SaveMailSystemLogRequest)
  // required .msg_maj.MailSystemLogS records = 1;
  if (has_records()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->records_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.SaveMailSystemLogRequest)
  return target;
}

int SaveMailSystemLogRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.SaveMailSystemLogRequest)
  int total_size = 0;

  // required .msg_maj.MailSystemLogS records = 1;
  if (has_records()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->records_);
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SaveMailSystemLogRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.SaveMailSystemLogRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SaveMailSystemLogRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SaveMailSystemLogRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.SaveMailSystemLogRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.SaveMailSystemLogRequest)
    MergeFrom(*source);
  }
}

void SaveMailSystemLogRequest::MergeFrom(const SaveMailSystemLogRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.SaveMailSystemLogRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_records()) {
      mutable_records()->::msg_maj::MailSystemLogS::MergeFrom(from.records());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SaveMailSystemLogRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.SaveMailSystemLogRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SaveMailSystemLogRequest::CopyFrom(const SaveMailSystemLogRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.SaveMailSystemLogRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SaveMailSystemLogRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_records()) {
    if (!this->records_->IsInitialized()) return false;
  }
  return true;
}

void SaveMailSystemLogRequest::Swap(SaveMailSystemLogRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SaveMailSystemLogRequest::InternalSwap(SaveMailSystemLogRequest* other) {
  std::swap(records_, other->records_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SaveMailSystemLogRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SaveMailSystemLogRequest_descriptor_;
  metadata.reflection = SaveMailSystemLogRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SaveMailSystemLogRequest

// required .msg_maj.MailSystemLogS records = 1;
bool SaveMailSystemLogRequest::has_records() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SaveMailSystemLogRequest::set_has_records() {
  _has_bits_[0] |= 0x00000001u;
}
void SaveMailSystemLogRequest::clear_has_records() {
  _has_bits_[0] &= ~0x00000001u;
}
void SaveMailSystemLogRequest::clear_records() {
  if (records_ != NULL) records_->::msg_maj::MailSystemLogS::Clear();
  clear_has_records();
}
const ::msg_maj::MailSystemLogS& SaveMailSystemLogRequest::records() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.SaveMailSystemLogRequest.records)
  return records_ != NULL ? *records_ : *default_instance_->records_;
}
::msg_maj::MailSystemLogS* SaveMailSystemLogRequest::mutable_records() {
  set_has_records();
  if (records_ == NULL) {
    records_ = new ::msg_maj::MailSystemLogS;
  }
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.SaveMailSystemLogRequest.records)
  return records_;
}
::msg_maj::MailSystemLogS* SaveMailSystemLogRequest::release_records() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.SaveMailSystemLogRequest.records)
  clear_has_records();
  ::msg_maj::MailSystemLogS* temp = records_;
  records_ = NULL;
  return temp;
}
void SaveMailSystemLogRequest::set_allocated_records(::msg_maj::MailSystemLogS* records) {
  delete records_;
  records_ = records;
  if (records) {
    set_has_records();
  } else {
    clear_has_records();
  }
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.SaveMailSystemLogRequest.records)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetMaxUUIDRequest::kServerIdFieldNumber;
const int GetMaxUUIDRequest::kUuidTypeListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetMaxUUIDRequest::GetMaxUUIDRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.GetMaxUUIDRequest)
}

void GetMaxUUIDRequest::InitAsDefaultInstance() {
}

GetMaxUUIDRequest::GetMaxUUIDRequest(const GetMaxUUIDRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.GetMaxUUIDRequest)
}

void GetMaxUUIDRequest::SharedCtor() {
  _cached_size_ = 0;
  server_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetMaxUUIDRequest::~GetMaxUUIDRequest() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.GetMaxUUIDRequest)
  SharedDtor();
}

void GetMaxUUIDRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetMaxUUIDRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetMaxUUIDRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetMaxUUIDRequest_descriptor_;
}

const GetMaxUUIDRequest& GetMaxUUIDRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fdata_2eproto();
  return *default_instance_;
}

GetMaxUUIDRequest* GetMaxUUIDRequest::default_instance_ = NULL;

GetMaxUUIDRequest* GetMaxUUIDRequest::New(::google::protobuf::Arena* arena) const {
  GetMaxUUIDRequest* n = new GetMaxUUIDRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetMaxUUIDRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.GetMaxUUIDRequest)
  server_id_ = 0u;
  uuid_type_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GetMaxUUIDRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.GetMaxUUIDRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 server_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_id_)));
          set_has_server_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_uuid_type_list;
        break;
      }

      // repeated uint32 uuid_type_list = 2;
      case 2: {
        if (tag == 16) {
         parse_uuid_type_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_uuid_type_list())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_uuid_type_list())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_uuid_type_list;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.GetMaxUUIDRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.GetMaxUUIDRequest)
  return false;
#undef DO_
}

void GetMaxUUIDRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.GetMaxUUIDRequest)
  // optional uint32 server_id = 1;
  if (has_server_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->server_id(), output);
  }

  // repeated uint32 uuid_type_list = 2;
  for (int i = 0; i < this->uuid_type_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->uuid_type_list(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.GetMaxUUIDRequest)
}

::google::protobuf::uint8* GetMaxUUIDRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.GetMaxUUIDRequest)
  // optional uint32 server_id = 1;
  if (has_server_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->server_id(), target);
  }

  // repeated uint32 uuid_type_list = 2;
  for (int i = 0; i < this->uuid_type_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->uuid_type_list(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.GetMaxUUIDRequest)
  return target;
}

int GetMaxUUIDRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.GetMaxUUIDRequest)
  int total_size = 0;

  // optional uint32 server_id = 1;
  if (has_server_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->server_id());
  }

  // repeated uint32 uuid_type_list = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->uuid_type_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->uuid_type_list(i));
    }
    total_size += 1 * this->uuid_type_list_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetMaxUUIDRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.GetMaxUUIDRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetMaxUUIDRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetMaxUUIDRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.GetMaxUUIDRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.GetMaxUUIDRequest)
    MergeFrom(*source);
  }
}

void GetMaxUUIDRequest::MergeFrom(const GetMaxUUIDRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.GetMaxUUIDRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  uuid_type_list_.MergeFrom(from.uuid_type_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_server_id()) {
      set_server_id(from.server_id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void GetMaxUUIDRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.GetMaxUUIDRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMaxUUIDRequest::CopyFrom(const GetMaxUUIDRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.GetMaxUUIDRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMaxUUIDRequest::IsInitialized() const {

  return true;
}

void GetMaxUUIDRequest::Swap(GetMaxUUIDRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetMaxUUIDRequest::InternalSwap(GetMaxUUIDRequest* other) {
  std::swap(server_id_, other->server_id_);
  uuid_type_list_.UnsafeArenaSwap(&other->uuid_type_list_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetMaxUUIDRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetMaxUUIDRequest_descriptor_;
  metadata.reflection = GetMaxUUIDRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetMaxUUIDRequest

// optional uint32 server_id = 1;
bool GetMaxUUIDRequest::has_server_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetMaxUUIDRequest::set_has_server_id() {
  _has_bits_[0] |= 0x00000001u;
}
void GetMaxUUIDRequest::clear_has_server_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetMaxUUIDRequest::clear_server_id() {
  server_id_ = 0u;
  clear_has_server_id();
}
 ::google::protobuf::uint32 GetMaxUUIDRequest::server_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.GetMaxUUIDRequest.server_id)
  return server_id_;
}
 void GetMaxUUIDRequest::set_server_id(::google::protobuf::uint32 value) {
  set_has_server_id();
  server_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.GetMaxUUIDRequest.server_id)
}

// repeated uint32 uuid_type_list = 2;
int GetMaxUUIDRequest::uuid_type_list_size() const {
  return uuid_type_list_.size();
}
void GetMaxUUIDRequest::clear_uuid_type_list() {
  uuid_type_list_.Clear();
}
 ::google::protobuf::uint32 GetMaxUUIDRequest::uuid_type_list(int index) const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.GetMaxUUIDRequest.uuid_type_list)
  return uuid_type_list_.Get(index);
}
 void GetMaxUUIDRequest::set_uuid_type_list(int index, ::google::protobuf::uint32 value) {
  uuid_type_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:fogs.proto.msg.GetMaxUUIDRequest.uuid_type_list)
}
 void GetMaxUUIDRequest::add_uuid_type_list(::google::protobuf::uint32 value) {
  uuid_type_list_.Add(value);
  // @@protoc_insertion_point(field_add:fogs.proto.msg.GetMaxUUIDRequest.uuid_type_list)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetMaxUUIDRequest::uuid_type_list() const {
  // @@protoc_insertion_point(field_list:fogs.proto.msg.GetMaxUUIDRequest.uuid_type_list)
  return uuid_type_list_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetMaxUUIDRequest::mutable_uuid_type_list() {
  // @@protoc_insertion_point(field_mutable_list:fogs.proto.msg.GetMaxUUIDRequest.uuid_type_list)
  return &uuid_type_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UUID::kUuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UUID::UUID()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.UUID)
}

void UUID::InitAsDefaultInstance() {
}

UUID::UUID(const UUID& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.UUID)
}

void UUID::SharedCtor() {
  _cached_size_ = 0;
  uuid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UUID::~UUID() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.UUID)
  SharedDtor();
}

void UUID::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UUID::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UUID::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UUID_descriptor_;
}

const UUID& UUID::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fdata_2eproto();
  return *default_instance_;
}

UUID* UUID::default_instance_ = NULL;

UUID* UUID::New(::google::protobuf::Arena* arena) const {
  UUID* n = new UUID;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UUID::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.UUID)
  uuid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool UUID::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.UUID)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 uuid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.UUID)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.UUID)
  return false;
#undef DO_
}

void UUID::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.UUID)
  // optional uint64 uuid = 1;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->uuid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.UUID)
}

::google::protobuf::uint8* UUID::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.UUID)
  // optional uint64 uuid = 1;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->uuid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.UUID)
  return target;
}

int UUID::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.UUID)
  int total_size = 0;

  // optional uint64 uuid = 1;
  if (has_uuid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uuid());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UUID::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.UUID)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const UUID* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const UUID>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.UUID)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.UUID)
    MergeFrom(*source);
  }
}

void UUID::MergeFrom(const UUID& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.UUID)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void UUID::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.UUID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UUID::CopyFrom(const UUID& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.UUID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UUID::IsInitialized() const {

  return true;
}

void UUID::Swap(UUID* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UUID::InternalSwap(UUID* other) {
  std::swap(uuid_, other->uuid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UUID::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UUID_descriptor_;
  metadata.reflection = UUID_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UUID

// optional uint64 uuid = 1;
bool UUID::has_uuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UUID::set_has_uuid() {
  _has_bits_[0] |= 0x00000001u;
}
void UUID::clear_has_uuid() {
  _has_bits_[0] &= ~0x00000001u;
}
void UUID::clear_uuid() {
  uuid_ = GOOGLE_ULONGLONG(0);
  clear_has_uuid();
}
 ::google::protobuf::uint64 UUID::uuid() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.UUID.uuid)
  return uuid_;
}
 void UUID::set_uuid(::google::protobuf::uint64 value) {
  set_has_uuid();
  uuid_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.UUID.uuid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UUIDData::kUuidTypeFieldNumber;
const int UUIDData::kUuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UUIDData::UUIDData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.UUIDData)
}

void UUIDData::InitAsDefaultInstance() {
}

UUIDData::UUIDData(const UUIDData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.UUIDData)
}

void UUIDData::SharedCtor() {
  _cached_size_ = 0;
  uuid_type_ = 0u;
  uuid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UUIDData::~UUIDData() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.UUIDData)
  SharedDtor();
}

void UUIDData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UUIDData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UUIDData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UUIDData_descriptor_;
}

const UUIDData& UUIDData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fdata_2eproto();
  return *default_instance_;
}

UUIDData* UUIDData::default_instance_ = NULL;

UUIDData* UUIDData::New(::google::protobuf::Arena* arena) const {
  UUIDData* n = new UUIDData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UUIDData::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.UUIDData)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(UUIDData, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<UUIDData*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(uuid_, uuid_type_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool UUIDData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.UUIDData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 uuid_type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uuid_type_)));
          set_has_uuid_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_uuid;
        break;
      }

      // optional uint64 uuid = 2;
      case 2: {
        if (tag == 16) {
         parse_uuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uuid_)));
          set_has_uuid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.UUIDData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.UUIDData)
  return false;
#undef DO_
}

void UUIDData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.UUIDData)
  // optional uint32 uuid_type = 1;
  if (has_uuid_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uuid_type(), output);
  }

  // optional uint64 uuid = 2;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->uuid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.UUIDData)
}

::google::protobuf::uint8* UUIDData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.UUIDData)
  // optional uint32 uuid_type = 1;
  if (has_uuid_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uuid_type(), target);
  }

  // optional uint64 uuid = 2;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->uuid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.UUIDData)
  return target;
}

int UUIDData::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.UUIDData)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 uuid_type = 1;
    if (has_uuid_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->uuid_type());
    }

    // optional uint64 uuid = 2;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->uuid());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UUIDData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.UUIDData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const UUIDData* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const UUIDData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.UUIDData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.UUIDData)
    MergeFrom(*source);
  }
}

void UUIDData::MergeFrom(const UUIDData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.UUIDData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uuid_type()) {
      set_uuid_type(from.uuid_type());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void UUIDData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.UUIDData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UUIDData::CopyFrom(const UUIDData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.UUIDData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UUIDData::IsInitialized() const {

  return true;
}

void UUIDData::Swap(UUIDData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UUIDData::InternalSwap(UUIDData* other) {
  std::swap(uuid_type_, other->uuid_type_);
  std::swap(uuid_, other->uuid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UUIDData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UUIDData_descriptor_;
  metadata.reflection = UUIDData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UUIDData

// optional uint32 uuid_type = 1;
bool UUIDData::has_uuid_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UUIDData::set_has_uuid_type() {
  _has_bits_[0] |= 0x00000001u;
}
void UUIDData::clear_has_uuid_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void UUIDData::clear_uuid_type() {
  uuid_type_ = 0u;
  clear_has_uuid_type();
}
 ::google::protobuf::uint32 UUIDData::uuid_type() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.UUIDData.uuid_type)
  return uuid_type_;
}
 void UUIDData::set_uuid_type(::google::protobuf::uint32 value) {
  set_has_uuid_type();
  uuid_type_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.UUIDData.uuid_type)
}

// optional uint64 uuid = 2;
bool UUIDData::has_uuid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void UUIDData::set_has_uuid() {
  _has_bits_[0] |= 0x00000002u;
}
void UUIDData::clear_has_uuid() {
  _has_bits_[0] &= ~0x00000002u;
}
void UUIDData::clear_uuid() {
  uuid_ = GOOGLE_ULONGLONG(0);
  clear_has_uuid();
}
 ::google::protobuf::uint64 UUIDData::uuid() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.UUIDData.uuid)
  return uuid_;
}
 void UUIDData::set_uuid(::google::protobuf::uint64 value) {
  set_has_uuid();
  uuid_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.UUIDData.uuid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetMaxUUIDResponse::kResultFieldNumber;
const int GetMaxUUIDResponse::kServerIdFieldNumber;
const int GetMaxUUIDResponse::kUuidListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetMaxUUIDResponse::GetMaxUUIDResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.GetMaxUUIDResponse)
}

void GetMaxUUIDResponse::InitAsDefaultInstance() {
}

GetMaxUUIDResponse::GetMaxUUIDResponse(const GetMaxUUIDResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.GetMaxUUIDResponse)
}

void GetMaxUUIDResponse::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  server_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetMaxUUIDResponse::~GetMaxUUIDResponse() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.GetMaxUUIDResponse)
  SharedDtor();
}

void GetMaxUUIDResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetMaxUUIDResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetMaxUUIDResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetMaxUUIDResponse_descriptor_;
}

const GetMaxUUIDResponse& GetMaxUUIDResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fdata_2eproto();
  return *default_instance_;
}

GetMaxUUIDResponse* GetMaxUUIDResponse::default_instance_ = NULL;

GetMaxUUIDResponse* GetMaxUUIDResponse::New(::google::protobuf::Arena* arena) const {
  GetMaxUUIDResponse* n = new GetMaxUUIDResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetMaxUUIDResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.GetMaxUUIDResponse)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(GetMaxUUIDResponse, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<GetMaxUUIDResponse*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(result_, server_id_);

#undef ZR_HELPER_
#undef ZR_

  uuid_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GetMaxUUIDResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.GetMaxUUIDResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_server_id;
        break;
      }

      // optional uint32 server_id = 2;
      case 2: {
        if (tag == 16) {
         parse_server_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_id_)));
          set_has_server_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_uuid_list;
        break;
      }

      // repeated .fogs.proto.msg.UUIDData uuid_list = 3;
      case 3: {
        if (tag == 26) {
         parse_uuid_list:
          DO_(input->IncrementRecursionDepth());
         parse_loop_uuid_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_uuid_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_uuid_list;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.GetMaxUUIDResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.GetMaxUUIDResponse)
  return false;
#undef DO_
}

void GetMaxUUIDResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.GetMaxUUIDResponse)
  // optional int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional uint32 server_id = 2;
  if (has_server_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->server_id(), output);
  }

  // repeated .fogs.proto.msg.UUIDData uuid_list = 3;
  for (unsigned int i = 0, n = this->uuid_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->uuid_list(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.GetMaxUUIDResponse)
}

::google::protobuf::uint8* GetMaxUUIDResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.GetMaxUUIDResponse)
  // optional int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional uint32 server_id = 2;
  if (has_server_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->server_id(), target);
  }

  // repeated .fogs.proto.msg.UUIDData uuid_list = 3;
  for (unsigned int i = 0, n = this->uuid_list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->uuid_list(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.GetMaxUUIDResponse)
  return target;
}

int GetMaxUUIDResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.GetMaxUUIDResponse)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional uint32 server_id = 2;
    if (has_server_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->server_id());
    }

  }
  // repeated .fogs.proto.msg.UUIDData uuid_list = 3;
  total_size += 1 * this->uuid_list_size();
  for (int i = 0; i < this->uuid_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->uuid_list(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetMaxUUIDResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.GetMaxUUIDResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetMaxUUIDResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetMaxUUIDResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.GetMaxUUIDResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.GetMaxUUIDResponse)
    MergeFrom(*source);
  }
}

void GetMaxUUIDResponse::MergeFrom(const GetMaxUUIDResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.GetMaxUUIDResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  uuid_list_.MergeFrom(from.uuid_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_server_id()) {
      set_server_id(from.server_id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void GetMaxUUIDResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.GetMaxUUIDResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMaxUUIDResponse::CopyFrom(const GetMaxUUIDResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.GetMaxUUIDResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMaxUUIDResponse::IsInitialized() const {

  return true;
}

void GetMaxUUIDResponse::Swap(GetMaxUUIDResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetMaxUUIDResponse::InternalSwap(GetMaxUUIDResponse* other) {
  std::swap(result_, other->result_);
  std::swap(server_id_, other->server_id_);
  uuid_list_.UnsafeArenaSwap(&other->uuid_list_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetMaxUUIDResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetMaxUUIDResponse_descriptor_;
  metadata.reflection = GetMaxUUIDResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetMaxUUIDResponse

// optional int32 result = 1;
bool GetMaxUUIDResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetMaxUUIDResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void GetMaxUUIDResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetMaxUUIDResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
 ::google::protobuf::int32 GetMaxUUIDResponse::result() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.GetMaxUUIDResponse.result)
  return result_;
}
 void GetMaxUUIDResponse::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.GetMaxUUIDResponse.result)
}

// optional uint32 server_id = 2;
bool GetMaxUUIDResponse::has_server_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetMaxUUIDResponse::set_has_server_id() {
  _has_bits_[0] |= 0x00000002u;
}
void GetMaxUUIDResponse::clear_has_server_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetMaxUUIDResponse::clear_server_id() {
  server_id_ = 0u;
  clear_has_server_id();
}
 ::google::protobuf::uint32 GetMaxUUIDResponse::server_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.GetMaxUUIDResponse.server_id)
  return server_id_;
}
 void GetMaxUUIDResponse::set_server_id(::google::protobuf::uint32 value) {
  set_has_server_id();
  server_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.GetMaxUUIDResponse.server_id)
}

// repeated .fogs.proto.msg.UUIDData uuid_list = 3;
int GetMaxUUIDResponse::uuid_list_size() const {
  return uuid_list_.size();
}
void GetMaxUUIDResponse::clear_uuid_list() {
  uuid_list_.Clear();
}
const ::fogs::proto::msg::UUIDData& GetMaxUUIDResponse::uuid_list(int index) const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.GetMaxUUIDResponse.uuid_list)
  return uuid_list_.Get(index);
}
::fogs::proto::msg::UUIDData* GetMaxUUIDResponse::mutable_uuid_list(int index) {
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.GetMaxUUIDResponse.uuid_list)
  return uuid_list_.Mutable(index);
}
::fogs::proto::msg::UUIDData* GetMaxUUIDResponse::add_uuid_list() {
  // @@protoc_insertion_point(field_add:fogs.proto.msg.GetMaxUUIDResponse.uuid_list)
  return uuid_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::fogs::proto::msg::UUIDData >*
GetMaxUUIDResponse::mutable_uuid_list() {
  // @@protoc_insertion_point(field_mutable_list:fogs.proto.msg.GetMaxUUIDResponse.uuid_list)
  return &uuid_list_;
}
const ::google::protobuf::RepeatedPtrField< ::fogs::proto::msg::UUIDData >&
GetMaxUUIDResponse::uuid_list() const {
  // @@protoc_insertion_point(field_list:fogs.proto.msg.GetMaxUUIDResponse.uuid_list)
  return uuid_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccountEnterGame::kAccountFieldNumber;
const int AccountEnterGame::kServerIdFieldNumber;
const int AccountEnterGame::kCharidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccountEnterGame::AccountEnterGame()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.AccountEnterGame)
}

void AccountEnterGame::InitAsDefaultInstance() {
}

AccountEnterGame::AccountEnterGame(const AccountEnterGame& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.AccountEnterGame)
}

void AccountEnterGame::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_id_ = 0u;
  charid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AccountEnterGame::~AccountEnterGame() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.AccountEnterGame)
  SharedDtor();
}

void AccountEnterGame::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void AccountEnterGame::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AccountEnterGame::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AccountEnterGame_descriptor_;
}

const AccountEnterGame& AccountEnterGame::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fdata_2eproto();
  return *default_instance_;
}

AccountEnterGame* AccountEnterGame::default_instance_ = NULL;

AccountEnterGame* AccountEnterGame::New(::google::protobuf::Arena* arena) const {
  AccountEnterGame* n = new AccountEnterGame;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AccountEnterGame::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.AccountEnterGame)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(AccountEnterGame, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<AccountEnterGame*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 7u) {
    ZR_(charid_, server_id_);
    if (has_account()) {
      account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool AccountEnterGame::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.AccountEnterGame)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string account = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account().data(), this->account().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fogs.proto.msg.AccountEnterGame.account");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_server_id;
        break;
      }

      // optional uint32 server_id = 2;
      case 2: {
        if (tag == 16) {
         parse_server_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_id_)));
          set_has_server_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_charid;
        break;
      }

      // optional uint64 charid = 3;
      case 3: {
        if (tag == 24) {
         parse_charid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &charid_)));
          set_has_charid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.AccountEnterGame)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.AccountEnterGame)
  return false;
#undef DO_
}

void AccountEnterGame::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.AccountEnterGame)
  // optional string account = 1;
  if (has_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fogs.proto.msg.AccountEnterGame.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account(), output);
  }

  // optional uint32 server_id = 2;
  if (has_server_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->server_id(), output);
  }

  // optional uint64 charid = 3;
  if (has_charid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->charid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.AccountEnterGame)
}

::google::protobuf::uint8* AccountEnterGame::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.AccountEnterGame)
  // optional string account = 1;
  if (has_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fogs.proto.msg.AccountEnterGame.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account(), target);
  }

  // optional uint32 server_id = 2;
  if (has_server_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->server_id(), target);
  }

  // optional uint64 charid = 3;
  if (has_charid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->charid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.AccountEnterGame)
  return target;
}

int AccountEnterGame::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.AccountEnterGame)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional string account = 1;
    if (has_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account());
    }

    // optional uint32 server_id = 2;
    if (has_server_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->server_id());
    }

    // optional uint64 charid = 3;
    if (has_charid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->charid());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AccountEnterGame::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.AccountEnterGame)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AccountEnterGame* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AccountEnterGame>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.AccountEnterGame)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.AccountEnterGame)
    MergeFrom(*source);
  }
}

void AccountEnterGame::MergeFrom(const AccountEnterGame& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.AccountEnterGame)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_account()) {
      set_has_account();
      account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
    }
    if (from.has_server_id()) {
      set_server_id(from.server_id());
    }
    if (from.has_charid()) {
      set_charid(from.charid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void AccountEnterGame::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.AccountEnterGame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountEnterGame::CopyFrom(const AccountEnterGame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.AccountEnterGame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountEnterGame::IsInitialized() const {

  return true;
}

void AccountEnterGame::Swap(AccountEnterGame* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccountEnterGame::InternalSwap(AccountEnterGame* other) {
  account_.Swap(&other->account_);
  std::swap(server_id_, other->server_id_);
  std::swap(charid_, other->charid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AccountEnterGame::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AccountEnterGame_descriptor_;
  metadata.reflection = AccountEnterGame_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AccountEnterGame

// optional string account = 1;
bool AccountEnterGame::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AccountEnterGame::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
void AccountEnterGame::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
void AccountEnterGame::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
 const ::std::string& AccountEnterGame::account() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.AccountEnterGame.account)
  return account_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AccountEnterGame::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fogs.proto.msg.AccountEnterGame.account)
}
 void AccountEnterGame::set_account(const char* value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fogs.proto.msg.AccountEnterGame.account)
}
 void AccountEnterGame::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fogs.proto.msg.AccountEnterGame.account)
}
 ::std::string* AccountEnterGame::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.AccountEnterGame.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AccountEnterGame::release_account() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.AccountEnterGame.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AccountEnterGame::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.AccountEnterGame.account)
}

// optional uint32 server_id = 2;
bool AccountEnterGame::has_server_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AccountEnterGame::set_has_server_id() {
  _has_bits_[0] |= 0x00000002u;
}
void AccountEnterGame::clear_has_server_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void AccountEnterGame::clear_server_id() {
  server_id_ = 0u;
  clear_has_server_id();
}
 ::google::protobuf::uint32 AccountEnterGame::server_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.AccountEnterGame.server_id)
  return server_id_;
}
 void AccountEnterGame::set_server_id(::google::protobuf::uint32 value) {
  set_has_server_id();
  server_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.AccountEnterGame.server_id)
}

// optional uint64 charid = 3;
bool AccountEnterGame::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void AccountEnterGame::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
void AccountEnterGame::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
void AccountEnterGame::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
 ::google::protobuf::uint64 AccountEnterGame::charid() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.AccountEnterGame.charid)
  return charid_;
}
 void AccountEnterGame::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.AccountEnterGame.charid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccountLeaveGame::kAccountFieldNumber;
const int AccountLeaveGame::kCharidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccountLeaveGame::AccountLeaveGame()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.AccountLeaveGame)
}

void AccountLeaveGame::InitAsDefaultInstance() {
}

AccountLeaveGame::AccountLeaveGame(const AccountLeaveGame& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.AccountLeaveGame)
}

void AccountLeaveGame::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  charid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AccountLeaveGame::~AccountLeaveGame() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.AccountLeaveGame)
  SharedDtor();
}

void AccountLeaveGame::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void AccountLeaveGame::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AccountLeaveGame::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AccountLeaveGame_descriptor_;
}

const AccountLeaveGame& AccountLeaveGame::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fdata_2eproto();
  return *default_instance_;
}

AccountLeaveGame* AccountLeaveGame::default_instance_ = NULL;

AccountLeaveGame* AccountLeaveGame::New(::google::protobuf::Arena* arena) const {
  AccountLeaveGame* n = new AccountLeaveGame;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AccountLeaveGame::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.AccountLeaveGame)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_account()) {
      account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    charid_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool AccountLeaveGame::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.AccountLeaveGame)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string account = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account().data(), this->account().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fogs.proto.msg.AccountLeaveGame.account");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_charid;
        break;
      }

      // optional uint64 charid = 2;
      case 2: {
        if (tag == 16) {
         parse_charid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &charid_)));
          set_has_charid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.AccountLeaveGame)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.AccountLeaveGame)
  return false;
#undef DO_
}

void AccountLeaveGame::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.AccountLeaveGame)
  // optional string account = 1;
  if (has_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fogs.proto.msg.AccountLeaveGame.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account(), output);
  }

  // optional uint64 charid = 2;
  if (has_charid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->charid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.AccountLeaveGame)
}

::google::protobuf::uint8* AccountLeaveGame::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.AccountLeaveGame)
  // optional string account = 1;
  if (has_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fogs.proto.msg.AccountLeaveGame.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account(), target);
  }

  // optional uint64 charid = 2;
  if (has_charid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->charid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.AccountLeaveGame)
  return target;
}

int AccountLeaveGame::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.AccountLeaveGame)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional string account = 1;
    if (has_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account());
    }

    // optional uint64 charid = 2;
    if (has_charid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->charid());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AccountLeaveGame::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.AccountLeaveGame)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AccountLeaveGame* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AccountLeaveGame>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.AccountLeaveGame)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.AccountLeaveGame)
    MergeFrom(*source);
  }
}

void AccountLeaveGame::MergeFrom(const AccountLeaveGame& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.AccountLeaveGame)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_account()) {
      set_has_account();
      account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
    }
    if (from.has_charid()) {
      set_charid(from.charid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void AccountLeaveGame::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.AccountLeaveGame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountLeaveGame::CopyFrom(const AccountLeaveGame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.AccountLeaveGame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountLeaveGame::IsInitialized() const {

  return true;
}

void AccountLeaveGame::Swap(AccountLeaveGame* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccountLeaveGame::InternalSwap(AccountLeaveGame* other) {
  account_.Swap(&other->account_);
  std::swap(charid_, other->charid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AccountLeaveGame::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AccountLeaveGame_descriptor_;
  metadata.reflection = AccountLeaveGame_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AccountLeaveGame

// optional string account = 1;
bool AccountLeaveGame::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AccountLeaveGame::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
void AccountLeaveGame::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
void AccountLeaveGame::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
 const ::std::string& AccountLeaveGame::account() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.AccountLeaveGame.account)
  return account_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AccountLeaveGame::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fogs.proto.msg.AccountLeaveGame.account)
}
 void AccountLeaveGame::set_account(const char* value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fogs.proto.msg.AccountLeaveGame.account)
}
 void AccountLeaveGame::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fogs.proto.msg.AccountLeaveGame.account)
}
 ::std::string* AccountLeaveGame::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.AccountLeaveGame.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AccountLeaveGame::release_account() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.AccountLeaveGame.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AccountLeaveGame::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.AccountLeaveGame.account)
}

// optional uint64 charid = 2;
bool AccountLeaveGame::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AccountLeaveGame::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
void AccountLeaveGame::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
void AccountLeaveGame::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
 ::google::protobuf::uint64 AccountLeaveGame::charid() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.AccountLeaveGame.charid)
  return charid_;
}
 void AccountLeaveGame::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.AccountLeaveGame.charid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChangeGameServer::kRoleInfoFieldNumber;
const int ChangeGameServer::kSessionIdFieldNumber;
const int ChangeGameServer::kFepserveridFieldNumber;
const int ChangeGameServer::kRoomIdFieldNumber;
const int ChangeGameServer::kIconAddrFieldNumber;
const int ChangeGameServer::kMailListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChangeGameServer::ChangeGameServer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.ChangeGameServer)
}

void ChangeGameServer::InitAsDefaultInstance() {
  role_info_ = const_cast< ::msg_maj::Role*>(&::msg_maj::Role::default_instance());
}

ChangeGameServer::ChangeGameServer(const ChangeGameServer& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.ChangeGameServer)
}

void ChangeGameServer::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  role_info_ = NULL;
  session_id_ = GOOGLE_ULONGLONG(0);
  fepserverid_ = 0u;
  room_id_ = 0u;
  icon_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ChangeGameServer::~ChangeGameServer() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.ChangeGameServer)
  SharedDtor();
}

void ChangeGameServer::SharedDtor() {
  icon_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete role_info_;
  }
}

void ChangeGameServer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChangeGameServer::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ChangeGameServer_descriptor_;
}

const ChangeGameServer& ChangeGameServer::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fdata_2eproto();
  return *default_instance_;
}

ChangeGameServer* ChangeGameServer::default_instance_ = NULL;

ChangeGameServer* ChangeGameServer::New(::google::protobuf::Arena* arena) const {
  ChangeGameServer* n = new ChangeGameServer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChangeGameServer::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.ChangeGameServer)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ChangeGameServer, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ChangeGameServer*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31u) {
    ZR_(session_id_, room_id_);
    if (has_role_info()) {
      if (role_info_ != NULL) role_info_->::msg_maj::Role::Clear();
    }
    if (has_icon_addr()) {
      icon_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  mail_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ChangeGameServer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.ChangeGameServer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .msg_maj.Role role_info = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_role_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_session_id;
        break;
      }

      // optional uint64 session_id = 2;
      case 2: {
        if (tag == 16) {
         parse_session_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &session_id_)));
          set_has_session_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_fepserverid;
        break;
      }

      // optional uint32 fepserverid = 3;
      case 3: {
        if (tag == 24) {
         parse_fepserverid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fepserverid_)));
          set_has_fepserverid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_room_id;
        break;
      }

      // optional uint32 room_id = 4;
      case 4: {
        if (tag == 32) {
         parse_room_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &room_id_)));
          set_has_room_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_icon_addr;
        break;
      }

      // optional string icon_addr = 5;
      case 5: {
        if (tag == 42) {
         parse_icon_addr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_icon_addr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->icon_addr().data(), this->icon_addr().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fogs.proto.msg.ChangeGameServer.icon_addr");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_mail_list;
        break;
      }

      // repeated .msg_maj.MailRecordS mail_list = 6;
      case 6: {
        if (tag == 50) {
         parse_mail_list:
          DO_(input->IncrementRecursionDepth());
         parse_loop_mail_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_mail_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_loop_mail_list;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.ChangeGameServer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.ChangeGameServer)
  return false;
#undef DO_
}

void ChangeGameServer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.ChangeGameServer)
  // required .msg_maj.Role role_info = 1;
  if (has_role_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->role_info_, output);
  }

  // optional uint64 session_id = 2;
  if (has_session_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->session_id(), output);
  }

  // optional uint32 fepserverid = 3;
  if (has_fepserverid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->fepserverid(), output);
  }

  // optional uint32 room_id = 4;
  if (has_room_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->room_id(), output);
  }

  // optional string icon_addr = 5;
  if (has_icon_addr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->icon_addr().data(), this->icon_addr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fogs.proto.msg.ChangeGameServer.icon_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->icon_addr(), output);
  }

  // repeated .msg_maj.MailRecordS mail_list = 6;
  for (unsigned int i = 0, n = this->mail_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->mail_list(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.ChangeGameServer)
}

::google::protobuf::uint8* ChangeGameServer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.ChangeGameServer)
  // required .msg_maj.Role role_info = 1;
  if (has_role_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->role_info_, false, target);
  }

  // optional uint64 session_id = 2;
  if (has_session_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->session_id(), target);
  }

  // optional uint32 fepserverid = 3;
  if (has_fepserverid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->fepserverid(), target);
  }

  // optional uint32 room_id = 4;
  if (has_room_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->room_id(), target);
  }

  // optional string icon_addr = 5;
  if (has_icon_addr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->icon_addr().data(), this->icon_addr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fogs.proto.msg.ChangeGameServer.icon_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->icon_addr(), target);
  }

  // repeated .msg_maj.MailRecordS mail_list = 6;
  for (unsigned int i = 0, n = this->mail_list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->mail_list(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.ChangeGameServer)
  return target;
}

int ChangeGameServer::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.ChangeGameServer)
  int total_size = 0;

  // required .msg_maj.Role role_info = 1;
  if (has_role_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->role_info_);
  }
  if (_has_bits_[1 / 32] & 30u) {
    // optional uint64 session_id = 2;
    if (has_session_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->session_id());
    }

    // optional uint32 fepserverid = 3;
    if (has_fepserverid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->fepserverid());
    }

    // optional uint32 room_id = 4;
    if (has_room_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->room_id());
    }

    // optional string icon_addr = 5;
    if (has_icon_addr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->icon_addr());
    }

  }
  // repeated .msg_maj.MailRecordS mail_list = 6;
  total_size += 1 * this->mail_list_size();
  for (int i = 0; i < this->mail_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->mail_list(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChangeGameServer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.ChangeGameServer)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ChangeGameServer* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ChangeGameServer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.ChangeGameServer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.ChangeGameServer)
    MergeFrom(*source);
  }
}

void ChangeGameServer::MergeFrom(const ChangeGameServer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.ChangeGameServer)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  mail_list_.MergeFrom(from.mail_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_info()) {
      mutable_role_info()->::msg_maj::Role::MergeFrom(from.role_info());
    }
    if (from.has_session_id()) {
      set_session_id(from.session_id());
    }
    if (from.has_fepserverid()) {
      set_fepserverid(from.fepserverid());
    }
    if (from.has_room_id()) {
      set_room_id(from.room_id());
    }
    if (from.has_icon_addr()) {
      set_has_icon_addr();
      icon_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.icon_addr_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ChangeGameServer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.ChangeGameServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChangeGameServer::CopyFrom(const ChangeGameServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.ChangeGameServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeGameServer::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->mail_list())) return false;
  return true;
}

void ChangeGameServer::Swap(ChangeGameServer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChangeGameServer::InternalSwap(ChangeGameServer* other) {
  std::swap(role_info_, other->role_info_);
  std::swap(session_id_, other->session_id_);
  std::swap(fepserverid_, other->fepserverid_);
  std::swap(room_id_, other->room_id_);
  icon_addr_.Swap(&other->icon_addr_);
  mail_list_.UnsafeArenaSwap(&other->mail_list_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChangeGameServer::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ChangeGameServer_descriptor_;
  metadata.reflection = ChangeGameServer_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChangeGameServer

// required .msg_maj.Role role_info = 1;
bool ChangeGameServer::has_role_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ChangeGameServer::set_has_role_info() {
  _has_bits_[0] |= 0x00000001u;
}
void ChangeGameServer::clear_has_role_info() {
  _has_bits_[0] &= ~0x00000001u;
}
void ChangeGameServer::clear_role_info() {
  if (role_info_ != NULL) role_info_->::msg_maj::Role::Clear();
  clear_has_role_info();
}
const ::msg_maj::Role& ChangeGameServer::role_info() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.ChangeGameServer.role_info)
  return role_info_ != NULL ? *role_info_ : *default_instance_->role_info_;
}
::msg_maj::Role* ChangeGameServer::mutable_role_info() {
  set_has_role_info();
  if (role_info_ == NULL) {
    role_info_ = new ::msg_maj::Role;
  }
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.ChangeGameServer.role_info)
  return role_info_;
}
::msg_maj::Role* ChangeGameServer::release_role_info() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.ChangeGameServer.role_info)
  clear_has_role_info();
  ::msg_maj::Role* temp = role_info_;
  role_info_ = NULL;
  return temp;
}
void ChangeGameServer::set_allocated_role_info(::msg_maj::Role* role_info) {
  delete role_info_;
  role_info_ = role_info;
  if (role_info) {
    set_has_role_info();
  } else {
    clear_has_role_info();
  }
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.ChangeGameServer.role_info)
}

// optional uint64 session_id = 2;
bool ChangeGameServer::has_session_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ChangeGameServer::set_has_session_id() {
  _has_bits_[0] |= 0x00000002u;
}
void ChangeGameServer::clear_has_session_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void ChangeGameServer::clear_session_id() {
  session_id_ = GOOGLE_ULONGLONG(0);
  clear_has_session_id();
}
 ::google::protobuf::uint64 ChangeGameServer::session_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.ChangeGameServer.session_id)
  return session_id_;
}
 void ChangeGameServer::set_session_id(::google::protobuf::uint64 value) {
  set_has_session_id();
  session_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.ChangeGameServer.session_id)
}

// optional uint32 fepserverid = 3;
bool ChangeGameServer::has_fepserverid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ChangeGameServer::set_has_fepserverid() {
  _has_bits_[0] |= 0x00000004u;
}
void ChangeGameServer::clear_has_fepserverid() {
  _has_bits_[0] &= ~0x00000004u;
}
void ChangeGameServer::clear_fepserverid() {
  fepserverid_ = 0u;
  clear_has_fepserverid();
}
 ::google::protobuf::uint32 ChangeGameServer::fepserverid() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.ChangeGameServer.fepserverid)
  return fepserverid_;
}
 void ChangeGameServer::set_fepserverid(::google::protobuf::uint32 value) {
  set_has_fepserverid();
  fepserverid_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.ChangeGameServer.fepserverid)
}

// optional uint32 room_id = 4;
bool ChangeGameServer::has_room_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ChangeGameServer::set_has_room_id() {
  _has_bits_[0] |= 0x00000008u;
}
void ChangeGameServer::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000008u;
}
void ChangeGameServer::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
 ::google::protobuf::uint32 ChangeGameServer::room_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.ChangeGameServer.room_id)
  return room_id_;
}
 void ChangeGameServer::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.ChangeGameServer.room_id)
}

// optional string icon_addr = 5;
bool ChangeGameServer::has_icon_addr() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ChangeGameServer::set_has_icon_addr() {
  _has_bits_[0] |= 0x00000010u;
}
void ChangeGameServer::clear_has_icon_addr() {
  _has_bits_[0] &= ~0x00000010u;
}
void ChangeGameServer::clear_icon_addr() {
  icon_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_icon_addr();
}
 const ::std::string& ChangeGameServer::icon_addr() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.ChangeGameServer.icon_addr)
  return icon_addr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ChangeGameServer::set_icon_addr(const ::std::string& value) {
  set_has_icon_addr();
  icon_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fogs.proto.msg.ChangeGameServer.icon_addr)
}
 void ChangeGameServer::set_icon_addr(const char* value) {
  set_has_icon_addr();
  icon_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fogs.proto.msg.ChangeGameServer.icon_addr)
}
 void ChangeGameServer::set_icon_addr(const char* value, size_t size) {
  set_has_icon_addr();
  icon_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fogs.proto.msg.ChangeGameServer.icon_addr)
}
 ::std::string* ChangeGameServer::mutable_icon_addr() {
  set_has_icon_addr();
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.ChangeGameServer.icon_addr)
  return icon_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ChangeGameServer::release_icon_addr() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.ChangeGameServer.icon_addr)
  clear_has_icon_addr();
  return icon_addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ChangeGameServer::set_allocated_icon_addr(::std::string* icon_addr) {
  if (icon_addr != NULL) {
    set_has_icon_addr();
  } else {
    clear_has_icon_addr();
  }
  icon_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), icon_addr);
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.ChangeGameServer.icon_addr)
}

// repeated .msg_maj.MailRecordS mail_list = 6;
int ChangeGameServer::mail_list_size() const {
  return mail_list_.size();
}
void ChangeGameServer::clear_mail_list() {
  mail_list_.Clear();
}
const ::msg_maj::MailRecordS& ChangeGameServer::mail_list(int index) const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.ChangeGameServer.mail_list)
  return mail_list_.Get(index);
}
::msg_maj::MailRecordS* ChangeGameServer::mutable_mail_list(int index) {
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.ChangeGameServer.mail_list)
  return mail_list_.Mutable(index);
}
::msg_maj::MailRecordS* ChangeGameServer::add_mail_list() {
  // @@protoc_insertion_point(field_add:fogs.proto.msg.ChangeGameServer.mail_list)
  return mail_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::msg_maj::MailRecordS >*
ChangeGameServer::mutable_mail_list() {
  // @@protoc_insertion_point(field_mutable_list:fogs.proto.msg.ChangeGameServer.mail_list)
  return &mail_list_;
}
const ::google::protobuf::RepeatedPtrField< ::msg_maj::MailRecordS >&
ChangeGameServer::mail_list() const {
  // @@protoc_insertion_point(field_list:fogs.proto.msg.ChangeGameServer.mail_list)
  return mail_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RechargeRoomCard::kOrderNoFieldNumber;
const int RechargeRoomCard::kUserIdFieldNumber;
const int RechargeRoomCard::kRoomCardFieldNumber;
const int RechargeRoomCard::kIsAddFieldNumber;
const int RechargeRoomCard::kTimeFieldNumber;
const int RechargeRoomCard::kFromUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RechargeRoomCard::RechargeRoomCard()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.RechargeRoomCard)
}

void RechargeRoomCard::InitAsDefaultInstance() {
}

RechargeRoomCard::RechargeRoomCard(const RechargeRoomCard& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.RechargeRoomCard)
}

void RechargeRoomCard::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  order_no_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_ = 0u;
  room_card_ = 0u;
  is_add_ = 0u;
  time_ = GOOGLE_ULONGLONG(0);
  from_uid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RechargeRoomCard::~RechargeRoomCard() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.RechargeRoomCard)
  SharedDtor();
}

void RechargeRoomCard::SharedDtor() {
  order_no_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void RechargeRoomCard::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RechargeRoomCard::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RechargeRoomCard_descriptor_;
}

const RechargeRoomCard& RechargeRoomCard::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fdata_2eproto();
  return *default_instance_;
}

RechargeRoomCard* RechargeRoomCard::default_instance_ = NULL;

RechargeRoomCard* RechargeRoomCard::New(::google::protobuf::Arena* arena) const {
  RechargeRoomCard* n = new RechargeRoomCard;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RechargeRoomCard::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.RechargeRoomCard)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(RechargeRoomCard, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<RechargeRoomCard*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 63u) {
    ZR_(user_id_, from_uid_);
    if (has_order_no()) {
      order_no_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RechargeRoomCard::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.RechargeRoomCard)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string order_no = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_order_no()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->order_no().data(), this->order_no().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fogs.proto.msg.RechargeRoomCard.order_no");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_user_id;
        break;
      }

      // optional uint32 user_id = 2;
      case 2: {
        if (tag == 16) {
         parse_user_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
          set_has_user_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_room_card;
        break;
      }

      // optional uint32 room_card = 3;
      case 3: {
        if (tag == 24) {
         parse_room_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &room_card_)));
          set_has_room_card();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_is_add;
        break;
      }

      // optional uint32 is_add = 4;
      case 4: {
        if (tag == 32) {
         parse_is_add:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &is_add_)));
          set_has_is_add();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_time;
        break;
      }

      // optional uint64 time = 5;
      case 5: {
        if (tag == 40) {
         parse_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &time_)));
          set_has_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_from_uid;
        break;
      }

      // optional uint32 from_uid = 6;
      case 6: {
        if (tag == 48) {
         parse_from_uid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &from_uid_)));
          set_has_from_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.RechargeRoomCard)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.RechargeRoomCard)
  return false;
#undef DO_
}

void RechargeRoomCard::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.RechargeRoomCard)
  // optional string order_no = 1;
  if (has_order_no()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->order_no().data(), this->order_no().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fogs.proto.msg.RechargeRoomCard.order_no");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->order_no(), output);
  }

  // optional uint32 user_id = 2;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->user_id(), output);
  }

  // optional uint32 room_card = 3;
  if (has_room_card()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->room_card(), output);
  }

  // optional uint32 is_add = 4;
  if (has_is_add()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->is_add(), output);
  }

  // optional uint64 time = 5;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->time(), output);
  }

  // optional uint32 from_uid = 6;
  if (has_from_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->from_uid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.RechargeRoomCard)
}

::google::protobuf::uint8* RechargeRoomCard::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.RechargeRoomCard)
  // optional string order_no = 1;
  if (has_order_no()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->order_no().data(), this->order_no().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fogs.proto.msg.RechargeRoomCard.order_no");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->order_no(), target);
  }

  // optional uint32 user_id = 2;
  if (has_user_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->user_id(), target);
  }

  // optional uint32 room_card = 3;
  if (has_room_card()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->room_card(), target);
  }

  // optional uint32 is_add = 4;
  if (has_is_add()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->is_add(), target);
  }

  // optional uint64 time = 5;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->time(), target);
  }

  // optional uint32 from_uid = 6;
  if (has_from_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->from_uid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.RechargeRoomCard)
  return target;
}

int RechargeRoomCard::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.RechargeRoomCard)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 63u) {
    // optional string order_no = 1;
    if (has_order_no()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->order_no());
    }

    // optional uint32 user_id = 2;
    if (has_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->user_id());
    }

    // optional uint32 room_card = 3;
    if (has_room_card()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->room_card());
    }

    // optional uint32 is_add = 4;
    if (has_is_add()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->is_add());
    }

    // optional uint64 time = 5;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->time());
    }

    // optional uint32 from_uid = 6;
    if (has_from_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->from_uid());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RechargeRoomCard::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.RechargeRoomCard)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RechargeRoomCard* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RechargeRoomCard>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.RechargeRoomCard)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.RechargeRoomCard)
    MergeFrom(*source);
  }
}

void RechargeRoomCard::MergeFrom(const RechargeRoomCard& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.RechargeRoomCard)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_order_no()) {
      set_has_order_no();
      order_no_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.order_no_);
    }
    if (from.has_user_id()) {
      set_user_id(from.user_id());
    }
    if (from.has_room_card()) {
      set_room_card(from.room_card());
    }
    if (from.has_is_add()) {
      set_is_add(from.is_add());
    }
    if (from.has_time()) {
      set_time(from.time());
    }
    if (from.has_from_uid()) {
      set_from_uid(from.from_uid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void RechargeRoomCard::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.RechargeRoomCard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RechargeRoomCard::CopyFrom(const RechargeRoomCard& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.RechargeRoomCard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RechargeRoomCard::IsInitialized() const {

  return true;
}

void RechargeRoomCard::Swap(RechargeRoomCard* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RechargeRoomCard::InternalSwap(RechargeRoomCard* other) {
  order_no_.Swap(&other->order_no_);
  std::swap(user_id_, other->user_id_);
  std::swap(room_card_, other->room_card_);
  std::swap(is_add_, other->is_add_);
  std::swap(time_, other->time_);
  std::swap(from_uid_, other->from_uid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RechargeRoomCard::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RechargeRoomCard_descriptor_;
  metadata.reflection = RechargeRoomCard_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RechargeRoomCard

// optional string order_no = 1;
bool RechargeRoomCard::has_order_no() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RechargeRoomCard::set_has_order_no() {
  _has_bits_[0] |= 0x00000001u;
}
void RechargeRoomCard::clear_has_order_no() {
  _has_bits_[0] &= ~0x00000001u;
}
void RechargeRoomCard::clear_order_no() {
  order_no_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_order_no();
}
 const ::std::string& RechargeRoomCard::order_no() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.RechargeRoomCard.order_no)
  return order_no_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RechargeRoomCard::set_order_no(const ::std::string& value) {
  set_has_order_no();
  order_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fogs.proto.msg.RechargeRoomCard.order_no)
}
 void RechargeRoomCard::set_order_no(const char* value) {
  set_has_order_no();
  order_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fogs.proto.msg.RechargeRoomCard.order_no)
}
 void RechargeRoomCard::set_order_no(const char* value, size_t size) {
  set_has_order_no();
  order_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fogs.proto.msg.RechargeRoomCard.order_no)
}
 ::std::string* RechargeRoomCard::mutable_order_no() {
  set_has_order_no();
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.RechargeRoomCard.order_no)
  return order_no_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* RechargeRoomCard::release_order_no() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.RechargeRoomCard.order_no)
  clear_has_order_no();
  return order_no_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RechargeRoomCard::set_allocated_order_no(::std::string* order_no) {
  if (order_no != NULL) {
    set_has_order_no();
  } else {
    clear_has_order_no();
  }
  order_no_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), order_no);
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.RechargeRoomCard.order_no)
}

// optional uint32 user_id = 2;
bool RechargeRoomCard::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RechargeRoomCard::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
void RechargeRoomCard::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void RechargeRoomCard::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
 ::google::protobuf::uint32 RechargeRoomCard::user_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.RechargeRoomCard.user_id)
  return user_id_;
}
 void RechargeRoomCard::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.RechargeRoomCard.user_id)
}

// optional uint32 room_card = 3;
bool RechargeRoomCard::has_room_card() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void RechargeRoomCard::set_has_room_card() {
  _has_bits_[0] |= 0x00000004u;
}
void RechargeRoomCard::clear_has_room_card() {
  _has_bits_[0] &= ~0x00000004u;
}
void RechargeRoomCard::clear_room_card() {
  room_card_ = 0u;
  clear_has_room_card();
}
 ::google::protobuf::uint32 RechargeRoomCard::room_card() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.RechargeRoomCard.room_card)
  return room_card_;
}
 void RechargeRoomCard::set_room_card(::google::protobuf::uint32 value) {
  set_has_room_card();
  room_card_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.RechargeRoomCard.room_card)
}

// optional uint32 is_add = 4;
bool RechargeRoomCard::has_is_add() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void RechargeRoomCard::set_has_is_add() {
  _has_bits_[0] |= 0x00000008u;
}
void RechargeRoomCard::clear_has_is_add() {
  _has_bits_[0] &= ~0x00000008u;
}
void RechargeRoomCard::clear_is_add() {
  is_add_ = 0u;
  clear_has_is_add();
}
 ::google::protobuf::uint32 RechargeRoomCard::is_add() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.RechargeRoomCard.is_add)
  return is_add_;
}
 void RechargeRoomCard::set_is_add(::google::protobuf::uint32 value) {
  set_has_is_add();
  is_add_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.RechargeRoomCard.is_add)
}

// optional uint64 time = 5;
bool RechargeRoomCard::has_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void RechargeRoomCard::set_has_time() {
  _has_bits_[0] |= 0x00000010u;
}
void RechargeRoomCard::clear_has_time() {
  _has_bits_[0] &= ~0x00000010u;
}
void RechargeRoomCard::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
  clear_has_time();
}
 ::google::protobuf::uint64 RechargeRoomCard::time() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.RechargeRoomCard.time)
  return time_;
}
 void RechargeRoomCard::set_time(::google::protobuf::uint64 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.RechargeRoomCard.time)
}

// optional uint32 from_uid = 6;
bool RechargeRoomCard::has_from_uid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void RechargeRoomCard::set_has_from_uid() {
  _has_bits_[0] |= 0x00000020u;
}
void RechargeRoomCard::clear_has_from_uid() {
  _has_bits_[0] &= ~0x00000020u;
}
void RechargeRoomCard::clear_from_uid() {
  from_uid_ = 0u;
  clear_has_from_uid();
}
 ::google::protobuf::uint32 RechargeRoomCard::from_uid() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.RechargeRoomCard.from_uid)
  return from_uid_;
}
 void RechargeRoomCard::set_from_uid(::google::protobuf::uint32 value) {
  set_has_from_uid();
  from_uid_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.RechargeRoomCard.from_uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SaveNoticeRequest::kRecordsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SaveNoticeRequest::SaveNoticeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.SaveNoticeRequest)
}

void SaveNoticeRequest::InitAsDefaultInstance() {
  records_ = const_cast< ::msg_event::NoticeS*>(&::msg_event::NoticeS::default_instance());
}

SaveNoticeRequest::SaveNoticeRequest(const SaveNoticeRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.SaveNoticeRequest)
}

void SaveNoticeRequest::SharedCtor() {
  _cached_size_ = 0;
  records_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SaveNoticeRequest::~SaveNoticeRequest() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.SaveNoticeRequest)
  SharedDtor();
}

void SaveNoticeRequest::SharedDtor() {
  if (this != default_instance_) {
    delete records_;
  }
}

void SaveNoticeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SaveNoticeRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SaveNoticeRequest_descriptor_;
}

const SaveNoticeRequest& SaveNoticeRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fdata_2eproto();
  return *default_instance_;
}

SaveNoticeRequest* SaveNoticeRequest::default_instance_ = NULL;

SaveNoticeRequest* SaveNoticeRequest::New(::google::protobuf::Arena* arena) const {
  SaveNoticeRequest* n = new SaveNoticeRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SaveNoticeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.SaveNoticeRequest)
  if (has_records()) {
    if (records_ != NULL) records_->::msg_event::NoticeS::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SaveNoticeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.SaveNoticeRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .msg_event.NoticeS records = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_records()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.SaveNoticeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.SaveNoticeRequest)
  return false;
#undef DO_
}

void SaveNoticeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.SaveNoticeRequest)
  // required .msg_event.NoticeS records = 1;
  if (has_records()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->records_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.SaveNoticeRequest)
}

::google::protobuf::uint8* SaveNoticeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.SaveNoticeRequest)
  // required .msg_event.NoticeS records = 1;
  if (has_records()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->records_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.SaveNoticeRequest)
  return target;
}

int SaveNoticeRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.SaveNoticeRequest)
  int total_size = 0;

  // required .msg_event.NoticeS records = 1;
  if (has_records()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->records_);
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SaveNoticeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.SaveNoticeRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SaveNoticeRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SaveNoticeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.SaveNoticeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.SaveNoticeRequest)
    MergeFrom(*source);
  }
}

void SaveNoticeRequest::MergeFrom(const SaveNoticeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.SaveNoticeRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_records()) {
      mutable_records()->::msg_event::NoticeS::MergeFrom(from.records());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SaveNoticeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.SaveNoticeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SaveNoticeRequest::CopyFrom(const SaveNoticeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.SaveNoticeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SaveNoticeRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_records()) {
    if (!this->records_->IsInitialized()) return false;
  }
  return true;
}

void SaveNoticeRequest::Swap(SaveNoticeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SaveNoticeRequest::InternalSwap(SaveNoticeRequest* other) {
  std::swap(records_, other->records_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SaveNoticeRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SaveNoticeRequest_descriptor_;
  metadata.reflection = SaveNoticeRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SaveNoticeRequest

// required .msg_event.NoticeS records = 1;
bool SaveNoticeRequest::has_records() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SaveNoticeRequest::set_has_records() {
  _has_bits_[0] |= 0x00000001u;
}
void SaveNoticeRequest::clear_has_records() {
  _has_bits_[0] &= ~0x00000001u;
}
void SaveNoticeRequest::clear_records() {
  if (records_ != NULL) records_->::msg_event::NoticeS::Clear();
  clear_has_records();
}
const ::msg_event::NoticeS& SaveNoticeRequest::records() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.SaveNoticeRequest.records)
  return records_ != NULL ? *records_ : *default_instance_->records_;
}
::msg_event::NoticeS* SaveNoticeRequest::mutable_records() {
  set_has_records();
  if (records_ == NULL) {
    records_ = new ::msg_event::NoticeS;
  }
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.SaveNoticeRequest.records)
  return records_;
}
::msg_event::NoticeS* SaveNoticeRequest::release_records() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.SaveNoticeRequest.records)
  clear_has_records();
  ::msg_event::NoticeS* temp = records_;
  records_ = NULL;
  return temp;
}
void SaveNoticeRequest::set_allocated_records(::msg_event::NoticeS* records) {
  delete records_;
  records_ = records;
  if (records) {
    set_has_records();
  } else {
    clear_has_records();
  }
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.SaveNoticeRequest.records)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryOfflineUserProto::kUserListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryOfflineUserProto::QueryOfflineUserProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.QueryOfflineUserProto)
}

void QueryOfflineUserProto::InitAsDefaultInstance() {
}

QueryOfflineUserProto::QueryOfflineUserProto(const QueryOfflineUserProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.QueryOfflineUserProto)
}

void QueryOfflineUserProto::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QueryOfflineUserProto::~QueryOfflineUserProto() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.QueryOfflineUserProto)
  SharedDtor();
}

void QueryOfflineUserProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void QueryOfflineUserProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryOfflineUserProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QueryOfflineUserProto_descriptor_;
}

const QueryOfflineUserProto& QueryOfflineUserProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fdata_2eproto();
  return *default_instance_;
}

QueryOfflineUserProto* QueryOfflineUserProto::default_instance_ = NULL;

QueryOfflineUserProto* QueryOfflineUserProto::New(::google::protobuf::Arena* arena) const {
  QueryOfflineUserProto* n = new QueryOfflineUserProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryOfflineUserProto::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.QueryOfflineUserProto)
  user_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QueryOfflineUserProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.QueryOfflineUserProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .msg_maj.RoleOff user_list = 2;
      case 2: {
        if (tag == 18) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_user_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_user_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_user_list;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.QueryOfflineUserProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.QueryOfflineUserProto)
  return false;
#undef DO_
}

void QueryOfflineUserProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.QueryOfflineUserProto)
  // repeated .msg_maj.RoleOff user_list = 2;
  for (unsigned int i = 0, n = this->user_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->user_list(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.QueryOfflineUserProto)
}

::google::protobuf::uint8* QueryOfflineUserProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.QueryOfflineUserProto)
  // repeated .msg_maj.RoleOff user_list = 2;
  for (unsigned int i = 0, n = this->user_list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->user_list(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.QueryOfflineUserProto)
  return target;
}

int QueryOfflineUserProto::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.QueryOfflineUserProto)
  int total_size = 0;

  // repeated .msg_maj.RoleOff user_list = 2;
  total_size += 1 * this->user_list_size();
  for (int i = 0; i < this->user_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->user_list(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryOfflineUserProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.QueryOfflineUserProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const QueryOfflineUserProto* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryOfflineUserProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.QueryOfflineUserProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.QueryOfflineUserProto)
    MergeFrom(*source);
  }
}

void QueryOfflineUserProto::MergeFrom(const QueryOfflineUserProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.QueryOfflineUserProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  user_list_.MergeFrom(from.user_list_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void QueryOfflineUserProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.QueryOfflineUserProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryOfflineUserProto::CopyFrom(const QueryOfflineUserProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.QueryOfflineUserProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryOfflineUserProto::IsInitialized() const {

  return true;
}

void QueryOfflineUserProto::Swap(QueryOfflineUserProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryOfflineUserProto::InternalSwap(QueryOfflineUserProto* other) {
  user_list_.UnsafeArenaSwap(&other->user_list_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryOfflineUserProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QueryOfflineUserProto_descriptor_;
  metadata.reflection = QueryOfflineUserProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryOfflineUserProto

// repeated .msg_maj.RoleOff user_list = 2;
int QueryOfflineUserProto::user_list_size() const {
  return user_list_.size();
}
void QueryOfflineUserProto::clear_user_list() {
  user_list_.Clear();
}
const ::msg_maj::RoleOff& QueryOfflineUserProto::user_list(int index) const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.QueryOfflineUserProto.user_list)
  return user_list_.Get(index);
}
::msg_maj::RoleOff* QueryOfflineUserProto::mutable_user_list(int index) {
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.QueryOfflineUserProto.user_list)
  return user_list_.Mutable(index);
}
::msg_maj::RoleOff* QueryOfflineUserProto::add_user_list() {
  // @@protoc_insertion_point(field_add:fogs.proto.msg.QueryOfflineUserProto.user_list)
  return user_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::msg_maj::RoleOff >*
QueryOfflineUserProto::mutable_user_list() {
  // @@protoc_insertion_point(field_mutable_list:fogs.proto.msg.QueryOfflineUserProto.user_list)
  return &user_list_;
}
const ::google::protobuf::RepeatedPtrField< ::msg_maj::RoleOff >&
QueryOfflineUserProto::user_list() const {
  // @@protoc_insertion_point(field_list:fogs.proto.msg.QueryOfflineUserProto.user_list)
  return user_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryWatchUserProto::QueryWatchUserProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.QueryWatchUserProto)
}

void QueryWatchUserProto::InitAsDefaultInstance() {
}

QueryWatchUserProto::QueryWatchUserProto(const QueryWatchUserProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.QueryWatchUserProto)
}

void QueryWatchUserProto::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QueryWatchUserProto::~QueryWatchUserProto() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.QueryWatchUserProto)
  SharedDtor();
}

void QueryWatchUserProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void QueryWatchUserProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryWatchUserProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QueryWatchUserProto_descriptor_;
}

const QueryWatchUserProto& QueryWatchUserProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fdata_2eproto();
  return *default_instance_;
}

QueryWatchUserProto* QueryWatchUserProto::default_instance_ = NULL;

QueryWatchUserProto* QueryWatchUserProto::New(::google::protobuf::Arena* arena) const {
  QueryWatchUserProto* n = new QueryWatchUserProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryWatchUserProto::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.QueryWatchUserProto)
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QueryWatchUserProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.QueryWatchUserProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.QueryWatchUserProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.QueryWatchUserProto)
  return false;
#undef DO_
}

void QueryWatchUserProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.QueryWatchUserProto)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.QueryWatchUserProto)
}

::google::protobuf::uint8* QueryWatchUserProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.QueryWatchUserProto)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.QueryWatchUserProto)
  return target;
}

int QueryWatchUserProto::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.QueryWatchUserProto)
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryWatchUserProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.QueryWatchUserProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const QueryWatchUserProto* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryWatchUserProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.QueryWatchUserProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.QueryWatchUserProto)
    MergeFrom(*source);
  }
}

void QueryWatchUserProto::MergeFrom(const QueryWatchUserProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.QueryWatchUserProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void QueryWatchUserProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.QueryWatchUserProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryWatchUserProto::CopyFrom(const QueryWatchUserProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.QueryWatchUserProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryWatchUserProto::IsInitialized() const {

  return true;
}

void QueryWatchUserProto::Swap(QueryWatchUserProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryWatchUserProto::InternalSwap(QueryWatchUserProto* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryWatchUserProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QueryWatchUserProto_descriptor_;
  metadata.reflection = QueryWatchUserProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryWatchUserProto

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShareData::kUserIdFieldNumber;
const int ShareData::kNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShareData::ShareData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.ShareData)
}

void ShareData::InitAsDefaultInstance() {
}

ShareData::ShareData(const ShareData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.ShareData)
}

void ShareData::SharedCtor() {
  _cached_size_ = 0;
  user_id_ = 0u;
  num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ShareData::~ShareData() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.ShareData)
  SharedDtor();
}

void ShareData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ShareData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShareData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ShareData_descriptor_;
}

const ShareData& ShareData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fdata_2eproto();
  return *default_instance_;
}

ShareData* ShareData::default_instance_ = NULL;

ShareData* ShareData::New(::google::protobuf::Arena* arena) const {
  ShareData* n = new ShareData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShareData::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.ShareData)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ShareData, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ShareData*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(user_id_, num_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ShareData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.ShareData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 user_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
          set_has_user_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_num;
        break;
      }

      // optional uint32 num = 2;
      case 2: {
        if (tag == 16) {
         parse_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.ShareData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.ShareData)
  return false;
#undef DO_
}

void ShareData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.ShareData)
  // optional uint32 user_id = 1;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // optional uint32 num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->num(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.ShareData)
}

::google::protobuf::uint8* ShareData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.ShareData)
  // optional uint32 user_id = 1;
  if (has_user_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // optional uint32 num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->num(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.ShareData)
  return target;
}

int ShareData::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.ShareData)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 user_id = 1;
    if (has_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->user_id());
    }

    // optional uint32 num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShareData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.ShareData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ShareData* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ShareData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.ShareData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.ShareData)
    MergeFrom(*source);
  }
}

void ShareData::MergeFrom(const ShareData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.ShareData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_user_id()) {
      set_user_id(from.user_id());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ShareData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.ShareData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShareData::CopyFrom(const ShareData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.ShareData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShareData::IsInitialized() const {

  return true;
}

void ShareData::Swap(ShareData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShareData::InternalSwap(ShareData* other) {
  std::swap(user_id_, other->user_id_);
  std::swap(num_, other->num_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ShareData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ShareData_descriptor_;
  metadata.reflection = ShareData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ShareData

// optional uint32 user_id = 1;
bool ShareData::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ShareData::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
void ShareData::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void ShareData::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
 ::google::protobuf::uint32 ShareData::user_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.ShareData.user_id)
  return user_id_;
}
 void ShareData::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.ShareData.user_id)
}

// optional uint32 num = 2;
bool ShareData::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ShareData::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
void ShareData::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
void ShareData::clear_num() {
  num_ = 0u;
  clear_has_num();
}
 ::google::protobuf::uint32 ShareData::num() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.ShareData.num)
  return num_;
}
 void ShareData::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.ShareData.num)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetShareDataRequest::GetShareDataRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.GetShareDataRequest)
}

void GetShareDataRequest::InitAsDefaultInstance() {
}

GetShareDataRequest::GetShareDataRequest(const GetShareDataRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.GetShareDataRequest)
}

void GetShareDataRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetShareDataRequest::~GetShareDataRequest() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.GetShareDataRequest)
  SharedDtor();
}

void GetShareDataRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetShareDataRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetShareDataRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetShareDataRequest_descriptor_;
}

const GetShareDataRequest& GetShareDataRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fdata_2eproto();
  return *default_instance_;
}

GetShareDataRequest* GetShareDataRequest::default_instance_ = NULL;

GetShareDataRequest* GetShareDataRequest::New(::google::protobuf::Arena* arena) const {
  GetShareDataRequest* n = new GetShareDataRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetShareDataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.GetShareDataRequest)
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GetShareDataRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.GetShareDataRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.GetShareDataRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.GetShareDataRequest)
  return false;
#undef DO_
}

void GetShareDataRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.GetShareDataRequest)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.GetShareDataRequest)
}

::google::protobuf::uint8* GetShareDataRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.GetShareDataRequest)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.GetShareDataRequest)
  return target;
}

int GetShareDataRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.GetShareDataRequest)
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetShareDataRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.GetShareDataRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetShareDataRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetShareDataRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.GetShareDataRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.GetShareDataRequest)
    MergeFrom(*source);
  }
}

void GetShareDataRequest::MergeFrom(const GetShareDataRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.GetShareDataRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void GetShareDataRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.GetShareDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetShareDataRequest::CopyFrom(const GetShareDataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.GetShareDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetShareDataRequest::IsInitialized() const {

  return true;
}

void GetShareDataRequest::Swap(GetShareDataRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetShareDataRequest::InternalSwap(GetShareDataRequest* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetShareDataRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetShareDataRequest_descriptor_;
  metadata.reflection = GetShareDataRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetShareDataRequest

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetShareDataResponse::kShareListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetShareDataResponse::GetShareDataResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.GetShareDataResponse)
}

void GetShareDataResponse::InitAsDefaultInstance() {
}

GetShareDataResponse::GetShareDataResponse(const GetShareDataResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.GetShareDataResponse)
}

void GetShareDataResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetShareDataResponse::~GetShareDataResponse() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.GetShareDataResponse)
  SharedDtor();
}

void GetShareDataResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetShareDataResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetShareDataResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetShareDataResponse_descriptor_;
}

const GetShareDataResponse& GetShareDataResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fdata_2eproto();
  return *default_instance_;
}

GetShareDataResponse* GetShareDataResponse::default_instance_ = NULL;

GetShareDataResponse* GetShareDataResponse::New(::google::protobuf::Arena* arena) const {
  GetShareDataResponse* n = new GetShareDataResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetShareDataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.GetShareDataResponse)
  share_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GetShareDataResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.GetShareDataResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .fogs.proto.msg.ShareData share_list = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_share_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_share_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_share_list;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.GetShareDataResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.GetShareDataResponse)
  return false;
#undef DO_
}

void GetShareDataResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.GetShareDataResponse)
  // repeated .fogs.proto.msg.ShareData share_list = 1;
  for (unsigned int i = 0, n = this->share_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->share_list(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.GetShareDataResponse)
}

::google::protobuf::uint8* GetShareDataResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.GetShareDataResponse)
  // repeated .fogs.proto.msg.ShareData share_list = 1;
  for (unsigned int i = 0, n = this->share_list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->share_list(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.GetShareDataResponse)
  return target;
}

int GetShareDataResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.GetShareDataResponse)
  int total_size = 0;

  // repeated .fogs.proto.msg.ShareData share_list = 1;
  total_size += 1 * this->share_list_size();
  for (int i = 0; i < this->share_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->share_list(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetShareDataResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.GetShareDataResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetShareDataResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetShareDataResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.GetShareDataResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.GetShareDataResponse)
    MergeFrom(*source);
  }
}

void GetShareDataResponse::MergeFrom(const GetShareDataResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.GetShareDataResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  share_list_.MergeFrom(from.share_list_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void GetShareDataResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.GetShareDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetShareDataResponse::CopyFrom(const GetShareDataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.GetShareDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetShareDataResponse::IsInitialized() const {

  return true;
}

void GetShareDataResponse::Swap(GetShareDataResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetShareDataResponse::InternalSwap(GetShareDataResponse* other) {
  share_list_.UnsafeArenaSwap(&other->share_list_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetShareDataResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetShareDataResponse_descriptor_;
  metadata.reflection = GetShareDataResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetShareDataResponse

// repeated .fogs.proto.msg.ShareData share_list = 1;
int GetShareDataResponse::share_list_size() const {
  return share_list_.size();
}
void GetShareDataResponse::clear_share_list() {
  share_list_.Clear();
}
const ::fogs::proto::msg::ShareData& GetShareDataResponse::share_list(int index) const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.GetShareDataResponse.share_list)
  return share_list_.Get(index);
}
::fogs::proto::msg::ShareData* GetShareDataResponse::mutable_share_list(int index) {
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.GetShareDataResponse.share_list)
  return share_list_.Mutable(index);
}
::fogs::proto::msg::ShareData* GetShareDataResponse::add_share_list() {
  // @@protoc_insertion_point(field_add:fogs.proto.msg.GetShareDataResponse.share_list)
  return share_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::fogs::proto::msg::ShareData >*
GetShareDataResponse::mutable_share_list() {
  // @@protoc_insertion_point(field_mutable_list:fogs.proto.msg.GetShareDataResponse.share_list)
  return &share_list_;
}
const ::google::protobuf::RepeatedPtrField< ::fogs::proto::msg::ShareData >&
GetShareDataResponse::share_list() const {
  // @@protoc_insertion_point(field_list:fogs.proto.msg.GetShareDataResponse.share_list)
  return share_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SaveShareData::kShareListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SaveShareData::SaveShareData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.SaveShareData)
}

void SaveShareData::InitAsDefaultInstance() {
}

SaveShareData::SaveShareData(const SaveShareData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.SaveShareData)
}

void SaveShareData::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SaveShareData::~SaveShareData() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.SaveShareData)
  SharedDtor();
}

void SaveShareData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SaveShareData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SaveShareData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SaveShareData_descriptor_;
}

const SaveShareData& SaveShareData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5fdata_2eproto();
  return *default_instance_;
}

SaveShareData* SaveShareData::default_instance_ = NULL;

SaveShareData* SaveShareData::New(::google::protobuf::Arena* arena) const {
  SaveShareData* n = new SaveShareData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SaveShareData::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.SaveShareData)
  share_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SaveShareData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.SaveShareData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .fogs.proto.msg.ShareData share_list = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_share_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_share_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_share_list;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.SaveShareData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.SaveShareData)
  return false;
#undef DO_
}

void SaveShareData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.SaveShareData)
  // repeated .fogs.proto.msg.ShareData share_list = 1;
  for (unsigned int i = 0, n = this->share_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->share_list(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.SaveShareData)
}

::google::protobuf::uint8* SaveShareData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.SaveShareData)
  // repeated .fogs.proto.msg.ShareData share_list = 1;
  for (unsigned int i = 0, n = this->share_list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->share_list(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.SaveShareData)
  return target;
}

int SaveShareData::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.SaveShareData)
  int total_size = 0;

  // repeated .fogs.proto.msg.ShareData share_list = 1;
  total_size += 1 * this->share_list_size();
  for (int i = 0; i < this->share_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->share_list(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SaveShareData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.SaveShareData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SaveShareData* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SaveShareData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.SaveShareData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.SaveShareData)
    MergeFrom(*source);
  }
}

void SaveShareData::MergeFrom(const SaveShareData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.SaveShareData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  share_list_.MergeFrom(from.share_list_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SaveShareData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.SaveShareData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SaveShareData::CopyFrom(const SaveShareData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.SaveShareData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SaveShareData::IsInitialized() const {

  return true;
}

void SaveShareData::Swap(SaveShareData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SaveShareData::InternalSwap(SaveShareData* other) {
  share_list_.UnsafeArenaSwap(&other->share_list_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SaveShareData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SaveShareData_descriptor_;
  metadata.reflection = SaveShareData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SaveShareData

// repeated .fogs.proto.msg.ShareData share_list = 1;
int SaveShareData::share_list_size() const {
  return share_list_.size();
}
void SaveShareData::clear_share_list() {
  share_list_.Clear();
}
const ::fogs::proto::msg::ShareData& SaveShareData::share_list(int index) const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.SaveShareData.share_list)
  return share_list_.Get(index);
}
::fogs::proto::msg::ShareData* SaveShareData::mutable_share_list(int index) {
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.SaveShareData.share_list)
  return share_list_.Mutable(index);
}
::fogs::proto::msg::ShareData* SaveShareData::add_share_list() {
  // @@protoc_insertion_point(field_add:fogs.proto.msg.SaveShareData.share_list)
  return share_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::fogs::proto::msg::ShareData >*
SaveShareData::mutable_share_list() {
  // @@protoc_insertion_point(field_mutable_list:fogs.proto.msg.SaveShareData.share_list)
  return &share_list_;
}
const ::google::protobuf::RepeatedPtrField< ::fogs::proto::msg::ShareData >&
SaveShareData::share_list() const {
  // @@protoc_insertion_point(field_list:fogs.proto.msg.SaveShareData.share_list)
  return share_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace msg
}  // namespace proto
}  // namespace fogs

// @@protoc_insertion_point(global_scope)
