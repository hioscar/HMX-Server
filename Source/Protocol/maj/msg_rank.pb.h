// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_rank.proto

#ifndef PROTOBUF_msg_5frank_2eproto__INCLUDED
#define PROTOBUF_msg_5frank_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace msg_maj {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_msg_5frank_2eproto();
void protobuf_AssignDesc_msg_5frank_2eproto();
void protobuf_ShutdownFile_msg_5frank_2eproto();

class RankConsList;
class RankInfo;
class RankReq;
class RankResp;
class RankScoreList;
class ScoreInfo;
class WinsInfo;

enum c_cmd_rank {
  rank_req = 0,
  rank_resp = 1
};
bool c_cmd_rank_IsValid(int value);
const c_cmd_rank c_cmd_rank_MIN = rank_req;
const c_cmd_rank c_cmd_rank_MAX = rank_resp;
const int c_cmd_rank_ARRAYSIZE = c_cmd_rank_MAX + 1;

const ::google::protobuf::EnumDescriptor* c_cmd_rank_descriptor();
inline const ::std::string& c_cmd_rank_Name(c_cmd_rank value) {
  return ::google::protobuf::internal::NameOfEnum(
    c_cmd_rank_descriptor(), value);
}
inline bool c_cmd_rank_Parse(
    const ::std::string& name, c_cmd_rank* value) {
  return ::google::protobuf::internal::ParseNamedEnum<c_cmd_rank>(
    c_cmd_rank_descriptor(), name, value);
}
enum rank_type {
  rank_t_wins = 1,
  rank_t_score = 2
};
bool rank_type_IsValid(int value);
const rank_type rank_type_MIN = rank_t_wins;
const rank_type rank_type_MAX = rank_t_score;
const int rank_type_ARRAYSIZE = rank_type_MAX + 1;

const ::google::protobuf::EnumDescriptor* rank_type_descriptor();
inline const ::std::string& rank_type_Name(rank_type value) {
  return ::google::protobuf::internal::NameOfEnum(
    rank_type_descriptor(), value);
}
inline bool rank_type_Parse(
    const ::std::string& name, rank_type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<rank_type>(
    rank_type_descriptor(), name, value);
}
// ===================================================================

class RankReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.RankReq) */ {
 public:
  RankReq();
  virtual ~RankReq();

  RankReq(const RankReq& from);

  inline RankReq& operator=(const RankReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RankReq& default_instance();

  void Swap(RankReq* other);

  // implements Message ----------------------------------------------

  inline RankReq* New() const { return New(NULL); }

  RankReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RankReq& from);
  void MergeFrom(const RankReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RankReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .msg_maj.rank_type type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::msg_maj::rank_type type() const;
  void set_type(::msg_maj::rank_type value);

  // optional int32 last = 2;
  bool has_last() const;
  void clear_last();
  static const int kLastFieldNumber = 2;
  ::google::protobuf::int32 last() const;
  void set_last(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg_maj.RankReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_last();
  inline void clear_has_last();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int type_;
  ::google::protobuf::int32 last_;
  friend void  protobuf_AddDesc_msg_5frank_2eproto();
  friend void protobuf_AssignDesc_msg_5frank_2eproto();
  friend void protobuf_ShutdownFile_msg_5frank_2eproto();

  void InitAsDefaultInstance();
  static RankReq* default_instance_;
};
// -------------------------------------------------------------------

class RankInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.RankInfo) */ {
 public:
  RankInfo();
  virtual ~RankInfo();

  RankInfo(const RankInfo& from);

  inline RankInfo& operator=(const RankInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RankInfo& default_instance();

  void Swap(RankInfo* other);

  // implements Message ----------------------------------------------

  inline RankInfo* New() const { return New(NULL); }

  RankInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RankInfo& from);
  void MergeFrom(const RankInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RankInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint64 uid() const;
  void set_uid(::google::protobuf::uint64 value);

  // optional string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint32 value = 3;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 3;
  ::google::protobuf::uint32 value() const;
  void set_value(::google::protobuf::uint32 value);

  // optional uint32 sort = 4;
  bool has_sort() const;
  void clear_sort();
  static const int kSortFieldNumber = 4;
  ::google::protobuf::uint32 sort() const;
  void set_sort(::google::protobuf::uint32 value);

  // optional string actor_addr = 5;
  bool has_actor_addr() const;
  void clear_actor_addr();
  static const int kActorAddrFieldNumber = 5;
  const ::std::string& actor_addr() const;
  void set_actor_addr(const ::std::string& value);
  void set_actor_addr(const char* value);
  void set_actor_addr(const char* value, size_t size);
  ::std::string* mutable_actor_addr();
  ::std::string* release_actor_addr();
  void set_allocated_actor_addr(::std::string* actor_addr);

  // @@protoc_insertion_point(class_scope:msg_maj.RankInfo)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_sort();
  inline void clear_has_sort();
  inline void set_has_actor_addr();
  inline void clear_has_actor_addr();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 uid_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 value_;
  ::google::protobuf::uint32 sort_;
  ::google::protobuf::internal::ArenaStringPtr actor_addr_;
  friend void  protobuf_AddDesc_msg_5frank_2eproto();
  friend void protobuf_AssignDesc_msg_5frank_2eproto();
  friend void protobuf_ShutdownFile_msg_5frank_2eproto();

  void InitAsDefaultInstance();
  static RankInfo* default_instance_;
};
// -------------------------------------------------------------------

class RankResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.RankResp) */ {
 public:
  RankResp();
  virtual ~RankResp();

  RankResp(const RankResp& from);

  inline RankResp& operator=(const RankResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RankResp& default_instance();

  void Swap(RankResp* other);

  // implements Message ----------------------------------------------

  inline RankResp* New() const { return New(NULL); }

  RankResp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RankResp& from);
  void MergeFrom(const RankResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RankResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .msg_maj.rank_type sorttype = 1;
  bool has_sorttype() const;
  void clear_sorttype();
  static const int kSorttypeFieldNumber = 1;
  ::msg_maj::rank_type sorttype() const;
  void set_sorttype(::msg_maj::rank_type value);

  // optional int32 last = 2;
  bool has_last() const;
  void clear_last();
  static const int kLastFieldNumber = 2;
  ::google::protobuf::int32 last() const;
  void set_last(::google::protobuf::int32 value);

  // required int32 mysort = 3;
  bool has_mysort() const;
  void clear_mysort();
  static const int kMysortFieldNumber = 3;
  ::google::protobuf::int32 mysort() const;
  void set_mysort(::google::protobuf::int32 value);

  // required int32 myvalue = 4;
  bool has_myvalue() const;
  void clear_myvalue();
  static const int kMyvalueFieldNumber = 4;
  ::google::protobuf::int32 myvalue() const;
  void set_myvalue(::google::protobuf::int32 value);

  // repeated .msg_maj.RankInfo rank = 5;
  int rank_size() const;
  void clear_rank();
  static const int kRankFieldNumber = 5;
  const ::msg_maj::RankInfo& rank(int index) const;
  ::msg_maj::RankInfo* mutable_rank(int index);
  ::msg_maj::RankInfo* add_rank();
  ::google::protobuf::RepeatedPtrField< ::msg_maj::RankInfo >*
      mutable_rank();
  const ::google::protobuf::RepeatedPtrField< ::msg_maj::RankInfo >&
      rank() const;

  // @@protoc_insertion_point(class_scope:msg_maj.RankResp)
 private:
  inline void set_has_sorttype();
  inline void clear_has_sorttype();
  inline void set_has_last();
  inline void clear_has_last();
  inline void set_has_mysort();
  inline void clear_has_mysort();
  inline void set_has_myvalue();
  inline void clear_has_myvalue();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int sorttype_;
  ::google::protobuf::int32 last_;
  ::google::protobuf::int32 mysort_;
  ::google::protobuf::int32 myvalue_;
  ::google::protobuf::RepeatedPtrField< ::msg_maj::RankInfo > rank_;
  friend void  protobuf_AddDesc_msg_5frank_2eproto();
  friend void protobuf_AssignDesc_msg_5frank_2eproto();
  friend void protobuf_ShutdownFile_msg_5frank_2eproto();

  void InitAsDefaultInstance();
  static RankResp* default_instance_;
};
// -------------------------------------------------------------------

class WinsInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.WinsInfo) */ {
 public:
  WinsInfo();
  virtual ~WinsInfo();

  WinsInfo(const WinsInfo& from);

  inline WinsInfo& operator=(const WinsInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WinsInfo& default_instance();

  void Swap(WinsInfo* other);

  // implements Message ----------------------------------------------

  inline WinsInfo* New() const { return New(NULL); }

  WinsInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WinsInfo& from);
  void MergeFrom(const WinsInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WinsInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint64 uid() const;
  void set_uid(::google::protobuf::uint64 value);

  // optional string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint32 value = 3;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 3;
  ::google::protobuf::uint32 value() const;
  void set_value(::google::protobuf::uint32 value);

  // optional uint32 sort = 4;
  bool has_sort() const;
  void clear_sort();
  static const int kSortFieldNumber = 4;
  ::google::protobuf::uint32 sort() const;
  void set_sort(::google::protobuf::uint32 value);

  // optional uint64 time = 5;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 5;
  ::google::protobuf::uint64 time() const;
  void set_time(::google::protobuf::uint64 value);

  // optional uint32 type = 6;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 6;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // optional string actor_addr = 7;
  bool has_actor_addr() const;
  void clear_actor_addr();
  static const int kActorAddrFieldNumber = 7;
  const ::std::string& actor_addr() const;
  void set_actor_addr(const ::std::string& value);
  void set_actor_addr(const char* value);
  void set_actor_addr(const char* value, size_t size);
  ::std::string* mutable_actor_addr();
  ::std::string* release_actor_addr();
  void set_allocated_actor_addr(::std::string* actor_addr);

  // @@protoc_insertion_point(class_scope:msg_maj.WinsInfo)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_sort();
  inline void clear_has_sort();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_actor_addr();
  inline void clear_has_actor_addr();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 uid_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 value_;
  ::google::protobuf::uint32 sort_;
  ::google::protobuf::uint64 time_;
  ::google::protobuf::internal::ArenaStringPtr actor_addr_;
  ::google::protobuf::uint32 type_;
  friend void  protobuf_AddDesc_msg_5frank_2eproto();
  friend void protobuf_AssignDesc_msg_5frank_2eproto();
  friend void protobuf_ShutdownFile_msg_5frank_2eproto();

  void InitAsDefaultInstance();
  static WinsInfo* default_instance_;
};
// -------------------------------------------------------------------

class ScoreInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.ScoreInfo) */ {
 public:
  ScoreInfo();
  virtual ~ScoreInfo();

  ScoreInfo(const ScoreInfo& from);

  inline ScoreInfo& operator=(const ScoreInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ScoreInfo& default_instance();

  void Swap(ScoreInfo* other);

  // implements Message ----------------------------------------------

  inline ScoreInfo* New() const { return New(NULL); }

  ScoreInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ScoreInfo& from);
  void MergeFrom(const ScoreInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ScoreInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint64 uid() const;
  void set_uid(::google::protobuf::uint64 value);

  // optional string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint32 value = 3;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 3;
  ::google::protobuf::uint32 value() const;
  void set_value(::google::protobuf::uint32 value);

  // optional uint32 sort = 4;
  bool has_sort() const;
  void clear_sort();
  static const int kSortFieldNumber = 4;
  ::google::protobuf::uint32 sort() const;
  void set_sort(::google::protobuf::uint32 value);

  // optional uint64 time = 5;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 5;
  ::google::protobuf::uint64 time() const;
  void set_time(::google::protobuf::uint64 value);

  // optional uint32 type = 6;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 6;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // optional string actor_addr = 7;
  bool has_actor_addr() const;
  void clear_actor_addr();
  static const int kActorAddrFieldNumber = 7;
  const ::std::string& actor_addr() const;
  void set_actor_addr(const ::std::string& value);
  void set_actor_addr(const char* value);
  void set_actor_addr(const char* value, size_t size);
  ::std::string* mutable_actor_addr();
  ::std::string* release_actor_addr();
  void set_allocated_actor_addr(::std::string* actor_addr);

  // @@protoc_insertion_point(class_scope:msg_maj.ScoreInfo)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_sort();
  inline void clear_has_sort();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_actor_addr();
  inline void clear_has_actor_addr();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 uid_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 value_;
  ::google::protobuf::uint32 sort_;
  ::google::protobuf::uint64 time_;
  ::google::protobuf::internal::ArenaStringPtr actor_addr_;
  ::google::protobuf::uint32 type_;
  friend void  protobuf_AddDesc_msg_5frank_2eproto();
  friend void protobuf_AssignDesc_msg_5frank_2eproto();
  friend void protobuf_ShutdownFile_msg_5frank_2eproto();

  void InitAsDefaultInstance();
  static ScoreInfo* default_instance_;
};
// -------------------------------------------------------------------

class RankConsList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.RankConsList) */ {
 public:
  RankConsList();
  virtual ~RankConsList();

  RankConsList(const RankConsList& from);

  inline RankConsList& operator=(const RankConsList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RankConsList& default_instance();

  void Swap(RankConsList* other);

  // implements Message ----------------------------------------------

  inline RankConsList* New() const { return New(NULL); }

  RankConsList* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RankConsList& from);
  void MergeFrom(const RankConsList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RankConsList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .msg_maj.WinsInfo ranks = 1;
  int ranks_size() const;
  void clear_ranks();
  static const int kRanksFieldNumber = 1;
  const ::msg_maj::WinsInfo& ranks(int index) const;
  ::msg_maj::WinsInfo* mutable_ranks(int index);
  ::msg_maj::WinsInfo* add_ranks();
  ::google::protobuf::RepeatedPtrField< ::msg_maj::WinsInfo >*
      mutable_ranks();
  const ::google::protobuf::RepeatedPtrField< ::msg_maj::WinsInfo >&
      ranks() const;

  // @@protoc_insertion_point(class_scope:msg_maj.RankConsList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::msg_maj::WinsInfo > ranks_;
  friend void  protobuf_AddDesc_msg_5frank_2eproto();
  friend void protobuf_AssignDesc_msg_5frank_2eproto();
  friend void protobuf_ShutdownFile_msg_5frank_2eproto();

  void InitAsDefaultInstance();
  static RankConsList* default_instance_;
};
// -------------------------------------------------------------------

class RankScoreList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.RankScoreList) */ {
 public:
  RankScoreList();
  virtual ~RankScoreList();

  RankScoreList(const RankScoreList& from);

  inline RankScoreList& operator=(const RankScoreList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RankScoreList& default_instance();

  void Swap(RankScoreList* other);

  // implements Message ----------------------------------------------

  inline RankScoreList* New() const { return New(NULL); }

  RankScoreList* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RankScoreList& from);
  void MergeFrom(const RankScoreList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RankScoreList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .msg_maj.ScoreInfo ranks = 1;
  int ranks_size() const;
  void clear_ranks();
  static const int kRanksFieldNumber = 1;
  const ::msg_maj::ScoreInfo& ranks(int index) const;
  ::msg_maj::ScoreInfo* mutable_ranks(int index);
  ::msg_maj::ScoreInfo* add_ranks();
  ::google::protobuf::RepeatedPtrField< ::msg_maj::ScoreInfo >*
      mutable_ranks();
  const ::google::protobuf::RepeatedPtrField< ::msg_maj::ScoreInfo >&
      ranks() const;

  // @@protoc_insertion_point(class_scope:msg_maj.RankScoreList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::msg_maj::ScoreInfo > ranks_;
  friend void  protobuf_AddDesc_msg_5frank_2eproto();
  friend void protobuf_AssignDesc_msg_5frank_2eproto();
  friend void protobuf_ShutdownFile_msg_5frank_2eproto();

  void InitAsDefaultInstance();
  static RankScoreList* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// RankReq

// required .msg_maj.rank_type type = 1;
inline bool RankReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RankReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RankReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RankReq::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::msg_maj::rank_type RankReq::type() const {
  // @@protoc_insertion_point(field_get:msg_maj.RankReq.type)
  return static_cast< ::msg_maj::rank_type >(type_);
}
inline void RankReq::set_type(::msg_maj::rank_type value) {
  assert(::msg_maj::rank_type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RankReq.type)
}

// optional int32 last = 2;
inline bool RankReq::has_last() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RankReq::set_has_last() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RankReq::clear_has_last() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RankReq::clear_last() {
  last_ = 0;
  clear_has_last();
}
inline ::google::protobuf::int32 RankReq::last() const {
  // @@protoc_insertion_point(field_get:msg_maj.RankReq.last)
  return last_;
}
inline void RankReq::set_last(::google::protobuf::int32 value) {
  set_has_last();
  last_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RankReq.last)
}

// -------------------------------------------------------------------

// RankInfo

// optional uint64 uid = 1;
inline bool RankInfo::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RankInfo::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RankInfo::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RankInfo::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 RankInfo::uid() const {
  // @@protoc_insertion_point(field_get:msg_maj.RankInfo.uid)
  return uid_;
}
inline void RankInfo::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RankInfo.uid)
}

// optional string name = 2;
inline bool RankInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RankInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RankInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RankInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& RankInfo::name() const {
  // @@protoc_insertion_point(field_get:msg_maj.RankInfo.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RankInfo::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.RankInfo.name)
}
inline void RankInfo::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.RankInfo.name)
}
inline void RankInfo::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.RankInfo.name)
}
inline ::std::string* RankInfo::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:msg_maj.RankInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RankInfo::release_name() {
  // @@protoc_insertion_point(field_release:msg_maj.RankInfo.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RankInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.RankInfo.name)
}

// optional uint32 value = 3;
inline bool RankInfo::has_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RankInfo::set_has_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RankInfo::clear_has_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RankInfo::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 RankInfo::value() const {
  // @@protoc_insertion_point(field_get:msg_maj.RankInfo.value)
  return value_;
}
inline void RankInfo::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RankInfo.value)
}

// optional uint32 sort = 4;
inline bool RankInfo::has_sort() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RankInfo::set_has_sort() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RankInfo::clear_has_sort() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RankInfo::clear_sort() {
  sort_ = 0u;
  clear_has_sort();
}
inline ::google::protobuf::uint32 RankInfo::sort() const {
  // @@protoc_insertion_point(field_get:msg_maj.RankInfo.sort)
  return sort_;
}
inline void RankInfo::set_sort(::google::protobuf::uint32 value) {
  set_has_sort();
  sort_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RankInfo.sort)
}

// optional string actor_addr = 5;
inline bool RankInfo::has_actor_addr() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RankInfo::set_has_actor_addr() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RankInfo::clear_has_actor_addr() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RankInfo::clear_actor_addr() {
  actor_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_actor_addr();
}
inline const ::std::string& RankInfo::actor_addr() const {
  // @@protoc_insertion_point(field_get:msg_maj.RankInfo.actor_addr)
  return actor_addr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RankInfo::set_actor_addr(const ::std::string& value) {
  set_has_actor_addr();
  actor_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.RankInfo.actor_addr)
}
inline void RankInfo::set_actor_addr(const char* value) {
  set_has_actor_addr();
  actor_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.RankInfo.actor_addr)
}
inline void RankInfo::set_actor_addr(const char* value, size_t size) {
  set_has_actor_addr();
  actor_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.RankInfo.actor_addr)
}
inline ::std::string* RankInfo::mutable_actor_addr() {
  set_has_actor_addr();
  // @@protoc_insertion_point(field_mutable:msg_maj.RankInfo.actor_addr)
  return actor_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RankInfo::release_actor_addr() {
  // @@protoc_insertion_point(field_release:msg_maj.RankInfo.actor_addr)
  clear_has_actor_addr();
  return actor_addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RankInfo::set_allocated_actor_addr(::std::string* actor_addr) {
  if (actor_addr != NULL) {
    set_has_actor_addr();
  } else {
    clear_has_actor_addr();
  }
  actor_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), actor_addr);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.RankInfo.actor_addr)
}

// -------------------------------------------------------------------

// RankResp

// required .msg_maj.rank_type sorttype = 1;
inline bool RankResp::has_sorttype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RankResp::set_has_sorttype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RankResp::clear_has_sorttype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RankResp::clear_sorttype() {
  sorttype_ = 1;
  clear_has_sorttype();
}
inline ::msg_maj::rank_type RankResp::sorttype() const {
  // @@protoc_insertion_point(field_get:msg_maj.RankResp.sorttype)
  return static_cast< ::msg_maj::rank_type >(sorttype_);
}
inline void RankResp::set_sorttype(::msg_maj::rank_type value) {
  assert(::msg_maj::rank_type_IsValid(value));
  set_has_sorttype();
  sorttype_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RankResp.sorttype)
}

// optional int32 last = 2;
inline bool RankResp::has_last() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RankResp::set_has_last() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RankResp::clear_has_last() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RankResp::clear_last() {
  last_ = 0;
  clear_has_last();
}
inline ::google::protobuf::int32 RankResp::last() const {
  // @@protoc_insertion_point(field_get:msg_maj.RankResp.last)
  return last_;
}
inline void RankResp::set_last(::google::protobuf::int32 value) {
  set_has_last();
  last_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RankResp.last)
}

// required int32 mysort = 3;
inline bool RankResp::has_mysort() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RankResp::set_has_mysort() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RankResp::clear_has_mysort() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RankResp::clear_mysort() {
  mysort_ = 0;
  clear_has_mysort();
}
inline ::google::protobuf::int32 RankResp::mysort() const {
  // @@protoc_insertion_point(field_get:msg_maj.RankResp.mysort)
  return mysort_;
}
inline void RankResp::set_mysort(::google::protobuf::int32 value) {
  set_has_mysort();
  mysort_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RankResp.mysort)
}

// required int32 myvalue = 4;
inline bool RankResp::has_myvalue() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RankResp::set_has_myvalue() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RankResp::clear_has_myvalue() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RankResp::clear_myvalue() {
  myvalue_ = 0;
  clear_has_myvalue();
}
inline ::google::protobuf::int32 RankResp::myvalue() const {
  // @@protoc_insertion_point(field_get:msg_maj.RankResp.myvalue)
  return myvalue_;
}
inline void RankResp::set_myvalue(::google::protobuf::int32 value) {
  set_has_myvalue();
  myvalue_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RankResp.myvalue)
}

// repeated .msg_maj.RankInfo rank = 5;
inline int RankResp::rank_size() const {
  return rank_.size();
}
inline void RankResp::clear_rank() {
  rank_.Clear();
}
inline const ::msg_maj::RankInfo& RankResp::rank(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.RankResp.rank)
  return rank_.Get(index);
}
inline ::msg_maj::RankInfo* RankResp::mutable_rank(int index) {
  // @@protoc_insertion_point(field_mutable:msg_maj.RankResp.rank)
  return rank_.Mutable(index);
}
inline ::msg_maj::RankInfo* RankResp::add_rank() {
  // @@protoc_insertion_point(field_add:msg_maj.RankResp.rank)
  return rank_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::msg_maj::RankInfo >*
RankResp::mutable_rank() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.RankResp.rank)
  return &rank_;
}
inline const ::google::protobuf::RepeatedPtrField< ::msg_maj::RankInfo >&
RankResp::rank() const {
  // @@protoc_insertion_point(field_list:msg_maj.RankResp.rank)
  return rank_;
}

// -------------------------------------------------------------------

// WinsInfo

// optional uint64 uid = 1;
inline bool WinsInfo::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WinsInfo::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WinsInfo::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WinsInfo::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 WinsInfo::uid() const {
  // @@protoc_insertion_point(field_get:msg_maj.WinsInfo.uid)
  return uid_;
}
inline void WinsInfo::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.WinsInfo.uid)
}

// optional string name = 2;
inline bool WinsInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WinsInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WinsInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WinsInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& WinsInfo::name() const {
  // @@protoc_insertion_point(field_get:msg_maj.WinsInfo.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WinsInfo::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.WinsInfo.name)
}
inline void WinsInfo::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.WinsInfo.name)
}
inline void WinsInfo::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.WinsInfo.name)
}
inline ::std::string* WinsInfo::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:msg_maj.WinsInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WinsInfo::release_name() {
  // @@protoc_insertion_point(field_release:msg_maj.WinsInfo.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WinsInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.WinsInfo.name)
}

// optional uint32 value = 3;
inline bool WinsInfo::has_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WinsInfo::set_has_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WinsInfo::clear_has_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WinsInfo::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 WinsInfo::value() const {
  // @@protoc_insertion_point(field_get:msg_maj.WinsInfo.value)
  return value_;
}
inline void WinsInfo::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.WinsInfo.value)
}

// optional uint32 sort = 4;
inline bool WinsInfo::has_sort() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WinsInfo::set_has_sort() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WinsInfo::clear_has_sort() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WinsInfo::clear_sort() {
  sort_ = 0u;
  clear_has_sort();
}
inline ::google::protobuf::uint32 WinsInfo::sort() const {
  // @@protoc_insertion_point(field_get:msg_maj.WinsInfo.sort)
  return sort_;
}
inline void WinsInfo::set_sort(::google::protobuf::uint32 value) {
  set_has_sort();
  sort_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.WinsInfo.sort)
}

// optional uint64 time = 5;
inline bool WinsInfo::has_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WinsInfo::set_has_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WinsInfo::clear_has_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WinsInfo::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::uint64 WinsInfo::time() const {
  // @@protoc_insertion_point(field_get:msg_maj.WinsInfo.time)
  return time_;
}
inline void WinsInfo::set_time(::google::protobuf::uint64 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.WinsInfo.time)
}

// optional uint32 type = 6;
inline bool WinsInfo::has_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void WinsInfo::set_has_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void WinsInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void WinsInfo::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 WinsInfo::type() const {
  // @@protoc_insertion_point(field_get:msg_maj.WinsInfo.type)
  return type_;
}
inline void WinsInfo::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.WinsInfo.type)
}

// optional string actor_addr = 7;
inline bool WinsInfo::has_actor_addr() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void WinsInfo::set_has_actor_addr() {
  _has_bits_[0] |= 0x00000040u;
}
inline void WinsInfo::clear_has_actor_addr() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void WinsInfo::clear_actor_addr() {
  actor_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_actor_addr();
}
inline const ::std::string& WinsInfo::actor_addr() const {
  // @@protoc_insertion_point(field_get:msg_maj.WinsInfo.actor_addr)
  return actor_addr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WinsInfo::set_actor_addr(const ::std::string& value) {
  set_has_actor_addr();
  actor_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.WinsInfo.actor_addr)
}
inline void WinsInfo::set_actor_addr(const char* value) {
  set_has_actor_addr();
  actor_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.WinsInfo.actor_addr)
}
inline void WinsInfo::set_actor_addr(const char* value, size_t size) {
  set_has_actor_addr();
  actor_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.WinsInfo.actor_addr)
}
inline ::std::string* WinsInfo::mutable_actor_addr() {
  set_has_actor_addr();
  // @@protoc_insertion_point(field_mutable:msg_maj.WinsInfo.actor_addr)
  return actor_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WinsInfo::release_actor_addr() {
  // @@protoc_insertion_point(field_release:msg_maj.WinsInfo.actor_addr)
  clear_has_actor_addr();
  return actor_addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WinsInfo::set_allocated_actor_addr(::std::string* actor_addr) {
  if (actor_addr != NULL) {
    set_has_actor_addr();
  } else {
    clear_has_actor_addr();
  }
  actor_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), actor_addr);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.WinsInfo.actor_addr)
}

// -------------------------------------------------------------------

// ScoreInfo

// optional uint64 uid = 1;
inline bool ScoreInfo::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ScoreInfo::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ScoreInfo::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ScoreInfo::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 ScoreInfo::uid() const {
  // @@protoc_insertion_point(field_get:msg_maj.ScoreInfo.uid)
  return uid_;
}
inline void ScoreInfo::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.ScoreInfo.uid)
}

// optional string name = 2;
inline bool ScoreInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ScoreInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ScoreInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ScoreInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& ScoreInfo::name() const {
  // @@protoc_insertion_point(field_get:msg_maj.ScoreInfo.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ScoreInfo::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.ScoreInfo.name)
}
inline void ScoreInfo::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.ScoreInfo.name)
}
inline void ScoreInfo::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.ScoreInfo.name)
}
inline ::std::string* ScoreInfo::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:msg_maj.ScoreInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ScoreInfo::release_name() {
  // @@protoc_insertion_point(field_release:msg_maj.ScoreInfo.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ScoreInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.ScoreInfo.name)
}

// optional uint32 value = 3;
inline bool ScoreInfo::has_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ScoreInfo::set_has_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ScoreInfo::clear_has_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ScoreInfo::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 ScoreInfo::value() const {
  // @@protoc_insertion_point(field_get:msg_maj.ScoreInfo.value)
  return value_;
}
inline void ScoreInfo::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.ScoreInfo.value)
}

// optional uint32 sort = 4;
inline bool ScoreInfo::has_sort() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ScoreInfo::set_has_sort() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ScoreInfo::clear_has_sort() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ScoreInfo::clear_sort() {
  sort_ = 0u;
  clear_has_sort();
}
inline ::google::protobuf::uint32 ScoreInfo::sort() const {
  // @@protoc_insertion_point(field_get:msg_maj.ScoreInfo.sort)
  return sort_;
}
inline void ScoreInfo::set_sort(::google::protobuf::uint32 value) {
  set_has_sort();
  sort_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.ScoreInfo.sort)
}

// optional uint64 time = 5;
inline bool ScoreInfo::has_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ScoreInfo::set_has_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ScoreInfo::clear_has_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ScoreInfo::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::uint64 ScoreInfo::time() const {
  // @@protoc_insertion_point(field_get:msg_maj.ScoreInfo.time)
  return time_;
}
inline void ScoreInfo::set_time(::google::protobuf::uint64 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.ScoreInfo.time)
}

// optional uint32 type = 6;
inline bool ScoreInfo::has_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ScoreInfo::set_has_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ScoreInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ScoreInfo::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 ScoreInfo::type() const {
  // @@protoc_insertion_point(field_get:msg_maj.ScoreInfo.type)
  return type_;
}
inline void ScoreInfo::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.ScoreInfo.type)
}

// optional string actor_addr = 7;
inline bool ScoreInfo::has_actor_addr() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ScoreInfo::set_has_actor_addr() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ScoreInfo::clear_has_actor_addr() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ScoreInfo::clear_actor_addr() {
  actor_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_actor_addr();
}
inline const ::std::string& ScoreInfo::actor_addr() const {
  // @@protoc_insertion_point(field_get:msg_maj.ScoreInfo.actor_addr)
  return actor_addr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ScoreInfo::set_actor_addr(const ::std::string& value) {
  set_has_actor_addr();
  actor_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.ScoreInfo.actor_addr)
}
inline void ScoreInfo::set_actor_addr(const char* value) {
  set_has_actor_addr();
  actor_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.ScoreInfo.actor_addr)
}
inline void ScoreInfo::set_actor_addr(const char* value, size_t size) {
  set_has_actor_addr();
  actor_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.ScoreInfo.actor_addr)
}
inline ::std::string* ScoreInfo::mutable_actor_addr() {
  set_has_actor_addr();
  // @@protoc_insertion_point(field_mutable:msg_maj.ScoreInfo.actor_addr)
  return actor_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ScoreInfo::release_actor_addr() {
  // @@protoc_insertion_point(field_release:msg_maj.ScoreInfo.actor_addr)
  clear_has_actor_addr();
  return actor_addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ScoreInfo::set_allocated_actor_addr(::std::string* actor_addr) {
  if (actor_addr != NULL) {
    set_has_actor_addr();
  } else {
    clear_has_actor_addr();
  }
  actor_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), actor_addr);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.ScoreInfo.actor_addr)
}

// -------------------------------------------------------------------

// RankConsList

// repeated .msg_maj.WinsInfo ranks = 1;
inline int RankConsList::ranks_size() const {
  return ranks_.size();
}
inline void RankConsList::clear_ranks() {
  ranks_.Clear();
}
inline const ::msg_maj::WinsInfo& RankConsList::ranks(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.RankConsList.ranks)
  return ranks_.Get(index);
}
inline ::msg_maj::WinsInfo* RankConsList::mutable_ranks(int index) {
  // @@protoc_insertion_point(field_mutable:msg_maj.RankConsList.ranks)
  return ranks_.Mutable(index);
}
inline ::msg_maj::WinsInfo* RankConsList::add_ranks() {
  // @@protoc_insertion_point(field_add:msg_maj.RankConsList.ranks)
  return ranks_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::msg_maj::WinsInfo >*
RankConsList::mutable_ranks() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.RankConsList.ranks)
  return &ranks_;
}
inline const ::google::protobuf::RepeatedPtrField< ::msg_maj::WinsInfo >&
RankConsList::ranks() const {
  // @@protoc_insertion_point(field_list:msg_maj.RankConsList.ranks)
  return ranks_;
}

// -------------------------------------------------------------------

// RankScoreList

// repeated .msg_maj.ScoreInfo ranks = 1;
inline int RankScoreList::ranks_size() const {
  return ranks_.size();
}
inline void RankScoreList::clear_ranks() {
  ranks_.Clear();
}
inline const ::msg_maj::ScoreInfo& RankScoreList::ranks(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.RankScoreList.ranks)
  return ranks_.Get(index);
}
inline ::msg_maj::ScoreInfo* RankScoreList::mutable_ranks(int index) {
  // @@protoc_insertion_point(field_mutable:msg_maj.RankScoreList.ranks)
  return ranks_.Mutable(index);
}
inline ::msg_maj::ScoreInfo* RankScoreList::add_ranks() {
  // @@protoc_insertion_point(field_add:msg_maj.RankScoreList.ranks)
  return ranks_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::msg_maj::ScoreInfo >*
RankScoreList::mutable_ranks() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.RankScoreList.ranks)
  return &ranks_;
}
inline const ::google::protobuf::RepeatedPtrField< ::msg_maj::ScoreInfo >&
RankScoreList::ranks() const {
  // @@protoc_insertion_point(field_list:msg_maj.RankScoreList.ranks)
  return ranks_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace msg_maj

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::msg_maj::c_cmd_rank> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg_maj::c_cmd_rank>() {
  return ::msg_maj::c_cmd_rank_descriptor();
}
template <> struct is_proto_enum< ::msg_maj::rank_type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg_maj::rank_type>() {
  return ::msg_maj::rank_type_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_msg_5frank_2eproto__INCLUDED
