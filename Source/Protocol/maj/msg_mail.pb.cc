// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_mail.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "msg_mail.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace msg_maj {

namespace {

const ::google::protobuf::Descriptor* MailListReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MailListReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* MailListResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MailListResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* MailOptReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MailOptReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* MailRecordC_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MailRecordC_reflection_ = NULL;
const ::google::protobuf::Descriptor* MailRecordS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MailRecordS_reflection_ = NULL;
const ::google::protobuf::Descriptor* MailSystemLogS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MailSystemLogS_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* opt_type_mail_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* mark_type_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* mail_type_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* from_type_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_msg_5fmail_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_msg_5fmail_2eproto() {
  protobuf_AddDesc_msg_5fmail_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "msg_mail.proto");
  GOOGLE_CHECK(file != NULL);
  MailListReq_descriptor_ = file->message_type(0);
  static const int MailListReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailListReq, start_index_),
  };
  MailListReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MailListReq_descriptor_,
      MailListReq::default_instance_,
      MailListReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailListReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(MailListReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailListReq, _internal_metadata_),
      -1);
  MailListResp_descriptor_ = file->message_type(1);
  static const int MailListResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailListResp, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailListResp, record_list_),
  };
  MailListResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MailListResp_descriptor_,
      MailListResp::default_instance_,
      MailListResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailListResp, _has_bits_[0]),
      -1,
      -1,
      sizeof(MailListResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailListResp, _internal_metadata_),
      -1);
  MailOptReq_descriptor_ = file->message_type(2);
  static const int MailOptReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailOptReq, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailOptReq, opt_),
  };
  MailOptReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MailOptReq_descriptor_,
      MailOptReq::default_instance_,
      MailOptReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailOptReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(MailOptReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailOptReq, _internal_metadata_),
      -1);
  MailRecordC_descriptor_ = file->message_type(3);
  static const int MailRecordC_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailRecordC, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailRecordC, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailRecordC, from_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailRecordC, title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailRecordC, content_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailRecordC, room_cards_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailRecordC, mark_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailRecordC, create_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailRecordC, fetch_time_),
  };
  MailRecordC_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MailRecordC_descriptor_,
      MailRecordC::default_instance_,
      MailRecordC_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailRecordC, _has_bits_[0]),
      -1,
      -1,
      sizeof(MailRecordC),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailRecordC, _internal_metadata_),
      -1);
  MailRecordS_descriptor_ = file->message_type(4);
  static const int MailRecordS_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailRecordS, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailRecordS, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailRecordS, from_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailRecordS, from_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailRecordS, to_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailRecordS, to_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailRecordS, title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailRecordS, content_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailRecordS, room_cards_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailRecordS, mark_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailRecordS, create_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailRecordS, fetch_time_),
  };
  MailRecordS_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MailRecordS_descriptor_,
      MailRecordS::default_instance_,
      MailRecordS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailRecordS, _has_bits_[0]),
      -1,
      -1,
      sizeof(MailRecordS),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailRecordS, _internal_metadata_),
      -1);
  MailSystemLogS_descriptor_ = file->message_type(5);
  static const int MailSystemLogS_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailSystemLogS, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailSystemLogS, mail_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailSystemLogS, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailSystemLogS, mark_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailSystemLogS, create_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailSystemLogS, fetch_time_),
  };
  MailSystemLogS_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MailSystemLogS_descriptor_,
      MailSystemLogS::default_instance_,
      MailSystemLogS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailSystemLogS, _has_bits_[0]),
      -1,
      -1,
      sizeof(MailSystemLogS),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailSystemLogS, _internal_metadata_),
      -1);
  opt_type_mail_descriptor_ = file->enum_type(0);
  mark_type_descriptor_ = file->enum_type(1);
  mail_type_descriptor_ = file->enum_type(2);
  from_type_descriptor_ = file->enum_type(3);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_msg_5fmail_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MailListReq_descriptor_, &MailListReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MailListResp_descriptor_, &MailListResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MailOptReq_descriptor_, &MailOptReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MailRecordC_descriptor_, &MailRecordC::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MailRecordS_descriptor_, &MailRecordS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MailSystemLogS_descriptor_, &MailSystemLogS::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_msg_5fmail_2eproto() {
  delete MailListReq::default_instance_;
  delete MailListReq_reflection_;
  delete MailListResp::default_instance_;
  delete MailListResp_reflection_;
  delete MailOptReq::default_instance_;
  delete MailOptReq_reflection_;
  delete MailRecordC::default_instance_;
  delete MailRecordC_reflection_;
  delete MailRecordS::default_instance_;
  delete MailRecordS_reflection_;
  delete MailSystemLogS::default_instance_;
  delete MailSystemLogS_reflection_;
}

void protobuf_AddDesc_msg_5fmail_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_msg_5fmail_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016msg_mail.proto\022\007msg_maj\"\"\n\013MailListReq"
    "\022\023\n\013start_index\030\001 \002(\004\"[\n\014MailListResp\022 \n"
    "\004type\030\001 \002(\0162\022.msg_maj.from_type\022)\n\013recor"
    "d_list\030\002 \003(\0132\024.msg_maj.MailRecordC\"=\n\nMa"
    "ilOptReq\022\n\n\002id\030\001 \002(\004\022#\n\003opt\030\002 \002(\0162\026.msg_"
    "maj.opt_type_mail\"\315\001\n\013MailRecordC\022\n\n\002id\030"
    "\001 \002(\004\022 \n\004type\030\002 \002(\0162\022.msg_maj.mail_type\022"
    "\021\n\tfrom_name\030\003 \002(\t\022\r\n\005title\030\004 \002(\t\022\017\n\007con"
    "tent\030\005 \002(\t\022\022\n\nroom_cards\030\006 \002(\005\022 \n\004mark\030\007"
    " \002(\0162\022.msg_maj.mark_type\022\023\n\013create_time\030"
    "\010 \002(\004\022\022\n\nfetch_time\030\t \002(\004\"\326\001\n\013MailRecord"
    "S\022\n\n\002id\030\001 \002(\004\022\014\n\004type\030\002 \002(\005\022\017\n\007from_id\030\003"
    " \002(\004\022\021\n\tfrom_name\030\004 \002(\t\022\r\n\005to_id\030\005 \002(\004\022\017"
    "\n\007to_name\030\006 \002(\t\022\r\n\005title\030\007 \002(\t\022\017\n\007conten"
    "t\030\010 \002(\t\022\022\n\nroom_cards\030\t \002(\005\022\014\n\004mark\030\n \002("
    "\005\022\023\n\013create_time\030\013 \002(\004\022\022\n\nfetch_time\030\014 \002"
    "(\r\"q\n\016MailSystemLogS\022\n\n\002id\030\001 \002(\004\022\017\n\007mail"
    "_id\030\002 \002(\004\022\013\n\003uid\030\003 \002(\004\022\014\n\004mark\030\004 \002(\005\022\023\n\013"
    "create_time\030\005 \002(\004\022\022\n\nfetch_time\030\006 \002(\r*B\n"
    "\ropt_type_mail\022\016\n\nopt_t_read\020\001\022\017\n\013opt_t_"
    "fetch\020\002\022\020\n\014opt_t_delete\020\003*E\n\tmark_type\022\021"
    "\n\rmark_t_unread\020\001\022\021\n\rmark_t_readed\020\002\022\022\n\016"
    "mark_t_deleted\020\003*9\n\tmail_type\022\025\n\021mail_t_"
    "system_one\020\001\022\025\n\021mail_t_system_all\020\002*,\n\tf"
    "rom_type\022\017\n\013from_t_list\020\001\022\016\n\nfrom_t_add\020"
    "\002", 1001);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "msg_mail.proto", &protobuf_RegisterTypes);
  MailListReq::default_instance_ = new MailListReq();
  MailListResp::default_instance_ = new MailListResp();
  MailOptReq::default_instance_ = new MailOptReq();
  MailRecordC::default_instance_ = new MailRecordC();
  MailRecordS::default_instance_ = new MailRecordS();
  MailSystemLogS::default_instance_ = new MailSystemLogS();
  MailListReq::default_instance_->InitAsDefaultInstance();
  MailListResp::default_instance_->InitAsDefaultInstance();
  MailOptReq::default_instance_->InitAsDefaultInstance();
  MailRecordC::default_instance_->InitAsDefaultInstance();
  MailRecordS::default_instance_->InitAsDefaultInstance();
  MailSystemLogS::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_msg_5fmail_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_msg_5fmail_2eproto {
  StaticDescriptorInitializer_msg_5fmail_2eproto() {
    protobuf_AddDesc_msg_5fmail_2eproto();
  }
} static_descriptor_initializer_msg_5fmail_2eproto_;
const ::google::protobuf::EnumDescriptor* opt_type_mail_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return opt_type_mail_descriptor_;
}
bool opt_type_mail_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* mark_type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return mark_type_descriptor_;
}
bool mark_type_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* mail_type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return mail_type_descriptor_;
}
bool mail_type_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* from_type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return from_type_descriptor_;
}
bool from_type_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MailListReq::kStartIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MailListReq::MailListReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.MailListReq)
}

void MailListReq::InitAsDefaultInstance() {
}

MailListReq::MailListReq(const MailListReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.MailListReq)
}

void MailListReq::SharedCtor() {
  _cached_size_ = 0;
  start_index_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MailListReq::~MailListReq() {
  // @@protoc_insertion_point(destructor:msg_maj.MailListReq)
  SharedDtor();
}

void MailListReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MailListReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MailListReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MailListReq_descriptor_;
}

const MailListReq& MailListReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmail_2eproto();
  return *default_instance_;
}

MailListReq* MailListReq::default_instance_ = NULL;

MailListReq* MailListReq::New(::google::protobuf::Arena* arena) const {
  MailListReq* n = new MailListReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MailListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.MailListReq)
  start_index_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MailListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.MailListReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 start_index = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &start_index_)));
          set_has_start_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.MailListReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.MailListReq)
  return false;
#undef DO_
}

void MailListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.MailListReq)
  // required uint64 start_index = 1;
  if (has_start_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->start_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.MailListReq)
}

::google::protobuf::uint8* MailListReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.MailListReq)
  // required uint64 start_index = 1;
  if (has_start_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->start_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.MailListReq)
  return target;
}

int MailListReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.MailListReq)
  int total_size = 0;

  // required uint64 start_index = 1;
  if (has_start_index()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->start_index());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MailListReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.MailListReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MailListReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MailListReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.MailListReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.MailListReq)
    MergeFrom(*source);
  }
}

void MailListReq::MergeFrom(const MailListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.MailListReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start_index()) {
      set_start_index(from.start_index());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MailListReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.MailListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MailListReq::CopyFrom(const MailListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.MailListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MailListReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void MailListReq::Swap(MailListReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MailListReq::InternalSwap(MailListReq* other) {
  std::swap(start_index_, other->start_index_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MailListReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MailListReq_descriptor_;
  metadata.reflection = MailListReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MailListReq

// required uint64 start_index = 1;
bool MailListReq::has_start_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MailListReq::set_has_start_index() {
  _has_bits_[0] |= 0x00000001u;
}
void MailListReq::clear_has_start_index() {
  _has_bits_[0] &= ~0x00000001u;
}
void MailListReq::clear_start_index() {
  start_index_ = GOOGLE_ULONGLONG(0);
  clear_has_start_index();
}
 ::google::protobuf::uint64 MailListReq::start_index() const {
  // @@protoc_insertion_point(field_get:msg_maj.MailListReq.start_index)
  return start_index_;
}
 void MailListReq::set_start_index(::google::protobuf::uint64 value) {
  set_has_start_index();
  start_index_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.MailListReq.start_index)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MailListResp::kTypeFieldNumber;
const int MailListResp::kRecordListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MailListResp::MailListResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.MailListResp)
}

void MailListResp::InitAsDefaultInstance() {
}

MailListResp::MailListResp(const MailListResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.MailListResp)
}

void MailListResp::SharedCtor() {
  _cached_size_ = 0;
  type_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MailListResp::~MailListResp() {
  // @@protoc_insertion_point(destructor:msg_maj.MailListResp)
  SharedDtor();
}

void MailListResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MailListResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MailListResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MailListResp_descriptor_;
}

const MailListResp& MailListResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmail_2eproto();
  return *default_instance_;
}

MailListResp* MailListResp::default_instance_ = NULL;

MailListResp* MailListResp::New(::google::protobuf::Arena* arena) const {
  MailListResp* n = new MailListResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MailListResp::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.MailListResp)
  type_ = 1;
  record_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MailListResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.MailListResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .msg_maj.from_type type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::msg_maj::from_type_IsValid(value)) {
            set_type(static_cast< ::msg_maj::from_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_record_list;
        break;
      }

      // repeated .msg_maj.MailRecordC record_list = 2;
      case 2: {
        if (tag == 18) {
         parse_record_list:
          DO_(input->IncrementRecursionDepth());
         parse_loop_record_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_record_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_record_list;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.MailListResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.MailListResp)
  return false;
#undef DO_
}

void MailListResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.MailListResp)
  // required .msg_maj.from_type type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // repeated .msg_maj.MailRecordC record_list = 2;
  for (unsigned int i = 0, n = this->record_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->record_list(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.MailListResp)
}

::google::protobuf::uint8* MailListResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.MailListResp)
  // required .msg_maj.from_type type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // repeated .msg_maj.MailRecordC record_list = 2;
  for (unsigned int i = 0, n = this->record_list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->record_list(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.MailListResp)
  return target;
}

int MailListResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.MailListResp)
  int total_size = 0;

  // required .msg_maj.from_type type = 1;
  if (has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }
  // repeated .msg_maj.MailRecordC record_list = 2;
  total_size += 1 * this->record_list_size();
  for (int i = 0; i < this->record_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->record_list(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MailListResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.MailListResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MailListResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MailListResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.MailListResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.MailListResp)
    MergeFrom(*source);
  }
}

void MailListResp::MergeFrom(const MailListResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.MailListResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  record_list_.MergeFrom(from.record_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MailListResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.MailListResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MailListResp::CopyFrom(const MailListResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.MailListResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MailListResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->record_list())) return false;
  return true;
}

void MailListResp::Swap(MailListResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MailListResp::InternalSwap(MailListResp* other) {
  std::swap(type_, other->type_);
  record_list_.UnsafeArenaSwap(&other->record_list_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MailListResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MailListResp_descriptor_;
  metadata.reflection = MailListResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MailListResp

// required .msg_maj.from_type type = 1;
bool MailListResp::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MailListResp::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
void MailListResp::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void MailListResp::clear_type() {
  type_ = 1;
  clear_has_type();
}
 ::msg_maj::from_type MailListResp::type() const {
  // @@protoc_insertion_point(field_get:msg_maj.MailListResp.type)
  return static_cast< ::msg_maj::from_type >(type_);
}
 void MailListResp::set_type(::msg_maj::from_type value) {
  assert(::msg_maj::from_type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.MailListResp.type)
}

// repeated .msg_maj.MailRecordC record_list = 2;
int MailListResp::record_list_size() const {
  return record_list_.size();
}
void MailListResp::clear_record_list() {
  record_list_.Clear();
}
const ::msg_maj::MailRecordC& MailListResp::record_list(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.MailListResp.record_list)
  return record_list_.Get(index);
}
::msg_maj::MailRecordC* MailListResp::mutable_record_list(int index) {
  // @@protoc_insertion_point(field_mutable:msg_maj.MailListResp.record_list)
  return record_list_.Mutable(index);
}
::msg_maj::MailRecordC* MailListResp::add_record_list() {
  // @@protoc_insertion_point(field_add:msg_maj.MailListResp.record_list)
  return record_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::msg_maj::MailRecordC >*
MailListResp::mutable_record_list() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.MailListResp.record_list)
  return &record_list_;
}
const ::google::protobuf::RepeatedPtrField< ::msg_maj::MailRecordC >&
MailListResp::record_list() const {
  // @@protoc_insertion_point(field_list:msg_maj.MailListResp.record_list)
  return record_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MailOptReq::kIdFieldNumber;
const int MailOptReq::kOptFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MailOptReq::MailOptReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.MailOptReq)
}

void MailOptReq::InitAsDefaultInstance() {
}

MailOptReq::MailOptReq(const MailOptReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.MailOptReq)
}

void MailOptReq::SharedCtor() {
  _cached_size_ = 0;
  id_ = GOOGLE_ULONGLONG(0);
  opt_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MailOptReq::~MailOptReq() {
  // @@protoc_insertion_point(destructor:msg_maj.MailOptReq)
  SharedDtor();
}

void MailOptReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MailOptReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MailOptReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MailOptReq_descriptor_;
}

const MailOptReq& MailOptReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmail_2eproto();
  return *default_instance_;
}

MailOptReq* MailOptReq::default_instance_ = NULL;

MailOptReq* MailOptReq::New(::google::protobuf::Arena* arena) const {
  MailOptReq* n = new MailOptReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MailOptReq::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.MailOptReq)
  if (_has_bits_[0 / 32] & 3u) {
    id_ = GOOGLE_ULONGLONG(0);
    opt_ = 1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MailOptReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.MailOptReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_opt;
        break;
      }

      // required .msg_maj.opt_type_mail opt = 2;
      case 2: {
        if (tag == 16) {
         parse_opt:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::msg_maj::opt_type_mail_IsValid(value)) {
            set_opt(static_cast< ::msg_maj::opt_type_mail >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.MailOptReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.MailOptReq)
  return false;
#undef DO_
}

void MailOptReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.MailOptReq)
  // required uint64 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // required .msg_maj.opt_type_mail opt = 2;
  if (has_opt()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->opt(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.MailOptReq)
}

::google::protobuf::uint8* MailOptReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.MailOptReq)
  // required uint64 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // required .msg_maj.opt_type_mail opt = 2;
  if (has_opt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->opt(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.MailOptReq)
  return target;
}

int MailOptReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:msg_maj.MailOptReq)
  int total_size = 0;

  if (has_id()) {
    // required uint64 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  if (has_opt()) {
    // required .msg_maj.opt_type_mail opt = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->opt());
  }

  return total_size;
}
int MailOptReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.MailOptReq)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint64 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());

    // required .msg_maj.opt_type_mail opt = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->opt());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MailOptReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.MailOptReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MailOptReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MailOptReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.MailOptReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.MailOptReq)
    MergeFrom(*source);
  }
}

void MailOptReq::MergeFrom(const MailOptReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.MailOptReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_opt()) {
      set_opt(from.opt());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MailOptReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.MailOptReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MailOptReq::CopyFrom(const MailOptReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.MailOptReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MailOptReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void MailOptReq::Swap(MailOptReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MailOptReq::InternalSwap(MailOptReq* other) {
  std::swap(id_, other->id_);
  std::swap(opt_, other->opt_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MailOptReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MailOptReq_descriptor_;
  metadata.reflection = MailOptReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MailOptReq

// required uint64 id = 1;
bool MailOptReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MailOptReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void MailOptReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void MailOptReq::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
 ::google::protobuf::uint64 MailOptReq::id() const {
  // @@protoc_insertion_point(field_get:msg_maj.MailOptReq.id)
  return id_;
}
 void MailOptReq::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.MailOptReq.id)
}

// required .msg_maj.opt_type_mail opt = 2;
bool MailOptReq::has_opt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MailOptReq::set_has_opt() {
  _has_bits_[0] |= 0x00000002u;
}
void MailOptReq::clear_has_opt() {
  _has_bits_[0] &= ~0x00000002u;
}
void MailOptReq::clear_opt() {
  opt_ = 1;
  clear_has_opt();
}
 ::msg_maj::opt_type_mail MailOptReq::opt() const {
  // @@protoc_insertion_point(field_get:msg_maj.MailOptReq.opt)
  return static_cast< ::msg_maj::opt_type_mail >(opt_);
}
 void MailOptReq::set_opt(::msg_maj::opt_type_mail value) {
  assert(::msg_maj::opt_type_mail_IsValid(value));
  set_has_opt();
  opt_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.MailOptReq.opt)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MailRecordC::kIdFieldNumber;
const int MailRecordC::kTypeFieldNumber;
const int MailRecordC::kFromNameFieldNumber;
const int MailRecordC::kTitleFieldNumber;
const int MailRecordC::kContentFieldNumber;
const int MailRecordC::kRoomCardsFieldNumber;
const int MailRecordC::kMarkFieldNumber;
const int MailRecordC::kCreateTimeFieldNumber;
const int MailRecordC::kFetchTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MailRecordC::MailRecordC()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.MailRecordC)
}

void MailRecordC::InitAsDefaultInstance() {
}

MailRecordC::MailRecordC(const MailRecordC& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.MailRecordC)
}

void MailRecordC::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = GOOGLE_ULONGLONG(0);
  type_ = 1;
  from_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  room_cards_ = 0;
  mark_ = 1;
  create_time_ = GOOGLE_ULONGLONG(0);
  fetch_time_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MailRecordC::~MailRecordC() {
  // @@protoc_insertion_point(destructor:msg_maj.MailRecordC)
  SharedDtor();
}

void MailRecordC::SharedDtor() {
  from_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MailRecordC::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MailRecordC::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MailRecordC_descriptor_;
}

const MailRecordC& MailRecordC::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmail_2eproto();
  return *default_instance_;
}

MailRecordC* MailRecordC::default_instance_ = NULL;

MailRecordC* MailRecordC::New(::google::protobuf::Arena* arena) const {
  MailRecordC* n = new MailRecordC;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MailRecordC::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.MailRecordC)
  if (_has_bits_[0 / 32] & 255u) {
    id_ = GOOGLE_ULONGLONG(0);
    type_ = 1;
    if (has_from_name()) {
      from_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_title()) {
      title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_content()) {
      content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    room_cards_ = 0;
    mark_ = 1;
    create_time_ = GOOGLE_ULONGLONG(0);
  }
  fetch_time_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MailRecordC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.MailRecordC)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // required .msg_maj.mail_type type = 2;
      case 2: {
        if (tag == 16) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::msg_maj::mail_type_IsValid(value)) {
            set_type(static_cast< ::msg_maj::mail_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_from_name;
        break;
      }

      // required string from_name = 3;
      case 3: {
        if (tag == 26) {
         parse_from_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->from_name().data(), this->from_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "msg_maj.MailRecordC.from_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_title;
        break;
      }

      // required string title = 4;
      case 4: {
        if (tag == 34) {
         parse_title:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->title().data(), this->title().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "msg_maj.MailRecordC.title");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_content;
        break;
      }

      // required string content = 5;
      case 5: {
        if (tag == 42) {
         parse_content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->content().data(), this->content().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "msg_maj.MailRecordC.content");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_room_cards;
        break;
      }

      // required int32 room_cards = 6;
      case 6: {
        if (tag == 48) {
         parse_room_cards:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &room_cards_)));
          set_has_room_cards();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_mark;
        break;
      }

      // required .msg_maj.mark_type mark = 7;
      case 7: {
        if (tag == 56) {
         parse_mark:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::msg_maj::mark_type_IsValid(value)) {
            set_mark(static_cast< ::msg_maj::mark_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(7, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_create_time;
        break;
      }

      // required uint64 create_time = 8;
      case 8: {
        if (tag == 64) {
         parse_create_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &create_time_)));
          set_has_create_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_fetch_time;
        break;
      }

      // required uint64 fetch_time = 9;
      case 9: {
        if (tag == 72) {
         parse_fetch_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &fetch_time_)));
          set_has_fetch_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.MailRecordC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.MailRecordC)
  return false;
#undef DO_
}

void MailRecordC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.MailRecordC)
  // required uint64 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // required .msg_maj.mail_type type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // required string from_name = 3;
  if (has_from_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->from_name().data(), this->from_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg_maj.MailRecordC.from_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->from_name(), output);
  }

  // required string title = 4;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg_maj.MailRecordC.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->title(), output);
  }

  // required string content = 5;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg_maj.MailRecordC.content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->content(), output);
  }

  // required int32 room_cards = 6;
  if (has_room_cards()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->room_cards(), output);
  }

  // required .msg_maj.mark_type mark = 7;
  if (has_mark()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->mark(), output);
  }

  // required uint64 create_time = 8;
  if (has_create_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->create_time(), output);
  }

  // required uint64 fetch_time = 9;
  if (has_fetch_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(9, this->fetch_time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.MailRecordC)
}

::google::protobuf::uint8* MailRecordC::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.MailRecordC)
  // required uint64 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // required .msg_maj.mail_type type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // required string from_name = 3;
  if (has_from_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->from_name().data(), this->from_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg_maj.MailRecordC.from_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->from_name(), target);
  }

  // required string title = 4;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg_maj.MailRecordC.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->title(), target);
  }

  // required string content = 5;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg_maj.MailRecordC.content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->content(), target);
  }

  // required int32 room_cards = 6;
  if (has_room_cards()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->room_cards(), target);
  }

  // required .msg_maj.mark_type mark = 7;
  if (has_mark()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->mark(), target);
  }

  // required uint64 create_time = 8;
  if (has_create_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->create_time(), target);
  }

  // required uint64 fetch_time = 9;
  if (has_fetch_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(9, this->fetch_time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.MailRecordC)
  return target;
}

int MailRecordC::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:msg_maj.MailRecordC)
  int total_size = 0;

  if (has_id()) {
    // required uint64 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  if (has_type()) {
    // required .msg_maj.mail_type type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  if (has_from_name()) {
    // required string from_name = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_name());
  }

  if (has_title()) {
    // required string title = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  if (has_content()) {
    // required string content = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content());
  }

  if (has_room_cards()) {
    // required int32 room_cards = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->room_cards());
  }

  if (has_mark()) {
    // required .msg_maj.mark_type mark = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->mark());
  }

  if (has_create_time()) {
    // required uint64 create_time = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->create_time());
  }

  if (has_fetch_time()) {
    // required uint64 fetch_time = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->fetch_time());
  }

  return total_size;
}
int MailRecordC::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.MailRecordC)
  int total_size = 0;

  if (((_has_bits_[0] & 0x000001ff) ^ 0x000001ff) == 0) {  // All required fields are present.
    // required uint64 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());

    // required .msg_maj.mail_type type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());

    // required string from_name = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_name());

    // required string title = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());

    // required string content = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content());

    // required int32 room_cards = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->room_cards());

    // required .msg_maj.mark_type mark = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->mark());

    // required uint64 create_time = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->create_time());

    // required uint64 fetch_time = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->fetch_time());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MailRecordC::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.MailRecordC)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MailRecordC* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MailRecordC>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.MailRecordC)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.MailRecordC)
    MergeFrom(*source);
  }
}

void MailRecordC::MergeFrom(const MailRecordC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.MailRecordC)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_from_name()) {
      set_has_from_name();
      from_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_name_);
    }
    if (from.has_title()) {
      set_has_title();
      title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
    }
    if (from.has_content()) {
      set_has_content();
      content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
    }
    if (from.has_room_cards()) {
      set_room_cards(from.room_cards());
    }
    if (from.has_mark()) {
      set_mark(from.mark());
    }
    if (from.has_create_time()) {
      set_create_time(from.create_time());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_fetch_time()) {
      set_fetch_time(from.fetch_time());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MailRecordC::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.MailRecordC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MailRecordC::CopyFrom(const MailRecordC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.MailRecordC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MailRecordC::IsInitialized() const {
  if ((_has_bits_[0] & 0x000001ff) != 0x000001ff) return false;

  return true;
}

void MailRecordC::Swap(MailRecordC* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MailRecordC::InternalSwap(MailRecordC* other) {
  std::swap(id_, other->id_);
  std::swap(type_, other->type_);
  from_name_.Swap(&other->from_name_);
  title_.Swap(&other->title_);
  content_.Swap(&other->content_);
  std::swap(room_cards_, other->room_cards_);
  std::swap(mark_, other->mark_);
  std::swap(create_time_, other->create_time_);
  std::swap(fetch_time_, other->fetch_time_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MailRecordC::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MailRecordC_descriptor_;
  metadata.reflection = MailRecordC_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MailRecordC

// required uint64 id = 1;
bool MailRecordC::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MailRecordC::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void MailRecordC::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void MailRecordC::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
 ::google::protobuf::uint64 MailRecordC::id() const {
  // @@protoc_insertion_point(field_get:msg_maj.MailRecordC.id)
  return id_;
}
 void MailRecordC::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.MailRecordC.id)
}

// required .msg_maj.mail_type type = 2;
bool MailRecordC::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MailRecordC::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
void MailRecordC::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void MailRecordC::clear_type() {
  type_ = 1;
  clear_has_type();
}
 ::msg_maj::mail_type MailRecordC::type() const {
  // @@protoc_insertion_point(field_get:msg_maj.MailRecordC.type)
  return static_cast< ::msg_maj::mail_type >(type_);
}
 void MailRecordC::set_type(::msg_maj::mail_type value) {
  assert(::msg_maj::mail_type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.MailRecordC.type)
}

// required string from_name = 3;
bool MailRecordC::has_from_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void MailRecordC::set_has_from_name() {
  _has_bits_[0] |= 0x00000004u;
}
void MailRecordC::clear_has_from_name() {
  _has_bits_[0] &= ~0x00000004u;
}
void MailRecordC::clear_from_name() {
  from_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_from_name();
}
 const ::std::string& MailRecordC::from_name() const {
  // @@protoc_insertion_point(field_get:msg_maj.MailRecordC.from_name)
  return from_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MailRecordC::set_from_name(const ::std::string& value) {
  set_has_from_name();
  from_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.MailRecordC.from_name)
}
 void MailRecordC::set_from_name(const char* value) {
  set_has_from_name();
  from_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.MailRecordC.from_name)
}
 void MailRecordC::set_from_name(const char* value, size_t size) {
  set_has_from_name();
  from_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.MailRecordC.from_name)
}
 ::std::string* MailRecordC::mutable_from_name() {
  set_has_from_name();
  // @@protoc_insertion_point(field_mutable:msg_maj.MailRecordC.from_name)
  return from_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MailRecordC::release_from_name() {
  // @@protoc_insertion_point(field_release:msg_maj.MailRecordC.from_name)
  clear_has_from_name();
  return from_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MailRecordC::set_allocated_from_name(::std::string* from_name) {
  if (from_name != NULL) {
    set_has_from_name();
  } else {
    clear_has_from_name();
  }
  from_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from_name);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.MailRecordC.from_name)
}

// required string title = 4;
bool MailRecordC::has_title() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void MailRecordC::set_has_title() {
  _has_bits_[0] |= 0x00000008u;
}
void MailRecordC::clear_has_title() {
  _has_bits_[0] &= ~0x00000008u;
}
void MailRecordC::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
 const ::std::string& MailRecordC::title() const {
  // @@protoc_insertion_point(field_get:msg_maj.MailRecordC.title)
  return title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MailRecordC::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.MailRecordC.title)
}
 void MailRecordC::set_title(const char* value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.MailRecordC.title)
}
 void MailRecordC::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.MailRecordC.title)
}
 ::std::string* MailRecordC::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:msg_maj.MailRecordC.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MailRecordC::release_title() {
  // @@protoc_insertion_point(field_release:msg_maj.MailRecordC.title)
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MailRecordC::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.MailRecordC.title)
}

// required string content = 5;
bool MailRecordC::has_content() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void MailRecordC::set_has_content() {
  _has_bits_[0] |= 0x00000010u;
}
void MailRecordC::clear_has_content() {
  _has_bits_[0] &= ~0x00000010u;
}
void MailRecordC::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
 const ::std::string& MailRecordC::content() const {
  // @@protoc_insertion_point(field_get:msg_maj.MailRecordC.content)
  return content_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MailRecordC::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.MailRecordC.content)
}
 void MailRecordC::set_content(const char* value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.MailRecordC.content)
}
 void MailRecordC::set_content(const char* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.MailRecordC.content)
}
 ::std::string* MailRecordC::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:msg_maj.MailRecordC.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MailRecordC::release_content() {
  // @@protoc_insertion_point(field_release:msg_maj.MailRecordC.content)
  clear_has_content();
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MailRecordC::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.MailRecordC.content)
}

// required int32 room_cards = 6;
bool MailRecordC::has_room_cards() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void MailRecordC::set_has_room_cards() {
  _has_bits_[0] |= 0x00000020u;
}
void MailRecordC::clear_has_room_cards() {
  _has_bits_[0] &= ~0x00000020u;
}
void MailRecordC::clear_room_cards() {
  room_cards_ = 0;
  clear_has_room_cards();
}
 ::google::protobuf::int32 MailRecordC::room_cards() const {
  // @@protoc_insertion_point(field_get:msg_maj.MailRecordC.room_cards)
  return room_cards_;
}
 void MailRecordC::set_room_cards(::google::protobuf::int32 value) {
  set_has_room_cards();
  room_cards_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.MailRecordC.room_cards)
}

// required .msg_maj.mark_type mark = 7;
bool MailRecordC::has_mark() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void MailRecordC::set_has_mark() {
  _has_bits_[0] |= 0x00000040u;
}
void MailRecordC::clear_has_mark() {
  _has_bits_[0] &= ~0x00000040u;
}
void MailRecordC::clear_mark() {
  mark_ = 1;
  clear_has_mark();
}
 ::msg_maj::mark_type MailRecordC::mark() const {
  // @@protoc_insertion_point(field_get:msg_maj.MailRecordC.mark)
  return static_cast< ::msg_maj::mark_type >(mark_);
}
 void MailRecordC::set_mark(::msg_maj::mark_type value) {
  assert(::msg_maj::mark_type_IsValid(value));
  set_has_mark();
  mark_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.MailRecordC.mark)
}

// required uint64 create_time = 8;
bool MailRecordC::has_create_time() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void MailRecordC::set_has_create_time() {
  _has_bits_[0] |= 0x00000080u;
}
void MailRecordC::clear_has_create_time() {
  _has_bits_[0] &= ~0x00000080u;
}
void MailRecordC::clear_create_time() {
  create_time_ = GOOGLE_ULONGLONG(0);
  clear_has_create_time();
}
 ::google::protobuf::uint64 MailRecordC::create_time() const {
  // @@protoc_insertion_point(field_get:msg_maj.MailRecordC.create_time)
  return create_time_;
}
 void MailRecordC::set_create_time(::google::protobuf::uint64 value) {
  set_has_create_time();
  create_time_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.MailRecordC.create_time)
}

// required uint64 fetch_time = 9;
bool MailRecordC::has_fetch_time() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void MailRecordC::set_has_fetch_time() {
  _has_bits_[0] |= 0x00000100u;
}
void MailRecordC::clear_has_fetch_time() {
  _has_bits_[0] &= ~0x00000100u;
}
void MailRecordC::clear_fetch_time() {
  fetch_time_ = GOOGLE_ULONGLONG(0);
  clear_has_fetch_time();
}
 ::google::protobuf::uint64 MailRecordC::fetch_time() const {
  // @@protoc_insertion_point(field_get:msg_maj.MailRecordC.fetch_time)
  return fetch_time_;
}
 void MailRecordC::set_fetch_time(::google::protobuf::uint64 value) {
  set_has_fetch_time();
  fetch_time_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.MailRecordC.fetch_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MailRecordS::kIdFieldNumber;
const int MailRecordS::kTypeFieldNumber;
const int MailRecordS::kFromIdFieldNumber;
const int MailRecordS::kFromNameFieldNumber;
const int MailRecordS::kToIdFieldNumber;
const int MailRecordS::kToNameFieldNumber;
const int MailRecordS::kTitleFieldNumber;
const int MailRecordS::kContentFieldNumber;
const int MailRecordS::kRoomCardsFieldNumber;
const int MailRecordS::kMarkFieldNumber;
const int MailRecordS::kCreateTimeFieldNumber;
const int MailRecordS::kFetchTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MailRecordS::MailRecordS()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.MailRecordS)
}

void MailRecordS::InitAsDefaultInstance() {
}

MailRecordS::MailRecordS(const MailRecordS& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.MailRecordS)
}

void MailRecordS::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = GOOGLE_ULONGLONG(0);
  type_ = 0;
  from_id_ = GOOGLE_ULONGLONG(0);
  from_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_id_ = GOOGLE_ULONGLONG(0);
  to_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  room_cards_ = 0;
  mark_ = 0;
  create_time_ = GOOGLE_ULONGLONG(0);
  fetch_time_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MailRecordS::~MailRecordS() {
  // @@protoc_insertion_point(destructor:msg_maj.MailRecordS)
  SharedDtor();
}

void MailRecordS::SharedDtor() {
  from_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MailRecordS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MailRecordS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MailRecordS_descriptor_;
}

const MailRecordS& MailRecordS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmail_2eproto();
  return *default_instance_;
}

MailRecordS* MailRecordS::default_instance_ = NULL;

MailRecordS* MailRecordS::New(::google::protobuf::Arena* arena) const {
  MailRecordS* n = new MailRecordS;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MailRecordS::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.MailRecordS)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(MailRecordS, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MailRecordS*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(id_, from_id_);
    ZR_(to_id_, type_);
    if (has_from_name()) {
      from_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_to_name()) {
      to_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_title()) {
      title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_content()) {
      content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[8 / 32] & 3840u) {
    ZR_(create_time_, fetch_time_);
    room_cards_ = 0;
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MailRecordS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.MailRecordS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // required int32 type = 2;
      case 2: {
        if (tag == 16) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_from_id;
        break;
      }

      // required uint64 from_id = 3;
      case 3: {
        if (tag == 24) {
         parse_from_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &from_id_)));
          set_has_from_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_from_name;
        break;
      }

      // required string from_name = 4;
      case 4: {
        if (tag == 34) {
         parse_from_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->from_name().data(), this->from_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "msg_maj.MailRecordS.from_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_to_id;
        break;
      }

      // required uint64 to_id = 5;
      case 5: {
        if (tag == 40) {
         parse_to_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &to_id_)));
          set_has_to_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_to_name;
        break;
      }

      // required string to_name = 6;
      case 6: {
        if (tag == 50) {
         parse_to_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_to_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->to_name().data(), this->to_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "msg_maj.MailRecordS.to_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_title;
        break;
      }

      // required string title = 7;
      case 7: {
        if (tag == 58) {
         parse_title:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->title().data(), this->title().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "msg_maj.MailRecordS.title");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_content;
        break;
      }

      // required string content = 8;
      case 8: {
        if (tag == 66) {
         parse_content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->content().data(), this->content().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "msg_maj.MailRecordS.content");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_room_cards;
        break;
      }

      // required int32 room_cards = 9;
      case 9: {
        if (tag == 72) {
         parse_room_cards:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &room_cards_)));
          set_has_room_cards();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_mark;
        break;
      }

      // required int32 mark = 10;
      case 10: {
        if (tag == 80) {
         parse_mark:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mark_)));
          set_has_mark();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_create_time;
        break;
      }

      // required uint64 create_time = 11;
      case 11: {
        if (tag == 88) {
         parse_create_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &create_time_)));
          set_has_create_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_fetch_time;
        break;
      }

      // required uint32 fetch_time = 12;
      case 12: {
        if (tag == 96) {
         parse_fetch_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fetch_time_)));
          set_has_fetch_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.MailRecordS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.MailRecordS)
  return false;
#undef DO_
}

void MailRecordS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.MailRecordS)
  // required uint64 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // required int32 type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }

  // required uint64 from_id = 3;
  if (has_from_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->from_id(), output);
  }

  // required string from_name = 4;
  if (has_from_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->from_name().data(), this->from_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg_maj.MailRecordS.from_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->from_name(), output);
  }

  // required uint64 to_id = 5;
  if (has_to_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->to_id(), output);
  }

  // required string to_name = 6;
  if (has_to_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->to_name().data(), this->to_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg_maj.MailRecordS.to_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->to_name(), output);
  }

  // required string title = 7;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg_maj.MailRecordS.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->title(), output);
  }

  // required string content = 8;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg_maj.MailRecordS.content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->content(), output);
  }

  // required int32 room_cards = 9;
  if (has_room_cards()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->room_cards(), output);
  }

  // required int32 mark = 10;
  if (has_mark()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->mark(), output);
  }

  // required uint64 create_time = 11;
  if (has_create_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(11, this->create_time(), output);
  }

  // required uint32 fetch_time = 12;
  if (has_fetch_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->fetch_time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.MailRecordS)
}

::google::protobuf::uint8* MailRecordS::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.MailRecordS)
  // required uint64 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // required int32 type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }

  // required uint64 from_id = 3;
  if (has_from_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->from_id(), target);
  }

  // required string from_name = 4;
  if (has_from_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->from_name().data(), this->from_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg_maj.MailRecordS.from_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->from_name(), target);
  }

  // required uint64 to_id = 5;
  if (has_to_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->to_id(), target);
  }

  // required string to_name = 6;
  if (has_to_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->to_name().data(), this->to_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg_maj.MailRecordS.to_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->to_name(), target);
  }

  // required string title = 7;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg_maj.MailRecordS.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->title(), target);
  }

  // required string content = 8;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg_maj.MailRecordS.content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->content(), target);
  }

  // required int32 room_cards = 9;
  if (has_room_cards()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->room_cards(), target);
  }

  // required int32 mark = 10;
  if (has_mark()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->mark(), target);
  }

  // required uint64 create_time = 11;
  if (has_create_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(11, this->create_time(), target);
  }

  // required uint32 fetch_time = 12;
  if (has_fetch_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->fetch_time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.MailRecordS)
  return target;
}

int MailRecordS::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:msg_maj.MailRecordS)
  int total_size = 0;

  if (has_id()) {
    // required uint64 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  if (has_type()) {
    // required int32 type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  if (has_from_id()) {
    // required uint64 from_id = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->from_id());
  }

  if (has_from_name()) {
    // required string from_name = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_name());
  }

  if (has_to_id()) {
    // required uint64 to_id = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->to_id());
  }

  if (has_to_name()) {
    // required string to_name = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to_name());
  }

  if (has_title()) {
    // required string title = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  if (has_content()) {
    // required string content = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content());
  }

  if (has_room_cards()) {
    // required int32 room_cards = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->room_cards());
  }

  if (has_mark()) {
    // required int32 mark = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mark());
  }

  if (has_create_time()) {
    // required uint64 create_time = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->create_time());
  }

  if (has_fetch_time()) {
    // required uint32 fetch_time = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->fetch_time());
  }

  return total_size;
}
int MailRecordS::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.MailRecordS)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000fff) ^ 0x00000fff) == 0) {  // All required fields are present.
    // required uint64 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());

    // required int32 type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());

    // required uint64 from_id = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->from_id());

    // required string from_name = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_name());

    // required uint64 to_id = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->to_id());

    // required string to_name = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to_name());

    // required string title = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());

    // required string content = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content());

    // required int32 room_cards = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->room_cards());

    // required int32 mark = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mark());

    // required uint64 create_time = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->create_time());

    // required uint32 fetch_time = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->fetch_time());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MailRecordS::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.MailRecordS)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MailRecordS* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MailRecordS>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.MailRecordS)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.MailRecordS)
    MergeFrom(*source);
  }
}

void MailRecordS::MergeFrom(const MailRecordS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.MailRecordS)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_from_id()) {
      set_from_id(from.from_id());
    }
    if (from.has_from_name()) {
      set_has_from_name();
      from_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_name_);
    }
    if (from.has_to_id()) {
      set_to_id(from.to_id());
    }
    if (from.has_to_name()) {
      set_has_to_name();
      to_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_name_);
    }
    if (from.has_title()) {
      set_has_title();
      title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
    }
    if (from.has_content()) {
      set_has_content();
      content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_room_cards()) {
      set_room_cards(from.room_cards());
    }
    if (from.has_mark()) {
      set_mark(from.mark());
    }
    if (from.has_create_time()) {
      set_create_time(from.create_time());
    }
    if (from.has_fetch_time()) {
      set_fetch_time(from.fetch_time());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MailRecordS::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.MailRecordS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MailRecordS::CopyFrom(const MailRecordS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.MailRecordS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MailRecordS::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000fff) != 0x00000fff) return false;

  return true;
}

void MailRecordS::Swap(MailRecordS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MailRecordS::InternalSwap(MailRecordS* other) {
  std::swap(id_, other->id_);
  std::swap(type_, other->type_);
  std::swap(from_id_, other->from_id_);
  from_name_.Swap(&other->from_name_);
  std::swap(to_id_, other->to_id_);
  to_name_.Swap(&other->to_name_);
  title_.Swap(&other->title_);
  content_.Swap(&other->content_);
  std::swap(room_cards_, other->room_cards_);
  std::swap(mark_, other->mark_);
  std::swap(create_time_, other->create_time_);
  std::swap(fetch_time_, other->fetch_time_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MailRecordS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MailRecordS_descriptor_;
  metadata.reflection = MailRecordS_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MailRecordS

// required uint64 id = 1;
bool MailRecordS::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MailRecordS::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void MailRecordS::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void MailRecordS::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
 ::google::protobuf::uint64 MailRecordS::id() const {
  // @@protoc_insertion_point(field_get:msg_maj.MailRecordS.id)
  return id_;
}
 void MailRecordS::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.MailRecordS.id)
}

// required int32 type = 2;
bool MailRecordS::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MailRecordS::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
void MailRecordS::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void MailRecordS::clear_type() {
  type_ = 0;
  clear_has_type();
}
 ::google::protobuf::int32 MailRecordS::type() const {
  // @@protoc_insertion_point(field_get:msg_maj.MailRecordS.type)
  return type_;
}
 void MailRecordS::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.MailRecordS.type)
}

// required uint64 from_id = 3;
bool MailRecordS::has_from_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void MailRecordS::set_has_from_id() {
  _has_bits_[0] |= 0x00000004u;
}
void MailRecordS::clear_has_from_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void MailRecordS::clear_from_id() {
  from_id_ = GOOGLE_ULONGLONG(0);
  clear_has_from_id();
}
 ::google::protobuf::uint64 MailRecordS::from_id() const {
  // @@protoc_insertion_point(field_get:msg_maj.MailRecordS.from_id)
  return from_id_;
}
 void MailRecordS::set_from_id(::google::protobuf::uint64 value) {
  set_has_from_id();
  from_id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.MailRecordS.from_id)
}

// required string from_name = 4;
bool MailRecordS::has_from_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void MailRecordS::set_has_from_name() {
  _has_bits_[0] |= 0x00000008u;
}
void MailRecordS::clear_has_from_name() {
  _has_bits_[0] &= ~0x00000008u;
}
void MailRecordS::clear_from_name() {
  from_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_from_name();
}
 const ::std::string& MailRecordS::from_name() const {
  // @@protoc_insertion_point(field_get:msg_maj.MailRecordS.from_name)
  return from_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MailRecordS::set_from_name(const ::std::string& value) {
  set_has_from_name();
  from_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.MailRecordS.from_name)
}
 void MailRecordS::set_from_name(const char* value) {
  set_has_from_name();
  from_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.MailRecordS.from_name)
}
 void MailRecordS::set_from_name(const char* value, size_t size) {
  set_has_from_name();
  from_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.MailRecordS.from_name)
}
 ::std::string* MailRecordS::mutable_from_name() {
  set_has_from_name();
  // @@protoc_insertion_point(field_mutable:msg_maj.MailRecordS.from_name)
  return from_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MailRecordS::release_from_name() {
  // @@protoc_insertion_point(field_release:msg_maj.MailRecordS.from_name)
  clear_has_from_name();
  return from_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MailRecordS::set_allocated_from_name(::std::string* from_name) {
  if (from_name != NULL) {
    set_has_from_name();
  } else {
    clear_has_from_name();
  }
  from_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from_name);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.MailRecordS.from_name)
}

// required uint64 to_id = 5;
bool MailRecordS::has_to_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void MailRecordS::set_has_to_id() {
  _has_bits_[0] |= 0x00000010u;
}
void MailRecordS::clear_has_to_id() {
  _has_bits_[0] &= ~0x00000010u;
}
void MailRecordS::clear_to_id() {
  to_id_ = GOOGLE_ULONGLONG(0);
  clear_has_to_id();
}
 ::google::protobuf::uint64 MailRecordS::to_id() const {
  // @@protoc_insertion_point(field_get:msg_maj.MailRecordS.to_id)
  return to_id_;
}
 void MailRecordS::set_to_id(::google::protobuf::uint64 value) {
  set_has_to_id();
  to_id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.MailRecordS.to_id)
}

// required string to_name = 6;
bool MailRecordS::has_to_name() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void MailRecordS::set_has_to_name() {
  _has_bits_[0] |= 0x00000020u;
}
void MailRecordS::clear_has_to_name() {
  _has_bits_[0] &= ~0x00000020u;
}
void MailRecordS::clear_to_name() {
  to_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_to_name();
}
 const ::std::string& MailRecordS::to_name() const {
  // @@protoc_insertion_point(field_get:msg_maj.MailRecordS.to_name)
  return to_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MailRecordS::set_to_name(const ::std::string& value) {
  set_has_to_name();
  to_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.MailRecordS.to_name)
}
 void MailRecordS::set_to_name(const char* value) {
  set_has_to_name();
  to_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.MailRecordS.to_name)
}
 void MailRecordS::set_to_name(const char* value, size_t size) {
  set_has_to_name();
  to_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.MailRecordS.to_name)
}
 ::std::string* MailRecordS::mutable_to_name() {
  set_has_to_name();
  // @@protoc_insertion_point(field_mutable:msg_maj.MailRecordS.to_name)
  return to_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MailRecordS::release_to_name() {
  // @@protoc_insertion_point(field_release:msg_maj.MailRecordS.to_name)
  clear_has_to_name();
  return to_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MailRecordS::set_allocated_to_name(::std::string* to_name) {
  if (to_name != NULL) {
    set_has_to_name();
  } else {
    clear_has_to_name();
  }
  to_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to_name);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.MailRecordS.to_name)
}

// required string title = 7;
bool MailRecordS::has_title() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void MailRecordS::set_has_title() {
  _has_bits_[0] |= 0x00000040u;
}
void MailRecordS::clear_has_title() {
  _has_bits_[0] &= ~0x00000040u;
}
void MailRecordS::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
 const ::std::string& MailRecordS::title() const {
  // @@protoc_insertion_point(field_get:msg_maj.MailRecordS.title)
  return title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MailRecordS::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.MailRecordS.title)
}
 void MailRecordS::set_title(const char* value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.MailRecordS.title)
}
 void MailRecordS::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.MailRecordS.title)
}
 ::std::string* MailRecordS::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:msg_maj.MailRecordS.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MailRecordS::release_title() {
  // @@protoc_insertion_point(field_release:msg_maj.MailRecordS.title)
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MailRecordS::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.MailRecordS.title)
}

// required string content = 8;
bool MailRecordS::has_content() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void MailRecordS::set_has_content() {
  _has_bits_[0] |= 0x00000080u;
}
void MailRecordS::clear_has_content() {
  _has_bits_[0] &= ~0x00000080u;
}
void MailRecordS::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
 const ::std::string& MailRecordS::content() const {
  // @@protoc_insertion_point(field_get:msg_maj.MailRecordS.content)
  return content_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MailRecordS::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.MailRecordS.content)
}
 void MailRecordS::set_content(const char* value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.MailRecordS.content)
}
 void MailRecordS::set_content(const char* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.MailRecordS.content)
}
 ::std::string* MailRecordS::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:msg_maj.MailRecordS.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MailRecordS::release_content() {
  // @@protoc_insertion_point(field_release:msg_maj.MailRecordS.content)
  clear_has_content();
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MailRecordS::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.MailRecordS.content)
}

// required int32 room_cards = 9;
bool MailRecordS::has_room_cards() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void MailRecordS::set_has_room_cards() {
  _has_bits_[0] |= 0x00000100u;
}
void MailRecordS::clear_has_room_cards() {
  _has_bits_[0] &= ~0x00000100u;
}
void MailRecordS::clear_room_cards() {
  room_cards_ = 0;
  clear_has_room_cards();
}
 ::google::protobuf::int32 MailRecordS::room_cards() const {
  // @@protoc_insertion_point(field_get:msg_maj.MailRecordS.room_cards)
  return room_cards_;
}
 void MailRecordS::set_room_cards(::google::protobuf::int32 value) {
  set_has_room_cards();
  room_cards_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.MailRecordS.room_cards)
}

// required int32 mark = 10;
bool MailRecordS::has_mark() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void MailRecordS::set_has_mark() {
  _has_bits_[0] |= 0x00000200u;
}
void MailRecordS::clear_has_mark() {
  _has_bits_[0] &= ~0x00000200u;
}
void MailRecordS::clear_mark() {
  mark_ = 0;
  clear_has_mark();
}
 ::google::protobuf::int32 MailRecordS::mark() const {
  // @@protoc_insertion_point(field_get:msg_maj.MailRecordS.mark)
  return mark_;
}
 void MailRecordS::set_mark(::google::protobuf::int32 value) {
  set_has_mark();
  mark_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.MailRecordS.mark)
}

// required uint64 create_time = 11;
bool MailRecordS::has_create_time() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void MailRecordS::set_has_create_time() {
  _has_bits_[0] |= 0x00000400u;
}
void MailRecordS::clear_has_create_time() {
  _has_bits_[0] &= ~0x00000400u;
}
void MailRecordS::clear_create_time() {
  create_time_ = GOOGLE_ULONGLONG(0);
  clear_has_create_time();
}
 ::google::protobuf::uint64 MailRecordS::create_time() const {
  // @@protoc_insertion_point(field_get:msg_maj.MailRecordS.create_time)
  return create_time_;
}
 void MailRecordS::set_create_time(::google::protobuf::uint64 value) {
  set_has_create_time();
  create_time_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.MailRecordS.create_time)
}

// required uint32 fetch_time = 12;
bool MailRecordS::has_fetch_time() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void MailRecordS::set_has_fetch_time() {
  _has_bits_[0] |= 0x00000800u;
}
void MailRecordS::clear_has_fetch_time() {
  _has_bits_[0] &= ~0x00000800u;
}
void MailRecordS::clear_fetch_time() {
  fetch_time_ = 0u;
  clear_has_fetch_time();
}
 ::google::protobuf::uint32 MailRecordS::fetch_time() const {
  // @@protoc_insertion_point(field_get:msg_maj.MailRecordS.fetch_time)
  return fetch_time_;
}
 void MailRecordS::set_fetch_time(::google::protobuf::uint32 value) {
  set_has_fetch_time();
  fetch_time_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.MailRecordS.fetch_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MailSystemLogS::kIdFieldNumber;
const int MailSystemLogS::kMailIdFieldNumber;
const int MailSystemLogS::kUidFieldNumber;
const int MailSystemLogS::kMarkFieldNumber;
const int MailSystemLogS::kCreateTimeFieldNumber;
const int MailSystemLogS::kFetchTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MailSystemLogS::MailSystemLogS()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.MailSystemLogS)
}

void MailSystemLogS::InitAsDefaultInstance() {
}

MailSystemLogS::MailSystemLogS(const MailSystemLogS& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.MailSystemLogS)
}

void MailSystemLogS::SharedCtor() {
  _cached_size_ = 0;
  id_ = GOOGLE_ULONGLONG(0);
  mail_id_ = GOOGLE_ULONGLONG(0);
  uid_ = GOOGLE_ULONGLONG(0);
  mark_ = 0;
  create_time_ = GOOGLE_ULONGLONG(0);
  fetch_time_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MailSystemLogS::~MailSystemLogS() {
  // @@protoc_insertion_point(destructor:msg_maj.MailSystemLogS)
  SharedDtor();
}

void MailSystemLogS::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MailSystemLogS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MailSystemLogS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MailSystemLogS_descriptor_;
}

const MailSystemLogS& MailSystemLogS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmail_2eproto();
  return *default_instance_;
}

MailSystemLogS* MailSystemLogS::default_instance_ = NULL;

MailSystemLogS* MailSystemLogS::New(::google::protobuf::Arena* arena) const {
  MailSystemLogS* n = new MailSystemLogS;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MailSystemLogS::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.MailSystemLogS)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(MailSystemLogS, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MailSystemLogS*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 63u) {
    ZR_(id_, fetch_time_);
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MailSystemLogS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.MailSystemLogS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_mail_id;
        break;
      }

      // required uint64 mail_id = 2;
      case 2: {
        if (tag == 16) {
         parse_mail_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &mail_id_)));
          set_has_mail_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_uid;
        break;
      }

      // required uint64 uid = 3;
      case 3: {
        if (tag == 24) {
         parse_uid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_mark;
        break;
      }

      // required int32 mark = 4;
      case 4: {
        if (tag == 32) {
         parse_mark:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mark_)));
          set_has_mark();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_create_time;
        break;
      }

      // required uint64 create_time = 5;
      case 5: {
        if (tag == 40) {
         parse_create_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &create_time_)));
          set_has_create_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_fetch_time;
        break;
      }

      // required uint32 fetch_time = 6;
      case 6: {
        if (tag == 48) {
         parse_fetch_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fetch_time_)));
          set_has_fetch_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.MailSystemLogS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.MailSystemLogS)
  return false;
#undef DO_
}

void MailSystemLogS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.MailSystemLogS)
  // required uint64 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // required uint64 mail_id = 2;
  if (has_mail_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->mail_id(), output);
  }

  // required uint64 uid = 3;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->uid(), output);
  }

  // required int32 mark = 4;
  if (has_mark()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->mark(), output);
  }

  // required uint64 create_time = 5;
  if (has_create_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->create_time(), output);
  }

  // required uint32 fetch_time = 6;
  if (has_fetch_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->fetch_time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.MailSystemLogS)
}

::google::protobuf::uint8* MailSystemLogS::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.MailSystemLogS)
  // required uint64 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // required uint64 mail_id = 2;
  if (has_mail_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->mail_id(), target);
  }

  // required uint64 uid = 3;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->uid(), target);
  }

  // required int32 mark = 4;
  if (has_mark()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->mark(), target);
  }

  // required uint64 create_time = 5;
  if (has_create_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->create_time(), target);
  }

  // required uint32 fetch_time = 6;
  if (has_fetch_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->fetch_time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.MailSystemLogS)
  return target;
}

int MailSystemLogS::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:msg_maj.MailSystemLogS)
  int total_size = 0;

  if (has_id()) {
    // required uint64 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  if (has_mail_id()) {
    // required uint64 mail_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->mail_id());
  }

  if (has_uid()) {
    // required uint64 uid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uid());
  }

  if (has_mark()) {
    // required int32 mark = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mark());
  }

  if (has_create_time()) {
    // required uint64 create_time = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->create_time());
  }

  if (has_fetch_time()) {
    // required uint32 fetch_time = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->fetch_time());
  }

  return total_size;
}
int MailSystemLogS::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.MailSystemLogS)
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000003f) ^ 0x0000003f) == 0) {  // All required fields are present.
    // required uint64 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());

    // required uint64 mail_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->mail_id());

    // required uint64 uid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uid());

    // required int32 mark = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mark());

    // required uint64 create_time = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->create_time());

    // required uint32 fetch_time = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->fetch_time());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MailSystemLogS::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.MailSystemLogS)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MailSystemLogS* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MailSystemLogS>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.MailSystemLogS)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.MailSystemLogS)
    MergeFrom(*source);
  }
}

void MailSystemLogS::MergeFrom(const MailSystemLogS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.MailSystemLogS)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_mail_id()) {
      set_mail_id(from.mail_id());
    }
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_mark()) {
      set_mark(from.mark());
    }
    if (from.has_create_time()) {
      set_create_time(from.create_time());
    }
    if (from.has_fetch_time()) {
      set_fetch_time(from.fetch_time());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MailSystemLogS::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.MailSystemLogS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MailSystemLogS::CopyFrom(const MailSystemLogS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.MailSystemLogS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MailSystemLogS::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;

  return true;
}

void MailSystemLogS::Swap(MailSystemLogS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MailSystemLogS::InternalSwap(MailSystemLogS* other) {
  std::swap(id_, other->id_);
  std::swap(mail_id_, other->mail_id_);
  std::swap(uid_, other->uid_);
  std::swap(mark_, other->mark_);
  std::swap(create_time_, other->create_time_);
  std::swap(fetch_time_, other->fetch_time_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MailSystemLogS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MailSystemLogS_descriptor_;
  metadata.reflection = MailSystemLogS_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MailSystemLogS

// required uint64 id = 1;
bool MailSystemLogS::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MailSystemLogS::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void MailSystemLogS::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void MailSystemLogS::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
 ::google::protobuf::uint64 MailSystemLogS::id() const {
  // @@protoc_insertion_point(field_get:msg_maj.MailSystemLogS.id)
  return id_;
}
 void MailSystemLogS::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.MailSystemLogS.id)
}

// required uint64 mail_id = 2;
bool MailSystemLogS::has_mail_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MailSystemLogS::set_has_mail_id() {
  _has_bits_[0] |= 0x00000002u;
}
void MailSystemLogS::clear_has_mail_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void MailSystemLogS::clear_mail_id() {
  mail_id_ = GOOGLE_ULONGLONG(0);
  clear_has_mail_id();
}
 ::google::protobuf::uint64 MailSystemLogS::mail_id() const {
  // @@protoc_insertion_point(field_get:msg_maj.MailSystemLogS.mail_id)
  return mail_id_;
}
 void MailSystemLogS::set_mail_id(::google::protobuf::uint64 value) {
  set_has_mail_id();
  mail_id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.MailSystemLogS.mail_id)
}

// required uint64 uid = 3;
bool MailSystemLogS::has_uid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void MailSystemLogS::set_has_uid() {
  _has_bits_[0] |= 0x00000004u;
}
void MailSystemLogS::clear_has_uid() {
  _has_bits_[0] &= ~0x00000004u;
}
void MailSystemLogS::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
 ::google::protobuf::uint64 MailSystemLogS::uid() const {
  // @@protoc_insertion_point(field_get:msg_maj.MailSystemLogS.uid)
  return uid_;
}
 void MailSystemLogS::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.MailSystemLogS.uid)
}

// required int32 mark = 4;
bool MailSystemLogS::has_mark() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void MailSystemLogS::set_has_mark() {
  _has_bits_[0] |= 0x00000008u;
}
void MailSystemLogS::clear_has_mark() {
  _has_bits_[0] &= ~0x00000008u;
}
void MailSystemLogS::clear_mark() {
  mark_ = 0;
  clear_has_mark();
}
 ::google::protobuf::int32 MailSystemLogS::mark() const {
  // @@protoc_insertion_point(field_get:msg_maj.MailSystemLogS.mark)
  return mark_;
}
 void MailSystemLogS::set_mark(::google::protobuf::int32 value) {
  set_has_mark();
  mark_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.MailSystemLogS.mark)
}

// required uint64 create_time = 5;
bool MailSystemLogS::has_create_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void MailSystemLogS::set_has_create_time() {
  _has_bits_[0] |= 0x00000010u;
}
void MailSystemLogS::clear_has_create_time() {
  _has_bits_[0] &= ~0x00000010u;
}
void MailSystemLogS::clear_create_time() {
  create_time_ = GOOGLE_ULONGLONG(0);
  clear_has_create_time();
}
 ::google::protobuf::uint64 MailSystemLogS::create_time() const {
  // @@protoc_insertion_point(field_get:msg_maj.MailSystemLogS.create_time)
  return create_time_;
}
 void MailSystemLogS::set_create_time(::google::protobuf::uint64 value) {
  set_has_create_time();
  create_time_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.MailSystemLogS.create_time)
}

// required uint32 fetch_time = 6;
bool MailSystemLogS::has_fetch_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void MailSystemLogS::set_has_fetch_time() {
  _has_bits_[0] |= 0x00000020u;
}
void MailSystemLogS::clear_has_fetch_time() {
  _has_bits_[0] &= ~0x00000020u;
}
void MailSystemLogS::clear_fetch_time() {
  fetch_time_ = 0u;
  clear_has_fetch_time();
}
 ::google::protobuf::uint32 MailSystemLogS::fetch_time() const {
  // @@protoc_insertion_point(field_get:msg_maj.MailSystemLogS.fetch_time)
  return fetch_time_;
}
 void MailSystemLogS::set_fetch_time(::google::protobuf::uint32 value) {
  set_has_fetch_time();
  fetch_time_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.MailSystemLogS.fetch_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace msg_maj

// @@protoc_insertion_point(global_scope)
