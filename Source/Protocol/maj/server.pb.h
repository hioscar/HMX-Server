// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server.proto

#ifndef PROTOBUF_server_2eproto__INCLUDED
#define PROTOBUF_server_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace fogs {
namespace proto {
namespace msg {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_server_2eproto();
void protobuf_AssignDesc_server_2eproto();
void protobuf_ShutdownFile_server_2eproto();

class AddConnectionRequest;
class AddConnectionResponse;
class AddSessionIP;
class DisConnectionRequest;
class DisConnectionResponse;
class HandshakeRequest;
class HandshakeResponse;
class HeartbeatRequest;
class HeartbeatResponse;
class NotifyOnConnection;
class ReloadConfigForm;
class ResetPlayerData;
class ServerInfo;
class SessionAccountName;
class SessionDisConnectReq;
class SessionDisConnectResp;
class UpdateRoomInfo;
class UpdateServerInfo;
class UpdateServerPersons;
class UpdateSessionConn;

enum RoomStatus {
  RoomStatus_Open = 1,
  RoomStatus_Close = 2
};
bool RoomStatus_IsValid(int value);
const RoomStatus RoomStatus_MIN = RoomStatus_Open;
const RoomStatus RoomStatus_MAX = RoomStatus_Close;
const int RoomStatus_ARRAYSIZE = RoomStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* RoomStatus_descriptor();
inline const ::std::string& RoomStatus_Name(RoomStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    RoomStatus_descriptor(), value);
}
inline bool RoomStatus_Parse(
    const ::std::string& name, RoomStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RoomStatus>(
    RoomStatus_descriptor(), name, value);
}
// ===================================================================

class HandshakeRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fogs.proto.msg.HandshakeRequest) */ {
 public:
  HandshakeRequest();
  virtual ~HandshakeRequest();

  HandshakeRequest(const HandshakeRequest& from);

  inline HandshakeRequest& operator=(const HandshakeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HandshakeRequest& default_instance();

  void Swap(HandshakeRequest* other);

  // implements Message ----------------------------------------------

  inline HandshakeRequest* New() const { return New(NULL); }

  HandshakeRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HandshakeRequest& from);
  void MergeFrom(const HandshakeRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HandshakeRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string server_name = 1;
  bool has_server_name() const;
  void clear_server_name();
  static const int kServerNameFieldNumber = 1;
  const ::std::string& server_name() const;
  void set_server_name(const ::std::string& value);
  void set_server_name(const char* value);
  void set_server_name(const char* value, size_t size);
  ::std::string* mutable_server_name();
  ::std::string* release_server_name();
  void set_allocated_server_name(::std::string* server_name);

  // optional uint32 server_id = 2;
  bool has_server_id() const;
  void clear_server_id();
  static const int kServerIdFieldNumber = 2;
  ::google::protobuf::uint32 server_id() const;
  void set_server_id(::google::protobuf::uint32 value);

  // optional string server_ip = 3;
  bool has_server_ip() const;
  void clear_server_ip();
  static const int kServerIpFieldNumber = 3;
  const ::std::string& server_ip() const;
  void set_server_ip(const ::std::string& value);
  void set_server_ip(const char* value);
  void set_server_ip(const char* value, size_t size);
  ::std::string* mutable_server_ip();
  ::std::string* release_server_ip();
  void set_allocated_server_ip(::std::string* server_ip);

  // optional uint32 server_port = 4;
  bool has_server_port() const;
  void clear_server_port();
  static const int kServerPortFieldNumber = 4;
  ::google::protobuf::uint32 server_port() const;
  void set_server_port(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:fogs.proto.msg.HandshakeRequest)
 private:
  inline void set_has_server_name();
  inline void clear_has_server_name();
  inline void set_has_server_id();
  inline void clear_has_server_id();
  inline void set_has_server_ip();
  inline void clear_has_server_ip();
  inline void set_has_server_port();
  inline void clear_has_server_port();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr server_name_;
  ::google::protobuf::internal::ArenaStringPtr server_ip_;
  ::google::protobuf::uint32 server_id_;
  ::google::protobuf::uint32 server_port_;
  friend void  protobuf_AddDesc_server_2eproto();
  friend void protobuf_AssignDesc_server_2eproto();
  friend void protobuf_ShutdownFile_server_2eproto();

  void InitAsDefaultInstance();
  static HandshakeRequest* default_instance_;
};
// -------------------------------------------------------------------

class HandshakeResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fogs.proto.msg.HandshakeResponse) */ {
 public:
  HandshakeResponse();
  virtual ~HandshakeResponse();

  HandshakeResponse(const HandshakeResponse& from);

  inline HandshakeResponse& operator=(const HandshakeResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HandshakeResponse& default_instance();

  void Swap(HandshakeResponse* other);

  // implements Message ----------------------------------------------

  inline HandshakeResponse* New() const { return New(NULL); }

  HandshakeResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HandshakeResponse& from);
  void MergeFrom(const HandshakeResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HandshakeResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // optional string server_name = 2;
  bool has_server_name() const;
  void clear_server_name();
  static const int kServerNameFieldNumber = 2;
  const ::std::string& server_name() const;
  void set_server_name(const ::std::string& value);
  void set_server_name(const char* value);
  void set_server_name(const char* value, size_t size);
  ::std::string* mutable_server_name();
  ::std::string* release_server_name();
  void set_allocated_server_name(::std::string* server_name);

  // optional uint32 server_id = 3;
  bool has_server_id() const;
  void clear_server_id();
  static const int kServerIdFieldNumber = 3;
  ::google::protobuf::uint32 server_id() const;
  void set_server_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:fogs.proto.msg.HandshakeResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_server_name();
  inline void clear_has_server_name();
  inline void set_has_server_id();
  inline void clear_has_server_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr server_name_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::uint32 server_id_;
  friend void  protobuf_AddDesc_server_2eproto();
  friend void protobuf_AssignDesc_server_2eproto();
  friend void protobuf_ShutdownFile_server_2eproto();

  void InitAsDefaultInstance();
  static HandshakeResponse* default_instance_;
};
// -------------------------------------------------------------------

class DisConnectionRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fogs.proto.msg.DisConnectionRequest) */ {
 public:
  DisConnectionRequest();
  virtual ~DisConnectionRequest();

  DisConnectionRequest(const DisConnectionRequest& from);

  inline DisConnectionRequest& operator=(const DisConnectionRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DisConnectionRequest& default_instance();

  void Swap(DisConnectionRequest* other);

  // implements Message ----------------------------------------------

  inline DisConnectionRequest* New() const { return New(NULL); }

  DisConnectionRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DisConnectionRequest& from);
  void MergeFrom(const DisConnectionRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DisConnectionRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 server_id = 1;
  bool has_server_id() const;
  void clear_server_id();
  static const int kServerIdFieldNumber = 1;
  ::google::protobuf::uint32 server_id() const;
  void set_server_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:fogs.proto.msg.DisConnectionRequest)
 private:
  inline void set_has_server_id();
  inline void clear_has_server_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 server_id_;
  friend void  protobuf_AddDesc_server_2eproto();
  friend void protobuf_AssignDesc_server_2eproto();
  friend void protobuf_ShutdownFile_server_2eproto();

  void InitAsDefaultInstance();
  static DisConnectionRequest* default_instance_;
};
// -------------------------------------------------------------------

class DisConnectionResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fogs.proto.msg.DisConnectionResponse) */ {
 public:
  DisConnectionResponse();
  virtual ~DisConnectionResponse();

  DisConnectionResponse(const DisConnectionResponse& from);

  inline DisConnectionResponse& operator=(const DisConnectionResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DisConnectionResponse& default_instance();

  void Swap(DisConnectionResponse* other);

  // implements Message ----------------------------------------------

  inline DisConnectionResponse* New() const { return New(NULL); }

  DisConnectionResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DisConnectionResponse& from);
  void MergeFrom(const DisConnectionResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DisConnectionResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:fogs.proto.msg.DisConnectionResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend void  protobuf_AddDesc_server_2eproto();
  friend void protobuf_AssignDesc_server_2eproto();
  friend void protobuf_ShutdownFile_server_2eproto();

  void InitAsDefaultInstance();
  static DisConnectionResponse* default_instance_;
};
// -------------------------------------------------------------------

class HeartbeatRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fogs.proto.msg.HeartbeatRequest) */ {
 public:
  HeartbeatRequest();
  virtual ~HeartbeatRequest();

  HeartbeatRequest(const HeartbeatRequest& from);

  inline HeartbeatRequest& operator=(const HeartbeatRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeartbeatRequest& default_instance();

  void Swap(HeartbeatRequest* other);

  // implements Message ----------------------------------------------

  inline HeartbeatRequest* New() const { return New(NULL); }

  HeartbeatRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeartbeatRequest& from);
  void MergeFrom(const HeartbeatRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HeartbeatRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:fogs.proto.msg.HeartbeatRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_server_2eproto();
  friend void protobuf_AssignDesc_server_2eproto();
  friend void protobuf_ShutdownFile_server_2eproto();

  void InitAsDefaultInstance();
  static HeartbeatRequest* default_instance_;
};
// -------------------------------------------------------------------

class HeartbeatResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fogs.proto.msg.HeartbeatResponse) */ {
 public:
  HeartbeatResponse();
  virtual ~HeartbeatResponse();

  HeartbeatResponse(const HeartbeatResponse& from);

  inline HeartbeatResponse& operator=(const HeartbeatResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeartbeatResponse& default_instance();

  void Swap(HeartbeatResponse* other);

  // implements Message ----------------------------------------------

  inline HeartbeatResponse* New() const { return New(NULL); }

  HeartbeatResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeartbeatResponse& from);
  void MergeFrom(const HeartbeatResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HeartbeatResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:fogs.proto.msg.HeartbeatResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_server_2eproto();
  friend void protobuf_AssignDesc_server_2eproto();
  friend void protobuf_ShutdownFile_server_2eproto();

  void InitAsDefaultInstance();
  static HeartbeatResponse* default_instance_;
};
// -------------------------------------------------------------------

class ServerInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fogs.proto.msg.ServerInfo) */ {
 public:
  ServerInfo();
  virtual ~ServerInfo();

  ServerInfo(const ServerInfo& from);

  inline ServerInfo& operator=(const ServerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerInfo& default_instance();

  void Swap(ServerInfo* other);

  // implements Message ----------------------------------------------

  inline ServerInfo* New() const { return New(NULL); }

  ServerInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerInfo& from);
  void MergeFrom(const ServerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ServerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 server_id = 1;
  bool has_server_id() const;
  void clear_server_id();
  static const int kServerIdFieldNumber = 1;
  ::google::protobuf::uint32 server_id() const;
  void set_server_id(::google::protobuf::uint32 value);

  // optional string server_ip = 2;
  bool has_server_ip() const;
  void clear_server_ip();
  static const int kServerIpFieldNumber = 2;
  const ::std::string& server_ip() const;
  void set_server_ip(const ::std::string& value);
  void set_server_ip(const char* value);
  void set_server_ip(const char* value, size_t size);
  ::std::string* mutable_server_ip();
  ::std::string* release_server_ip();
  void set_allocated_server_ip(::std::string* server_ip);

  // optional uint32 server_port = 3;
  bool has_server_port() const;
  void clear_server_port();
  static const int kServerPortFieldNumber = 3;
  ::google::protobuf::uint32 server_port() const;
  void set_server_port(::google::protobuf::uint32 value);

  // optional uint32 server_persons = 4;
  bool has_server_persons() const;
  void clear_server_persons();
  static const int kServerPersonsFieldNumber = 4;
  ::google::protobuf::uint32 server_persons() const;
  void set_server_persons(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:fogs.proto.msg.ServerInfo)
 private:
  inline void set_has_server_id();
  inline void clear_has_server_id();
  inline void set_has_server_ip();
  inline void clear_has_server_ip();
  inline void set_has_server_port();
  inline void clear_has_server_port();
  inline void set_has_server_persons();
  inline void clear_has_server_persons();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr server_ip_;
  ::google::protobuf::uint32 server_id_;
  ::google::protobuf::uint32 server_port_;
  ::google::protobuf::uint32 server_persons_;
  friend void  protobuf_AddDesc_server_2eproto();
  friend void protobuf_AssignDesc_server_2eproto();
  friend void protobuf_ShutdownFile_server_2eproto();

  void InitAsDefaultInstance();
  static ServerInfo* default_instance_;
};
// -------------------------------------------------------------------

class AddConnectionRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fogs.proto.msg.AddConnectionRequest) */ {
 public:
  AddConnectionRequest();
  virtual ~AddConnectionRequest();

  AddConnectionRequest(const AddConnectionRequest& from);

  inline AddConnectionRequest& operator=(const AddConnectionRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddConnectionRequest& default_instance();

  void Swap(AddConnectionRequest* other);

  // implements Message ----------------------------------------------

  inline AddConnectionRequest* New() const { return New(NULL); }

  AddConnectionRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddConnectionRequest& from);
  void MergeFrom(const AddConnectionRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AddConnectionRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .fogs.proto.msg.ServerInfo server_info = 1;
  bool has_server_info() const;
  void clear_server_info();
  static const int kServerInfoFieldNumber = 1;
  const ::fogs::proto::msg::ServerInfo& server_info() const;
  ::fogs::proto::msg::ServerInfo* mutable_server_info();
  ::fogs::proto::msg::ServerInfo* release_server_info();
  void set_allocated_server_info(::fogs::proto::msg::ServerInfo* server_info);

  // @@protoc_insertion_point(class_scope:fogs.proto.msg.AddConnectionRequest)
 private:
  inline void set_has_server_info();
  inline void clear_has_server_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::fogs::proto::msg::ServerInfo* server_info_;
  friend void  protobuf_AddDesc_server_2eproto();
  friend void protobuf_AssignDesc_server_2eproto();
  friend void protobuf_ShutdownFile_server_2eproto();

  void InitAsDefaultInstance();
  static AddConnectionRequest* default_instance_;
};
// -------------------------------------------------------------------

class AddConnectionResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fogs.proto.msg.AddConnectionResponse) */ {
 public:
  AddConnectionResponse();
  virtual ~AddConnectionResponse();

  AddConnectionResponse(const AddConnectionResponse& from);

  inline AddConnectionResponse& operator=(const AddConnectionResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddConnectionResponse& default_instance();

  void Swap(AddConnectionResponse* other);

  // implements Message ----------------------------------------------

  inline AddConnectionResponse* New() const { return New(NULL); }

  AddConnectionResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddConnectionResponse& from);
  void MergeFrom(const AddConnectionResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AddConnectionResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:fogs.proto.msg.AddConnectionResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend void  protobuf_AddDesc_server_2eproto();
  friend void protobuf_AssignDesc_server_2eproto();
  friend void protobuf_ShutdownFile_server_2eproto();

  void InitAsDefaultInstance();
  static AddConnectionResponse* default_instance_;
};
// -------------------------------------------------------------------

class SessionDisConnectReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fogs.proto.msg.SessionDisConnectReq) */ {
 public:
  SessionDisConnectReq();
  virtual ~SessionDisConnectReq();

  SessionDisConnectReq(const SessionDisConnectReq& from);

  inline SessionDisConnectReq& operator=(const SessionDisConnectReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SessionDisConnectReq& default_instance();

  void Swap(SessionDisConnectReq* other);

  // implements Message ----------------------------------------------

  inline SessionDisConnectReq* New() const { return New(NULL); }

  SessionDisConnectReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SessionDisConnectReq& from);
  void MergeFrom(const SessionDisConnectReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SessionDisConnectReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 session_id = 1;
  bool has_session_id() const;
  void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  ::google::protobuf::uint32 session_id() const;
  void set_session_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:fogs.proto.msg.SessionDisConnectReq)
 private:
  inline void set_has_session_id();
  inline void clear_has_session_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 session_id_;
  friend void  protobuf_AddDesc_server_2eproto();
  friend void protobuf_AssignDesc_server_2eproto();
  friend void protobuf_ShutdownFile_server_2eproto();

  void InitAsDefaultInstance();
  static SessionDisConnectReq* default_instance_;
};
// -------------------------------------------------------------------

class SessionDisConnectResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fogs.proto.msg.SessionDisConnectResp) */ {
 public:
  SessionDisConnectResp();
  virtual ~SessionDisConnectResp();

  SessionDisConnectResp(const SessionDisConnectResp& from);

  inline SessionDisConnectResp& operator=(const SessionDisConnectResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SessionDisConnectResp& default_instance();

  void Swap(SessionDisConnectResp* other);

  // implements Message ----------------------------------------------

  inline SessionDisConnectResp* New() const { return New(NULL); }

  SessionDisConnectResp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SessionDisConnectResp& from);
  void MergeFrom(const SessionDisConnectResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SessionDisConnectResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // optional uint32 session_id = 2;
  bool has_session_id() const;
  void clear_session_id();
  static const int kSessionIdFieldNumber = 2;
  ::google::protobuf::uint32 session_id() const;
  void set_session_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:fogs.proto.msg.SessionDisConnectResp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_session_id();
  inline void clear_has_session_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::uint32 session_id_;
  friend void  protobuf_AddDesc_server_2eproto();
  friend void protobuf_AssignDesc_server_2eproto();
  friend void protobuf_ShutdownFile_server_2eproto();

  void InitAsDefaultInstance();
  static SessionDisConnectResp* default_instance_;
};
// -------------------------------------------------------------------

class UpdateServerInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fogs.proto.msg.UpdateServerInfo) */ {
 public:
  UpdateServerInfo();
  virtual ~UpdateServerInfo();

  UpdateServerInfo(const UpdateServerInfo& from);

  inline UpdateServerInfo& operator=(const UpdateServerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateServerInfo& default_instance();

  void Swap(UpdateServerInfo* other);

  // implements Message ----------------------------------------------

  inline UpdateServerInfo* New() const { return New(NULL); }

  UpdateServerInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateServerInfo& from);
  void MergeFrom(const UpdateServerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UpdateServerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .fogs.proto.msg.ServerInfo server_info = 1;
  bool has_server_info() const;
  void clear_server_info();
  static const int kServerInfoFieldNumber = 1;
  const ::fogs::proto::msg::ServerInfo& server_info() const;
  ::fogs::proto::msg::ServerInfo* mutable_server_info();
  ::fogs::proto::msg::ServerInfo* release_server_info();
  void set_allocated_server_info(::fogs::proto::msg::ServerInfo* server_info);

  // @@protoc_insertion_point(class_scope:fogs.proto.msg.UpdateServerInfo)
 private:
  inline void set_has_server_info();
  inline void clear_has_server_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::fogs::proto::msg::ServerInfo* server_info_;
  friend void  protobuf_AddDesc_server_2eproto();
  friend void protobuf_AssignDesc_server_2eproto();
  friend void protobuf_ShutdownFile_server_2eproto();

  void InitAsDefaultInstance();
  static UpdateServerInfo* default_instance_;
};
// -------------------------------------------------------------------

class AddSessionIP : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fogs.proto.msg.AddSessionIP) */ {
 public:
  AddSessionIP();
  virtual ~AddSessionIP();

  AddSessionIP(const AddSessionIP& from);

  inline AddSessionIP& operator=(const AddSessionIP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddSessionIP& default_instance();

  void Swap(AddSessionIP* other);

  // implements Message ----------------------------------------------

  inline AddSessionIP* New() const { return New(NULL); }

  AddSessionIP* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddSessionIP& from);
  void MergeFrom(const AddSessionIP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AddSessionIP* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 session_id = 1;
  bool has_session_id() const;
  void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  ::google::protobuf::uint32 session_id() const;
  void set_session_id(::google::protobuf::uint32 value);

  // optional string ip = 2;
  bool has_ip() const;
  void clear_ip();
  static const int kIpFieldNumber = 2;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // @@protoc_insertion_point(class_scope:fogs.proto.msg.AddSessionIP)
 private:
  inline void set_has_session_id();
  inline void clear_has_session_id();
  inline void set_has_ip();
  inline void clear_has_ip();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::uint32 session_id_;
  friend void  protobuf_AddDesc_server_2eproto();
  friend void protobuf_AssignDesc_server_2eproto();
  friend void protobuf_ShutdownFile_server_2eproto();

  void InitAsDefaultInstance();
  static AddSessionIP* default_instance_;
};
// -------------------------------------------------------------------

class SessionAccountName : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fogs.proto.msg.SessionAccountName) */ {
 public:
  SessionAccountName();
  virtual ~SessionAccountName();

  SessionAccountName(const SessionAccountName& from);

  inline SessionAccountName& operator=(const SessionAccountName& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SessionAccountName& default_instance();

  void Swap(SessionAccountName* other);

  // implements Message ----------------------------------------------

  inline SessionAccountName* New() const { return New(NULL); }

  SessionAccountName* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SessionAccountName& from);
  void MergeFrom(const SessionAccountName& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SessionAccountName* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 user_id = 1;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint32 user_id() const;
  void set_user_id(::google::protobuf::uint32 value);

  // optional string account = 2;
  bool has_account() const;
  void clear_account();
  static const int kAccountFieldNumber = 2;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // optional string name = 3;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string icon_addr = 4;
  bool has_icon_addr() const;
  void clear_icon_addr();
  static const int kIconAddrFieldNumber = 4;
  const ::std::string& icon_addr() const;
  void set_icon_addr(const ::std::string& value);
  void set_icon_addr(const char* value);
  void set_icon_addr(const char* value, size_t size);
  ::std::string* mutable_icon_addr();
  ::std::string* release_icon_addr();
  void set_allocated_icon_addr(::std::string* icon_addr);

  // optional uint32 share_user_id = 5;
  bool has_share_user_id() const;
  void clear_share_user_id();
  static const int kShareUserIdFieldNumber = 5;
  ::google::protobuf::uint32 share_user_id() const;
  void set_share_user_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:fogs.proto.msg.SessionAccountName)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_account();
  inline void clear_has_account();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_icon_addr();
  inline void clear_has_icon_addr();
  inline void set_has_share_user_id();
  inline void clear_has_share_user_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 user_id_;
  ::google::protobuf::uint32 share_user_id_;
  ::google::protobuf::internal::ArenaStringPtr icon_addr_;
  friend void  protobuf_AddDesc_server_2eproto();
  friend void protobuf_AssignDesc_server_2eproto();
  friend void protobuf_ShutdownFile_server_2eproto();

  void InitAsDefaultInstance();
  static SessionAccountName* default_instance_;
};
// -------------------------------------------------------------------

class UpdateRoomInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fogs.proto.msg.UpdateRoomInfo) */ {
 public:
  UpdateRoomInfo();
  virtual ~UpdateRoomInfo();

  UpdateRoomInfo(const UpdateRoomInfo& from);

  inline UpdateRoomInfo& operator=(const UpdateRoomInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateRoomInfo& default_instance();

  void Swap(UpdateRoomInfo* other);

  // implements Message ----------------------------------------------

  inline UpdateRoomInfo* New() const { return New(NULL); }

  UpdateRoomInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateRoomInfo& from);
  void MergeFrom(const UpdateRoomInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UpdateRoomInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 room_id = 1;
  bool has_room_id() const;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  ::google::protobuf::uint32 room_id() const;
  void set_room_id(::google::protobuf::uint32 value);

  // optional uint32 server_id = 2;
  bool has_server_id() const;
  void clear_server_id();
  static const int kServerIdFieldNumber = 2;
  ::google::protobuf::uint32 server_id() const;
  void set_server_id(::google::protobuf::uint32 value);

  // required .fogs.proto.msg.RoomStatus room_starus = 3;
  bool has_room_starus() const;
  void clear_room_starus();
  static const int kRoomStarusFieldNumber = 3;
  ::fogs::proto::msg::RoomStatus room_starus() const;
  void set_room_starus(::fogs::proto::msg::RoomStatus value);

  // @@protoc_insertion_point(class_scope:fogs.proto.msg.UpdateRoomInfo)
 private:
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_server_id();
  inline void clear_has_server_id();
  inline void set_has_room_starus();
  inline void clear_has_room_starus();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint32 server_id_;
  int room_starus_;
  friend void  protobuf_AddDesc_server_2eproto();
  friend void protobuf_AssignDesc_server_2eproto();
  friend void protobuf_ShutdownFile_server_2eproto();

  void InitAsDefaultInstance();
  static UpdateRoomInfo* default_instance_;
};
// -------------------------------------------------------------------

class UpdateSessionConn : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fogs.proto.msg.UpdateSessionConn) */ {
 public:
  UpdateSessionConn();
  virtual ~UpdateSessionConn();

  UpdateSessionConn(const UpdateSessionConn& from);

  inline UpdateSessionConn& operator=(const UpdateSessionConn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateSessionConn& default_instance();

  void Swap(UpdateSessionConn* other);

  // implements Message ----------------------------------------------

  inline UpdateSessionConn* New() const { return New(NULL); }

  UpdateSessionConn* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateSessionConn& from);
  void MergeFrom(const UpdateSessionConn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UpdateSessionConn* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:fogs.proto.msg.UpdateSessionConn)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_server_2eproto();
  friend void protobuf_AssignDesc_server_2eproto();
  friend void protobuf_ShutdownFile_server_2eproto();

  void InitAsDefaultInstance();
  static UpdateSessionConn* default_instance_;
};
// -------------------------------------------------------------------

class UpdateServerPersons : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fogs.proto.msg.UpdateServerPersons) */ {
 public:
  UpdateServerPersons();
  virtual ~UpdateServerPersons();

  UpdateServerPersons(const UpdateServerPersons& from);

  inline UpdateServerPersons& operator=(const UpdateServerPersons& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateServerPersons& default_instance();

  void Swap(UpdateServerPersons* other);

  // implements Message ----------------------------------------------

  inline UpdateServerPersons* New() const { return New(NULL); }

  UpdateServerPersons* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateServerPersons& from);
  void MergeFrom(const UpdateServerPersons& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UpdateServerPersons* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 server_id = 1;
  bool has_server_id() const;
  void clear_server_id();
  static const int kServerIdFieldNumber = 1;
  ::google::protobuf::uint32 server_id() const;
  void set_server_id(::google::protobuf::uint32 value);

  // optional uint32 persons = 2;
  bool has_persons() const;
  void clear_persons();
  static const int kPersonsFieldNumber = 2;
  ::google::protobuf::uint32 persons() const;
  void set_persons(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:fogs.proto.msg.UpdateServerPersons)
 private:
  inline void set_has_server_id();
  inline void clear_has_server_id();
  inline void set_has_persons();
  inline void clear_has_persons();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 server_id_;
  ::google::protobuf::uint32 persons_;
  friend void  protobuf_AddDesc_server_2eproto();
  friend void protobuf_AssignDesc_server_2eproto();
  friend void protobuf_ShutdownFile_server_2eproto();

  void InitAsDefaultInstance();
  static UpdateServerPersons* default_instance_;
};
// -------------------------------------------------------------------

class NotifyOnConnection : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fogs.proto.msg.NotifyOnConnection) */ {
 public:
  NotifyOnConnection();
  virtual ~NotifyOnConnection();

  NotifyOnConnection(const NotifyOnConnection& from);

  inline NotifyOnConnection& operator=(const NotifyOnConnection& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyOnConnection& default_instance();

  void Swap(NotifyOnConnection* other);

  // implements Message ----------------------------------------------

  inline NotifyOnConnection* New() const { return New(NULL); }

  NotifyOnConnection* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyOnConnection& from);
  void MergeFrom(const NotifyOnConnection& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NotifyOnConnection* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 server_type = 1;
  bool has_server_type() const;
  void clear_server_type();
  static const int kServerTypeFieldNumber = 1;
  ::google::protobuf::uint32 server_type() const;
  void set_server_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:fogs.proto.msg.NotifyOnConnection)
 private:
  inline void set_has_server_type();
  inline void clear_has_server_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 server_type_;
  friend void  protobuf_AddDesc_server_2eproto();
  friend void protobuf_AssignDesc_server_2eproto();
  friend void protobuf_ShutdownFile_server_2eproto();

  void InitAsDefaultInstance();
  static NotifyOnConnection* default_instance_;
};
// -------------------------------------------------------------------

class ReloadConfigForm : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fogs.proto.msg.ReloadConfigForm) */ {
 public:
  ReloadConfigForm();
  virtual ~ReloadConfigForm();

  ReloadConfigForm(const ReloadConfigForm& from);

  inline ReloadConfigForm& operator=(const ReloadConfigForm& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReloadConfigForm& default_instance();

  void Swap(ReloadConfigForm* other);

  // implements Message ----------------------------------------------

  inline ReloadConfigForm* New() const { return New(NULL); }

  ReloadConfigForm* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReloadConfigForm& from);
  void MergeFrom(const ReloadConfigForm& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReloadConfigForm* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:fogs.proto.msg.ReloadConfigForm)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_server_2eproto();
  friend void protobuf_AssignDesc_server_2eproto();
  friend void protobuf_ShutdownFile_server_2eproto();

  void InitAsDefaultInstance();
  static ReloadConfigForm* default_instance_;
};
// -------------------------------------------------------------------

class ResetPlayerData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fogs.proto.msg.ResetPlayerData) */ {
 public:
  ResetPlayerData();
  virtual ~ResetPlayerData();

  ResetPlayerData(const ResetPlayerData& from);

  inline ResetPlayerData& operator=(const ResetPlayerData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResetPlayerData& default_instance();

  void Swap(ResetPlayerData* other);

  // implements Message ----------------------------------------------

  inline ResetPlayerData* New() const { return New(NULL); }

  ResetPlayerData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResetPlayerData& from);
  void MergeFrom(const ResetPlayerData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ResetPlayerData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 user_id = 1;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint32 user_id() const;
  void set_user_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:fogs.proto.msg.ResetPlayerData)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 user_id_;
  friend void  protobuf_AddDesc_server_2eproto();
  friend void protobuf_AssignDesc_server_2eproto();
  friend void protobuf_ShutdownFile_server_2eproto();

  void InitAsDefaultInstance();
  static ResetPlayerData* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// HandshakeRequest

// optional string server_name = 1;
inline bool HandshakeRequest::has_server_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HandshakeRequest::set_has_server_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HandshakeRequest::clear_has_server_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HandshakeRequest::clear_server_name() {
  server_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_server_name();
}
inline const ::std::string& HandshakeRequest::server_name() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.HandshakeRequest.server_name)
  return server_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HandshakeRequest::set_server_name(const ::std::string& value) {
  set_has_server_name();
  server_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fogs.proto.msg.HandshakeRequest.server_name)
}
inline void HandshakeRequest::set_server_name(const char* value) {
  set_has_server_name();
  server_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fogs.proto.msg.HandshakeRequest.server_name)
}
inline void HandshakeRequest::set_server_name(const char* value, size_t size) {
  set_has_server_name();
  server_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fogs.proto.msg.HandshakeRequest.server_name)
}
inline ::std::string* HandshakeRequest::mutable_server_name() {
  set_has_server_name();
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.HandshakeRequest.server_name)
  return server_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HandshakeRequest::release_server_name() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.HandshakeRequest.server_name)
  clear_has_server_name();
  return server_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HandshakeRequest::set_allocated_server_name(::std::string* server_name) {
  if (server_name != NULL) {
    set_has_server_name();
  } else {
    clear_has_server_name();
  }
  server_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), server_name);
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.HandshakeRequest.server_name)
}

// optional uint32 server_id = 2;
inline bool HandshakeRequest::has_server_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HandshakeRequest::set_has_server_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HandshakeRequest::clear_has_server_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HandshakeRequest::clear_server_id() {
  server_id_ = 0u;
  clear_has_server_id();
}
inline ::google::protobuf::uint32 HandshakeRequest::server_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.HandshakeRequest.server_id)
  return server_id_;
}
inline void HandshakeRequest::set_server_id(::google::protobuf::uint32 value) {
  set_has_server_id();
  server_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.HandshakeRequest.server_id)
}

// optional string server_ip = 3;
inline bool HandshakeRequest::has_server_ip() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HandshakeRequest::set_has_server_ip() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HandshakeRequest::clear_has_server_ip() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HandshakeRequest::clear_server_ip() {
  server_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_server_ip();
}
inline const ::std::string& HandshakeRequest::server_ip() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.HandshakeRequest.server_ip)
  return server_ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HandshakeRequest::set_server_ip(const ::std::string& value) {
  set_has_server_ip();
  server_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fogs.proto.msg.HandshakeRequest.server_ip)
}
inline void HandshakeRequest::set_server_ip(const char* value) {
  set_has_server_ip();
  server_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fogs.proto.msg.HandshakeRequest.server_ip)
}
inline void HandshakeRequest::set_server_ip(const char* value, size_t size) {
  set_has_server_ip();
  server_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fogs.proto.msg.HandshakeRequest.server_ip)
}
inline ::std::string* HandshakeRequest::mutable_server_ip() {
  set_has_server_ip();
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.HandshakeRequest.server_ip)
  return server_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HandshakeRequest::release_server_ip() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.HandshakeRequest.server_ip)
  clear_has_server_ip();
  return server_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HandshakeRequest::set_allocated_server_ip(::std::string* server_ip) {
  if (server_ip != NULL) {
    set_has_server_ip();
  } else {
    clear_has_server_ip();
  }
  server_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), server_ip);
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.HandshakeRequest.server_ip)
}

// optional uint32 server_port = 4;
inline bool HandshakeRequest::has_server_port() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HandshakeRequest::set_has_server_port() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HandshakeRequest::clear_has_server_port() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HandshakeRequest::clear_server_port() {
  server_port_ = 0u;
  clear_has_server_port();
}
inline ::google::protobuf::uint32 HandshakeRequest::server_port() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.HandshakeRequest.server_port)
  return server_port_;
}
inline void HandshakeRequest::set_server_port(::google::protobuf::uint32 value) {
  set_has_server_port();
  server_port_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.HandshakeRequest.server_port)
}

// -------------------------------------------------------------------

// HandshakeResponse

// optional int32 result = 1;
inline bool HandshakeResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HandshakeResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HandshakeResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HandshakeResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 HandshakeResponse::result() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.HandshakeResponse.result)
  return result_;
}
inline void HandshakeResponse::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.HandshakeResponse.result)
}

// optional string server_name = 2;
inline bool HandshakeResponse::has_server_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HandshakeResponse::set_has_server_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HandshakeResponse::clear_has_server_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HandshakeResponse::clear_server_name() {
  server_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_server_name();
}
inline const ::std::string& HandshakeResponse::server_name() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.HandshakeResponse.server_name)
  return server_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HandshakeResponse::set_server_name(const ::std::string& value) {
  set_has_server_name();
  server_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fogs.proto.msg.HandshakeResponse.server_name)
}
inline void HandshakeResponse::set_server_name(const char* value) {
  set_has_server_name();
  server_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fogs.proto.msg.HandshakeResponse.server_name)
}
inline void HandshakeResponse::set_server_name(const char* value, size_t size) {
  set_has_server_name();
  server_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fogs.proto.msg.HandshakeResponse.server_name)
}
inline ::std::string* HandshakeResponse::mutable_server_name() {
  set_has_server_name();
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.HandshakeResponse.server_name)
  return server_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HandshakeResponse::release_server_name() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.HandshakeResponse.server_name)
  clear_has_server_name();
  return server_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HandshakeResponse::set_allocated_server_name(::std::string* server_name) {
  if (server_name != NULL) {
    set_has_server_name();
  } else {
    clear_has_server_name();
  }
  server_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), server_name);
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.HandshakeResponse.server_name)
}

// optional uint32 server_id = 3;
inline bool HandshakeResponse::has_server_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HandshakeResponse::set_has_server_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HandshakeResponse::clear_has_server_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HandshakeResponse::clear_server_id() {
  server_id_ = 0u;
  clear_has_server_id();
}
inline ::google::protobuf::uint32 HandshakeResponse::server_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.HandshakeResponse.server_id)
  return server_id_;
}
inline void HandshakeResponse::set_server_id(::google::protobuf::uint32 value) {
  set_has_server_id();
  server_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.HandshakeResponse.server_id)
}

// -------------------------------------------------------------------

// DisConnectionRequest

// optional uint32 server_id = 1;
inline bool DisConnectionRequest::has_server_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DisConnectionRequest::set_has_server_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DisConnectionRequest::clear_has_server_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DisConnectionRequest::clear_server_id() {
  server_id_ = 0u;
  clear_has_server_id();
}
inline ::google::protobuf::uint32 DisConnectionRequest::server_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.DisConnectionRequest.server_id)
  return server_id_;
}
inline void DisConnectionRequest::set_server_id(::google::protobuf::uint32 value) {
  set_has_server_id();
  server_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.DisConnectionRequest.server_id)
}

// -------------------------------------------------------------------

// DisConnectionResponse

// optional int32 result = 1;
inline bool DisConnectionResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DisConnectionResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DisConnectionResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DisConnectionResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 DisConnectionResponse::result() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.DisConnectionResponse.result)
  return result_;
}
inline void DisConnectionResponse::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.DisConnectionResponse.result)
}

// -------------------------------------------------------------------

// HeartbeatRequest

// -------------------------------------------------------------------

// HeartbeatResponse

// -------------------------------------------------------------------

// ServerInfo

// optional uint32 server_id = 1;
inline bool ServerInfo::has_server_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServerInfo::set_has_server_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServerInfo::clear_has_server_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServerInfo::clear_server_id() {
  server_id_ = 0u;
  clear_has_server_id();
}
inline ::google::protobuf::uint32 ServerInfo::server_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.ServerInfo.server_id)
  return server_id_;
}
inline void ServerInfo::set_server_id(::google::protobuf::uint32 value) {
  set_has_server_id();
  server_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.ServerInfo.server_id)
}

// optional string server_ip = 2;
inline bool ServerInfo::has_server_ip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ServerInfo::set_has_server_ip() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ServerInfo::clear_has_server_ip() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ServerInfo::clear_server_ip() {
  server_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_server_ip();
}
inline const ::std::string& ServerInfo::server_ip() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.ServerInfo.server_ip)
  return server_ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ServerInfo::set_server_ip(const ::std::string& value) {
  set_has_server_ip();
  server_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fogs.proto.msg.ServerInfo.server_ip)
}
inline void ServerInfo::set_server_ip(const char* value) {
  set_has_server_ip();
  server_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fogs.proto.msg.ServerInfo.server_ip)
}
inline void ServerInfo::set_server_ip(const char* value, size_t size) {
  set_has_server_ip();
  server_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fogs.proto.msg.ServerInfo.server_ip)
}
inline ::std::string* ServerInfo::mutable_server_ip() {
  set_has_server_ip();
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.ServerInfo.server_ip)
  return server_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ServerInfo::release_server_ip() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.ServerInfo.server_ip)
  clear_has_server_ip();
  return server_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ServerInfo::set_allocated_server_ip(::std::string* server_ip) {
  if (server_ip != NULL) {
    set_has_server_ip();
  } else {
    clear_has_server_ip();
  }
  server_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), server_ip);
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.ServerInfo.server_ip)
}

// optional uint32 server_port = 3;
inline bool ServerInfo::has_server_port() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ServerInfo::set_has_server_port() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ServerInfo::clear_has_server_port() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ServerInfo::clear_server_port() {
  server_port_ = 0u;
  clear_has_server_port();
}
inline ::google::protobuf::uint32 ServerInfo::server_port() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.ServerInfo.server_port)
  return server_port_;
}
inline void ServerInfo::set_server_port(::google::protobuf::uint32 value) {
  set_has_server_port();
  server_port_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.ServerInfo.server_port)
}

// optional uint32 server_persons = 4;
inline bool ServerInfo::has_server_persons() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ServerInfo::set_has_server_persons() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ServerInfo::clear_has_server_persons() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ServerInfo::clear_server_persons() {
  server_persons_ = 0u;
  clear_has_server_persons();
}
inline ::google::protobuf::uint32 ServerInfo::server_persons() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.ServerInfo.server_persons)
  return server_persons_;
}
inline void ServerInfo::set_server_persons(::google::protobuf::uint32 value) {
  set_has_server_persons();
  server_persons_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.ServerInfo.server_persons)
}

// -------------------------------------------------------------------

// AddConnectionRequest

// optional .fogs.proto.msg.ServerInfo server_info = 1;
inline bool AddConnectionRequest::has_server_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddConnectionRequest::set_has_server_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddConnectionRequest::clear_has_server_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddConnectionRequest::clear_server_info() {
  if (server_info_ != NULL) server_info_->::fogs::proto::msg::ServerInfo::Clear();
  clear_has_server_info();
}
inline const ::fogs::proto::msg::ServerInfo& AddConnectionRequest::server_info() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.AddConnectionRequest.server_info)
  return server_info_ != NULL ? *server_info_ : *default_instance_->server_info_;
}
inline ::fogs::proto::msg::ServerInfo* AddConnectionRequest::mutable_server_info() {
  set_has_server_info();
  if (server_info_ == NULL) {
    server_info_ = new ::fogs::proto::msg::ServerInfo;
  }
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.AddConnectionRequest.server_info)
  return server_info_;
}
inline ::fogs::proto::msg::ServerInfo* AddConnectionRequest::release_server_info() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.AddConnectionRequest.server_info)
  clear_has_server_info();
  ::fogs::proto::msg::ServerInfo* temp = server_info_;
  server_info_ = NULL;
  return temp;
}
inline void AddConnectionRequest::set_allocated_server_info(::fogs::proto::msg::ServerInfo* server_info) {
  delete server_info_;
  server_info_ = server_info;
  if (server_info) {
    set_has_server_info();
  } else {
    clear_has_server_info();
  }
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.AddConnectionRequest.server_info)
}

// -------------------------------------------------------------------

// AddConnectionResponse

// optional int32 result = 1;
inline bool AddConnectionResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddConnectionResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddConnectionResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddConnectionResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 AddConnectionResponse::result() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.AddConnectionResponse.result)
  return result_;
}
inline void AddConnectionResponse::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.AddConnectionResponse.result)
}

// -------------------------------------------------------------------

// SessionDisConnectReq

// optional uint32 session_id = 1;
inline bool SessionDisConnectReq::has_session_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SessionDisConnectReq::set_has_session_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SessionDisConnectReq::clear_has_session_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SessionDisConnectReq::clear_session_id() {
  session_id_ = 0u;
  clear_has_session_id();
}
inline ::google::protobuf::uint32 SessionDisConnectReq::session_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.SessionDisConnectReq.session_id)
  return session_id_;
}
inline void SessionDisConnectReq::set_session_id(::google::protobuf::uint32 value) {
  set_has_session_id();
  session_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.SessionDisConnectReq.session_id)
}

// -------------------------------------------------------------------

// SessionDisConnectResp

// optional int32 result = 1;
inline bool SessionDisConnectResp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SessionDisConnectResp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SessionDisConnectResp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SessionDisConnectResp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 SessionDisConnectResp::result() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.SessionDisConnectResp.result)
  return result_;
}
inline void SessionDisConnectResp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.SessionDisConnectResp.result)
}

// optional uint32 session_id = 2;
inline bool SessionDisConnectResp::has_session_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SessionDisConnectResp::set_has_session_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SessionDisConnectResp::clear_has_session_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SessionDisConnectResp::clear_session_id() {
  session_id_ = 0u;
  clear_has_session_id();
}
inline ::google::protobuf::uint32 SessionDisConnectResp::session_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.SessionDisConnectResp.session_id)
  return session_id_;
}
inline void SessionDisConnectResp::set_session_id(::google::protobuf::uint32 value) {
  set_has_session_id();
  session_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.SessionDisConnectResp.session_id)
}

// -------------------------------------------------------------------

// UpdateServerInfo

// optional .fogs.proto.msg.ServerInfo server_info = 1;
inline bool UpdateServerInfo::has_server_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateServerInfo::set_has_server_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateServerInfo::clear_has_server_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateServerInfo::clear_server_info() {
  if (server_info_ != NULL) server_info_->::fogs::proto::msg::ServerInfo::Clear();
  clear_has_server_info();
}
inline const ::fogs::proto::msg::ServerInfo& UpdateServerInfo::server_info() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.UpdateServerInfo.server_info)
  return server_info_ != NULL ? *server_info_ : *default_instance_->server_info_;
}
inline ::fogs::proto::msg::ServerInfo* UpdateServerInfo::mutable_server_info() {
  set_has_server_info();
  if (server_info_ == NULL) {
    server_info_ = new ::fogs::proto::msg::ServerInfo;
  }
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.UpdateServerInfo.server_info)
  return server_info_;
}
inline ::fogs::proto::msg::ServerInfo* UpdateServerInfo::release_server_info() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.UpdateServerInfo.server_info)
  clear_has_server_info();
  ::fogs::proto::msg::ServerInfo* temp = server_info_;
  server_info_ = NULL;
  return temp;
}
inline void UpdateServerInfo::set_allocated_server_info(::fogs::proto::msg::ServerInfo* server_info) {
  delete server_info_;
  server_info_ = server_info;
  if (server_info) {
    set_has_server_info();
  } else {
    clear_has_server_info();
  }
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.UpdateServerInfo.server_info)
}

// -------------------------------------------------------------------

// AddSessionIP

// optional uint32 session_id = 1;
inline bool AddSessionIP::has_session_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddSessionIP::set_has_session_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddSessionIP::clear_has_session_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddSessionIP::clear_session_id() {
  session_id_ = 0u;
  clear_has_session_id();
}
inline ::google::protobuf::uint32 AddSessionIP::session_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.AddSessionIP.session_id)
  return session_id_;
}
inline void AddSessionIP::set_session_id(::google::protobuf::uint32 value) {
  set_has_session_id();
  session_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.AddSessionIP.session_id)
}

// optional string ip = 2;
inline bool AddSessionIP::has_ip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddSessionIP::set_has_ip() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddSessionIP::clear_has_ip() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddSessionIP::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip();
}
inline const ::std::string& AddSessionIP::ip() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.AddSessionIP.ip)
  return ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddSessionIP::set_ip(const ::std::string& value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fogs.proto.msg.AddSessionIP.ip)
}
inline void AddSessionIP::set_ip(const char* value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fogs.proto.msg.AddSessionIP.ip)
}
inline void AddSessionIP::set_ip(const char* value, size_t size) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fogs.proto.msg.AddSessionIP.ip)
}
inline ::std::string* AddSessionIP::mutable_ip() {
  set_has_ip();
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.AddSessionIP.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddSessionIP::release_ip() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.AddSessionIP.ip)
  clear_has_ip();
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddSessionIP::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    set_has_ip();
  } else {
    clear_has_ip();
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.AddSessionIP.ip)
}

// -------------------------------------------------------------------

// SessionAccountName

// optional uint32 user_id = 1;
inline bool SessionAccountName::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SessionAccountName::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SessionAccountName::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SessionAccountName::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 SessionAccountName::user_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.SessionAccountName.user_id)
  return user_id_;
}
inline void SessionAccountName::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.SessionAccountName.user_id)
}

// optional string account = 2;
inline bool SessionAccountName::has_account() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SessionAccountName::set_has_account() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SessionAccountName::clear_has_account() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SessionAccountName::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
inline const ::std::string& SessionAccountName::account() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.SessionAccountName.account)
  return account_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SessionAccountName::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fogs.proto.msg.SessionAccountName.account)
}
inline void SessionAccountName::set_account(const char* value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fogs.proto.msg.SessionAccountName.account)
}
inline void SessionAccountName::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fogs.proto.msg.SessionAccountName.account)
}
inline ::std::string* SessionAccountName::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.SessionAccountName.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SessionAccountName::release_account() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.SessionAccountName.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SessionAccountName::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.SessionAccountName.account)
}

// optional string name = 3;
inline bool SessionAccountName::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SessionAccountName::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SessionAccountName::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SessionAccountName::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& SessionAccountName::name() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.SessionAccountName.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SessionAccountName::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fogs.proto.msg.SessionAccountName.name)
}
inline void SessionAccountName::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fogs.proto.msg.SessionAccountName.name)
}
inline void SessionAccountName::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fogs.proto.msg.SessionAccountName.name)
}
inline ::std::string* SessionAccountName::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.SessionAccountName.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SessionAccountName::release_name() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.SessionAccountName.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SessionAccountName::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.SessionAccountName.name)
}

// optional string icon_addr = 4;
inline bool SessionAccountName::has_icon_addr() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SessionAccountName::set_has_icon_addr() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SessionAccountName::clear_has_icon_addr() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SessionAccountName::clear_icon_addr() {
  icon_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_icon_addr();
}
inline const ::std::string& SessionAccountName::icon_addr() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.SessionAccountName.icon_addr)
  return icon_addr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SessionAccountName::set_icon_addr(const ::std::string& value) {
  set_has_icon_addr();
  icon_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fogs.proto.msg.SessionAccountName.icon_addr)
}
inline void SessionAccountName::set_icon_addr(const char* value) {
  set_has_icon_addr();
  icon_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fogs.proto.msg.SessionAccountName.icon_addr)
}
inline void SessionAccountName::set_icon_addr(const char* value, size_t size) {
  set_has_icon_addr();
  icon_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fogs.proto.msg.SessionAccountName.icon_addr)
}
inline ::std::string* SessionAccountName::mutable_icon_addr() {
  set_has_icon_addr();
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.SessionAccountName.icon_addr)
  return icon_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SessionAccountName::release_icon_addr() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.SessionAccountName.icon_addr)
  clear_has_icon_addr();
  return icon_addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SessionAccountName::set_allocated_icon_addr(::std::string* icon_addr) {
  if (icon_addr != NULL) {
    set_has_icon_addr();
  } else {
    clear_has_icon_addr();
  }
  icon_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), icon_addr);
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.SessionAccountName.icon_addr)
}

// optional uint32 share_user_id = 5;
inline bool SessionAccountName::has_share_user_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SessionAccountName::set_has_share_user_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SessionAccountName::clear_has_share_user_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SessionAccountName::clear_share_user_id() {
  share_user_id_ = 0u;
  clear_has_share_user_id();
}
inline ::google::protobuf::uint32 SessionAccountName::share_user_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.SessionAccountName.share_user_id)
  return share_user_id_;
}
inline void SessionAccountName::set_share_user_id(::google::protobuf::uint32 value) {
  set_has_share_user_id();
  share_user_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.SessionAccountName.share_user_id)
}

// -------------------------------------------------------------------

// UpdateRoomInfo

// optional uint32 room_id = 1;
inline bool UpdateRoomInfo::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateRoomInfo::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateRoomInfo::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateRoomInfo::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 UpdateRoomInfo::room_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.UpdateRoomInfo.room_id)
  return room_id_;
}
inline void UpdateRoomInfo::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.UpdateRoomInfo.room_id)
}

// optional uint32 server_id = 2;
inline bool UpdateRoomInfo::has_server_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateRoomInfo::set_has_server_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateRoomInfo::clear_has_server_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateRoomInfo::clear_server_id() {
  server_id_ = 0u;
  clear_has_server_id();
}
inline ::google::protobuf::uint32 UpdateRoomInfo::server_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.UpdateRoomInfo.server_id)
  return server_id_;
}
inline void UpdateRoomInfo::set_server_id(::google::protobuf::uint32 value) {
  set_has_server_id();
  server_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.UpdateRoomInfo.server_id)
}

// required .fogs.proto.msg.RoomStatus room_starus = 3;
inline bool UpdateRoomInfo::has_room_starus() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdateRoomInfo::set_has_room_starus() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdateRoomInfo::clear_has_room_starus() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdateRoomInfo::clear_room_starus() {
  room_starus_ = 1;
  clear_has_room_starus();
}
inline ::fogs::proto::msg::RoomStatus UpdateRoomInfo::room_starus() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.UpdateRoomInfo.room_starus)
  return static_cast< ::fogs::proto::msg::RoomStatus >(room_starus_);
}
inline void UpdateRoomInfo::set_room_starus(::fogs::proto::msg::RoomStatus value) {
  assert(::fogs::proto::msg::RoomStatus_IsValid(value));
  set_has_room_starus();
  room_starus_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.UpdateRoomInfo.room_starus)
}

// -------------------------------------------------------------------

// UpdateSessionConn

// -------------------------------------------------------------------

// UpdateServerPersons

// optional uint32 server_id = 1;
inline bool UpdateServerPersons::has_server_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateServerPersons::set_has_server_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateServerPersons::clear_has_server_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateServerPersons::clear_server_id() {
  server_id_ = 0u;
  clear_has_server_id();
}
inline ::google::protobuf::uint32 UpdateServerPersons::server_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.UpdateServerPersons.server_id)
  return server_id_;
}
inline void UpdateServerPersons::set_server_id(::google::protobuf::uint32 value) {
  set_has_server_id();
  server_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.UpdateServerPersons.server_id)
}

// optional uint32 persons = 2;
inline bool UpdateServerPersons::has_persons() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateServerPersons::set_has_persons() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateServerPersons::clear_has_persons() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateServerPersons::clear_persons() {
  persons_ = 0u;
  clear_has_persons();
}
inline ::google::protobuf::uint32 UpdateServerPersons::persons() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.UpdateServerPersons.persons)
  return persons_;
}
inline void UpdateServerPersons::set_persons(::google::protobuf::uint32 value) {
  set_has_persons();
  persons_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.UpdateServerPersons.persons)
}

// -------------------------------------------------------------------

// NotifyOnConnection

// optional uint32 server_type = 1;
inline bool NotifyOnConnection::has_server_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyOnConnection::set_has_server_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyOnConnection::clear_has_server_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyOnConnection::clear_server_type() {
  server_type_ = 0u;
  clear_has_server_type();
}
inline ::google::protobuf::uint32 NotifyOnConnection::server_type() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.NotifyOnConnection.server_type)
  return server_type_;
}
inline void NotifyOnConnection::set_server_type(::google::protobuf::uint32 value) {
  set_has_server_type();
  server_type_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.NotifyOnConnection.server_type)
}

// -------------------------------------------------------------------

// ReloadConfigForm

// -------------------------------------------------------------------

// ResetPlayerData

// optional uint32 user_id = 1;
inline bool ResetPlayerData::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResetPlayerData::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResetPlayerData::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResetPlayerData::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 ResetPlayerData::user_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.ResetPlayerData.user_id)
  return user_id_;
}
inline void ResetPlayerData::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.ResetPlayerData.user_id)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace msg
}  // namespace proto
}  // namespace fogs

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::fogs::proto::msg::RoomStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::fogs::proto::msg::RoomStatus>() {
  return ::fogs::proto::msg::RoomStatus_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_server_2eproto__INCLUDED
