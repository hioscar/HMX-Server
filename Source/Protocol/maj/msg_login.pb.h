// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_login.proto

#ifndef PROTOBUF_msg_5flogin_2eproto__INCLUDED
#define PROTOBUF_msg_5flogin_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "msg_role.pb.h"
// @@protoc_insertion_point(includes)

namespace msg_maj {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_msg_5flogin_2eproto();
void protobuf_AssignDesc_msg_5flogin_2eproto();
void protobuf_ShutdownFile_msg_5flogin_2eproto();

class ChangeSceneReq;
class ChangeSceneResp;
class KictoutResp;
class LoginAccountReq;
class LoginPlayerReq;
class LoginPlayerResp;
class LoginResp;
class LoginWeixinReq;
class LogoutReq;
class NotifyAnotherLogin;
class NotifyPlayerExit;
class SDKTokenReq;
class SDKTokenResp;

enum c_cmd_login {
  login_weixin_req = 1,
  login_resp = 2,
  login_account_req = 3,
  prelogin_account_req = 4,
  prelogin_account_resp = 5,
  kictout_resp = 6,
  logout_req = 7,
  login_player_req = 8,
  login_player_resp = 9,
  sdk_token_req = 10,
  sdk_token_resp = 11,
  notify_another_login = 12,
  notify_dis_conntion = 13,
  change_scene_req = 14,
  change_scene_resp = 15,
  max = 20
};
bool c_cmd_login_IsValid(int value);
const c_cmd_login c_cmd_login_MIN = login_weixin_req;
const c_cmd_login c_cmd_login_MAX = max;
const int c_cmd_login_ARRAYSIZE = c_cmd_login_MAX + 1;

const ::google::protobuf::EnumDescriptor* c_cmd_login_descriptor();
inline const ::std::string& c_cmd_login_Name(c_cmd_login value) {
  return ::google::protobuf::internal::NameOfEnum(
    c_cmd_login_descriptor(), value);
}
inline bool c_cmd_login_Parse(
    const ::std::string& name, c_cmd_login* value) {
  return ::google::protobuf::internal::ParseNamedEnum<c_cmd_login>(
    c_cmd_login_descriptor(), name, value);
}
enum login_code {
  SUCCESS = 1,
  FAIL = 2,
  ERR_ACCOUNT = 3,
  TOKEN_TIMEOUT = 4,
  TOKEN_ERROR = 5,
  OTHER_LOGIN = 6,
  FORCE_KICTOUT = 7,
  DATA_EXCEPTION = 8,
  PLAT_JOSNSTR_ERROR = 9,
  PLAT_CHECK_FAIL = 10,
  PLAT_ARG_NOTENOUGH = 11,
  MYSQL_ISNULL = 12,
  SQL_ERROR = 13,
  PLAT_UNNKOWN = 14,
  SCENE_NOT_FOUND = 15,
  WSUSER_IS_NULL = 16,
  PROXY_ACCESS_NOT_LOGIN = 17,
  NOT_BING_SERVER = 18,
  PLAT_REQ_TIMEOUT = 19,
  SERVER_IS_BREPAIRING = 20
};
bool login_code_IsValid(int value);
const login_code login_code_MIN = SUCCESS;
const login_code login_code_MAX = SERVER_IS_BREPAIRING;
const int login_code_ARRAYSIZE = login_code_MAX + 1;

const ::google::protobuf::EnumDescriptor* login_code_descriptor();
inline const ::std::string& login_code_Name(login_code value) {
  return ::google::protobuf::internal::NameOfEnum(
    login_code_descriptor(), value);
}
inline bool login_code_Parse(
    const ::std::string& name, login_code* value) {
  return ::google::protobuf::internal::ParseNamedEnum<login_code>(
    login_code_descriptor(), name, value);
}
// ===================================================================

class LoginWeixinReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.LoginWeixinReq) */ {
 public:
  LoginWeixinReq();
  virtual ~LoginWeixinReq();

  LoginWeixinReq(const LoginWeixinReq& from);

  inline LoginWeixinReq& operator=(const LoginWeixinReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginWeixinReq& default_instance();

  void Swap(LoginWeixinReq* other);

  // implements Message ----------------------------------------------

  inline LoginWeixinReq* New() const { return New(NULL); }

  LoginWeixinReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginWeixinReq& from);
  void MergeFrom(const LoginWeixinReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LoginWeixinReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string token = 2;
  bool has_token() const;
  void clear_token();
  static const int kTokenFieldNumber = 2;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // @@protoc_insertion_point(class_scope:msg_maj.LoginWeixinReq)
 private:
  inline void set_has_token();
  inline void clear_has_token();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  friend void  protobuf_AddDesc_msg_5flogin_2eproto();
  friend void protobuf_AssignDesc_msg_5flogin_2eproto();
  friend void protobuf_ShutdownFile_msg_5flogin_2eproto();

  void InitAsDefaultInstance();
  static LoginWeixinReq* default_instance_;
};
// -------------------------------------------------------------------

class LoginResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.LoginResp) */ {
 public:
  LoginResp();
  virtual ~LoginResp();

  LoginResp(const LoginResp& from);

  inline LoginResp& operator=(const LoginResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginResp& default_instance();

  void Swap(LoginResp* other);

  // implements Message ----------------------------------------------

  inline LoginResp* New() const { return New(NULL); }

  LoginResp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginResp& from);
  void MergeFrom(const LoginResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LoginResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .msg_maj.login_code code = 1;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::msg_maj::login_code code() const;
  void set_code(::msg_maj::login_code value);

  // optional string ip = 2;
  bool has_ip() const;
  void clear_ip();
  static const int kIpFieldNumber = 2;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // optional uint32 port = 3;
  bool has_port() const;
  void clear_port();
  static const int kPortFieldNumber = 3;
  ::google::protobuf::uint32 port() const;
  void set_port(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:msg_maj.LoginResp)
 private:
  inline void set_has_code();
  inline void clear_has_code();
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_port();
  inline void clear_has_port();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  int code_;
  ::google::protobuf::uint32 port_;
  friend void  protobuf_AddDesc_msg_5flogin_2eproto();
  friend void protobuf_AssignDesc_msg_5flogin_2eproto();
  friend void protobuf_ShutdownFile_msg_5flogin_2eproto();

  void InitAsDefaultInstance();
  static LoginResp* default_instance_;
};
// -------------------------------------------------------------------

class LoginAccountReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.LoginAccountReq) */ {
 public:
  LoginAccountReq();
  virtual ~LoginAccountReq();

  LoginAccountReq(const LoginAccountReq& from);

  inline LoginAccountReq& operator=(const LoginAccountReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginAccountReq& default_instance();

  void Swap(LoginAccountReq* other);

  // implements Message ----------------------------------------------

  inline LoginAccountReq* New() const { return New(NULL); }

  LoginAccountReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginAccountReq& from);
  void MergeFrom(const LoginAccountReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LoginAccountReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string account = 1;
  bool has_account() const;
  void clear_account();
  static const int kAccountFieldNumber = 1;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // required string password = 2;
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // @@protoc_insertion_point(class_scope:msg_maj.LoginAccountReq)
 private:
  inline void set_has_account();
  inline void clear_has_account();
  inline void set_has_password();
  inline void clear_has_password();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  friend void  protobuf_AddDesc_msg_5flogin_2eproto();
  friend void protobuf_AssignDesc_msg_5flogin_2eproto();
  friend void protobuf_ShutdownFile_msg_5flogin_2eproto();

  void InitAsDefaultInstance();
  static LoginAccountReq* default_instance_;
};
// -------------------------------------------------------------------

class KictoutResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.KictoutResp) */ {
 public:
  KictoutResp();
  virtual ~KictoutResp();

  KictoutResp(const KictoutResp& from);

  inline KictoutResp& operator=(const KictoutResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KictoutResp& default_instance();

  void Swap(KictoutResp* other);

  // implements Message ----------------------------------------------

  inline KictoutResp* New() const { return New(NULL); }

  KictoutResp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KictoutResp& from);
  void MergeFrom(const KictoutResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(KictoutResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .msg_maj.login_code code = 1;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::msg_maj::login_code code() const;
  void set_code(::msg_maj::login_code value);

  // @@protoc_insertion_point(class_scope:msg_maj.KictoutResp)
 private:
  inline void set_has_code();
  inline void clear_has_code();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int code_;
  friend void  protobuf_AddDesc_msg_5flogin_2eproto();
  friend void protobuf_AssignDesc_msg_5flogin_2eproto();
  friend void protobuf_ShutdownFile_msg_5flogin_2eproto();

  void InitAsDefaultInstance();
  static KictoutResp* default_instance_;
};
// -------------------------------------------------------------------

class LogoutReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.LogoutReq) */ {
 public:
  LogoutReq();
  virtual ~LogoutReq();

  LogoutReq(const LogoutReq& from);

  inline LogoutReq& operator=(const LogoutReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LogoutReq& default_instance();

  void Swap(LogoutReq* other);

  // implements Message ----------------------------------------------

  inline LogoutReq* New() const { return New(NULL); }

  LogoutReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LogoutReq& from);
  void MergeFrom(const LogoutReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LogoutReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:msg_maj.LogoutReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_msg_5flogin_2eproto();
  friend void protobuf_AssignDesc_msg_5flogin_2eproto();
  friend void protobuf_ShutdownFile_msg_5flogin_2eproto();

  void InitAsDefaultInstance();
  static LogoutReq* default_instance_;
};
// -------------------------------------------------------------------

class LoginPlayerReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.LoginPlayerReq) */ {
 public:
  LoginPlayerReq();
  virtual ~LoginPlayerReq();

  LoginPlayerReq(const LoginPlayerReq& from);

  inline LoginPlayerReq& operator=(const LoginPlayerReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginPlayerReq& default_instance();

  void Swap(LoginPlayerReq* other);

  // implements Message ----------------------------------------------

  inline LoginPlayerReq* New() const { return New(NULL); }

  LoginPlayerReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginPlayerReq& from);
  void MergeFrom(const LoginPlayerReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LoginPlayerReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string account = 1;
  bool has_account() const;
  void clear_account();
  static const int kAccountFieldNumber = 1;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // optional uint32 serverid = 2;
  bool has_serverid() const;
  void clear_serverid();
  static const int kServeridFieldNumber = 2;
  ::google::protobuf::uint32 serverid() const;
  void set_serverid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:msg_maj.LoginPlayerReq)
 private:
  inline void set_has_account();
  inline void clear_has_account();
  inline void set_has_serverid();
  inline void clear_has_serverid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::uint32 serverid_;
  friend void  protobuf_AddDesc_msg_5flogin_2eproto();
  friend void protobuf_AssignDesc_msg_5flogin_2eproto();
  friend void protobuf_ShutdownFile_msg_5flogin_2eproto();

  void InitAsDefaultInstance();
  static LoginPlayerReq* default_instance_;
};
// -------------------------------------------------------------------

class LoginPlayerResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.LoginPlayerResp) */ {
 public:
  LoginPlayerResp();
  virtual ~LoginPlayerResp();

  LoginPlayerResp(const LoginPlayerResp& from);

  inline LoginPlayerResp& operator=(const LoginPlayerResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginPlayerResp& default_instance();

  void Swap(LoginPlayerResp* other);

  // implements Message ----------------------------------------------

  inline LoginPlayerResp* New() const { return New(NULL); }

  LoginPlayerResp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginPlayerResp& from);
  void MergeFrom(const LoginPlayerResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LoginPlayerResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .msg_maj.login_code code = 1;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::msg_maj::login_code code() const;
  void set_code(::msg_maj::login_code value);

  // optional bool is_reconnect = 2;
  bool has_is_reconnect() const;
  void clear_is_reconnect();
  static const int kIsReconnectFieldNumber = 2;
  bool is_reconnect() const;
  void set_is_reconnect(bool value);

  // optional .msg_maj.Role role = 3;
  bool has_role() const;
  void clear_role();
  static const int kRoleFieldNumber = 3;
  const ::msg_maj::Role& role() const;
  ::msg_maj::Role* mutable_role();
  ::msg_maj::Role* release_role();
  void set_allocated_role(::msg_maj::Role* role);

  // optional uint64 srv_time = 4;
  bool has_srv_time() const;
  void clear_srv_time();
  static const int kSrvTimeFieldNumber = 4;
  ::google::protobuf::uint64 srv_time() const;
  void set_srv_time(::google::protobuf::uint64 value);

  // optional bool is_free = 5;
  bool has_is_free() const;
  void clear_is_free();
  static const int kIsFreeFieldNumber = 5;
  bool is_free() const;
  void set_is_free(bool value);

  // @@protoc_insertion_point(class_scope:msg_maj.LoginPlayerResp)
 private:
  inline void set_has_code();
  inline void clear_has_code();
  inline void set_has_is_reconnect();
  inline void clear_has_is_reconnect();
  inline void set_has_role();
  inline void clear_has_role();
  inline void set_has_srv_time();
  inline void clear_has_srv_time();
  inline void set_has_is_free();
  inline void clear_has_is_free();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int code_;
  bool is_reconnect_;
  bool is_free_;
  ::msg_maj::Role* role_;
  ::google::protobuf::uint64 srv_time_;
  friend void  protobuf_AddDesc_msg_5flogin_2eproto();
  friend void protobuf_AssignDesc_msg_5flogin_2eproto();
  friend void protobuf_ShutdownFile_msg_5flogin_2eproto();

  void InitAsDefaultInstance();
  static LoginPlayerResp* default_instance_;
};
// -------------------------------------------------------------------

class SDKTokenReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.SDKTokenReq) */ {
 public:
  SDKTokenReq();
  virtual ~SDKTokenReq();

  SDKTokenReq(const SDKTokenReq& from);

  inline SDKTokenReq& operator=(const SDKTokenReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SDKTokenReq& default_instance();

  void Swap(SDKTokenReq* other);

  // implements Message ----------------------------------------------

  inline SDKTokenReq* New() const { return New(NULL); }

  SDKTokenReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SDKTokenReq& from);
  void MergeFrom(const SDKTokenReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SDKTokenReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string token = 1;
  bool has_token() const;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // @@protoc_insertion_point(class_scope:msg_maj.SDKTokenReq)
 private:
  inline void set_has_token();
  inline void clear_has_token();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  friend void  protobuf_AddDesc_msg_5flogin_2eproto();
  friend void protobuf_AssignDesc_msg_5flogin_2eproto();
  friend void protobuf_ShutdownFile_msg_5flogin_2eproto();

  void InitAsDefaultInstance();
  static SDKTokenReq* default_instance_;
};
// -------------------------------------------------------------------

class SDKTokenResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.SDKTokenResp) */ {
 public:
  SDKTokenResp();
  virtual ~SDKTokenResp();

  SDKTokenResp(const SDKTokenResp& from);

  inline SDKTokenResp& operator=(const SDKTokenResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SDKTokenResp& default_instance();

  void Swap(SDKTokenResp* other);

  // implements Message ----------------------------------------------

  inline SDKTokenResp* New() const { return New(NULL); }

  SDKTokenResp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SDKTokenResp& from);
  void MergeFrom(const SDKTokenResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SDKTokenResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // optional string ip = 2;
  bool has_ip() const;
  void clear_ip();
  static const int kIpFieldNumber = 2;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // optional uint32 port = 3;
  bool has_port() const;
  void clear_port();
  static const int kPortFieldNumber = 3;
  ::google::protobuf::uint32 port() const;
  void set_port(::google::protobuf::uint32 value);

  // optional string account = 4;
  bool has_account() const;
  void clear_account();
  static const int kAccountFieldNumber = 4;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // optional string icon_add = 5;
  bool has_icon_add() const;
  void clear_icon_add();
  static const int kIconAddFieldNumber = 5;
  const ::std::string& icon_add() const;
  void set_icon_add(const ::std::string& value);
  void set_icon_add(const char* value);
  void set_icon_add(const char* value, size_t size);
  ::std::string* mutable_icon_add();
  ::std::string* release_icon_add();
  void set_allocated_icon_add(::std::string* icon_add);

  // @@protoc_insertion_point(class_scope:msg_maj.SDKTokenResp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_port();
  inline void clear_has_port();
  inline void set_has_account();
  inline void clear_has_account();
  inline void set_has_icon_add();
  inline void clear_has_icon_add();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::uint32 port_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr icon_add_;
  friend void  protobuf_AddDesc_msg_5flogin_2eproto();
  friend void protobuf_AssignDesc_msg_5flogin_2eproto();
  friend void protobuf_ShutdownFile_msg_5flogin_2eproto();

  void InitAsDefaultInstance();
  static SDKTokenResp* default_instance_;
};
// -------------------------------------------------------------------

class NotifyAnotherLogin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.NotifyAnotherLogin) */ {
 public:
  NotifyAnotherLogin();
  virtual ~NotifyAnotherLogin();

  NotifyAnotherLogin(const NotifyAnotherLogin& from);

  inline NotifyAnotherLogin& operator=(const NotifyAnotherLogin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyAnotherLogin& default_instance();

  void Swap(NotifyAnotherLogin* other);

  // implements Message ----------------------------------------------

  inline NotifyAnotherLogin* New() const { return New(NULL); }

  NotifyAnotherLogin* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyAnotherLogin& from);
  void MergeFrom(const NotifyAnotherLogin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NotifyAnotherLogin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:msg_maj.NotifyAnotherLogin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_msg_5flogin_2eproto();
  friend void protobuf_AssignDesc_msg_5flogin_2eproto();
  friend void protobuf_ShutdownFile_msg_5flogin_2eproto();

  void InitAsDefaultInstance();
  static NotifyAnotherLogin* default_instance_;
};
// -------------------------------------------------------------------

class NotifyPlayerExit : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.NotifyPlayerExit) */ {
 public:
  NotifyPlayerExit();
  virtual ~NotifyPlayerExit();

  NotifyPlayerExit(const NotifyPlayerExit& from);

  inline NotifyPlayerExit& operator=(const NotifyPlayerExit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyPlayerExit& default_instance();

  void Swap(NotifyPlayerExit* other);

  // implements Message ----------------------------------------------

  inline NotifyPlayerExit* New() const { return New(NULL); }

  NotifyPlayerExit* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyPlayerExit& from);
  void MergeFrom(const NotifyPlayerExit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NotifyPlayerExit* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:msg_maj.NotifyPlayerExit)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_msg_5flogin_2eproto();
  friend void protobuf_AssignDesc_msg_5flogin_2eproto();
  friend void protobuf_ShutdownFile_msg_5flogin_2eproto();

  void InitAsDefaultInstance();
  static NotifyPlayerExit* default_instance_;
};
// -------------------------------------------------------------------

class ChangeSceneReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.ChangeSceneReq) */ {
 public:
  ChangeSceneReq();
  virtual ~ChangeSceneReq();

  ChangeSceneReq(const ChangeSceneReq& from);

  inline ChangeSceneReq& operator=(const ChangeSceneReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeSceneReq& default_instance();

  void Swap(ChangeSceneReq* other);

  // implements Message ----------------------------------------------

  inline ChangeSceneReq* New() const { return New(NULL); }

  ChangeSceneReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChangeSceneReq& from);
  void MergeFrom(const ChangeSceneReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ChangeSceneReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 scene_id = 1;
  bool has_scene_id() const;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 1;
  ::google::protobuf::int32 scene_id() const;
  void set_scene_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg_maj.ChangeSceneReq)
 private:
  inline void set_has_scene_id();
  inline void clear_has_scene_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 scene_id_;
  friend void  protobuf_AddDesc_msg_5flogin_2eproto();
  friend void protobuf_AssignDesc_msg_5flogin_2eproto();
  friend void protobuf_ShutdownFile_msg_5flogin_2eproto();

  void InitAsDefaultInstance();
  static ChangeSceneReq* default_instance_;
};
// -------------------------------------------------------------------

class ChangeSceneResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.ChangeSceneResp) */ {
 public:
  ChangeSceneResp();
  virtual ~ChangeSceneResp();

  ChangeSceneResp(const ChangeSceneResp& from);

  inline ChangeSceneResp& operator=(const ChangeSceneResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeSceneResp& default_instance();

  void Swap(ChangeSceneResp* other);

  // implements Message ----------------------------------------------

  inline ChangeSceneResp* New() const { return New(NULL); }

  ChangeSceneResp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChangeSceneResp& from);
  void MergeFrom(const ChangeSceneResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ChangeSceneResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 scene_id = 1;
  bool has_scene_id() const;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 1;
  ::google::protobuf::int32 scene_id() const;
  void set_scene_id(::google::protobuf::int32 value);

  // optional int32 result = 2;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 2;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg_maj.ChangeSceneResp)
 private:
  inline void set_has_scene_id();
  inline void clear_has_scene_id();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 scene_id_;
  ::google::protobuf::int32 result_;
  friend void  protobuf_AddDesc_msg_5flogin_2eproto();
  friend void protobuf_AssignDesc_msg_5flogin_2eproto();
  friend void protobuf_ShutdownFile_msg_5flogin_2eproto();

  void InitAsDefaultInstance();
  static ChangeSceneResp* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginWeixinReq

// required string token = 2;
inline bool LoginWeixinReq::has_token() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginWeixinReq::set_has_token() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginWeixinReq::clear_has_token() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginWeixinReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_token();
}
inline const ::std::string& LoginWeixinReq::token() const {
  // @@protoc_insertion_point(field_get:msg_maj.LoginWeixinReq.token)
  return token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginWeixinReq::set_token(const ::std::string& value) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.LoginWeixinReq.token)
}
inline void LoginWeixinReq::set_token(const char* value) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.LoginWeixinReq.token)
}
inline void LoginWeixinReq::set_token(const char* value, size_t size) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.LoginWeixinReq.token)
}
inline ::std::string* LoginWeixinReq::mutable_token() {
  set_has_token();
  // @@protoc_insertion_point(field_mutable:msg_maj.LoginWeixinReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginWeixinReq::release_token() {
  // @@protoc_insertion_point(field_release:msg_maj.LoginWeixinReq.token)
  clear_has_token();
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginWeixinReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    set_has_token();
  } else {
    clear_has_token();
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.LoginWeixinReq.token)
}

// -------------------------------------------------------------------

// LoginResp

// required .msg_maj.login_code code = 1;
inline bool LoginResp::has_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginResp::set_has_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginResp::clear_has_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginResp::clear_code() {
  code_ = 1;
  clear_has_code();
}
inline ::msg_maj::login_code LoginResp::code() const {
  // @@protoc_insertion_point(field_get:msg_maj.LoginResp.code)
  return static_cast< ::msg_maj::login_code >(code_);
}
inline void LoginResp::set_code(::msg_maj::login_code value) {
  assert(::msg_maj::login_code_IsValid(value));
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.LoginResp.code)
}

// optional string ip = 2;
inline bool LoginResp::has_ip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginResp::set_has_ip() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginResp::clear_has_ip() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginResp::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip();
}
inline const ::std::string& LoginResp::ip() const {
  // @@protoc_insertion_point(field_get:msg_maj.LoginResp.ip)
  return ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginResp::set_ip(const ::std::string& value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.LoginResp.ip)
}
inline void LoginResp::set_ip(const char* value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.LoginResp.ip)
}
inline void LoginResp::set_ip(const char* value, size_t size) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.LoginResp.ip)
}
inline ::std::string* LoginResp::mutable_ip() {
  set_has_ip();
  // @@protoc_insertion_point(field_mutable:msg_maj.LoginResp.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginResp::release_ip() {
  // @@protoc_insertion_point(field_release:msg_maj.LoginResp.ip)
  clear_has_ip();
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginResp::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    set_has_ip();
  } else {
    clear_has_ip();
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.LoginResp.ip)
}

// optional uint32 port = 3;
inline bool LoginResp::has_port() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoginResp::set_has_port() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LoginResp::clear_has_port() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LoginResp::clear_port() {
  port_ = 0u;
  clear_has_port();
}
inline ::google::protobuf::uint32 LoginResp::port() const {
  // @@protoc_insertion_point(field_get:msg_maj.LoginResp.port)
  return port_;
}
inline void LoginResp::set_port(::google::protobuf::uint32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.LoginResp.port)
}

// -------------------------------------------------------------------

// LoginAccountReq

// required string account = 1;
inline bool LoginAccountReq::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginAccountReq::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginAccountReq::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginAccountReq::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
inline const ::std::string& LoginAccountReq::account() const {
  // @@protoc_insertion_point(field_get:msg_maj.LoginAccountReq.account)
  return account_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginAccountReq::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.LoginAccountReq.account)
}
inline void LoginAccountReq::set_account(const char* value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.LoginAccountReq.account)
}
inline void LoginAccountReq::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.LoginAccountReq.account)
}
inline ::std::string* LoginAccountReq::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:msg_maj.LoginAccountReq.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginAccountReq::release_account() {
  // @@protoc_insertion_point(field_release:msg_maj.LoginAccountReq.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginAccountReq::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.LoginAccountReq.account)
}

// required string password = 2;
inline bool LoginAccountReq::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginAccountReq::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginAccountReq::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginAccountReq::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
inline const ::std::string& LoginAccountReq::password() const {
  // @@protoc_insertion_point(field_get:msg_maj.LoginAccountReq.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginAccountReq::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.LoginAccountReq.password)
}
inline void LoginAccountReq::set_password(const char* value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.LoginAccountReq.password)
}
inline void LoginAccountReq::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.LoginAccountReq.password)
}
inline ::std::string* LoginAccountReq::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:msg_maj.LoginAccountReq.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginAccountReq::release_password() {
  // @@protoc_insertion_point(field_release:msg_maj.LoginAccountReq.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginAccountReq::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.LoginAccountReq.password)
}

// -------------------------------------------------------------------

// KictoutResp

// required .msg_maj.login_code code = 1;
inline bool KictoutResp::has_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KictoutResp::set_has_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KictoutResp::clear_has_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KictoutResp::clear_code() {
  code_ = 1;
  clear_has_code();
}
inline ::msg_maj::login_code KictoutResp::code() const {
  // @@protoc_insertion_point(field_get:msg_maj.KictoutResp.code)
  return static_cast< ::msg_maj::login_code >(code_);
}
inline void KictoutResp::set_code(::msg_maj::login_code value) {
  assert(::msg_maj::login_code_IsValid(value));
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.KictoutResp.code)
}

// -------------------------------------------------------------------

// LogoutReq

// -------------------------------------------------------------------

// LoginPlayerReq

// optional string account = 1;
inline bool LoginPlayerReq::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginPlayerReq::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginPlayerReq::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginPlayerReq::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
inline const ::std::string& LoginPlayerReq::account() const {
  // @@protoc_insertion_point(field_get:msg_maj.LoginPlayerReq.account)
  return account_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginPlayerReq::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.LoginPlayerReq.account)
}
inline void LoginPlayerReq::set_account(const char* value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.LoginPlayerReq.account)
}
inline void LoginPlayerReq::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.LoginPlayerReq.account)
}
inline ::std::string* LoginPlayerReq::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:msg_maj.LoginPlayerReq.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginPlayerReq::release_account() {
  // @@protoc_insertion_point(field_release:msg_maj.LoginPlayerReq.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginPlayerReq::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.LoginPlayerReq.account)
}

// optional uint32 serverid = 2;
inline bool LoginPlayerReq::has_serverid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginPlayerReq::set_has_serverid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginPlayerReq::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginPlayerReq::clear_serverid() {
  serverid_ = 0u;
  clear_has_serverid();
}
inline ::google::protobuf::uint32 LoginPlayerReq::serverid() const {
  // @@protoc_insertion_point(field_get:msg_maj.LoginPlayerReq.serverid)
  return serverid_;
}
inline void LoginPlayerReq::set_serverid(::google::protobuf::uint32 value) {
  set_has_serverid();
  serverid_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.LoginPlayerReq.serverid)
}

// -------------------------------------------------------------------

// LoginPlayerResp

// required .msg_maj.login_code code = 1;
inline bool LoginPlayerResp::has_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginPlayerResp::set_has_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginPlayerResp::clear_has_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginPlayerResp::clear_code() {
  code_ = 1;
  clear_has_code();
}
inline ::msg_maj::login_code LoginPlayerResp::code() const {
  // @@protoc_insertion_point(field_get:msg_maj.LoginPlayerResp.code)
  return static_cast< ::msg_maj::login_code >(code_);
}
inline void LoginPlayerResp::set_code(::msg_maj::login_code value) {
  assert(::msg_maj::login_code_IsValid(value));
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.LoginPlayerResp.code)
}

// optional bool is_reconnect = 2;
inline bool LoginPlayerResp::has_is_reconnect() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginPlayerResp::set_has_is_reconnect() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginPlayerResp::clear_has_is_reconnect() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginPlayerResp::clear_is_reconnect() {
  is_reconnect_ = false;
  clear_has_is_reconnect();
}
inline bool LoginPlayerResp::is_reconnect() const {
  // @@protoc_insertion_point(field_get:msg_maj.LoginPlayerResp.is_reconnect)
  return is_reconnect_;
}
inline void LoginPlayerResp::set_is_reconnect(bool value) {
  set_has_is_reconnect();
  is_reconnect_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.LoginPlayerResp.is_reconnect)
}

// optional .msg_maj.Role role = 3;
inline bool LoginPlayerResp::has_role() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoginPlayerResp::set_has_role() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LoginPlayerResp::clear_has_role() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LoginPlayerResp::clear_role() {
  if (role_ != NULL) role_->::msg_maj::Role::Clear();
  clear_has_role();
}
inline const ::msg_maj::Role& LoginPlayerResp::role() const {
  // @@protoc_insertion_point(field_get:msg_maj.LoginPlayerResp.role)
  return role_ != NULL ? *role_ : *default_instance_->role_;
}
inline ::msg_maj::Role* LoginPlayerResp::mutable_role() {
  set_has_role();
  if (role_ == NULL) {
    role_ = new ::msg_maj::Role;
  }
  // @@protoc_insertion_point(field_mutable:msg_maj.LoginPlayerResp.role)
  return role_;
}
inline ::msg_maj::Role* LoginPlayerResp::release_role() {
  // @@protoc_insertion_point(field_release:msg_maj.LoginPlayerResp.role)
  clear_has_role();
  ::msg_maj::Role* temp = role_;
  role_ = NULL;
  return temp;
}
inline void LoginPlayerResp::set_allocated_role(::msg_maj::Role* role) {
  delete role_;
  role_ = role;
  if (role) {
    set_has_role();
  } else {
    clear_has_role();
  }
  // @@protoc_insertion_point(field_set_allocated:msg_maj.LoginPlayerResp.role)
}

// optional uint64 srv_time = 4;
inline bool LoginPlayerResp::has_srv_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LoginPlayerResp::set_has_srv_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LoginPlayerResp::clear_has_srv_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LoginPlayerResp::clear_srv_time() {
  srv_time_ = GOOGLE_ULONGLONG(0);
  clear_has_srv_time();
}
inline ::google::protobuf::uint64 LoginPlayerResp::srv_time() const {
  // @@protoc_insertion_point(field_get:msg_maj.LoginPlayerResp.srv_time)
  return srv_time_;
}
inline void LoginPlayerResp::set_srv_time(::google::protobuf::uint64 value) {
  set_has_srv_time();
  srv_time_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.LoginPlayerResp.srv_time)
}

// optional bool is_free = 5;
inline bool LoginPlayerResp::has_is_free() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LoginPlayerResp::set_has_is_free() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LoginPlayerResp::clear_has_is_free() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LoginPlayerResp::clear_is_free() {
  is_free_ = false;
  clear_has_is_free();
}
inline bool LoginPlayerResp::is_free() const {
  // @@protoc_insertion_point(field_get:msg_maj.LoginPlayerResp.is_free)
  return is_free_;
}
inline void LoginPlayerResp::set_is_free(bool value) {
  set_has_is_free();
  is_free_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.LoginPlayerResp.is_free)
}

// -------------------------------------------------------------------

// SDKTokenReq

// optional string token = 1;
inline bool SDKTokenReq::has_token() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SDKTokenReq::set_has_token() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SDKTokenReq::clear_has_token() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SDKTokenReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_token();
}
inline const ::std::string& SDKTokenReq::token() const {
  // @@protoc_insertion_point(field_get:msg_maj.SDKTokenReq.token)
  return token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SDKTokenReq::set_token(const ::std::string& value) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.SDKTokenReq.token)
}
inline void SDKTokenReq::set_token(const char* value) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.SDKTokenReq.token)
}
inline void SDKTokenReq::set_token(const char* value, size_t size) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.SDKTokenReq.token)
}
inline ::std::string* SDKTokenReq::mutable_token() {
  set_has_token();
  // @@protoc_insertion_point(field_mutable:msg_maj.SDKTokenReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SDKTokenReq::release_token() {
  // @@protoc_insertion_point(field_release:msg_maj.SDKTokenReq.token)
  clear_has_token();
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SDKTokenReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    set_has_token();
  } else {
    clear_has_token();
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.SDKTokenReq.token)
}

// -------------------------------------------------------------------

// SDKTokenResp

// optional int32 result = 1;
inline bool SDKTokenResp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SDKTokenResp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SDKTokenResp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SDKTokenResp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 SDKTokenResp::result() const {
  // @@protoc_insertion_point(field_get:msg_maj.SDKTokenResp.result)
  return result_;
}
inline void SDKTokenResp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.SDKTokenResp.result)
}

// optional string ip = 2;
inline bool SDKTokenResp::has_ip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SDKTokenResp::set_has_ip() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SDKTokenResp::clear_has_ip() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SDKTokenResp::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip();
}
inline const ::std::string& SDKTokenResp::ip() const {
  // @@protoc_insertion_point(field_get:msg_maj.SDKTokenResp.ip)
  return ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SDKTokenResp::set_ip(const ::std::string& value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.SDKTokenResp.ip)
}
inline void SDKTokenResp::set_ip(const char* value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.SDKTokenResp.ip)
}
inline void SDKTokenResp::set_ip(const char* value, size_t size) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.SDKTokenResp.ip)
}
inline ::std::string* SDKTokenResp::mutable_ip() {
  set_has_ip();
  // @@protoc_insertion_point(field_mutable:msg_maj.SDKTokenResp.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SDKTokenResp::release_ip() {
  // @@protoc_insertion_point(field_release:msg_maj.SDKTokenResp.ip)
  clear_has_ip();
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SDKTokenResp::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    set_has_ip();
  } else {
    clear_has_ip();
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.SDKTokenResp.ip)
}

// optional uint32 port = 3;
inline bool SDKTokenResp::has_port() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SDKTokenResp::set_has_port() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SDKTokenResp::clear_has_port() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SDKTokenResp::clear_port() {
  port_ = 0u;
  clear_has_port();
}
inline ::google::protobuf::uint32 SDKTokenResp::port() const {
  // @@protoc_insertion_point(field_get:msg_maj.SDKTokenResp.port)
  return port_;
}
inline void SDKTokenResp::set_port(::google::protobuf::uint32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.SDKTokenResp.port)
}

// optional string account = 4;
inline bool SDKTokenResp::has_account() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SDKTokenResp::set_has_account() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SDKTokenResp::clear_has_account() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SDKTokenResp::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
inline const ::std::string& SDKTokenResp::account() const {
  // @@protoc_insertion_point(field_get:msg_maj.SDKTokenResp.account)
  return account_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SDKTokenResp::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.SDKTokenResp.account)
}
inline void SDKTokenResp::set_account(const char* value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.SDKTokenResp.account)
}
inline void SDKTokenResp::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.SDKTokenResp.account)
}
inline ::std::string* SDKTokenResp::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:msg_maj.SDKTokenResp.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SDKTokenResp::release_account() {
  // @@protoc_insertion_point(field_release:msg_maj.SDKTokenResp.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SDKTokenResp::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.SDKTokenResp.account)
}

// optional string icon_add = 5;
inline bool SDKTokenResp::has_icon_add() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SDKTokenResp::set_has_icon_add() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SDKTokenResp::clear_has_icon_add() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SDKTokenResp::clear_icon_add() {
  icon_add_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_icon_add();
}
inline const ::std::string& SDKTokenResp::icon_add() const {
  // @@protoc_insertion_point(field_get:msg_maj.SDKTokenResp.icon_add)
  return icon_add_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SDKTokenResp::set_icon_add(const ::std::string& value) {
  set_has_icon_add();
  icon_add_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.SDKTokenResp.icon_add)
}
inline void SDKTokenResp::set_icon_add(const char* value) {
  set_has_icon_add();
  icon_add_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.SDKTokenResp.icon_add)
}
inline void SDKTokenResp::set_icon_add(const char* value, size_t size) {
  set_has_icon_add();
  icon_add_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.SDKTokenResp.icon_add)
}
inline ::std::string* SDKTokenResp::mutable_icon_add() {
  set_has_icon_add();
  // @@protoc_insertion_point(field_mutable:msg_maj.SDKTokenResp.icon_add)
  return icon_add_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SDKTokenResp::release_icon_add() {
  // @@protoc_insertion_point(field_release:msg_maj.SDKTokenResp.icon_add)
  clear_has_icon_add();
  return icon_add_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SDKTokenResp::set_allocated_icon_add(::std::string* icon_add) {
  if (icon_add != NULL) {
    set_has_icon_add();
  } else {
    clear_has_icon_add();
  }
  icon_add_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), icon_add);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.SDKTokenResp.icon_add)
}

// -------------------------------------------------------------------

// NotifyAnotherLogin

// -------------------------------------------------------------------

// NotifyPlayerExit

// -------------------------------------------------------------------

// ChangeSceneReq

// optional int32 scene_id = 1;
inline bool ChangeSceneReq::has_scene_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChangeSceneReq::set_has_scene_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChangeSceneReq::clear_has_scene_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChangeSceneReq::clear_scene_id() {
  scene_id_ = 0;
  clear_has_scene_id();
}
inline ::google::protobuf::int32 ChangeSceneReq::scene_id() const {
  // @@protoc_insertion_point(field_get:msg_maj.ChangeSceneReq.scene_id)
  return scene_id_;
}
inline void ChangeSceneReq::set_scene_id(::google::protobuf::int32 value) {
  set_has_scene_id();
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.ChangeSceneReq.scene_id)
}

// -------------------------------------------------------------------

// ChangeSceneResp

// optional int32 scene_id = 1;
inline bool ChangeSceneResp::has_scene_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChangeSceneResp::set_has_scene_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChangeSceneResp::clear_has_scene_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChangeSceneResp::clear_scene_id() {
  scene_id_ = 0;
  clear_has_scene_id();
}
inline ::google::protobuf::int32 ChangeSceneResp::scene_id() const {
  // @@protoc_insertion_point(field_get:msg_maj.ChangeSceneResp.scene_id)
  return scene_id_;
}
inline void ChangeSceneResp::set_scene_id(::google::protobuf::int32 value) {
  set_has_scene_id();
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.ChangeSceneResp.scene_id)
}

// optional int32 result = 2;
inline bool ChangeSceneResp::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChangeSceneResp::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChangeSceneResp::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChangeSceneResp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 ChangeSceneResp::result() const {
  // @@protoc_insertion_point(field_get:msg_maj.ChangeSceneResp.result)
  return result_;
}
inline void ChangeSceneResp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.ChangeSceneResp.result)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace msg_maj

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::msg_maj::c_cmd_login> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg_maj::c_cmd_login>() {
  return ::msg_maj::c_cmd_login_descriptor();
}
template <> struct is_proto_enum< ::msg_maj::login_code> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg_maj::login_code>() {
  return ::msg_maj::login_code_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_msg_5flogin_2eproto__INCLUDED
