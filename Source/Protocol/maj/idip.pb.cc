// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: idip.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "idip.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace fogs {
namespace proto {
namespace msg {

namespace {

const ::google::protobuf::Descriptor* SendMsgRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SendMsgRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* SendMsgResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SendMsgResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* SendRoomCard_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SendRoomCard_reflection_ = NULL;
const ::google::protobuf::Descriptor* UserEditCard_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UserEditCard_reflection_ = NULL;
const ::google::protobuf::Descriptor* EditRoomCard_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EditRoomCard_reflection_ = NULL;
const ::google::protobuf::Descriptor* SendMailToPlayer_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SendMailToPlayer_reflection_ = NULL;
const ::google::protobuf::Descriptor* SendNoticeToGame_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SendNoticeToGame_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeleteNoticeToGame_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeleteNoticeToGame_reflection_ = NULL;
const ::google::protobuf::Descriptor* SendBlockUser_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SendBlockUser_reflection_ = NULL;
const ::google::protobuf::Descriptor* SendFindUser_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SendFindUser_reflection_ = NULL;
const ::google::protobuf::Descriptor* RespFindUser_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RespFindUser_reflection_ = NULL;
const ::google::protobuf::Descriptor* SendFindOnline_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SendFindOnline_reflection_ = NULL;
const ::google::protobuf::Descriptor* RespFindOnline_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RespFindOnline_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetBindingAgentInfoReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetBindingAgentInfoReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetBindingAgentInfoResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetBindingAgentInfoResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* BindingAgentReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BindingAgentReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* BindingAgentResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BindingAgentResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* RefreshConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RefreshConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* RefreshFree_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RefreshFree_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ConfigType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_idip_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_idip_2eproto() {
  protobuf_AddDesc_idip_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "idip.proto");
  GOOGLE_CHECK(file != NULL);
  SendMsgRequest_descriptor_ = file->message_type(0);
  static const int SendMsgRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendMsgRequest, connect_),
  };
  SendMsgRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SendMsgRequest_descriptor_,
      SendMsgRequest::default_instance_,
      SendMsgRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendMsgRequest, _has_bits_[0]),
      -1,
      -1,
      sizeof(SendMsgRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendMsgRequest, _internal_metadata_),
      -1);
  SendMsgResponse_descriptor_ = file->message_type(1);
  static const int SendMsgResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendMsgResponse, result_),
  };
  SendMsgResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SendMsgResponse_descriptor_,
      SendMsgResponse::default_instance_,
      SendMsgResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendMsgResponse, _has_bits_[0]),
      -1,
      -1,
      sizeof(SendMsgResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendMsgResponse, _internal_metadata_),
      -1);
  SendRoomCard_descriptor_ = file->message_type(2);
  static const int SendRoomCard_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendRoomCard, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendRoomCard, cards_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendRoomCard, order_no_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendRoomCard, from_uid_),
  };
  SendRoomCard_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SendRoomCard_descriptor_,
      SendRoomCard::default_instance_,
      SendRoomCard_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendRoomCard, _has_bits_[0]),
      -1,
      -1,
      sizeof(SendRoomCard),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendRoomCard, _internal_metadata_),
      -1);
  UserEditCard_descriptor_ = file->message_type(3);
  static const int UserEditCard_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserEditCard, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserEditCard, cards_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserEditCard, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserEditCard, from_uid_),
  };
  UserEditCard_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UserEditCard_descriptor_,
      UserEditCard::default_instance_,
      UserEditCard_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserEditCard, _has_bits_[0]),
      -1,
      -1,
      sizeof(UserEditCard),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserEditCard, _internal_metadata_),
      -1);
  EditRoomCard_descriptor_ = file->message_type(4);
  static const int EditRoomCard_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EditRoomCard, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EditRoomCard, roomcard_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EditRoomCard, roomcard_total_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EditRoomCard, nickname_),
  };
  EditRoomCard_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EditRoomCard_descriptor_,
      EditRoomCard::default_instance_,
      EditRoomCard_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EditRoomCard, _has_bits_[0]),
      -1,
      -1,
      sizeof(EditRoomCard),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EditRoomCard, _internal_metadata_),
      -1);
  SendMailToPlayer_descriptor_ = file->message_type(5);
  static const int SendMailToPlayer_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendMailToPlayer, user_ids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendMailToPlayer, mail_title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendMailToPlayer, mail_content_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendMailToPlayer, award_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendMailToPlayer, award_num_),
  };
  SendMailToPlayer_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SendMailToPlayer_descriptor_,
      SendMailToPlayer::default_instance_,
      SendMailToPlayer_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendMailToPlayer, _has_bits_[0]),
      -1,
      -1,
      sizeof(SendMailToPlayer),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendMailToPlayer, _internal_metadata_),
      -1);
  SendNoticeToGame_descriptor_ = file->message_type(6);
  static const int SendNoticeToGame_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendNoticeToGame, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendNoticeToGame, begin_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendNoticeToGame, break_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendNoticeToGame, loop_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendNoticeToGame, content_),
  };
  SendNoticeToGame_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SendNoticeToGame_descriptor_,
      SendNoticeToGame::default_instance_,
      SendNoticeToGame_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendNoticeToGame, _has_bits_[0]),
      -1,
      -1,
      sizeof(SendNoticeToGame),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendNoticeToGame, _internal_metadata_),
      -1);
  DeleteNoticeToGame_descriptor_ = file->message_type(7);
  static const int DeleteNoticeToGame_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteNoticeToGame, id_),
  };
  DeleteNoticeToGame_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DeleteNoticeToGame_descriptor_,
      DeleteNoticeToGame::default_instance_,
      DeleteNoticeToGame_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteNoticeToGame, _has_bits_[0]),
      -1,
      -1,
      sizeof(DeleteNoticeToGame),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteNoticeToGame, _internal_metadata_),
      -1);
  SendBlockUser_descriptor_ = file->message_type(8);
  static const int SendBlockUser_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendBlockUser, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendBlockUser, closuretime_),
  };
  SendBlockUser_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SendBlockUser_descriptor_,
      SendBlockUser::default_instance_,
      SendBlockUser_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendBlockUser, _has_bits_[0]),
      -1,
      -1,
      sizeof(SendBlockUser),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendBlockUser, _internal_metadata_),
      -1);
  SendFindUser_descriptor_ = file->message_type(9);
  static const int SendFindUser_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendFindUser, user_id_),
  };
  SendFindUser_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SendFindUser_descriptor_,
      SendFindUser::default_instance_,
      SendFindUser_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendFindUser, _has_bits_[0]),
      -1,
      -1,
      sizeof(SendFindUser),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendFindUser, _internal_metadata_),
      -1);
  RespFindUser_descriptor_ = file->message_type(10);
  static const int RespFindUser_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RespFindUser, is_online_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RespFindUser, user_id_),
  };
  RespFindUser_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RespFindUser_descriptor_,
      RespFindUser::default_instance_,
      RespFindUser_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RespFindUser, _has_bits_[0]),
      -1,
      -1,
      sizeof(RespFindUser),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RespFindUser, _internal_metadata_),
      -1);
  SendFindOnline_descriptor_ = file->message_type(11);
  static const int SendFindOnline_offsets_[1] = {
  };
  SendFindOnline_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SendFindOnline_descriptor_,
      SendFindOnline::default_instance_,
      SendFindOnline_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendFindOnline, _has_bits_[0]),
      -1,
      -1,
      sizeof(SendFindOnline),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendFindOnline, _internal_metadata_),
      -1);
  RespFindOnline_descriptor_ = file->message_type(12);
  static const int RespFindOnline_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RespFindOnline, total_),
  };
  RespFindOnline_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RespFindOnline_descriptor_,
      RespFindOnline::default_instance_,
      RespFindOnline_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RespFindOnline, _has_bits_[0]),
      -1,
      -1,
      sizeof(RespFindOnline),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RespFindOnline, _internal_metadata_),
      -1);
  GetBindingAgentInfoReq_descriptor_ = file->message_type(13);
  static const int GetBindingAgentInfoReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBindingAgentInfoReq, user_id_),
  };
  GetBindingAgentInfoReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetBindingAgentInfoReq_descriptor_,
      GetBindingAgentInfoReq::default_instance_,
      GetBindingAgentInfoReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBindingAgentInfoReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(GetBindingAgentInfoReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBindingAgentInfoReq, _internal_metadata_),
      -1);
  GetBindingAgentInfoResp_descriptor_ = file->message_type(14);
  static const int GetBindingAgentInfoResp_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBindingAgentInfoResp, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBindingAgentInfoResp, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBindingAgentInfoResp, agent_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBindingAgentInfoResp, agent_wx_account_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBindingAgentInfoResp, agent_icon_),
  };
  GetBindingAgentInfoResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetBindingAgentInfoResp_descriptor_,
      GetBindingAgentInfoResp::default_instance_,
      GetBindingAgentInfoResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBindingAgentInfoResp, _has_bits_[0]),
      -1,
      -1,
      sizeof(GetBindingAgentInfoResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBindingAgentInfoResp, _internal_metadata_),
      -1);
  BindingAgentReq_descriptor_ = file->message_type(15);
  static const int BindingAgentReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindingAgentReq, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindingAgentReq, agent_id_),
  };
  BindingAgentReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BindingAgentReq_descriptor_,
      BindingAgentReq::default_instance_,
      BindingAgentReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindingAgentReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(BindingAgentReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindingAgentReq, _internal_metadata_),
      -1);
  BindingAgentResp_descriptor_ = file->message_type(16);
  static const int BindingAgentResp_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindingAgentResp, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindingAgentResp, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindingAgentResp, agent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindingAgentResp, agent_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindingAgentResp, agent_wx_account_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindingAgentResp, agent_icon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindingAgentResp, code_info_),
  };
  BindingAgentResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BindingAgentResp_descriptor_,
      BindingAgentResp::default_instance_,
      BindingAgentResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindingAgentResp, _has_bits_[0]),
      -1,
      -1,
      sizeof(BindingAgentResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindingAgentResp, _internal_metadata_),
      -1);
  RefreshConfig_descriptor_ = file->message_type(17);
  static const int RefreshConfig_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefreshConfig, config_type_),
  };
  RefreshConfig_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RefreshConfig_descriptor_,
      RefreshConfig::default_instance_,
      RefreshConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefreshConfig, _has_bits_[0]),
      -1,
      -1,
      sizeof(RefreshConfig),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefreshConfig, _internal_metadata_),
      -1);
  RefreshFree_descriptor_ = file->message_type(18);
  static const int RefreshFree_offsets_[1] = {
  };
  RefreshFree_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RefreshFree_descriptor_,
      RefreshFree::default_instance_,
      RefreshFree_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefreshFree, _has_bits_[0]),
      -1,
      -1,
      sizeof(RefreshFree),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefreshFree, _internal_metadata_),
      -1);
  ConfigType_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_idip_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SendMsgRequest_descriptor_, &SendMsgRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SendMsgResponse_descriptor_, &SendMsgResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SendRoomCard_descriptor_, &SendRoomCard::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UserEditCard_descriptor_, &UserEditCard::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EditRoomCard_descriptor_, &EditRoomCard::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SendMailToPlayer_descriptor_, &SendMailToPlayer::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SendNoticeToGame_descriptor_, &SendNoticeToGame::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DeleteNoticeToGame_descriptor_, &DeleteNoticeToGame::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SendBlockUser_descriptor_, &SendBlockUser::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SendFindUser_descriptor_, &SendFindUser::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RespFindUser_descriptor_, &RespFindUser::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SendFindOnline_descriptor_, &SendFindOnline::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RespFindOnline_descriptor_, &RespFindOnline::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetBindingAgentInfoReq_descriptor_, &GetBindingAgentInfoReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetBindingAgentInfoResp_descriptor_, &GetBindingAgentInfoResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BindingAgentReq_descriptor_, &BindingAgentReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BindingAgentResp_descriptor_, &BindingAgentResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RefreshConfig_descriptor_, &RefreshConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RefreshFree_descriptor_, &RefreshFree::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_idip_2eproto() {
  delete SendMsgRequest::default_instance_;
  delete SendMsgRequest_reflection_;
  delete SendMsgResponse::default_instance_;
  delete SendMsgResponse_reflection_;
  delete SendRoomCard::default_instance_;
  delete SendRoomCard_reflection_;
  delete UserEditCard::default_instance_;
  delete UserEditCard_reflection_;
  delete EditRoomCard::default_instance_;
  delete EditRoomCard_reflection_;
  delete SendMailToPlayer::default_instance_;
  delete SendMailToPlayer_reflection_;
  delete SendNoticeToGame::default_instance_;
  delete SendNoticeToGame_reflection_;
  delete DeleteNoticeToGame::default_instance_;
  delete DeleteNoticeToGame_reflection_;
  delete SendBlockUser::default_instance_;
  delete SendBlockUser_reflection_;
  delete SendFindUser::default_instance_;
  delete SendFindUser_reflection_;
  delete RespFindUser::default_instance_;
  delete RespFindUser_reflection_;
  delete SendFindOnline::default_instance_;
  delete SendFindOnline_reflection_;
  delete RespFindOnline::default_instance_;
  delete RespFindOnline_reflection_;
  delete GetBindingAgentInfoReq::default_instance_;
  delete GetBindingAgentInfoReq_reflection_;
  delete GetBindingAgentInfoResp::default_instance_;
  delete GetBindingAgentInfoResp_reflection_;
  delete BindingAgentReq::default_instance_;
  delete BindingAgentReq_reflection_;
  delete BindingAgentResp::default_instance_;
  delete BindingAgentResp_reflection_;
  delete RefreshConfig::default_instance_;
  delete RefreshConfig_reflection_;
  delete RefreshFree::default_instance_;
  delete RefreshFree_reflection_;
}

void protobuf_AddDesc_idip_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_idip_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\nidip.proto\022\016fogs.proto.msg\"!\n\016SendMsgR"
    "equest\022\017\n\007connect\030\001 \001(\t\"!\n\017SendMsgRespon"
    "se\022\016\n\006result\030\001 \001(\005\"R\n\014SendRoomCard\022\017\n\007us"
    "er_id\030\001 \001(\004\022\r\n\005cards\030\002 \001(\005\022\020\n\010order_no\030\003"
    " \001(\t\022\020\n\010from_uid\030\004 \001(\004\"O\n\014UserEditCard\022\017"
    "\n\007user_id\030\001 \001(\004\022\r\n\005cards\030\002 \001(\005\022\r\n\005level\030"
    "\003 \001(\005\022\020\n\010from_uid\030\004 \001(\004\"_\n\014EditRoomCard\022"
    "\017\n\007user_id\030\001 \001(\004\022\024\n\014roomcard_num\030\002 \001(\005\022\026"
    "\n\016roomcard_total\030\003 \001(\005\022\020\n\010nickname\030\004 \001(\t"
    "\"u\n\020SendMailToPlayer\022\020\n\010user_ids\030\001 \003(\004\022\022"
    "\n\nmail_title\030\002 \001(\t\022\024\n\014mail_content\030\003 \001(\t"
    "\022\022\n\naward_type\030\004 \001(\r\022\021\n\taward_num\030\005 \001(\r\""
    "j\n\020SendNoticeToGame\022\n\n\002id\030\001 \001(\004\022\022\n\nbegin"
    "_time\030\002 \001(\004\022\022\n\nbreak_time\030\003 \001(\004\022\021\n\tloop_"
    "time\030\004 \001(\r\022\017\n\007content\030\005 \001(\t\" \n\022DeleteNot"
    "iceToGame\022\n\n\002id\030\001 \001(\004\"5\n\rSendBlockUser\022\017"
    "\n\007user_id\030\001 \001(\004\022\023\n\013closureTime\030\002 \001(\004\"\037\n\014"
    "SendFindUser\022\017\n\007user_id\030\001 \001(\004\"2\n\014RespFin"
    "dUser\022\021\n\tis_online\030\001 \001(\010\022\017\n\007user_id\030\002 \001("
    "\004\"\020\n\016SendFindOnline\"\037\n\016RespFindOnline\022\r\n"
    "\005total\030\001 \001(\r\")\n\026GetBindingAgentInfoReq\022\017"
    "\n\007user_id\030\001 \001(\r\"~\n\027GetBindingAgentInfoRe"
    "sp\022\017\n\007user_id\030\001 \001(\r\022\020\n\010agent_id\030\002 \001(\r\022\022\n"
    "\nagent_name\030\003 \001(\t\022\030\n\020agent_wx_account\030\004 "
    "\001(\t\022\022\n\nagent_icon\030\005 \001(\t\"4\n\017BindingAgentR"
    "eq\022\017\n\007user_id\030\001 \001(\r\022\020\n\010agent_id\030\002 \001(\r\"\232\001"
    "\n\020BindingAgentResp\022\016\n\006result\030\001 \001(\005\022\017\n\007us"
    "er_id\030\002 \001(\r\022\020\n\010agent_id\030\003 \001(\r\022\022\n\nagent_n"
    "ame\030\004 \001(\t\022\030\n\020agent_wx_account\030\005 \001(\t\022\022\n\na"
    "gent_icon\030\006 \001(\t\022\021\n\tcode_info\030\007 \001(\t\"@\n\rRe"
    "freshConfig\022/\n\013config_type\030\001 \001(\0162\032.fogs."
    "proto.msg.ConfigType\"\r\n\013RefreshFree*=\n\nC"
    "onfigType\022\024\n\020ConfigType_Share\020\001\022\031\n\025Confi"
    "gType_Invitation\020\002", 1338);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "idip.proto", &protobuf_RegisterTypes);
  SendMsgRequest::default_instance_ = new SendMsgRequest();
  SendMsgResponse::default_instance_ = new SendMsgResponse();
  SendRoomCard::default_instance_ = new SendRoomCard();
  UserEditCard::default_instance_ = new UserEditCard();
  EditRoomCard::default_instance_ = new EditRoomCard();
  SendMailToPlayer::default_instance_ = new SendMailToPlayer();
  SendNoticeToGame::default_instance_ = new SendNoticeToGame();
  DeleteNoticeToGame::default_instance_ = new DeleteNoticeToGame();
  SendBlockUser::default_instance_ = new SendBlockUser();
  SendFindUser::default_instance_ = new SendFindUser();
  RespFindUser::default_instance_ = new RespFindUser();
  SendFindOnline::default_instance_ = new SendFindOnline();
  RespFindOnline::default_instance_ = new RespFindOnline();
  GetBindingAgentInfoReq::default_instance_ = new GetBindingAgentInfoReq();
  GetBindingAgentInfoResp::default_instance_ = new GetBindingAgentInfoResp();
  BindingAgentReq::default_instance_ = new BindingAgentReq();
  BindingAgentResp::default_instance_ = new BindingAgentResp();
  RefreshConfig::default_instance_ = new RefreshConfig();
  RefreshFree::default_instance_ = new RefreshFree();
  SendMsgRequest::default_instance_->InitAsDefaultInstance();
  SendMsgResponse::default_instance_->InitAsDefaultInstance();
  SendRoomCard::default_instance_->InitAsDefaultInstance();
  UserEditCard::default_instance_->InitAsDefaultInstance();
  EditRoomCard::default_instance_->InitAsDefaultInstance();
  SendMailToPlayer::default_instance_->InitAsDefaultInstance();
  SendNoticeToGame::default_instance_->InitAsDefaultInstance();
  DeleteNoticeToGame::default_instance_->InitAsDefaultInstance();
  SendBlockUser::default_instance_->InitAsDefaultInstance();
  SendFindUser::default_instance_->InitAsDefaultInstance();
  RespFindUser::default_instance_->InitAsDefaultInstance();
  SendFindOnline::default_instance_->InitAsDefaultInstance();
  RespFindOnline::default_instance_->InitAsDefaultInstance();
  GetBindingAgentInfoReq::default_instance_->InitAsDefaultInstance();
  GetBindingAgentInfoResp::default_instance_->InitAsDefaultInstance();
  BindingAgentReq::default_instance_->InitAsDefaultInstance();
  BindingAgentResp::default_instance_->InitAsDefaultInstance();
  RefreshConfig::default_instance_->InitAsDefaultInstance();
  RefreshFree::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_idip_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_idip_2eproto {
  StaticDescriptorInitializer_idip_2eproto() {
    protobuf_AddDesc_idip_2eproto();
  }
} static_descriptor_initializer_idip_2eproto_;
const ::google::protobuf::EnumDescriptor* ConfigType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ConfigType_descriptor_;
}
bool ConfigType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendMsgRequest::kConnectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendMsgRequest::SendMsgRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.SendMsgRequest)
}

void SendMsgRequest::InitAsDefaultInstance() {
}

SendMsgRequest::SendMsgRequest(const SendMsgRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.SendMsgRequest)
}

void SendMsgRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  connect_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SendMsgRequest::~SendMsgRequest() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.SendMsgRequest)
  SharedDtor();
}

void SendMsgRequest::SharedDtor() {
  connect_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void SendMsgRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SendMsgRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SendMsgRequest_descriptor_;
}

const SendMsgRequest& SendMsgRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_idip_2eproto();
  return *default_instance_;
}

SendMsgRequest* SendMsgRequest::default_instance_ = NULL;

SendMsgRequest* SendMsgRequest::New(::google::protobuf::Arena* arena) const {
  SendMsgRequest* n = new SendMsgRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SendMsgRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.SendMsgRequest)
  if (has_connect()) {
    connect_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SendMsgRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.SendMsgRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string connect = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_connect()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->connect().data(), this->connect().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fogs.proto.msg.SendMsgRequest.connect");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.SendMsgRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.SendMsgRequest)
  return false;
#undef DO_
}

void SendMsgRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.SendMsgRequest)
  // optional string connect = 1;
  if (has_connect()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->connect().data(), this->connect().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fogs.proto.msg.SendMsgRequest.connect");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->connect(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.SendMsgRequest)
}

::google::protobuf::uint8* SendMsgRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.SendMsgRequest)
  // optional string connect = 1;
  if (has_connect()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->connect().data(), this->connect().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fogs.proto.msg.SendMsgRequest.connect");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->connect(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.SendMsgRequest)
  return target;
}

int SendMsgRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.SendMsgRequest)
  int total_size = 0;

  // optional string connect = 1;
  if (has_connect()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->connect());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SendMsgRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.SendMsgRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SendMsgRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SendMsgRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.SendMsgRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.SendMsgRequest)
    MergeFrom(*source);
  }
}

void SendMsgRequest::MergeFrom(const SendMsgRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.SendMsgRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_connect()) {
      set_has_connect();
      connect_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.connect_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SendMsgRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.SendMsgRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendMsgRequest::CopyFrom(const SendMsgRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.SendMsgRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendMsgRequest::IsInitialized() const {

  return true;
}

void SendMsgRequest::Swap(SendMsgRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendMsgRequest::InternalSwap(SendMsgRequest* other) {
  connect_.Swap(&other->connect_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SendMsgRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SendMsgRequest_descriptor_;
  metadata.reflection = SendMsgRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SendMsgRequest

// optional string connect = 1;
bool SendMsgRequest::has_connect() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SendMsgRequest::set_has_connect() {
  _has_bits_[0] |= 0x00000001u;
}
void SendMsgRequest::clear_has_connect() {
  _has_bits_[0] &= ~0x00000001u;
}
void SendMsgRequest::clear_connect() {
  connect_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_connect();
}
 const ::std::string& SendMsgRequest::connect() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.SendMsgRequest.connect)
  return connect_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SendMsgRequest::set_connect(const ::std::string& value) {
  set_has_connect();
  connect_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fogs.proto.msg.SendMsgRequest.connect)
}
 void SendMsgRequest::set_connect(const char* value) {
  set_has_connect();
  connect_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fogs.proto.msg.SendMsgRequest.connect)
}
 void SendMsgRequest::set_connect(const char* value, size_t size) {
  set_has_connect();
  connect_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fogs.proto.msg.SendMsgRequest.connect)
}
 ::std::string* SendMsgRequest::mutable_connect() {
  set_has_connect();
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.SendMsgRequest.connect)
  return connect_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SendMsgRequest::release_connect() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.SendMsgRequest.connect)
  clear_has_connect();
  return connect_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SendMsgRequest::set_allocated_connect(::std::string* connect) {
  if (connect != NULL) {
    set_has_connect();
  } else {
    clear_has_connect();
  }
  connect_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), connect);
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.SendMsgRequest.connect)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendMsgResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendMsgResponse::SendMsgResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.SendMsgResponse)
}

void SendMsgResponse::InitAsDefaultInstance() {
}

SendMsgResponse::SendMsgResponse(const SendMsgResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.SendMsgResponse)
}

void SendMsgResponse::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SendMsgResponse::~SendMsgResponse() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.SendMsgResponse)
  SharedDtor();
}

void SendMsgResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SendMsgResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SendMsgResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SendMsgResponse_descriptor_;
}

const SendMsgResponse& SendMsgResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_idip_2eproto();
  return *default_instance_;
}

SendMsgResponse* SendMsgResponse::default_instance_ = NULL;

SendMsgResponse* SendMsgResponse::New(::google::protobuf::Arena* arena) const {
  SendMsgResponse* n = new SendMsgResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SendMsgResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.SendMsgResponse)
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SendMsgResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.SendMsgResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.SendMsgResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.SendMsgResponse)
  return false;
#undef DO_
}

void SendMsgResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.SendMsgResponse)
  // optional int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.SendMsgResponse)
}

::google::protobuf::uint8* SendMsgResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.SendMsgResponse)
  // optional int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.SendMsgResponse)
  return target;
}

int SendMsgResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.SendMsgResponse)
  int total_size = 0;

  // optional int32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SendMsgResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.SendMsgResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SendMsgResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SendMsgResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.SendMsgResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.SendMsgResponse)
    MergeFrom(*source);
  }
}

void SendMsgResponse::MergeFrom(const SendMsgResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.SendMsgResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SendMsgResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.SendMsgResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendMsgResponse::CopyFrom(const SendMsgResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.SendMsgResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendMsgResponse::IsInitialized() const {

  return true;
}

void SendMsgResponse::Swap(SendMsgResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendMsgResponse::InternalSwap(SendMsgResponse* other) {
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SendMsgResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SendMsgResponse_descriptor_;
  metadata.reflection = SendMsgResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SendMsgResponse

// optional int32 result = 1;
bool SendMsgResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SendMsgResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void SendMsgResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void SendMsgResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
 ::google::protobuf::int32 SendMsgResponse::result() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.SendMsgResponse.result)
  return result_;
}
 void SendMsgResponse::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.SendMsgResponse.result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendRoomCard::kUserIdFieldNumber;
const int SendRoomCard::kCardsFieldNumber;
const int SendRoomCard::kOrderNoFieldNumber;
const int SendRoomCard::kFromUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendRoomCard::SendRoomCard()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.SendRoomCard)
}

void SendRoomCard::InitAsDefaultInstance() {
}

SendRoomCard::SendRoomCard(const SendRoomCard& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.SendRoomCard)
}

void SendRoomCard::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  user_id_ = GOOGLE_ULONGLONG(0);
  cards_ = 0;
  order_no_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_uid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SendRoomCard::~SendRoomCard() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.SendRoomCard)
  SharedDtor();
}

void SendRoomCard::SharedDtor() {
  order_no_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void SendRoomCard::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SendRoomCard::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SendRoomCard_descriptor_;
}

const SendRoomCard& SendRoomCard::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_idip_2eproto();
  return *default_instance_;
}

SendRoomCard* SendRoomCard::default_instance_ = NULL;

SendRoomCard* SendRoomCard::New(::google::protobuf::Arena* arena) const {
  SendRoomCard* n = new SendRoomCard;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SendRoomCard::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.SendRoomCard)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(SendRoomCard, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SendRoomCard*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 15u) {
    ZR_(from_uid_, cards_);
    user_id_ = GOOGLE_ULONGLONG(0);
    if (has_order_no()) {
      order_no_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SendRoomCard::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.SendRoomCard)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 user_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &user_id_)));
          set_has_user_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_cards;
        break;
      }

      // optional int32 cards = 2;
      case 2: {
        if (tag == 16) {
         parse_cards:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cards_)));
          set_has_cards();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_order_no;
        break;
      }

      // optional string order_no = 3;
      case 3: {
        if (tag == 26) {
         parse_order_no:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_order_no()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->order_no().data(), this->order_no().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fogs.proto.msg.SendRoomCard.order_no");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_from_uid;
        break;
      }

      // optional uint64 from_uid = 4;
      case 4: {
        if (tag == 32) {
         parse_from_uid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &from_uid_)));
          set_has_from_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.SendRoomCard)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.SendRoomCard)
  return false;
#undef DO_
}

void SendRoomCard::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.SendRoomCard)
  // optional uint64 user_id = 1;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->user_id(), output);
  }

  // optional int32 cards = 2;
  if (has_cards()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->cards(), output);
  }

  // optional string order_no = 3;
  if (has_order_no()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->order_no().data(), this->order_no().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fogs.proto.msg.SendRoomCard.order_no");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->order_no(), output);
  }

  // optional uint64 from_uid = 4;
  if (has_from_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->from_uid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.SendRoomCard)
}

::google::protobuf::uint8* SendRoomCard::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.SendRoomCard)
  // optional uint64 user_id = 1;
  if (has_user_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->user_id(), target);
  }

  // optional int32 cards = 2;
  if (has_cards()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->cards(), target);
  }

  // optional string order_no = 3;
  if (has_order_no()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->order_no().data(), this->order_no().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fogs.proto.msg.SendRoomCard.order_no");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->order_no(), target);
  }

  // optional uint64 from_uid = 4;
  if (has_from_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->from_uid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.SendRoomCard)
  return target;
}

int SendRoomCard::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.SendRoomCard)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 15u) {
    // optional uint64 user_id = 1;
    if (has_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->user_id());
    }

    // optional int32 cards = 2;
    if (has_cards()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cards());
    }

    // optional string order_no = 3;
    if (has_order_no()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->order_no());
    }

    // optional uint64 from_uid = 4;
    if (has_from_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->from_uid());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SendRoomCard::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.SendRoomCard)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SendRoomCard* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SendRoomCard>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.SendRoomCard)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.SendRoomCard)
    MergeFrom(*source);
  }
}

void SendRoomCard::MergeFrom(const SendRoomCard& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.SendRoomCard)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_user_id()) {
      set_user_id(from.user_id());
    }
    if (from.has_cards()) {
      set_cards(from.cards());
    }
    if (from.has_order_no()) {
      set_has_order_no();
      order_no_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.order_no_);
    }
    if (from.has_from_uid()) {
      set_from_uid(from.from_uid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SendRoomCard::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.SendRoomCard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendRoomCard::CopyFrom(const SendRoomCard& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.SendRoomCard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendRoomCard::IsInitialized() const {

  return true;
}

void SendRoomCard::Swap(SendRoomCard* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendRoomCard::InternalSwap(SendRoomCard* other) {
  std::swap(user_id_, other->user_id_);
  std::swap(cards_, other->cards_);
  order_no_.Swap(&other->order_no_);
  std::swap(from_uid_, other->from_uid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SendRoomCard::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SendRoomCard_descriptor_;
  metadata.reflection = SendRoomCard_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SendRoomCard

// optional uint64 user_id = 1;
bool SendRoomCard::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SendRoomCard::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
void SendRoomCard::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void SendRoomCard::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
 ::google::protobuf::uint64 SendRoomCard::user_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.SendRoomCard.user_id)
  return user_id_;
}
 void SendRoomCard::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.SendRoomCard.user_id)
}

// optional int32 cards = 2;
bool SendRoomCard::has_cards() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SendRoomCard::set_has_cards() {
  _has_bits_[0] |= 0x00000002u;
}
void SendRoomCard::clear_has_cards() {
  _has_bits_[0] &= ~0x00000002u;
}
void SendRoomCard::clear_cards() {
  cards_ = 0;
  clear_has_cards();
}
 ::google::protobuf::int32 SendRoomCard::cards() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.SendRoomCard.cards)
  return cards_;
}
 void SendRoomCard::set_cards(::google::protobuf::int32 value) {
  set_has_cards();
  cards_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.SendRoomCard.cards)
}

// optional string order_no = 3;
bool SendRoomCard::has_order_no() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SendRoomCard::set_has_order_no() {
  _has_bits_[0] |= 0x00000004u;
}
void SendRoomCard::clear_has_order_no() {
  _has_bits_[0] &= ~0x00000004u;
}
void SendRoomCard::clear_order_no() {
  order_no_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_order_no();
}
 const ::std::string& SendRoomCard::order_no() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.SendRoomCard.order_no)
  return order_no_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SendRoomCard::set_order_no(const ::std::string& value) {
  set_has_order_no();
  order_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fogs.proto.msg.SendRoomCard.order_no)
}
 void SendRoomCard::set_order_no(const char* value) {
  set_has_order_no();
  order_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fogs.proto.msg.SendRoomCard.order_no)
}
 void SendRoomCard::set_order_no(const char* value, size_t size) {
  set_has_order_no();
  order_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fogs.proto.msg.SendRoomCard.order_no)
}
 ::std::string* SendRoomCard::mutable_order_no() {
  set_has_order_no();
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.SendRoomCard.order_no)
  return order_no_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SendRoomCard::release_order_no() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.SendRoomCard.order_no)
  clear_has_order_no();
  return order_no_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SendRoomCard::set_allocated_order_no(::std::string* order_no) {
  if (order_no != NULL) {
    set_has_order_no();
  } else {
    clear_has_order_no();
  }
  order_no_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), order_no);
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.SendRoomCard.order_no)
}

// optional uint64 from_uid = 4;
bool SendRoomCard::has_from_uid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SendRoomCard::set_has_from_uid() {
  _has_bits_[0] |= 0x00000008u;
}
void SendRoomCard::clear_has_from_uid() {
  _has_bits_[0] &= ~0x00000008u;
}
void SendRoomCard::clear_from_uid() {
  from_uid_ = GOOGLE_ULONGLONG(0);
  clear_has_from_uid();
}
 ::google::protobuf::uint64 SendRoomCard::from_uid() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.SendRoomCard.from_uid)
  return from_uid_;
}
 void SendRoomCard::set_from_uid(::google::protobuf::uint64 value) {
  set_has_from_uid();
  from_uid_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.SendRoomCard.from_uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserEditCard::kUserIdFieldNumber;
const int UserEditCard::kCardsFieldNumber;
const int UserEditCard::kLevelFieldNumber;
const int UserEditCard::kFromUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserEditCard::UserEditCard()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.UserEditCard)
}

void UserEditCard::InitAsDefaultInstance() {
}

UserEditCard::UserEditCard(const UserEditCard& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.UserEditCard)
}

void UserEditCard::SharedCtor() {
  _cached_size_ = 0;
  user_id_ = GOOGLE_ULONGLONG(0);
  cards_ = 0;
  level_ = 0;
  from_uid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UserEditCard::~UserEditCard() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.UserEditCard)
  SharedDtor();
}

void UserEditCard::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UserEditCard::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserEditCard::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserEditCard_descriptor_;
}

const UserEditCard& UserEditCard::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_idip_2eproto();
  return *default_instance_;
}

UserEditCard* UserEditCard::default_instance_ = NULL;

UserEditCard* UserEditCard::New(::google::protobuf::Arena* arena) const {
  UserEditCard* n = new UserEditCard;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserEditCard::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.UserEditCard)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(UserEditCard, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<UserEditCard*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(user_id_, from_uid_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool UserEditCard::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.UserEditCard)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 user_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &user_id_)));
          set_has_user_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_cards;
        break;
      }

      // optional int32 cards = 2;
      case 2: {
        if (tag == 16) {
         parse_cards:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cards_)));
          set_has_cards();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_level;
        break;
      }

      // optional int32 level = 3;
      case 3: {
        if (tag == 24) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_from_uid;
        break;
      }

      // optional uint64 from_uid = 4;
      case 4: {
        if (tag == 32) {
         parse_from_uid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &from_uid_)));
          set_has_from_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.UserEditCard)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.UserEditCard)
  return false;
#undef DO_
}

void UserEditCard::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.UserEditCard)
  // optional uint64 user_id = 1;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->user_id(), output);
  }

  // optional int32 cards = 2;
  if (has_cards()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->cards(), output);
  }

  // optional int32 level = 3;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->level(), output);
  }

  // optional uint64 from_uid = 4;
  if (has_from_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->from_uid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.UserEditCard)
}

::google::protobuf::uint8* UserEditCard::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.UserEditCard)
  // optional uint64 user_id = 1;
  if (has_user_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->user_id(), target);
  }

  // optional int32 cards = 2;
  if (has_cards()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->cards(), target);
  }

  // optional int32 level = 3;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->level(), target);
  }

  // optional uint64 from_uid = 4;
  if (has_from_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->from_uid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.UserEditCard)
  return target;
}

int UserEditCard::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.UserEditCard)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 15u) {
    // optional uint64 user_id = 1;
    if (has_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->user_id());
    }

    // optional int32 cards = 2;
    if (has_cards()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cards());
    }

    // optional int32 level = 3;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

    // optional uint64 from_uid = 4;
    if (has_from_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->from_uid());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserEditCard::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.UserEditCard)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const UserEditCard* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const UserEditCard>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.UserEditCard)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.UserEditCard)
    MergeFrom(*source);
  }
}

void UserEditCard::MergeFrom(const UserEditCard& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.UserEditCard)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_user_id()) {
      set_user_id(from.user_id());
    }
    if (from.has_cards()) {
      set_cards(from.cards());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_from_uid()) {
      set_from_uid(from.from_uid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void UserEditCard::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.UserEditCard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserEditCard::CopyFrom(const UserEditCard& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.UserEditCard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserEditCard::IsInitialized() const {

  return true;
}

void UserEditCard::Swap(UserEditCard* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserEditCard::InternalSwap(UserEditCard* other) {
  std::swap(user_id_, other->user_id_);
  std::swap(cards_, other->cards_);
  std::swap(level_, other->level_);
  std::swap(from_uid_, other->from_uid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserEditCard::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UserEditCard_descriptor_;
  metadata.reflection = UserEditCard_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserEditCard

// optional uint64 user_id = 1;
bool UserEditCard::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UserEditCard::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
void UserEditCard::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void UserEditCard::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
 ::google::protobuf::uint64 UserEditCard::user_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.UserEditCard.user_id)
  return user_id_;
}
 void UserEditCard::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.UserEditCard.user_id)
}

// optional int32 cards = 2;
bool UserEditCard::has_cards() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void UserEditCard::set_has_cards() {
  _has_bits_[0] |= 0x00000002u;
}
void UserEditCard::clear_has_cards() {
  _has_bits_[0] &= ~0x00000002u;
}
void UserEditCard::clear_cards() {
  cards_ = 0;
  clear_has_cards();
}
 ::google::protobuf::int32 UserEditCard::cards() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.UserEditCard.cards)
  return cards_;
}
 void UserEditCard::set_cards(::google::protobuf::int32 value) {
  set_has_cards();
  cards_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.UserEditCard.cards)
}

// optional int32 level = 3;
bool UserEditCard::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void UserEditCard::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
void UserEditCard::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
void UserEditCard::clear_level() {
  level_ = 0;
  clear_has_level();
}
 ::google::protobuf::int32 UserEditCard::level() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.UserEditCard.level)
  return level_;
}
 void UserEditCard::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.UserEditCard.level)
}

// optional uint64 from_uid = 4;
bool UserEditCard::has_from_uid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void UserEditCard::set_has_from_uid() {
  _has_bits_[0] |= 0x00000008u;
}
void UserEditCard::clear_has_from_uid() {
  _has_bits_[0] &= ~0x00000008u;
}
void UserEditCard::clear_from_uid() {
  from_uid_ = GOOGLE_ULONGLONG(0);
  clear_has_from_uid();
}
 ::google::protobuf::uint64 UserEditCard::from_uid() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.UserEditCard.from_uid)
  return from_uid_;
}
 void UserEditCard::set_from_uid(::google::protobuf::uint64 value) {
  set_has_from_uid();
  from_uid_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.UserEditCard.from_uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EditRoomCard::kUserIdFieldNumber;
const int EditRoomCard::kRoomcardNumFieldNumber;
const int EditRoomCard::kRoomcardTotalFieldNumber;
const int EditRoomCard::kNicknameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EditRoomCard::EditRoomCard()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.EditRoomCard)
}

void EditRoomCard::InitAsDefaultInstance() {
}

EditRoomCard::EditRoomCard(const EditRoomCard& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.EditRoomCard)
}

void EditRoomCard::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  user_id_ = GOOGLE_ULONGLONG(0);
  roomcard_num_ = 0;
  roomcard_total_ = 0;
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EditRoomCard::~EditRoomCard() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.EditRoomCard)
  SharedDtor();
}

void EditRoomCard::SharedDtor() {
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void EditRoomCard::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EditRoomCard::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EditRoomCard_descriptor_;
}

const EditRoomCard& EditRoomCard::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_idip_2eproto();
  return *default_instance_;
}

EditRoomCard* EditRoomCard::default_instance_ = NULL;

EditRoomCard* EditRoomCard::New(::google::protobuf::Arena* arena) const {
  EditRoomCard* n = new EditRoomCard;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EditRoomCard::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.EditRoomCard)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(EditRoomCard, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<EditRoomCard*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 15u) {
    ZR_(user_id_, roomcard_total_);
    if (has_nickname()) {
      nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool EditRoomCard::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.EditRoomCard)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 user_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &user_id_)));
          set_has_user_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_roomcard_num;
        break;
      }

      // optional int32 roomcard_num = 2;
      case 2: {
        if (tag == 16) {
         parse_roomcard_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roomcard_num_)));
          set_has_roomcard_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_roomcard_total;
        break;
      }

      // optional int32 roomcard_total = 3;
      case 3: {
        if (tag == 24) {
         parse_roomcard_total:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roomcard_total_)));
          set_has_roomcard_total();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_nickname;
        break;
      }

      // optional string nickname = 4;
      case 4: {
        if (tag == 34) {
         parse_nickname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nickname().data(), this->nickname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fogs.proto.msg.EditRoomCard.nickname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.EditRoomCard)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.EditRoomCard)
  return false;
#undef DO_
}

void EditRoomCard::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.EditRoomCard)
  // optional uint64 user_id = 1;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->user_id(), output);
  }

  // optional int32 roomcard_num = 2;
  if (has_roomcard_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->roomcard_num(), output);
  }

  // optional int32 roomcard_total = 3;
  if (has_roomcard_total()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->roomcard_total(), output);
  }

  // optional string nickname = 4;
  if (has_nickname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fogs.proto.msg.EditRoomCard.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->nickname(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.EditRoomCard)
}

::google::protobuf::uint8* EditRoomCard::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.EditRoomCard)
  // optional uint64 user_id = 1;
  if (has_user_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->user_id(), target);
  }

  // optional int32 roomcard_num = 2;
  if (has_roomcard_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->roomcard_num(), target);
  }

  // optional int32 roomcard_total = 3;
  if (has_roomcard_total()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->roomcard_total(), target);
  }

  // optional string nickname = 4;
  if (has_nickname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fogs.proto.msg.EditRoomCard.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->nickname(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.EditRoomCard)
  return target;
}

int EditRoomCard::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.EditRoomCard)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 15u) {
    // optional uint64 user_id = 1;
    if (has_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->user_id());
    }

    // optional int32 roomcard_num = 2;
    if (has_roomcard_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->roomcard_num());
    }

    // optional int32 roomcard_total = 3;
    if (has_roomcard_total()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->roomcard_total());
    }

    // optional string nickname = 4;
    if (has_nickname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nickname());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EditRoomCard::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.EditRoomCard)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const EditRoomCard* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const EditRoomCard>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.EditRoomCard)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.EditRoomCard)
    MergeFrom(*source);
  }
}

void EditRoomCard::MergeFrom(const EditRoomCard& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.EditRoomCard)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_user_id()) {
      set_user_id(from.user_id());
    }
    if (from.has_roomcard_num()) {
      set_roomcard_num(from.roomcard_num());
    }
    if (from.has_roomcard_total()) {
      set_roomcard_total(from.roomcard_total());
    }
    if (from.has_nickname()) {
      set_has_nickname();
      nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void EditRoomCard::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.EditRoomCard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EditRoomCard::CopyFrom(const EditRoomCard& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.EditRoomCard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EditRoomCard::IsInitialized() const {

  return true;
}

void EditRoomCard::Swap(EditRoomCard* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EditRoomCard::InternalSwap(EditRoomCard* other) {
  std::swap(user_id_, other->user_id_);
  std::swap(roomcard_num_, other->roomcard_num_);
  std::swap(roomcard_total_, other->roomcard_total_);
  nickname_.Swap(&other->nickname_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EditRoomCard::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EditRoomCard_descriptor_;
  metadata.reflection = EditRoomCard_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EditRoomCard

// optional uint64 user_id = 1;
bool EditRoomCard::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EditRoomCard::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
void EditRoomCard::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void EditRoomCard::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
 ::google::protobuf::uint64 EditRoomCard::user_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.EditRoomCard.user_id)
  return user_id_;
}
 void EditRoomCard::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.EditRoomCard.user_id)
}

// optional int32 roomcard_num = 2;
bool EditRoomCard::has_roomcard_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void EditRoomCard::set_has_roomcard_num() {
  _has_bits_[0] |= 0x00000002u;
}
void EditRoomCard::clear_has_roomcard_num() {
  _has_bits_[0] &= ~0x00000002u;
}
void EditRoomCard::clear_roomcard_num() {
  roomcard_num_ = 0;
  clear_has_roomcard_num();
}
 ::google::protobuf::int32 EditRoomCard::roomcard_num() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.EditRoomCard.roomcard_num)
  return roomcard_num_;
}
 void EditRoomCard::set_roomcard_num(::google::protobuf::int32 value) {
  set_has_roomcard_num();
  roomcard_num_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.EditRoomCard.roomcard_num)
}

// optional int32 roomcard_total = 3;
bool EditRoomCard::has_roomcard_total() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void EditRoomCard::set_has_roomcard_total() {
  _has_bits_[0] |= 0x00000004u;
}
void EditRoomCard::clear_has_roomcard_total() {
  _has_bits_[0] &= ~0x00000004u;
}
void EditRoomCard::clear_roomcard_total() {
  roomcard_total_ = 0;
  clear_has_roomcard_total();
}
 ::google::protobuf::int32 EditRoomCard::roomcard_total() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.EditRoomCard.roomcard_total)
  return roomcard_total_;
}
 void EditRoomCard::set_roomcard_total(::google::protobuf::int32 value) {
  set_has_roomcard_total();
  roomcard_total_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.EditRoomCard.roomcard_total)
}

// optional string nickname = 4;
bool EditRoomCard::has_nickname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void EditRoomCard::set_has_nickname() {
  _has_bits_[0] |= 0x00000008u;
}
void EditRoomCard::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000008u;
}
void EditRoomCard::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
 const ::std::string& EditRoomCard::nickname() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.EditRoomCard.nickname)
  return nickname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EditRoomCard::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fogs.proto.msg.EditRoomCard.nickname)
}
 void EditRoomCard::set_nickname(const char* value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fogs.proto.msg.EditRoomCard.nickname)
}
 void EditRoomCard::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fogs.proto.msg.EditRoomCard.nickname)
}
 ::std::string* EditRoomCard::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.EditRoomCard.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* EditRoomCard::release_nickname() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.EditRoomCard.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EditRoomCard::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.EditRoomCard.nickname)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendMailToPlayer::kUserIdsFieldNumber;
const int SendMailToPlayer::kMailTitleFieldNumber;
const int SendMailToPlayer::kMailContentFieldNumber;
const int SendMailToPlayer::kAwardTypeFieldNumber;
const int SendMailToPlayer::kAwardNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendMailToPlayer::SendMailToPlayer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.SendMailToPlayer)
}

void SendMailToPlayer::InitAsDefaultInstance() {
}

SendMailToPlayer::SendMailToPlayer(const SendMailToPlayer& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.SendMailToPlayer)
}

void SendMailToPlayer::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  mail_title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mail_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  award_type_ = 0u;
  award_num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SendMailToPlayer::~SendMailToPlayer() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.SendMailToPlayer)
  SharedDtor();
}

void SendMailToPlayer::SharedDtor() {
  mail_title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mail_content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void SendMailToPlayer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SendMailToPlayer::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SendMailToPlayer_descriptor_;
}

const SendMailToPlayer& SendMailToPlayer::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_idip_2eproto();
  return *default_instance_;
}

SendMailToPlayer* SendMailToPlayer::default_instance_ = NULL;

SendMailToPlayer* SendMailToPlayer::New(::google::protobuf::Arena* arena) const {
  SendMailToPlayer* n = new SendMailToPlayer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SendMailToPlayer::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.SendMailToPlayer)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(SendMailToPlayer, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SendMailToPlayer*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 30u) {
    ZR_(award_type_, award_num_);
    if (has_mail_title()) {
      mail_title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_mail_content()) {
      mail_content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  user_ids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SendMailToPlayer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.SendMailToPlayer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 user_ids = 1;
      case 1: {
        if (tag == 8) {
         parse_user_ids:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 8, input, this->mutable_user_ids())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_user_ids())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_user_ids;
        if (input->ExpectTag(18)) goto parse_mail_title;
        break;
      }

      // optional string mail_title = 2;
      case 2: {
        if (tag == 18) {
         parse_mail_title:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mail_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mail_title().data(), this->mail_title().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fogs.proto.msg.SendMailToPlayer.mail_title");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_mail_content;
        break;
      }

      // optional string mail_content = 3;
      case 3: {
        if (tag == 26) {
         parse_mail_content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mail_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mail_content().data(), this->mail_content().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fogs.proto.msg.SendMailToPlayer.mail_content");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_award_type;
        break;
      }

      // optional uint32 award_type = 4;
      case 4: {
        if (tag == 32) {
         parse_award_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &award_type_)));
          set_has_award_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_award_num;
        break;
      }

      // optional uint32 award_num = 5;
      case 5: {
        if (tag == 40) {
         parse_award_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &award_num_)));
          set_has_award_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.SendMailToPlayer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.SendMailToPlayer)
  return false;
#undef DO_
}

void SendMailToPlayer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.SendMailToPlayer)
  // repeated uint64 user_ids = 1;
  for (int i = 0; i < this->user_ids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      1, this->user_ids(i), output);
  }

  // optional string mail_title = 2;
  if (has_mail_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mail_title().data(), this->mail_title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fogs.proto.msg.SendMailToPlayer.mail_title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->mail_title(), output);
  }

  // optional string mail_content = 3;
  if (has_mail_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mail_content().data(), this->mail_content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fogs.proto.msg.SendMailToPlayer.mail_content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->mail_content(), output);
  }

  // optional uint32 award_type = 4;
  if (has_award_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->award_type(), output);
  }

  // optional uint32 award_num = 5;
  if (has_award_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->award_num(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.SendMailToPlayer)
}

::google::protobuf::uint8* SendMailToPlayer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.SendMailToPlayer)
  // repeated uint64 user_ids = 1;
  for (int i = 0; i < this->user_ids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(1, this->user_ids(i), target);
  }

  // optional string mail_title = 2;
  if (has_mail_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mail_title().data(), this->mail_title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fogs.proto.msg.SendMailToPlayer.mail_title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->mail_title(), target);
  }

  // optional string mail_content = 3;
  if (has_mail_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mail_content().data(), this->mail_content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fogs.proto.msg.SendMailToPlayer.mail_content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->mail_content(), target);
  }

  // optional uint32 award_type = 4;
  if (has_award_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->award_type(), target);
  }

  // optional uint32 award_num = 5;
  if (has_award_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->award_num(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.SendMailToPlayer)
  return target;
}

int SendMailToPlayer::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.SendMailToPlayer)
  int total_size = 0;

  if (_has_bits_[1 / 32] & 30u) {
    // optional string mail_title = 2;
    if (has_mail_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mail_title());
    }

    // optional string mail_content = 3;
    if (has_mail_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mail_content());
    }

    // optional uint32 award_type = 4;
    if (has_award_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->award_type());
    }

    // optional uint32 award_num = 5;
    if (has_award_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->award_num());
    }

  }
  // repeated uint64 user_ids = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->user_ids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->user_ids(i));
    }
    total_size += 1 * this->user_ids_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SendMailToPlayer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.SendMailToPlayer)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SendMailToPlayer* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SendMailToPlayer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.SendMailToPlayer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.SendMailToPlayer)
    MergeFrom(*source);
  }
}

void SendMailToPlayer::MergeFrom(const SendMailToPlayer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.SendMailToPlayer)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  user_ids_.MergeFrom(from.user_ids_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_mail_title()) {
      set_has_mail_title();
      mail_title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mail_title_);
    }
    if (from.has_mail_content()) {
      set_has_mail_content();
      mail_content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mail_content_);
    }
    if (from.has_award_type()) {
      set_award_type(from.award_type());
    }
    if (from.has_award_num()) {
      set_award_num(from.award_num());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SendMailToPlayer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.SendMailToPlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendMailToPlayer::CopyFrom(const SendMailToPlayer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.SendMailToPlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendMailToPlayer::IsInitialized() const {

  return true;
}

void SendMailToPlayer::Swap(SendMailToPlayer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendMailToPlayer::InternalSwap(SendMailToPlayer* other) {
  user_ids_.UnsafeArenaSwap(&other->user_ids_);
  mail_title_.Swap(&other->mail_title_);
  mail_content_.Swap(&other->mail_content_);
  std::swap(award_type_, other->award_type_);
  std::swap(award_num_, other->award_num_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SendMailToPlayer::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SendMailToPlayer_descriptor_;
  metadata.reflection = SendMailToPlayer_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SendMailToPlayer

// repeated uint64 user_ids = 1;
int SendMailToPlayer::user_ids_size() const {
  return user_ids_.size();
}
void SendMailToPlayer::clear_user_ids() {
  user_ids_.Clear();
}
 ::google::protobuf::uint64 SendMailToPlayer::user_ids(int index) const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.SendMailToPlayer.user_ids)
  return user_ids_.Get(index);
}
 void SendMailToPlayer::set_user_ids(int index, ::google::protobuf::uint64 value) {
  user_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:fogs.proto.msg.SendMailToPlayer.user_ids)
}
 void SendMailToPlayer::add_user_ids(::google::protobuf::uint64 value) {
  user_ids_.Add(value);
  // @@protoc_insertion_point(field_add:fogs.proto.msg.SendMailToPlayer.user_ids)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
SendMailToPlayer::user_ids() const {
  // @@protoc_insertion_point(field_list:fogs.proto.msg.SendMailToPlayer.user_ids)
  return user_ids_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
SendMailToPlayer::mutable_user_ids() {
  // @@protoc_insertion_point(field_mutable_list:fogs.proto.msg.SendMailToPlayer.user_ids)
  return &user_ids_;
}

// optional string mail_title = 2;
bool SendMailToPlayer::has_mail_title() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SendMailToPlayer::set_has_mail_title() {
  _has_bits_[0] |= 0x00000002u;
}
void SendMailToPlayer::clear_has_mail_title() {
  _has_bits_[0] &= ~0x00000002u;
}
void SendMailToPlayer::clear_mail_title() {
  mail_title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mail_title();
}
 const ::std::string& SendMailToPlayer::mail_title() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.SendMailToPlayer.mail_title)
  return mail_title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SendMailToPlayer::set_mail_title(const ::std::string& value) {
  set_has_mail_title();
  mail_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fogs.proto.msg.SendMailToPlayer.mail_title)
}
 void SendMailToPlayer::set_mail_title(const char* value) {
  set_has_mail_title();
  mail_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fogs.proto.msg.SendMailToPlayer.mail_title)
}
 void SendMailToPlayer::set_mail_title(const char* value, size_t size) {
  set_has_mail_title();
  mail_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fogs.proto.msg.SendMailToPlayer.mail_title)
}
 ::std::string* SendMailToPlayer::mutable_mail_title() {
  set_has_mail_title();
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.SendMailToPlayer.mail_title)
  return mail_title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SendMailToPlayer::release_mail_title() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.SendMailToPlayer.mail_title)
  clear_has_mail_title();
  return mail_title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SendMailToPlayer::set_allocated_mail_title(::std::string* mail_title) {
  if (mail_title != NULL) {
    set_has_mail_title();
  } else {
    clear_has_mail_title();
  }
  mail_title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mail_title);
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.SendMailToPlayer.mail_title)
}

// optional string mail_content = 3;
bool SendMailToPlayer::has_mail_content() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SendMailToPlayer::set_has_mail_content() {
  _has_bits_[0] |= 0x00000004u;
}
void SendMailToPlayer::clear_has_mail_content() {
  _has_bits_[0] &= ~0x00000004u;
}
void SendMailToPlayer::clear_mail_content() {
  mail_content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mail_content();
}
 const ::std::string& SendMailToPlayer::mail_content() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.SendMailToPlayer.mail_content)
  return mail_content_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SendMailToPlayer::set_mail_content(const ::std::string& value) {
  set_has_mail_content();
  mail_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fogs.proto.msg.SendMailToPlayer.mail_content)
}
 void SendMailToPlayer::set_mail_content(const char* value) {
  set_has_mail_content();
  mail_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fogs.proto.msg.SendMailToPlayer.mail_content)
}
 void SendMailToPlayer::set_mail_content(const char* value, size_t size) {
  set_has_mail_content();
  mail_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fogs.proto.msg.SendMailToPlayer.mail_content)
}
 ::std::string* SendMailToPlayer::mutable_mail_content() {
  set_has_mail_content();
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.SendMailToPlayer.mail_content)
  return mail_content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SendMailToPlayer::release_mail_content() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.SendMailToPlayer.mail_content)
  clear_has_mail_content();
  return mail_content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SendMailToPlayer::set_allocated_mail_content(::std::string* mail_content) {
  if (mail_content != NULL) {
    set_has_mail_content();
  } else {
    clear_has_mail_content();
  }
  mail_content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mail_content);
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.SendMailToPlayer.mail_content)
}

// optional uint32 award_type = 4;
bool SendMailToPlayer::has_award_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SendMailToPlayer::set_has_award_type() {
  _has_bits_[0] |= 0x00000008u;
}
void SendMailToPlayer::clear_has_award_type() {
  _has_bits_[0] &= ~0x00000008u;
}
void SendMailToPlayer::clear_award_type() {
  award_type_ = 0u;
  clear_has_award_type();
}
 ::google::protobuf::uint32 SendMailToPlayer::award_type() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.SendMailToPlayer.award_type)
  return award_type_;
}
 void SendMailToPlayer::set_award_type(::google::protobuf::uint32 value) {
  set_has_award_type();
  award_type_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.SendMailToPlayer.award_type)
}

// optional uint32 award_num = 5;
bool SendMailToPlayer::has_award_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void SendMailToPlayer::set_has_award_num() {
  _has_bits_[0] |= 0x00000010u;
}
void SendMailToPlayer::clear_has_award_num() {
  _has_bits_[0] &= ~0x00000010u;
}
void SendMailToPlayer::clear_award_num() {
  award_num_ = 0u;
  clear_has_award_num();
}
 ::google::protobuf::uint32 SendMailToPlayer::award_num() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.SendMailToPlayer.award_num)
  return award_num_;
}
 void SendMailToPlayer::set_award_num(::google::protobuf::uint32 value) {
  set_has_award_num();
  award_num_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.SendMailToPlayer.award_num)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendNoticeToGame::kIdFieldNumber;
const int SendNoticeToGame::kBeginTimeFieldNumber;
const int SendNoticeToGame::kBreakTimeFieldNumber;
const int SendNoticeToGame::kLoopTimeFieldNumber;
const int SendNoticeToGame::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendNoticeToGame::SendNoticeToGame()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.SendNoticeToGame)
}

void SendNoticeToGame::InitAsDefaultInstance() {
}

SendNoticeToGame::SendNoticeToGame(const SendNoticeToGame& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.SendNoticeToGame)
}

void SendNoticeToGame::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = GOOGLE_ULONGLONG(0);
  begin_time_ = GOOGLE_ULONGLONG(0);
  break_time_ = GOOGLE_ULONGLONG(0);
  loop_time_ = 0u;
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SendNoticeToGame::~SendNoticeToGame() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.SendNoticeToGame)
  SharedDtor();
}

void SendNoticeToGame::SharedDtor() {
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void SendNoticeToGame::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SendNoticeToGame::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SendNoticeToGame_descriptor_;
}

const SendNoticeToGame& SendNoticeToGame::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_idip_2eproto();
  return *default_instance_;
}

SendNoticeToGame* SendNoticeToGame::default_instance_ = NULL;

SendNoticeToGame* SendNoticeToGame::New(::google::protobuf::Arena* arena) const {
  SendNoticeToGame* n = new SendNoticeToGame;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SendNoticeToGame::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.SendNoticeToGame)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(SendNoticeToGame, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SendNoticeToGame*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31u) {
    ZR_(id_, break_time_);
    loop_time_ = 0u;
    if (has_content()) {
      content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SendNoticeToGame::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.SendNoticeToGame)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_begin_time;
        break;
      }

      // optional uint64 begin_time = 2;
      case 2: {
        if (tag == 16) {
         parse_begin_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &begin_time_)));
          set_has_begin_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_break_time;
        break;
      }

      // optional uint64 break_time = 3;
      case 3: {
        if (tag == 24) {
         parse_break_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &break_time_)));
          set_has_break_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_loop_time;
        break;
      }

      // optional uint32 loop_time = 4;
      case 4: {
        if (tag == 32) {
         parse_loop_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &loop_time_)));
          set_has_loop_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_content;
        break;
      }

      // optional string content = 5;
      case 5: {
        if (tag == 42) {
         parse_content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->content().data(), this->content().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fogs.proto.msg.SendNoticeToGame.content");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.SendNoticeToGame)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.SendNoticeToGame)
  return false;
#undef DO_
}

void SendNoticeToGame::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.SendNoticeToGame)
  // optional uint64 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // optional uint64 begin_time = 2;
  if (has_begin_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->begin_time(), output);
  }

  // optional uint64 break_time = 3;
  if (has_break_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->break_time(), output);
  }

  // optional uint32 loop_time = 4;
  if (has_loop_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->loop_time(), output);
  }

  // optional string content = 5;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fogs.proto.msg.SendNoticeToGame.content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->content(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.SendNoticeToGame)
}

::google::protobuf::uint8* SendNoticeToGame::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.SendNoticeToGame)
  // optional uint64 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // optional uint64 begin_time = 2;
  if (has_begin_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->begin_time(), target);
  }

  // optional uint64 break_time = 3;
  if (has_break_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->break_time(), target);
  }

  // optional uint32 loop_time = 4;
  if (has_loop_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->loop_time(), target);
  }

  // optional string content = 5;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fogs.proto.msg.SendNoticeToGame.content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->content(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.SendNoticeToGame)
  return target;
}

int SendNoticeToGame::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.SendNoticeToGame)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 31u) {
    // optional uint64 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->id());
    }

    // optional uint64 begin_time = 2;
    if (has_begin_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->begin_time());
    }

    // optional uint64 break_time = 3;
    if (has_break_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->break_time());
    }

    // optional uint32 loop_time = 4;
    if (has_loop_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->loop_time());
    }

    // optional string content = 5;
    if (has_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->content());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SendNoticeToGame::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.SendNoticeToGame)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SendNoticeToGame* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SendNoticeToGame>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.SendNoticeToGame)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.SendNoticeToGame)
    MergeFrom(*source);
  }
}

void SendNoticeToGame::MergeFrom(const SendNoticeToGame& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.SendNoticeToGame)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_begin_time()) {
      set_begin_time(from.begin_time());
    }
    if (from.has_break_time()) {
      set_break_time(from.break_time());
    }
    if (from.has_loop_time()) {
      set_loop_time(from.loop_time());
    }
    if (from.has_content()) {
      set_has_content();
      content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SendNoticeToGame::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.SendNoticeToGame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendNoticeToGame::CopyFrom(const SendNoticeToGame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.SendNoticeToGame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendNoticeToGame::IsInitialized() const {

  return true;
}

void SendNoticeToGame::Swap(SendNoticeToGame* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendNoticeToGame::InternalSwap(SendNoticeToGame* other) {
  std::swap(id_, other->id_);
  std::swap(begin_time_, other->begin_time_);
  std::swap(break_time_, other->break_time_);
  std::swap(loop_time_, other->loop_time_);
  content_.Swap(&other->content_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SendNoticeToGame::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SendNoticeToGame_descriptor_;
  metadata.reflection = SendNoticeToGame_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SendNoticeToGame

// optional uint64 id = 1;
bool SendNoticeToGame::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SendNoticeToGame::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void SendNoticeToGame::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void SendNoticeToGame::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
 ::google::protobuf::uint64 SendNoticeToGame::id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.SendNoticeToGame.id)
  return id_;
}
 void SendNoticeToGame::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.SendNoticeToGame.id)
}

// optional uint64 begin_time = 2;
bool SendNoticeToGame::has_begin_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SendNoticeToGame::set_has_begin_time() {
  _has_bits_[0] |= 0x00000002u;
}
void SendNoticeToGame::clear_has_begin_time() {
  _has_bits_[0] &= ~0x00000002u;
}
void SendNoticeToGame::clear_begin_time() {
  begin_time_ = GOOGLE_ULONGLONG(0);
  clear_has_begin_time();
}
 ::google::protobuf::uint64 SendNoticeToGame::begin_time() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.SendNoticeToGame.begin_time)
  return begin_time_;
}
 void SendNoticeToGame::set_begin_time(::google::protobuf::uint64 value) {
  set_has_begin_time();
  begin_time_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.SendNoticeToGame.begin_time)
}

// optional uint64 break_time = 3;
bool SendNoticeToGame::has_break_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SendNoticeToGame::set_has_break_time() {
  _has_bits_[0] |= 0x00000004u;
}
void SendNoticeToGame::clear_has_break_time() {
  _has_bits_[0] &= ~0x00000004u;
}
void SendNoticeToGame::clear_break_time() {
  break_time_ = GOOGLE_ULONGLONG(0);
  clear_has_break_time();
}
 ::google::protobuf::uint64 SendNoticeToGame::break_time() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.SendNoticeToGame.break_time)
  return break_time_;
}
 void SendNoticeToGame::set_break_time(::google::protobuf::uint64 value) {
  set_has_break_time();
  break_time_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.SendNoticeToGame.break_time)
}

// optional uint32 loop_time = 4;
bool SendNoticeToGame::has_loop_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SendNoticeToGame::set_has_loop_time() {
  _has_bits_[0] |= 0x00000008u;
}
void SendNoticeToGame::clear_has_loop_time() {
  _has_bits_[0] &= ~0x00000008u;
}
void SendNoticeToGame::clear_loop_time() {
  loop_time_ = 0u;
  clear_has_loop_time();
}
 ::google::protobuf::uint32 SendNoticeToGame::loop_time() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.SendNoticeToGame.loop_time)
  return loop_time_;
}
 void SendNoticeToGame::set_loop_time(::google::protobuf::uint32 value) {
  set_has_loop_time();
  loop_time_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.SendNoticeToGame.loop_time)
}

// optional string content = 5;
bool SendNoticeToGame::has_content() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void SendNoticeToGame::set_has_content() {
  _has_bits_[0] |= 0x00000010u;
}
void SendNoticeToGame::clear_has_content() {
  _has_bits_[0] &= ~0x00000010u;
}
void SendNoticeToGame::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
 const ::std::string& SendNoticeToGame::content() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.SendNoticeToGame.content)
  return content_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SendNoticeToGame::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fogs.proto.msg.SendNoticeToGame.content)
}
 void SendNoticeToGame::set_content(const char* value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fogs.proto.msg.SendNoticeToGame.content)
}
 void SendNoticeToGame::set_content(const char* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fogs.proto.msg.SendNoticeToGame.content)
}
 ::std::string* SendNoticeToGame::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.SendNoticeToGame.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SendNoticeToGame::release_content() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.SendNoticeToGame.content)
  clear_has_content();
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SendNoticeToGame::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.SendNoticeToGame.content)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteNoticeToGame::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteNoticeToGame::DeleteNoticeToGame()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.DeleteNoticeToGame)
}

void DeleteNoticeToGame::InitAsDefaultInstance() {
}

DeleteNoticeToGame::DeleteNoticeToGame(const DeleteNoticeToGame& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.DeleteNoticeToGame)
}

void DeleteNoticeToGame::SharedCtor() {
  _cached_size_ = 0;
  id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DeleteNoticeToGame::~DeleteNoticeToGame() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.DeleteNoticeToGame)
  SharedDtor();
}

void DeleteNoticeToGame::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DeleteNoticeToGame::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteNoticeToGame::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeleteNoticeToGame_descriptor_;
}

const DeleteNoticeToGame& DeleteNoticeToGame::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_idip_2eproto();
  return *default_instance_;
}

DeleteNoticeToGame* DeleteNoticeToGame::default_instance_ = NULL;

DeleteNoticeToGame* DeleteNoticeToGame::New(::google::protobuf::Arena* arena) const {
  DeleteNoticeToGame* n = new DeleteNoticeToGame;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteNoticeToGame::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.DeleteNoticeToGame)
  id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DeleteNoticeToGame::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.DeleteNoticeToGame)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.DeleteNoticeToGame)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.DeleteNoticeToGame)
  return false;
#undef DO_
}

void DeleteNoticeToGame::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.DeleteNoticeToGame)
  // optional uint64 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.DeleteNoticeToGame)
}

::google::protobuf::uint8* DeleteNoticeToGame::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.DeleteNoticeToGame)
  // optional uint64 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.DeleteNoticeToGame)
  return target;
}

int DeleteNoticeToGame::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.DeleteNoticeToGame)
  int total_size = 0;

  // optional uint64 id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteNoticeToGame::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.DeleteNoticeToGame)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DeleteNoticeToGame* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteNoticeToGame>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.DeleteNoticeToGame)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.DeleteNoticeToGame)
    MergeFrom(*source);
  }
}

void DeleteNoticeToGame::MergeFrom(const DeleteNoticeToGame& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.DeleteNoticeToGame)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void DeleteNoticeToGame::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.DeleteNoticeToGame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteNoticeToGame::CopyFrom(const DeleteNoticeToGame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.DeleteNoticeToGame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteNoticeToGame::IsInitialized() const {

  return true;
}

void DeleteNoticeToGame::Swap(DeleteNoticeToGame* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteNoticeToGame::InternalSwap(DeleteNoticeToGame* other) {
  std::swap(id_, other->id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteNoticeToGame::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeleteNoticeToGame_descriptor_;
  metadata.reflection = DeleteNoticeToGame_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeleteNoticeToGame

// optional uint64 id = 1;
bool DeleteNoticeToGame::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DeleteNoticeToGame::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void DeleteNoticeToGame::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void DeleteNoticeToGame::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
 ::google::protobuf::uint64 DeleteNoticeToGame::id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.DeleteNoticeToGame.id)
  return id_;
}
 void DeleteNoticeToGame::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.DeleteNoticeToGame.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendBlockUser::kUserIdFieldNumber;
const int SendBlockUser::kClosureTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendBlockUser::SendBlockUser()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.SendBlockUser)
}

void SendBlockUser::InitAsDefaultInstance() {
}

SendBlockUser::SendBlockUser(const SendBlockUser& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.SendBlockUser)
}

void SendBlockUser::SharedCtor() {
  _cached_size_ = 0;
  user_id_ = GOOGLE_ULONGLONG(0);
  closuretime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SendBlockUser::~SendBlockUser() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.SendBlockUser)
  SharedDtor();
}

void SendBlockUser::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SendBlockUser::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SendBlockUser::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SendBlockUser_descriptor_;
}

const SendBlockUser& SendBlockUser::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_idip_2eproto();
  return *default_instance_;
}

SendBlockUser* SendBlockUser::default_instance_ = NULL;

SendBlockUser* SendBlockUser::New(::google::protobuf::Arena* arena) const {
  SendBlockUser* n = new SendBlockUser;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SendBlockUser::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.SendBlockUser)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(SendBlockUser, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SendBlockUser*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(user_id_, closuretime_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SendBlockUser::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.SendBlockUser)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 user_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &user_id_)));
          set_has_user_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_closureTime;
        break;
      }

      // optional uint64 closureTime = 2;
      case 2: {
        if (tag == 16) {
         parse_closureTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &closuretime_)));
          set_has_closuretime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.SendBlockUser)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.SendBlockUser)
  return false;
#undef DO_
}

void SendBlockUser::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.SendBlockUser)
  // optional uint64 user_id = 1;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->user_id(), output);
  }

  // optional uint64 closureTime = 2;
  if (has_closuretime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->closuretime(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.SendBlockUser)
}

::google::protobuf::uint8* SendBlockUser::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.SendBlockUser)
  // optional uint64 user_id = 1;
  if (has_user_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->user_id(), target);
  }

  // optional uint64 closureTime = 2;
  if (has_closuretime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->closuretime(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.SendBlockUser)
  return target;
}

int SendBlockUser::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.SendBlockUser)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 user_id = 1;
    if (has_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->user_id());
    }

    // optional uint64 closureTime = 2;
    if (has_closuretime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->closuretime());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SendBlockUser::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.SendBlockUser)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SendBlockUser* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SendBlockUser>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.SendBlockUser)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.SendBlockUser)
    MergeFrom(*source);
  }
}

void SendBlockUser::MergeFrom(const SendBlockUser& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.SendBlockUser)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_user_id()) {
      set_user_id(from.user_id());
    }
    if (from.has_closuretime()) {
      set_closuretime(from.closuretime());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SendBlockUser::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.SendBlockUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendBlockUser::CopyFrom(const SendBlockUser& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.SendBlockUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendBlockUser::IsInitialized() const {

  return true;
}

void SendBlockUser::Swap(SendBlockUser* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendBlockUser::InternalSwap(SendBlockUser* other) {
  std::swap(user_id_, other->user_id_);
  std::swap(closuretime_, other->closuretime_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SendBlockUser::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SendBlockUser_descriptor_;
  metadata.reflection = SendBlockUser_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SendBlockUser

// optional uint64 user_id = 1;
bool SendBlockUser::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SendBlockUser::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
void SendBlockUser::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void SendBlockUser::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
 ::google::protobuf::uint64 SendBlockUser::user_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.SendBlockUser.user_id)
  return user_id_;
}
 void SendBlockUser::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.SendBlockUser.user_id)
}

// optional uint64 closureTime = 2;
bool SendBlockUser::has_closuretime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SendBlockUser::set_has_closuretime() {
  _has_bits_[0] |= 0x00000002u;
}
void SendBlockUser::clear_has_closuretime() {
  _has_bits_[0] &= ~0x00000002u;
}
void SendBlockUser::clear_closuretime() {
  closuretime_ = GOOGLE_ULONGLONG(0);
  clear_has_closuretime();
}
 ::google::protobuf::uint64 SendBlockUser::closuretime() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.SendBlockUser.closureTime)
  return closuretime_;
}
 void SendBlockUser::set_closuretime(::google::protobuf::uint64 value) {
  set_has_closuretime();
  closuretime_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.SendBlockUser.closureTime)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendFindUser::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendFindUser::SendFindUser()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.SendFindUser)
}

void SendFindUser::InitAsDefaultInstance() {
}

SendFindUser::SendFindUser(const SendFindUser& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.SendFindUser)
}

void SendFindUser::SharedCtor() {
  _cached_size_ = 0;
  user_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SendFindUser::~SendFindUser() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.SendFindUser)
  SharedDtor();
}

void SendFindUser::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SendFindUser::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SendFindUser::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SendFindUser_descriptor_;
}

const SendFindUser& SendFindUser::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_idip_2eproto();
  return *default_instance_;
}

SendFindUser* SendFindUser::default_instance_ = NULL;

SendFindUser* SendFindUser::New(::google::protobuf::Arena* arena) const {
  SendFindUser* n = new SendFindUser;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SendFindUser::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.SendFindUser)
  user_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SendFindUser::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.SendFindUser)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 user_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &user_id_)));
          set_has_user_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.SendFindUser)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.SendFindUser)
  return false;
#undef DO_
}

void SendFindUser::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.SendFindUser)
  // optional uint64 user_id = 1;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->user_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.SendFindUser)
}

::google::protobuf::uint8* SendFindUser::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.SendFindUser)
  // optional uint64 user_id = 1;
  if (has_user_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->user_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.SendFindUser)
  return target;
}

int SendFindUser::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.SendFindUser)
  int total_size = 0;

  // optional uint64 user_id = 1;
  if (has_user_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->user_id());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SendFindUser::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.SendFindUser)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SendFindUser* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SendFindUser>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.SendFindUser)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.SendFindUser)
    MergeFrom(*source);
  }
}

void SendFindUser::MergeFrom(const SendFindUser& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.SendFindUser)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_user_id()) {
      set_user_id(from.user_id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SendFindUser::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.SendFindUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendFindUser::CopyFrom(const SendFindUser& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.SendFindUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendFindUser::IsInitialized() const {

  return true;
}

void SendFindUser::Swap(SendFindUser* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendFindUser::InternalSwap(SendFindUser* other) {
  std::swap(user_id_, other->user_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SendFindUser::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SendFindUser_descriptor_;
  metadata.reflection = SendFindUser_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SendFindUser

// optional uint64 user_id = 1;
bool SendFindUser::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SendFindUser::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
void SendFindUser::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void SendFindUser::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
 ::google::protobuf::uint64 SendFindUser::user_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.SendFindUser.user_id)
  return user_id_;
}
 void SendFindUser::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.SendFindUser.user_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RespFindUser::kIsOnlineFieldNumber;
const int RespFindUser::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RespFindUser::RespFindUser()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.RespFindUser)
}

void RespFindUser::InitAsDefaultInstance() {
}

RespFindUser::RespFindUser(const RespFindUser& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.RespFindUser)
}

void RespFindUser::SharedCtor() {
  _cached_size_ = 0;
  is_online_ = false;
  user_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RespFindUser::~RespFindUser() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.RespFindUser)
  SharedDtor();
}

void RespFindUser::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RespFindUser::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RespFindUser::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RespFindUser_descriptor_;
}

const RespFindUser& RespFindUser::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_idip_2eproto();
  return *default_instance_;
}

RespFindUser* RespFindUser::default_instance_ = NULL;

RespFindUser* RespFindUser::New(::google::protobuf::Arena* arena) const {
  RespFindUser* n = new RespFindUser;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RespFindUser::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.RespFindUser)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(RespFindUser, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<RespFindUser*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(user_id_, is_online_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RespFindUser::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.RespFindUser)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool is_online = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_online_)));
          set_has_is_online();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_user_id;
        break;
      }

      // optional uint64 user_id = 2;
      case 2: {
        if (tag == 16) {
         parse_user_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &user_id_)));
          set_has_user_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.RespFindUser)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.RespFindUser)
  return false;
#undef DO_
}

void RespFindUser::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.RespFindUser)
  // optional bool is_online = 1;
  if (has_is_online()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_online(), output);
  }

  // optional uint64 user_id = 2;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->user_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.RespFindUser)
}

::google::protobuf::uint8* RespFindUser::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.RespFindUser)
  // optional bool is_online = 1;
  if (has_is_online()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_online(), target);
  }

  // optional uint64 user_id = 2;
  if (has_user_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->user_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.RespFindUser)
  return target;
}

int RespFindUser::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.RespFindUser)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional bool is_online = 1;
    if (has_is_online()) {
      total_size += 1 + 1;
    }

    // optional uint64 user_id = 2;
    if (has_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->user_id());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RespFindUser::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.RespFindUser)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RespFindUser* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RespFindUser>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.RespFindUser)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.RespFindUser)
    MergeFrom(*source);
  }
}

void RespFindUser::MergeFrom(const RespFindUser& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.RespFindUser)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_is_online()) {
      set_is_online(from.is_online());
    }
    if (from.has_user_id()) {
      set_user_id(from.user_id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void RespFindUser::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.RespFindUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RespFindUser::CopyFrom(const RespFindUser& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.RespFindUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RespFindUser::IsInitialized() const {

  return true;
}

void RespFindUser::Swap(RespFindUser* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RespFindUser::InternalSwap(RespFindUser* other) {
  std::swap(is_online_, other->is_online_);
  std::swap(user_id_, other->user_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RespFindUser::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RespFindUser_descriptor_;
  metadata.reflection = RespFindUser_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RespFindUser

// optional bool is_online = 1;
bool RespFindUser::has_is_online() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RespFindUser::set_has_is_online() {
  _has_bits_[0] |= 0x00000001u;
}
void RespFindUser::clear_has_is_online() {
  _has_bits_[0] &= ~0x00000001u;
}
void RespFindUser::clear_is_online() {
  is_online_ = false;
  clear_has_is_online();
}
 bool RespFindUser::is_online() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.RespFindUser.is_online)
  return is_online_;
}
 void RespFindUser::set_is_online(bool value) {
  set_has_is_online();
  is_online_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.RespFindUser.is_online)
}

// optional uint64 user_id = 2;
bool RespFindUser::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RespFindUser::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
void RespFindUser::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void RespFindUser::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
 ::google::protobuf::uint64 RespFindUser::user_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.RespFindUser.user_id)
  return user_id_;
}
 void RespFindUser::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.RespFindUser.user_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendFindOnline::SendFindOnline()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.SendFindOnline)
}

void SendFindOnline::InitAsDefaultInstance() {
}

SendFindOnline::SendFindOnline(const SendFindOnline& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.SendFindOnline)
}

void SendFindOnline::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SendFindOnline::~SendFindOnline() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.SendFindOnline)
  SharedDtor();
}

void SendFindOnline::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SendFindOnline::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SendFindOnline::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SendFindOnline_descriptor_;
}

const SendFindOnline& SendFindOnline::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_idip_2eproto();
  return *default_instance_;
}

SendFindOnline* SendFindOnline::default_instance_ = NULL;

SendFindOnline* SendFindOnline::New(::google::protobuf::Arena* arena) const {
  SendFindOnline* n = new SendFindOnline;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SendFindOnline::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.SendFindOnline)
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SendFindOnline::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.SendFindOnline)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.SendFindOnline)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.SendFindOnline)
  return false;
#undef DO_
}

void SendFindOnline::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.SendFindOnline)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.SendFindOnline)
}

::google::protobuf::uint8* SendFindOnline::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.SendFindOnline)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.SendFindOnline)
  return target;
}

int SendFindOnline::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.SendFindOnline)
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SendFindOnline::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.SendFindOnline)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SendFindOnline* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SendFindOnline>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.SendFindOnline)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.SendFindOnline)
    MergeFrom(*source);
  }
}

void SendFindOnline::MergeFrom(const SendFindOnline& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.SendFindOnline)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SendFindOnline::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.SendFindOnline)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendFindOnline::CopyFrom(const SendFindOnline& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.SendFindOnline)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendFindOnline::IsInitialized() const {

  return true;
}

void SendFindOnline::Swap(SendFindOnline* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendFindOnline::InternalSwap(SendFindOnline* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SendFindOnline::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SendFindOnline_descriptor_;
  metadata.reflection = SendFindOnline_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SendFindOnline

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RespFindOnline::kTotalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RespFindOnline::RespFindOnline()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.RespFindOnline)
}

void RespFindOnline::InitAsDefaultInstance() {
}

RespFindOnline::RespFindOnline(const RespFindOnline& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.RespFindOnline)
}

void RespFindOnline::SharedCtor() {
  _cached_size_ = 0;
  total_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RespFindOnline::~RespFindOnline() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.RespFindOnline)
  SharedDtor();
}

void RespFindOnline::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RespFindOnline::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RespFindOnline::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RespFindOnline_descriptor_;
}

const RespFindOnline& RespFindOnline::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_idip_2eproto();
  return *default_instance_;
}

RespFindOnline* RespFindOnline::default_instance_ = NULL;

RespFindOnline* RespFindOnline::New(::google::protobuf::Arena* arena) const {
  RespFindOnline* n = new RespFindOnline;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RespFindOnline::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.RespFindOnline)
  total_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RespFindOnline::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.RespFindOnline)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 total = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_)));
          set_has_total();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.RespFindOnline)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.RespFindOnline)
  return false;
#undef DO_
}

void RespFindOnline::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.RespFindOnline)
  // optional uint32 total = 1;
  if (has_total()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->total(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.RespFindOnline)
}

::google::protobuf::uint8* RespFindOnline::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.RespFindOnline)
  // optional uint32 total = 1;
  if (has_total()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->total(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.RespFindOnline)
  return target;
}

int RespFindOnline::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.RespFindOnline)
  int total_size = 0;

  // optional uint32 total = 1;
  if (has_total()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->total());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RespFindOnline::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.RespFindOnline)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RespFindOnline* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RespFindOnline>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.RespFindOnline)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.RespFindOnline)
    MergeFrom(*source);
  }
}

void RespFindOnline::MergeFrom(const RespFindOnline& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.RespFindOnline)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_total()) {
      set_total(from.total());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void RespFindOnline::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.RespFindOnline)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RespFindOnline::CopyFrom(const RespFindOnline& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.RespFindOnline)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RespFindOnline::IsInitialized() const {

  return true;
}

void RespFindOnline::Swap(RespFindOnline* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RespFindOnline::InternalSwap(RespFindOnline* other) {
  std::swap(total_, other->total_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RespFindOnline::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RespFindOnline_descriptor_;
  metadata.reflection = RespFindOnline_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RespFindOnline

// optional uint32 total = 1;
bool RespFindOnline::has_total() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RespFindOnline::set_has_total() {
  _has_bits_[0] |= 0x00000001u;
}
void RespFindOnline::clear_has_total() {
  _has_bits_[0] &= ~0x00000001u;
}
void RespFindOnline::clear_total() {
  total_ = 0u;
  clear_has_total();
}
 ::google::protobuf::uint32 RespFindOnline::total() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.RespFindOnline.total)
  return total_;
}
 void RespFindOnline::set_total(::google::protobuf::uint32 value) {
  set_has_total();
  total_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.RespFindOnline.total)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetBindingAgentInfoReq::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetBindingAgentInfoReq::GetBindingAgentInfoReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.GetBindingAgentInfoReq)
}

void GetBindingAgentInfoReq::InitAsDefaultInstance() {
}

GetBindingAgentInfoReq::GetBindingAgentInfoReq(const GetBindingAgentInfoReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.GetBindingAgentInfoReq)
}

void GetBindingAgentInfoReq::SharedCtor() {
  _cached_size_ = 0;
  user_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetBindingAgentInfoReq::~GetBindingAgentInfoReq() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.GetBindingAgentInfoReq)
  SharedDtor();
}

void GetBindingAgentInfoReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetBindingAgentInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetBindingAgentInfoReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetBindingAgentInfoReq_descriptor_;
}

const GetBindingAgentInfoReq& GetBindingAgentInfoReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_idip_2eproto();
  return *default_instance_;
}

GetBindingAgentInfoReq* GetBindingAgentInfoReq::default_instance_ = NULL;

GetBindingAgentInfoReq* GetBindingAgentInfoReq::New(::google::protobuf::Arena* arena) const {
  GetBindingAgentInfoReq* n = new GetBindingAgentInfoReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetBindingAgentInfoReq::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.GetBindingAgentInfoReq)
  user_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GetBindingAgentInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.GetBindingAgentInfoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 user_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
          set_has_user_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.GetBindingAgentInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.GetBindingAgentInfoReq)
  return false;
#undef DO_
}

void GetBindingAgentInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.GetBindingAgentInfoReq)
  // optional uint32 user_id = 1;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.GetBindingAgentInfoReq)
}

::google::protobuf::uint8* GetBindingAgentInfoReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.GetBindingAgentInfoReq)
  // optional uint32 user_id = 1;
  if (has_user_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.GetBindingAgentInfoReq)
  return target;
}

int GetBindingAgentInfoReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.GetBindingAgentInfoReq)
  int total_size = 0;

  // optional uint32 user_id = 1;
  if (has_user_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetBindingAgentInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.GetBindingAgentInfoReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetBindingAgentInfoReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetBindingAgentInfoReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.GetBindingAgentInfoReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.GetBindingAgentInfoReq)
    MergeFrom(*source);
  }
}

void GetBindingAgentInfoReq::MergeFrom(const GetBindingAgentInfoReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.GetBindingAgentInfoReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_user_id()) {
      set_user_id(from.user_id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void GetBindingAgentInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.GetBindingAgentInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBindingAgentInfoReq::CopyFrom(const GetBindingAgentInfoReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.GetBindingAgentInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBindingAgentInfoReq::IsInitialized() const {

  return true;
}

void GetBindingAgentInfoReq::Swap(GetBindingAgentInfoReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetBindingAgentInfoReq::InternalSwap(GetBindingAgentInfoReq* other) {
  std::swap(user_id_, other->user_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetBindingAgentInfoReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetBindingAgentInfoReq_descriptor_;
  metadata.reflection = GetBindingAgentInfoReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetBindingAgentInfoReq

// optional uint32 user_id = 1;
bool GetBindingAgentInfoReq::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetBindingAgentInfoReq::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
void GetBindingAgentInfoReq::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetBindingAgentInfoReq::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
 ::google::protobuf::uint32 GetBindingAgentInfoReq::user_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.GetBindingAgentInfoReq.user_id)
  return user_id_;
}
 void GetBindingAgentInfoReq::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.GetBindingAgentInfoReq.user_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetBindingAgentInfoResp::kUserIdFieldNumber;
const int GetBindingAgentInfoResp::kAgentIdFieldNumber;
const int GetBindingAgentInfoResp::kAgentNameFieldNumber;
const int GetBindingAgentInfoResp::kAgentWxAccountFieldNumber;
const int GetBindingAgentInfoResp::kAgentIconFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetBindingAgentInfoResp::GetBindingAgentInfoResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.GetBindingAgentInfoResp)
}

void GetBindingAgentInfoResp::InitAsDefaultInstance() {
}

GetBindingAgentInfoResp::GetBindingAgentInfoResp(const GetBindingAgentInfoResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.GetBindingAgentInfoResp)
}

void GetBindingAgentInfoResp::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  user_id_ = 0u;
  agent_id_ = 0u;
  agent_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  agent_wx_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  agent_icon_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetBindingAgentInfoResp::~GetBindingAgentInfoResp() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.GetBindingAgentInfoResp)
  SharedDtor();
}

void GetBindingAgentInfoResp::SharedDtor() {
  agent_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  agent_wx_account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  agent_icon_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GetBindingAgentInfoResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetBindingAgentInfoResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetBindingAgentInfoResp_descriptor_;
}

const GetBindingAgentInfoResp& GetBindingAgentInfoResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_idip_2eproto();
  return *default_instance_;
}

GetBindingAgentInfoResp* GetBindingAgentInfoResp::default_instance_ = NULL;

GetBindingAgentInfoResp* GetBindingAgentInfoResp::New(::google::protobuf::Arena* arena) const {
  GetBindingAgentInfoResp* n = new GetBindingAgentInfoResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetBindingAgentInfoResp::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.GetBindingAgentInfoResp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(GetBindingAgentInfoResp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<GetBindingAgentInfoResp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31u) {
    ZR_(user_id_, agent_id_);
    if (has_agent_name()) {
      agent_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_agent_wx_account()) {
      agent_wx_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_agent_icon()) {
      agent_icon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GetBindingAgentInfoResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.GetBindingAgentInfoResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 user_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
          set_has_user_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_agent_id;
        break;
      }

      // optional uint32 agent_id = 2;
      case 2: {
        if (tag == 16) {
         parse_agent_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &agent_id_)));
          set_has_agent_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_agent_name;
        break;
      }

      // optional string agent_name = 3;
      case 3: {
        if (tag == 26) {
         parse_agent_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_agent_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->agent_name().data(), this->agent_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fogs.proto.msg.GetBindingAgentInfoResp.agent_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_agent_wx_account;
        break;
      }

      // optional string agent_wx_account = 4;
      case 4: {
        if (tag == 34) {
         parse_agent_wx_account:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_agent_wx_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->agent_wx_account().data(), this->agent_wx_account().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fogs.proto.msg.GetBindingAgentInfoResp.agent_wx_account");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_agent_icon;
        break;
      }

      // optional string agent_icon = 5;
      case 5: {
        if (tag == 42) {
         parse_agent_icon:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_agent_icon()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->agent_icon().data(), this->agent_icon().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fogs.proto.msg.GetBindingAgentInfoResp.agent_icon");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.GetBindingAgentInfoResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.GetBindingAgentInfoResp)
  return false;
#undef DO_
}

void GetBindingAgentInfoResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.GetBindingAgentInfoResp)
  // optional uint32 user_id = 1;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // optional uint32 agent_id = 2;
  if (has_agent_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->agent_id(), output);
  }

  // optional string agent_name = 3;
  if (has_agent_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->agent_name().data(), this->agent_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fogs.proto.msg.GetBindingAgentInfoResp.agent_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->agent_name(), output);
  }

  // optional string agent_wx_account = 4;
  if (has_agent_wx_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->agent_wx_account().data(), this->agent_wx_account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fogs.proto.msg.GetBindingAgentInfoResp.agent_wx_account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->agent_wx_account(), output);
  }

  // optional string agent_icon = 5;
  if (has_agent_icon()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->agent_icon().data(), this->agent_icon().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fogs.proto.msg.GetBindingAgentInfoResp.agent_icon");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->agent_icon(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.GetBindingAgentInfoResp)
}

::google::protobuf::uint8* GetBindingAgentInfoResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.GetBindingAgentInfoResp)
  // optional uint32 user_id = 1;
  if (has_user_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // optional uint32 agent_id = 2;
  if (has_agent_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->agent_id(), target);
  }

  // optional string agent_name = 3;
  if (has_agent_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->agent_name().data(), this->agent_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fogs.proto.msg.GetBindingAgentInfoResp.agent_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->agent_name(), target);
  }

  // optional string agent_wx_account = 4;
  if (has_agent_wx_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->agent_wx_account().data(), this->agent_wx_account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fogs.proto.msg.GetBindingAgentInfoResp.agent_wx_account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->agent_wx_account(), target);
  }

  // optional string agent_icon = 5;
  if (has_agent_icon()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->agent_icon().data(), this->agent_icon().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fogs.proto.msg.GetBindingAgentInfoResp.agent_icon");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->agent_icon(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.GetBindingAgentInfoResp)
  return target;
}

int GetBindingAgentInfoResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.GetBindingAgentInfoResp)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 31u) {
    // optional uint32 user_id = 1;
    if (has_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->user_id());
    }

    // optional uint32 agent_id = 2;
    if (has_agent_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->agent_id());
    }

    // optional string agent_name = 3;
    if (has_agent_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->agent_name());
    }

    // optional string agent_wx_account = 4;
    if (has_agent_wx_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->agent_wx_account());
    }

    // optional string agent_icon = 5;
    if (has_agent_icon()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->agent_icon());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetBindingAgentInfoResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.GetBindingAgentInfoResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetBindingAgentInfoResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetBindingAgentInfoResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.GetBindingAgentInfoResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.GetBindingAgentInfoResp)
    MergeFrom(*source);
  }
}

void GetBindingAgentInfoResp::MergeFrom(const GetBindingAgentInfoResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.GetBindingAgentInfoResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_user_id()) {
      set_user_id(from.user_id());
    }
    if (from.has_agent_id()) {
      set_agent_id(from.agent_id());
    }
    if (from.has_agent_name()) {
      set_has_agent_name();
      agent_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.agent_name_);
    }
    if (from.has_agent_wx_account()) {
      set_has_agent_wx_account();
      agent_wx_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.agent_wx_account_);
    }
    if (from.has_agent_icon()) {
      set_has_agent_icon();
      agent_icon_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.agent_icon_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void GetBindingAgentInfoResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.GetBindingAgentInfoResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBindingAgentInfoResp::CopyFrom(const GetBindingAgentInfoResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.GetBindingAgentInfoResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBindingAgentInfoResp::IsInitialized() const {

  return true;
}

void GetBindingAgentInfoResp::Swap(GetBindingAgentInfoResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetBindingAgentInfoResp::InternalSwap(GetBindingAgentInfoResp* other) {
  std::swap(user_id_, other->user_id_);
  std::swap(agent_id_, other->agent_id_);
  agent_name_.Swap(&other->agent_name_);
  agent_wx_account_.Swap(&other->agent_wx_account_);
  agent_icon_.Swap(&other->agent_icon_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetBindingAgentInfoResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetBindingAgentInfoResp_descriptor_;
  metadata.reflection = GetBindingAgentInfoResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetBindingAgentInfoResp

// optional uint32 user_id = 1;
bool GetBindingAgentInfoResp::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetBindingAgentInfoResp::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
void GetBindingAgentInfoResp::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetBindingAgentInfoResp::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
 ::google::protobuf::uint32 GetBindingAgentInfoResp::user_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.GetBindingAgentInfoResp.user_id)
  return user_id_;
}
 void GetBindingAgentInfoResp::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.GetBindingAgentInfoResp.user_id)
}

// optional uint32 agent_id = 2;
bool GetBindingAgentInfoResp::has_agent_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetBindingAgentInfoResp::set_has_agent_id() {
  _has_bits_[0] |= 0x00000002u;
}
void GetBindingAgentInfoResp::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetBindingAgentInfoResp::clear_agent_id() {
  agent_id_ = 0u;
  clear_has_agent_id();
}
 ::google::protobuf::uint32 GetBindingAgentInfoResp::agent_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.GetBindingAgentInfoResp.agent_id)
  return agent_id_;
}
 void GetBindingAgentInfoResp::set_agent_id(::google::protobuf::uint32 value) {
  set_has_agent_id();
  agent_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.GetBindingAgentInfoResp.agent_id)
}

// optional string agent_name = 3;
bool GetBindingAgentInfoResp::has_agent_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GetBindingAgentInfoResp::set_has_agent_name() {
  _has_bits_[0] |= 0x00000004u;
}
void GetBindingAgentInfoResp::clear_has_agent_name() {
  _has_bits_[0] &= ~0x00000004u;
}
void GetBindingAgentInfoResp::clear_agent_name() {
  agent_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_agent_name();
}
 const ::std::string& GetBindingAgentInfoResp::agent_name() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.GetBindingAgentInfoResp.agent_name)
  return agent_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetBindingAgentInfoResp::set_agent_name(const ::std::string& value) {
  set_has_agent_name();
  agent_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fogs.proto.msg.GetBindingAgentInfoResp.agent_name)
}
 void GetBindingAgentInfoResp::set_agent_name(const char* value) {
  set_has_agent_name();
  agent_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fogs.proto.msg.GetBindingAgentInfoResp.agent_name)
}
 void GetBindingAgentInfoResp::set_agent_name(const char* value, size_t size) {
  set_has_agent_name();
  agent_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fogs.proto.msg.GetBindingAgentInfoResp.agent_name)
}
 ::std::string* GetBindingAgentInfoResp::mutable_agent_name() {
  set_has_agent_name();
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.GetBindingAgentInfoResp.agent_name)
  return agent_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetBindingAgentInfoResp::release_agent_name() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.GetBindingAgentInfoResp.agent_name)
  clear_has_agent_name();
  return agent_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetBindingAgentInfoResp::set_allocated_agent_name(::std::string* agent_name) {
  if (agent_name != NULL) {
    set_has_agent_name();
  } else {
    clear_has_agent_name();
  }
  agent_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), agent_name);
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.GetBindingAgentInfoResp.agent_name)
}

// optional string agent_wx_account = 4;
bool GetBindingAgentInfoResp::has_agent_wx_account() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void GetBindingAgentInfoResp::set_has_agent_wx_account() {
  _has_bits_[0] |= 0x00000008u;
}
void GetBindingAgentInfoResp::clear_has_agent_wx_account() {
  _has_bits_[0] &= ~0x00000008u;
}
void GetBindingAgentInfoResp::clear_agent_wx_account() {
  agent_wx_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_agent_wx_account();
}
 const ::std::string& GetBindingAgentInfoResp::agent_wx_account() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.GetBindingAgentInfoResp.agent_wx_account)
  return agent_wx_account_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetBindingAgentInfoResp::set_agent_wx_account(const ::std::string& value) {
  set_has_agent_wx_account();
  agent_wx_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fogs.proto.msg.GetBindingAgentInfoResp.agent_wx_account)
}
 void GetBindingAgentInfoResp::set_agent_wx_account(const char* value) {
  set_has_agent_wx_account();
  agent_wx_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fogs.proto.msg.GetBindingAgentInfoResp.agent_wx_account)
}
 void GetBindingAgentInfoResp::set_agent_wx_account(const char* value, size_t size) {
  set_has_agent_wx_account();
  agent_wx_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fogs.proto.msg.GetBindingAgentInfoResp.agent_wx_account)
}
 ::std::string* GetBindingAgentInfoResp::mutable_agent_wx_account() {
  set_has_agent_wx_account();
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.GetBindingAgentInfoResp.agent_wx_account)
  return agent_wx_account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetBindingAgentInfoResp::release_agent_wx_account() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.GetBindingAgentInfoResp.agent_wx_account)
  clear_has_agent_wx_account();
  return agent_wx_account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetBindingAgentInfoResp::set_allocated_agent_wx_account(::std::string* agent_wx_account) {
  if (agent_wx_account != NULL) {
    set_has_agent_wx_account();
  } else {
    clear_has_agent_wx_account();
  }
  agent_wx_account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), agent_wx_account);
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.GetBindingAgentInfoResp.agent_wx_account)
}

// optional string agent_icon = 5;
bool GetBindingAgentInfoResp::has_agent_icon() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void GetBindingAgentInfoResp::set_has_agent_icon() {
  _has_bits_[0] |= 0x00000010u;
}
void GetBindingAgentInfoResp::clear_has_agent_icon() {
  _has_bits_[0] &= ~0x00000010u;
}
void GetBindingAgentInfoResp::clear_agent_icon() {
  agent_icon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_agent_icon();
}
 const ::std::string& GetBindingAgentInfoResp::agent_icon() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.GetBindingAgentInfoResp.agent_icon)
  return agent_icon_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetBindingAgentInfoResp::set_agent_icon(const ::std::string& value) {
  set_has_agent_icon();
  agent_icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fogs.proto.msg.GetBindingAgentInfoResp.agent_icon)
}
 void GetBindingAgentInfoResp::set_agent_icon(const char* value) {
  set_has_agent_icon();
  agent_icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fogs.proto.msg.GetBindingAgentInfoResp.agent_icon)
}
 void GetBindingAgentInfoResp::set_agent_icon(const char* value, size_t size) {
  set_has_agent_icon();
  agent_icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fogs.proto.msg.GetBindingAgentInfoResp.agent_icon)
}
 ::std::string* GetBindingAgentInfoResp::mutable_agent_icon() {
  set_has_agent_icon();
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.GetBindingAgentInfoResp.agent_icon)
  return agent_icon_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetBindingAgentInfoResp::release_agent_icon() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.GetBindingAgentInfoResp.agent_icon)
  clear_has_agent_icon();
  return agent_icon_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetBindingAgentInfoResp::set_allocated_agent_icon(::std::string* agent_icon) {
  if (agent_icon != NULL) {
    set_has_agent_icon();
  } else {
    clear_has_agent_icon();
  }
  agent_icon_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), agent_icon);
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.GetBindingAgentInfoResp.agent_icon)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BindingAgentReq::kUserIdFieldNumber;
const int BindingAgentReq::kAgentIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BindingAgentReq::BindingAgentReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.BindingAgentReq)
}

void BindingAgentReq::InitAsDefaultInstance() {
}

BindingAgentReq::BindingAgentReq(const BindingAgentReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.BindingAgentReq)
}

void BindingAgentReq::SharedCtor() {
  _cached_size_ = 0;
  user_id_ = 0u;
  agent_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BindingAgentReq::~BindingAgentReq() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.BindingAgentReq)
  SharedDtor();
}

void BindingAgentReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BindingAgentReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BindingAgentReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BindingAgentReq_descriptor_;
}

const BindingAgentReq& BindingAgentReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_idip_2eproto();
  return *default_instance_;
}

BindingAgentReq* BindingAgentReq::default_instance_ = NULL;

BindingAgentReq* BindingAgentReq::New(::google::protobuf::Arena* arena) const {
  BindingAgentReq* n = new BindingAgentReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BindingAgentReq::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.BindingAgentReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(BindingAgentReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<BindingAgentReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(user_id_, agent_id_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool BindingAgentReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.BindingAgentReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 user_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
          set_has_user_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_agent_id;
        break;
      }

      // optional uint32 agent_id = 2;
      case 2: {
        if (tag == 16) {
         parse_agent_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &agent_id_)));
          set_has_agent_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.BindingAgentReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.BindingAgentReq)
  return false;
#undef DO_
}

void BindingAgentReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.BindingAgentReq)
  // optional uint32 user_id = 1;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // optional uint32 agent_id = 2;
  if (has_agent_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->agent_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.BindingAgentReq)
}

::google::protobuf::uint8* BindingAgentReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.BindingAgentReq)
  // optional uint32 user_id = 1;
  if (has_user_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // optional uint32 agent_id = 2;
  if (has_agent_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->agent_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.BindingAgentReq)
  return target;
}

int BindingAgentReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.BindingAgentReq)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 user_id = 1;
    if (has_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->user_id());
    }

    // optional uint32 agent_id = 2;
    if (has_agent_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->agent_id());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BindingAgentReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.BindingAgentReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BindingAgentReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BindingAgentReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.BindingAgentReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.BindingAgentReq)
    MergeFrom(*source);
  }
}

void BindingAgentReq::MergeFrom(const BindingAgentReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.BindingAgentReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_user_id()) {
      set_user_id(from.user_id());
    }
    if (from.has_agent_id()) {
      set_agent_id(from.agent_id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void BindingAgentReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.BindingAgentReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BindingAgentReq::CopyFrom(const BindingAgentReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.BindingAgentReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BindingAgentReq::IsInitialized() const {

  return true;
}

void BindingAgentReq::Swap(BindingAgentReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BindingAgentReq::InternalSwap(BindingAgentReq* other) {
  std::swap(user_id_, other->user_id_);
  std::swap(agent_id_, other->agent_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BindingAgentReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BindingAgentReq_descriptor_;
  metadata.reflection = BindingAgentReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BindingAgentReq

// optional uint32 user_id = 1;
bool BindingAgentReq::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BindingAgentReq::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
void BindingAgentReq::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void BindingAgentReq::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
 ::google::protobuf::uint32 BindingAgentReq::user_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.BindingAgentReq.user_id)
  return user_id_;
}
 void BindingAgentReq::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.BindingAgentReq.user_id)
}

// optional uint32 agent_id = 2;
bool BindingAgentReq::has_agent_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BindingAgentReq::set_has_agent_id() {
  _has_bits_[0] |= 0x00000002u;
}
void BindingAgentReq::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void BindingAgentReq::clear_agent_id() {
  agent_id_ = 0u;
  clear_has_agent_id();
}
 ::google::protobuf::uint32 BindingAgentReq::agent_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.BindingAgentReq.agent_id)
  return agent_id_;
}
 void BindingAgentReq::set_agent_id(::google::protobuf::uint32 value) {
  set_has_agent_id();
  agent_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.BindingAgentReq.agent_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BindingAgentResp::kResultFieldNumber;
const int BindingAgentResp::kUserIdFieldNumber;
const int BindingAgentResp::kAgentIdFieldNumber;
const int BindingAgentResp::kAgentNameFieldNumber;
const int BindingAgentResp::kAgentWxAccountFieldNumber;
const int BindingAgentResp::kAgentIconFieldNumber;
const int BindingAgentResp::kCodeInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BindingAgentResp::BindingAgentResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.BindingAgentResp)
}

void BindingAgentResp::InitAsDefaultInstance() {
}

BindingAgentResp::BindingAgentResp(const BindingAgentResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.BindingAgentResp)
}

void BindingAgentResp::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  result_ = 0;
  user_id_ = 0u;
  agent_id_ = 0u;
  agent_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  agent_wx_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  agent_icon_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BindingAgentResp::~BindingAgentResp() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.BindingAgentResp)
  SharedDtor();
}

void BindingAgentResp::SharedDtor() {
  agent_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  agent_wx_account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  agent_icon_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void BindingAgentResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BindingAgentResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BindingAgentResp_descriptor_;
}

const BindingAgentResp& BindingAgentResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_idip_2eproto();
  return *default_instance_;
}

BindingAgentResp* BindingAgentResp::default_instance_ = NULL;

BindingAgentResp* BindingAgentResp::New(::google::protobuf::Arena* arena) const {
  BindingAgentResp* n = new BindingAgentResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BindingAgentResp::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.BindingAgentResp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(BindingAgentResp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<BindingAgentResp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 127u) {
    ZR_(result_, user_id_);
    agent_id_ = 0u;
    if (has_agent_name()) {
      agent_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_agent_wx_account()) {
      agent_wx_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_agent_icon()) {
      agent_icon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_code_info()) {
      code_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool BindingAgentResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.BindingAgentResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_user_id;
        break;
      }

      // optional uint32 user_id = 2;
      case 2: {
        if (tag == 16) {
         parse_user_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
          set_has_user_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_agent_id;
        break;
      }

      // optional uint32 agent_id = 3;
      case 3: {
        if (tag == 24) {
         parse_agent_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &agent_id_)));
          set_has_agent_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_agent_name;
        break;
      }

      // optional string agent_name = 4;
      case 4: {
        if (tag == 34) {
         parse_agent_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_agent_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->agent_name().data(), this->agent_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fogs.proto.msg.BindingAgentResp.agent_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_agent_wx_account;
        break;
      }

      // optional string agent_wx_account = 5;
      case 5: {
        if (tag == 42) {
         parse_agent_wx_account:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_agent_wx_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->agent_wx_account().data(), this->agent_wx_account().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fogs.proto.msg.BindingAgentResp.agent_wx_account");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_agent_icon;
        break;
      }

      // optional string agent_icon = 6;
      case 6: {
        if (tag == 50) {
         parse_agent_icon:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_agent_icon()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->agent_icon().data(), this->agent_icon().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fogs.proto.msg.BindingAgentResp.agent_icon");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_code_info;
        break;
      }

      // optional string code_info = 7;
      case 7: {
        if (tag == 58) {
         parse_code_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code_info()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->code_info().data(), this->code_info().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fogs.proto.msg.BindingAgentResp.code_info");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.BindingAgentResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.BindingAgentResp)
  return false;
#undef DO_
}

void BindingAgentResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.BindingAgentResp)
  // optional int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional uint32 user_id = 2;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->user_id(), output);
  }

  // optional uint32 agent_id = 3;
  if (has_agent_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->agent_id(), output);
  }

  // optional string agent_name = 4;
  if (has_agent_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->agent_name().data(), this->agent_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fogs.proto.msg.BindingAgentResp.agent_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->agent_name(), output);
  }

  // optional string agent_wx_account = 5;
  if (has_agent_wx_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->agent_wx_account().data(), this->agent_wx_account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fogs.proto.msg.BindingAgentResp.agent_wx_account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->agent_wx_account(), output);
  }

  // optional string agent_icon = 6;
  if (has_agent_icon()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->agent_icon().data(), this->agent_icon().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fogs.proto.msg.BindingAgentResp.agent_icon");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->agent_icon(), output);
  }

  // optional string code_info = 7;
  if (has_code_info()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code_info().data(), this->code_info().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fogs.proto.msg.BindingAgentResp.code_info");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->code_info(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.BindingAgentResp)
}

::google::protobuf::uint8* BindingAgentResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.BindingAgentResp)
  // optional int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional uint32 user_id = 2;
  if (has_user_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->user_id(), target);
  }

  // optional uint32 agent_id = 3;
  if (has_agent_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->agent_id(), target);
  }

  // optional string agent_name = 4;
  if (has_agent_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->agent_name().data(), this->agent_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fogs.proto.msg.BindingAgentResp.agent_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->agent_name(), target);
  }

  // optional string agent_wx_account = 5;
  if (has_agent_wx_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->agent_wx_account().data(), this->agent_wx_account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fogs.proto.msg.BindingAgentResp.agent_wx_account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->agent_wx_account(), target);
  }

  // optional string agent_icon = 6;
  if (has_agent_icon()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->agent_icon().data(), this->agent_icon().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fogs.proto.msg.BindingAgentResp.agent_icon");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->agent_icon(), target);
  }

  // optional string code_info = 7;
  if (has_code_info()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code_info().data(), this->code_info().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fogs.proto.msg.BindingAgentResp.code_info");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->code_info(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.BindingAgentResp)
  return target;
}

int BindingAgentResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.BindingAgentResp)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 127u) {
    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional uint32 user_id = 2;
    if (has_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->user_id());
    }

    // optional uint32 agent_id = 3;
    if (has_agent_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->agent_id());
    }

    // optional string agent_name = 4;
    if (has_agent_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->agent_name());
    }

    // optional string agent_wx_account = 5;
    if (has_agent_wx_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->agent_wx_account());
    }

    // optional string agent_icon = 6;
    if (has_agent_icon()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->agent_icon());
    }

    // optional string code_info = 7;
    if (has_code_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->code_info());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BindingAgentResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.BindingAgentResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BindingAgentResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BindingAgentResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.BindingAgentResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.BindingAgentResp)
    MergeFrom(*source);
  }
}

void BindingAgentResp::MergeFrom(const BindingAgentResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.BindingAgentResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_user_id()) {
      set_user_id(from.user_id());
    }
    if (from.has_agent_id()) {
      set_agent_id(from.agent_id());
    }
    if (from.has_agent_name()) {
      set_has_agent_name();
      agent_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.agent_name_);
    }
    if (from.has_agent_wx_account()) {
      set_has_agent_wx_account();
      agent_wx_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.agent_wx_account_);
    }
    if (from.has_agent_icon()) {
      set_has_agent_icon();
      agent_icon_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.agent_icon_);
    }
    if (from.has_code_info()) {
      set_has_code_info();
      code_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_info_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void BindingAgentResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.BindingAgentResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BindingAgentResp::CopyFrom(const BindingAgentResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.BindingAgentResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BindingAgentResp::IsInitialized() const {

  return true;
}

void BindingAgentResp::Swap(BindingAgentResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BindingAgentResp::InternalSwap(BindingAgentResp* other) {
  std::swap(result_, other->result_);
  std::swap(user_id_, other->user_id_);
  std::swap(agent_id_, other->agent_id_);
  agent_name_.Swap(&other->agent_name_);
  agent_wx_account_.Swap(&other->agent_wx_account_);
  agent_icon_.Swap(&other->agent_icon_);
  code_info_.Swap(&other->code_info_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BindingAgentResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BindingAgentResp_descriptor_;
  metadata.reflection = BindingAgentResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BindingAgentResp

// optional int32 result = 1;
bool BindingAgentResp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BindingAgentResp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void BindingAgentResp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void BindingAgentResp::clear_result() {
  result_ = 0;
  clear_has_result();
}
 ::google::protobuf::int32 BindingAgentResp::result() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.BindingAgentResp.result)
  return result_;
}
 void BindingAgentResp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.BindingAgentResp.result)
}

// optional uint32 user_id = 2;
bool BindingAgentResp::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BindingAgentResp::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
void BindingAgentResp::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void BindingAgentResp::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
 ::google::protobuf::uint32 BindingAgentResp::user_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.BindingAgentResp.user_id)
  return user_id_;
}
 void BindingAgentResp::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.BindingAgentResp.user_id)
}

// optional uint32 agent_id = 3;
bool BindingAgentResp::has_agent_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BindingAgentResp::set_has_agent_id() {
  _has_bits_[0] |= 0x00000004u;
}
void BindingAgentResp::clear_has_agent_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void BindingAgentResp::clear_agent_id() {
  agent_id_ = 0u;
  clear_has_agent_id();
}
 ::google::protobuf::uint32 BindingAgentResp::agent_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.BindingAgentResp.agent_id)
  return agent_id_;
}
 void BindingAgentResp::set_agent_id(::google::protobuf::uint32 value) {
  set_has_agent_id();
  agent_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.BindingAgentResp.agent_id)
}

// optional string agent_name = 4;
bool BindingAgentResp::has_agent_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BindingAgentResp::set_has_agent_name() {
  _has_bits_[0] |= 0x00000008u;
}
void BindingAgentResp::clear_has_agent_name() {
  _has_bits_[0] &= ~0x00000008u;
}
void BindingAgentResp::clear_agent_name() {
  agent_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_agent_name();
}
 const ::std::string& BindingAgentResp::agent_name() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.BindingAgentResp.agent_name)
  return agent_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BindingAgentResp::set_agent_name(const ::std::string& value) {
  set_has_agent_name();
  agent_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fogs.proto.msg.BindingAgentResp.agent_name)
}
 void BindingAgentResp::set_agent_name(const char* value) {
  set_has_agent_name();
  agent_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fogs.proto.msg.BindingAgentResp.agent_name)
}
 void BindingAgentResp::set_agent_name(const char* value, size_t size) {
  set_has_agent_name();
  agent_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fogs.proto.msg.BindingAgentResp.agent_name)
}
 ::std::string* BindingAgentResp::mutable_agent_name() {
  set_has_agent_name();
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.BindingAgentResp.agent_name)
  return agent_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BindingAgentResp::release_agent_name() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.BindingAgentResp.agent_name)
  clear_has_agent_name();
  return agent_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BindingAgentResp::set_allocated_agent_name(::std::string* agent_name) {
  if (agent_name != NULL) {
    set_has_agent_name();
  } else {
    clear_has_agent_name();
  }
  agent_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), agent_name);
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.BindingAgentResp.agent_name)
}

// optional string agent_wx_account = 5;
bool BindingAgentResp::has_agent_wx_account() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void BindingAgentResp::set_has_agent_wx_account() {
  _has_bits_[0] |= 0x00000010u;
}
void BindingAgentResp::clear_has_agent_wx_account() {
  _has_bits_[0] &= ~0x00000010u;
}
void BindingAgentResp::clear_agent_wx_account() {
  agent_wx_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_agent_wx_account();
}
 const ::std::string& BindingAgentResp::agent_wx_account() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.BindingAgentResp.agent_wx_account)
  return agent_wx_account_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BindingAgentResp::set_agent_wx_account(const ::std::string& value) {
  set_has_agent_wx_account();
  agent_wx_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fogs.proto.msg.BindingAgentResp.agent_wx_account)
}
 void BindingAgentResp::set_agent_wx_account(const char* value) {
  set_has_agent_wx_account();
  agent_wx_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fogs.proto.msg.BindingAgentResp.agent_wx_account)
}
 void BindingAgentResp::set_agent_wx_account(const char* value, size_t size) {
  set_has_agent_wx_account();
  agent_wx_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fogs.proto.msg.BindingAgentResp.agent_wx_account)
}
 ::std::string* BindingAgentResp::mutable_agent_wx_account() {
  set_has_agent_wx_account();
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.BindingAgentResp.agent_wx_account)
  return agent_wx_account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BindingAgentResp::release_agent_wx_account() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.BindingAgentResp.agent_wx_account)
  clear_has_agent_wx_account();
  return agent_wx_account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BindingAgentResp::set_allocated_agent_wx_account(::std::string* agent_wx_account) {
  if (agent_wx_account != NULL) {
    set_has_agent_wx_account();
  } else {
    clear_has_agent_wx_account();
  }
  agent_wx_account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), agent_wx_account);
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.BindingAgentResp.agent_wx_account)
}

// optional string agent_icon = 6;
bool BindingAgentResp::has_agent_icon() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void BindingAgentResp::set_has_agent_icon() {
  _has_bits_[0] |= 0x00000020u;
}
void BindingAgentResp::clear_has_agent_icon() {
  _has_bits_[0] &= ~0x00000020u;
}
void BindingAgentResp::clear_agent_icon() {
  agent_icon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_agent_icon();
}
 const ::std::string& BindingAgentResp::agent_icon() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.BindingAgentResp.agent_icon)
  return agent_icon_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BindingAgentResp::set_agent_icon(const ::std::string& value) {
  set_has_agent_icon();
  agent_icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fogs.proto.msg.BindingAgentResp.agent_icon)
}
 void BindingAgentResp::set_agent_icon(const char* value) {
  set_has_agent_icon();
  agent_icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fogs.proto.msg.BindingAgentResp.agent_icon)
}
 void BindingAgentResp::set_agent_icon(const char* value, size_t size) {
  set_has_agent_icon();
  agent_icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fogs.proto.msg.BindingAgentResp.agent_icon)
}
 ::std::string* BindingAgentResp::mutable_agent_icon() {
  set_has_agent_icon();
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.BindingAgentResp.agent_icon)
  return agent_icon_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BindingAgentResp::release_agent_icon() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.BindingAgentResp.agent_icon)
  clear_has_agent_icon();
  return agent_icon_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BindingAgentResp::set_allocated_agent_icon(::std::string* agent_icon) {
  if (agent_icon != NULL) {
    set_has_agent_icon();
  } else {
    clear_has_agent_icon();
  }
  agent_icon_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), agent_icon);
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.BindingAgentResp.agent_icon)
}

// optional string code_info = 7;
bool BindingAgentResp::has_code_info() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void BindingAgentResp::set_has_code_info() {
  _has_bits_[0] |= 0x00000040u;
}
void BindingAgentResp::clear_has_code_info() {
  _has_bits_[0] &= ~0x00000040u;
}
void BindingAgentResp::clear_code_info() {
  code_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_code_info();
}
 const ::std::string& BindingAgentResp::code_info() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.BindingAgentResp.code_info)
  return code_info_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BindingAgentResp::set_code_info(const ::std::string& value) {
  set_has_code_info();
  code_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fogs.proto.msg.BindingAgentResp.code_info)
}
 void BindingAgentResp::set_code_info(const char* value) {
  set_has_code_info();
  code_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fogs.proto.msg.BindingAgentResp.code_info)
}
 void BindingAgentResp::set_code_info(const char* value, size_t size) {
  set_has_code_info();
  code_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fogs.proto.msg.BindingAgentResp.code_info)
}
 ::std::string* BindingAgentResp::mutable_code_info() {
  set_has_code_info();
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.BindingAgentResp.code_info)
  return code_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BindingAgentResp::release_code_info() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.BindingAgentResp.code_info)
  clear_has_code_info();
  return code_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BindingAgentResp::set_allocated_code_info(::std::string* code_info) {
  if (code_info != NULL) {
    set_has_code_info();
  } else {
    clear_has_code_info();
  }
  code_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code_info);
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.BindingAgentResp.code_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RefreshConfig::kConfigTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RefreshConfig::RefreshConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.RefreshConfig)
}

void RefreshConfig::InitAsDefaultInstance() {
}

RefreshConfig::RefreshConfig(const RefreshConfig& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.RefreshConfig)
}

void RefreshConfig::SharedCtor() {
  _cached_size_ = 0;
  config_type_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RefreshConfig::~RefreshConfig() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.RefreshConfig)
  SharedDtor();
}

void RefreshConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RefreshConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RefreshConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RefreshConfig_descriptor_;
}

const RefreshConfig& RefreshConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_idip_2eproto();
  return *default_instance_;
}

RefreshConfig* RefreshConfig::default_instance_ = NULL;

RefreshConfig* RefreshConfig::New(::google::protobuf::Arena* arena) const {
  RefreshConfig* n = new RefreshConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RefreshConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.RefreshConfig)
  config_type_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RefreshConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.RefreshConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .fogs.proto.msg.ConfigType config_type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::fogs::proto::msg::ConfigType_IsValid(value)) {
            set_config_type(static_cast< ::fogs::proto::msg::ConfigType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.RefreshConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.RefreshConfig)
  return false;
#undef DO_
}

void RefreshConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.RefreshConfig)
  // optional .fogs.proto.msg.ConfigType config_type = 1;
  if (has_config_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->config_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.RefreshConfig)
}

::google::protobuf::uint8* RefreshConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.RefreshConfig)
  // optional .fogs.proto.msg.ConfigType config_type = 1;
  if (has_config_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->config_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.RefreshConfig)
  return target;
}

int RefreshConfig::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.RefreshConfig)
  int total_size = 0;

  // optional .fogs.proto.msg.ConfigType config_type = 1;
  if (has_config_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->config_type());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RefreshConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.RefreshConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RefreshConfig* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RefreshConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.RefreshConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.RefreshConfig)
    MergeFrom(*source);
  }
}

void RefreshConfig::MergeFrom(const RefreshConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.RefreshConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_config_type()) {
      set_config_type(from.config_type());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void RefreshConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.RefreshConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RefreshConfig::CopyFrom(const RefreshConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.RefreshConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RefreshConfig::IsInitialized() const {

  return true;
}

void RefreshConfig::Swap(RefreshConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RefreshConfig::InternalSwap(RefreshConfig* other) {
  std::swap(config_type_, other->config_type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RefreshConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RefreshConfig_descriptor_;
  metadata.reflection = RefreshConfig_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RefreshConfig

// optional .fogs.proto.msg.ConfigType config_type = 1;
bool RefreshConfig::has_config_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RefreshConfig::set_has_config_type() {
  _has_bits_[0] |= 0x00000001u;
}
void RefreshConfig::clear_has_config_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void RefreshConfig::clear_config_type() {
  config_type_ = 1;
  clear_has_config_type();
}
 ::fogs::proto::msg::ConfigType RefreshConfig::config_type() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.RefreshConfig.config_type)
  return static_cast< ::fogs::proto::msg::ConfigType >(config_type_);
}
 void RefreshConfig::set_config_type(::fogs::proto::msg::ConfigType value) {
  assert(::fogs::proto::msg::ConfigType_IsValid(value));
  set_has_config_type();
  config_type_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.RefreshConfig.config_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RefreshFree::RefreshFree()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.RefreshFree)
}

void RefreshFree::InitAsDefaultInstance() {
}

RefreshFree::RefreshFree(const RefreshFree& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.RefreshFree)
}

void RefreshFree::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RefreshFree::~RefreshFree() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.RefreshFree)
  SharedDtor();
}

void RefreshFree::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RefreshFree::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RefreshFree::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RefreshFree_descriptor_;
}

const RefreshFree& RefreshFree::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_idip_2eproto();
  return *default_instance_;
}

RefreshFree* RefreshFree::default_instance_ = NULL;

RefreshFree* RefreshFree::New(::google::protobuf::Arena* arena) const {
  RefreshFree* n = new RefreshFree;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RefreshFree::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.RefreshFree)
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RefreshFree::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.RefreshFree)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.RefreshFree)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.RefreshFree)
  return false;
#undef DO_
}

void RefreshFree::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.RefreshFree)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.RefreshFree)
}

::google::protobuf::uint8* RefreshFree::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.RefreshFree)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.RefreshFree)
  return target;
}

int RefreshFree::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.RefreshFree)
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RefreshFree::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.RefreshFree)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RefreshFree* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RefreshFree>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.RefreshFree)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.RefreshFree)
    MergeFrom(*source);
  }
}

void RefreshFree::MergeFrom(const RefreshFree& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.RefreshFree)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void RefreshFree::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.RefreshFree)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RefreshFree::CopyFrom(const RefreshFree& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.RefreshFree)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RefreshFree::IsInitialized() const {

  return true;
}

void RefreshFree::Swap(RefreshFree* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RefreshFree::InternalSwap(RefreshFree* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RefreshFree::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RefreshFree_descriptor_;
  metadata.reflection = RefreshFree_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RefreshFree

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace msg
}  // namespace proto
}  // namespace fogs

// @@protoc_insertion_point(global_scope)
