// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_ss.proto

#ifndef PROTOBUF_msg_5fss_2eproto__INCLUDED
#define PROTOBUF_msg_5fss_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "msg_role.pb.h"
// @@protoc_insertion_point(includes)

namespace msg_maj {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_msg_5fss_2eproto();
void protobuf_AssignDesc_msg_5fss_2eproto();
void protobuf_ShutdownFile_msg_5fss_2eproto();

class KickSession;
class LoginToScene;
class LoginToken;
class LoginTokenNotify;
class ReqRobotJoinRoom;
class RouteHead;
class ServerBrepairingNotify;
class TransterToSceneReq;
class TransterToSceneResp;

enum c_cmd_ss {
  login_to_scene_req = 1,
  QueryPlayerResponseID = 2,
  QueryMailResponseID = 5,
  QueryMailSysLogResponseID = 6,
  GetMaxUUIDResponseID = 7,
  SendRoomCardID = 8,
  SendEditRoomCardID = 9,
  SendMailID = 10,
  SendNoticeID = 11,
  DeleteNoticeID = 12,
  SendBlockUserID = 13,
  SessionAccountNameID = 14,
  UpdateRoomInfoID = 15,
  ChangeGameServerID = 16,
  ZhanjiQueryListResponseID = 17,
  ZhanjiRespReplyResponseID = 18,
  NotifyOnConnectionID = 19,
  VerifyPaiResponseID = 20,
  ReloadConfigFormID = 21,
  HandshakeRequestID = 23,
  QueryPlayerRequestID = 24,
  SavePlayerDataReqID = 25,
  ZhanJiRecordAddRequestID = 26,
  ZhanJiFinishRequestID = 27,
  ZhanjiQueryListRequestID = 28,
  ZhanjiQueryReplyRequestID = 29,
  QueryMailRequestID = 30,
  SaveMailRequestID = 31,
  GetMaxUUIDRequestID = 32,
  RechargeRoomCardID = 33,
  QueryMailSysLogRequestID = 34,
  SaveMailSysLogRequestID = 35,
  UpdateRankRequestID = 36,
  InnRecordAddLogRequestID = 37,
  UpdateFepUserID = 38,
  UpdateRankSortResponseID = 39,
  QueryRankRequestID = 40,
  QueryRankResponseID = 41,
  QueryAdminFindUserInfoID = 51,
  SaveMoneyLogRequestID = 60,
  SaveOnlinePlayerID = 61,
  ZhanjiQueryRoomRequestID = 62,
  ZhanjiQueryRoomResponseID = 63,
  ZhanjiQueryInnRequestID = 64,
  ZhanjiQueryInnResponseID = 65,
  GetFreeConfigReqID = 66,
  GetFreeConfigRespID = 67,
  GetRewardConfigReqID = 68,
  GetRewardConfigRespID = 69,
  GetNotifyConfigReqID = 70,
  GetNotifyConfigRespID = 71,
  GetRoomSetConfigReqID = 72,
  GetRoomSetConfigRespID = 73,
  RespEditRoomCardID = 76,
  RespSendRoomCardID = 77,
  SendFindUserID = 78,
  RespFindUserID = 79,
  SendFindOnlineID = 80,
  RespFindOnlineID = 81,
  GetBindingAgentInfoReqID = 82,
  GetBindingAgentInfoRespID = 83,
  BindingAgentReqID = 84,
  BindingAgentRespID = 85,
  RefreshConfigID = 86,
  RefreshFreeID = 87,
  InputInviteCodeReqID = 90,
  InputInviteCodeRespID = 91,
  LoginTokenNotifyID = 100,
  req_robot_join_room = 110,
  UserEditCardID = 111,
  SaveRoomOptionReqID = 112,
  UpdateRoomOptionReqID = 113,
  ServerIsBrepairingNotifyID = 114,
  TransterToSceneReqID = 115,
  TransterToSceneRespID = 116
};
bool c_cmd_ss_IsValid(int value);
const c_cmd_ss c_cmd_ss_MIN = login_to_scene_req;
const c_cmd_ss c_cmd_ss_MAX = TransterToSceneRespID;
const int c_cmd_ss_ARRAYSIZE = c_cmd_ss_MAX + 1;

const ::google::protobuf::EnumDescriptor* c_cmd_ss_descriptor();
inline const ::std::string& c_cmd_ss_Name(c_cmd_ss value) {
  return ::google::protobuf::internal::NameOfEnum(
    c_cmd_ss_descriptor(), value);
}
inline bool c_cmd_ss_Parse(
    const ::std::string& name, c_cmd_ss* value) {
  return ::google::protobuf::internal::ParseNamedEnum<c_cmd_ss>(
    c_cmd_ss_descriptor(), name, value);
}
enum RouteType {
  route_t_sws = 1
};
bool RouteType_IsValid(int value);
const RouteType RouteType_MIN = route_t_sws;
const RouteType RouteType_MAX = route_t_sws;
const int RouteType_ARRAYSIZE = RouteType_MAX + 1;

const ::google::protobuf::EnumDescriptor* RouteType_descriptor();
inline const ::std::string& RouteType_Name(RouteType value) {
  return ::google::protobuf::internal::NameOfEnum(
    RouteType_descriptor(), value);
}
inline bool RouteType_Parse(
    const ::std::string& name, RouteType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RouteType>(
    RouteType_descriptor(), name, value);
}
// ===================================================================

class LoginToScene : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.LoginToScene) */ {
 public:
  LoginToScene();
  virtual ~LoginToScene();

  LoginToScene(const LoginToScene& from);

  inline LoginToScene& operator=(const LoginToScene& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginToScene& default_instance();

  void Swap(LoginToScene* other);

  // implements Message ----------------------------------------------

  inline LoginToScene* New() const { return New(NULL); }

  LoginToScene* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginToScene& from);
  void MergeFrom(const LoginToScene& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LoginToScene* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint64 uid() const;
  void set_uid(::google::protobuf::uint64 value);

  // optional bool repeat_login = 2;
  bool has_repeat_login() const;
  void clear_repeat_login();
  static const int kRepeatLoginFieldNumber = 2;
  bool repeat_login() const;
  void set_repeat_login(bool value);

  // optional uint32 new_session_id = 3;
  bool has_new_session_id() const;
  void clear_new_session_id();
  static const int kNewSessionIdFieldNumber = 3;
  ::google::protobuf::uint32 new_session_id() const;
  void set_new_session_id(::google::protobuf::uint32 value);

  // optional uint32 join_room_id = 4;
  bool has_join_room_id() const;
  void clear_join_room_id();
  static const int kJoinRoomIdFieldNumber = 4;
  ::google::protobuf::uint32 join_room_id() const;
  void set_join_room_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:msg_maj.LoginToScene)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_repeat_login();
  inline void clear_has_repeat_login();
  inline void set_has_new_session_id();
  inline void clear_has_new_session_id();
  inline void set_has_join_room_id();
  inline void clear_has_join_room_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 uid_;
  bool repeat_login_;
  ::google::protobuf::uint32 new_session_id_;
  ::google::protobuf::uint32 join_room_id_;
  friend void  protobuf_AddDesc_msg_5fss_2eproto();
  friend void protobuf_AssignDesc_msg_5fss_2eproto();
  friend void protobuf_ShutdownFile_msg_5fss_2eproto();

  void InitAsDefaultInstance();
  static LoginToScene* default_instance_;
};
// -------------------------------------------------------------------

class LoginToken : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.LoginToken) */ {
 public:
  LoginToken();
  virtual ~LoginToken();

  LoginToken(const LoginToken& from);

  inline LoginToken& operator=(const LoginToken& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginToken& default_instance();

  void Swap(LoginToken* other);

  // implements Message ----------------------------------------------

  inline LoginToken* New() const { return New(NULL); }

  LoginToken* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginToken& from);
  void MergeFrom(const LoginToken& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LoginToken* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string openid = 1;
  bool has_openid() const;
  void clear_openid();
  static const int kOpenidFieldNumber = 1;
  const ::std::string& openid() const;
  void set_openid(const ::std::string& value);
  void set_openid(const char* value);
  void set_openid(const char* value, size_t size);
  ::std::string* mutable_openid();
  ::std::string* release_openid();
  void set_allocated_openid(::std::string* openid);

  // optional string nickname = 2;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNicknameFieldNumber = 2;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // optional int32 sex = 3;
  bool has_sex() const;
  void clear_sex();
  static const int kSexFieldNumber = 3;
  ::google::protobuf::int32 sex() const;
  void set_sex(::google::protobuf::int32 value);

  // optional string province = 4;
  bool has_province() const;
  void clear_province();
  static const int kProvinceFieldNumber = 4;
  const ::std::string& province() const;
  void set_province(const ::std::string& value);
  void set_province(const char* value);
  void set_province(const char* value, size_t size);
  ::std::string* mutable_province();
  ::std::string* release_province();
  void set_allocated_province(::std::string* province);

  // optional string city = 5;
  bool has_city() const;
  void clear_city();
  static const int kCityFieldNumber = 5;
  const ::std::string& city() const;
  void set_city(const ::std::string& value);
  void set_city(const char* value);
  void set_city(const char* value, size_t size);
  ::std::string* mutable_city();
  ::std::string* release_city();
  void set_allocated_city(::std::string* city);

  // optional string country = 6;
  bool has_country() const;
  void clear_country();
  static const int kCountryFieldNumber = 6;
  const ::std::string& country() const;
  void set_country(const ::std::string& value);
  void set_country(const char* value);
  void set_country(const char* value, size_t size);
  ::std::string* mutable_country();
  ::std::string* release_country();
  void set_allocated_country(::std::string* country);

  // optional string headimgurl = 7;
  bool has_headimgurl() const;
  void clear_headimgurl();
  static const int kHeadimgurlFieldNumber = 7;
  const ::std::string& headimgurl() const;
  void set_headimgurl(const ::std::string& value);
  void set_headimgurl(const char* value);
  void set_headimgurl(const char* value, size_t size);
  ::std::string* mutable_headimgurl();
  ::std::string* release_headimgurl();
  void set_allocated_headimgurl(::std::string* headimgurl);

  // optional string unionid = 8;
  bool has_unionid() const;
  void clear_unionid();
  static const int kUnionidFieldNumber = 8;
  const ::std::string& unionid() const;
  void set_unionid(const ::std::string& value);
  void set_unionid(const char* value);
  void set_unionid(const char* value, size_t size);
  ::std::string* mutable_unionid();
  ::std::string* release_unionid();
  void set_allocated_unionid(::std::string* unionid);

  // optional string ip = 9;
  bool has_ip() const;
  void clear_ip();
  static const int kIpFieldNumber = 9;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // @@protoc_insertion_point(class_scope:msg_maj.LoginToken)
 private:
  inline void set_has_openid();
  inline void clear_has_openid();
  inline void set_has_nickname();
  inline void clear_has_nickname();
  inline void set_has_sex();
  inline void clear_has_sex();
  inline void set_has_province();
  inline void clear_has_province();
  inline void set_has_city();
  inline void clear_has_city();
  inline void set_has_country();
  inline void clear_has_country();
  inline void set_has_headimgurl();
  inline void clear_has_headimgurl();
  inline void set_has_unionid();
  inline void clear_has_unionid();
  inline void set_has_ip();
  inline void clear_has_ip();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr openid_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::internal::ArenaStringPtr province_;
  ::google::protobuf::internal::ArenaStringPtr city_;
  ::google::protobuf::internal::ArenaStringPtr country_;
  ::google::protobuf::internal::ArenaStringPtr headimgurl_;
  ::google::protobuf::internal::ArenaStringPtr unionid_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::int32 sex_;
  friend void  protobuf_AddDesc_msg_5fss_2eproto();
  friend void protobuf_AssignDesc_msg_5fss_2eproto();
  friend void protobuf_ShutdownFile_msg_5fss_2eproto();

  void InitAsDefaultInstance();
  static LoginToken* default_instance_;
};
// -------------------------------------------------------------------

class LoginTokenNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.LoginTokenNotify) */ {
 public:
  LoginTokenNotify();
  virtual ~LoginTokenNotify();

  LoginTokenNotify(const LoginTokenNotify& from);

  inline LoginTokenNotify& operator=(const LoginTokenNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginTokenNotify& default_instance();

  void Swap(LoginTokenNotify* other);

  // implements Message ----------------------------------------------

  inline LoginTokenNotify* New() const { return New(NULL); }

  LoginTokenNotify* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginTokenNotify& from);
  void MergeFrom(const LoginTokenNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LoginTokenNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg_maj.LoginToken acctoken = 1;
  bool has_acctoken() const;
  void clear_acctoken();
  static const int kAcctokenFieldNumber = 1;
  const ::msg_maj::LoginToken& acctoken() const;
  ::msg_maj::LoginToken* mutable_acctoken();
  ::msg_maj::LoginToken* release_acctoken();
  void set_allocated_acctoken(::msg_maj::LoginToken* acctoken);

  // @@protoc_insertion_point(class_scope:msg_maj.LoginTokenNotify)
 private:
  inline void set_has_acctoken();
  inline void clear_has_acctoken();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg_maj::LoginToken* acctoken_;
  friend void  protobuf_AddDesc_msg_5fss_2eproto();
  friend void protobuf_AssignDesc_msg_5fss_2eproto();
  friend void protobuf_ShutdownFile_msg_5fss_2eproto();

  void InitAsDefaultInstance();
  static LoginTokenNotify* default_instance_;
};
// -------------------------------------------------------------------

class KickSession : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.KickSession) */ {
 public:
  KickSession();
  virtual ~KickSession();

  KickSession(const KickSession& from);

  inline KickSession& operator=(const KickSession& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KickSession& default_instance();

  void Swap(KickSession* other);

  // implements Message ----------------------------------------------

  inline KickSession* New() const { return New(NULL); }

  KickSession* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KickSession& from);
  void MergeFrom(const KickSession& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(KickSession* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 session_id = 1;
  bool has_session_id() const;
  void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  ::google::protobuf::uint64 session_id() const;
  void set_session_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:msg_maj.KickSession)
 private:
  inline void set_has_session_id();
  inline void clear_has_session_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 session_id_;
  friend void  protobuf_AddDesc_msg_5fss_2eproto();
  friend void protobuf_AssignDesc_msg_5fss_2eproto();
  friend void protobuf_ShutdownFile_msg_5fss_2eproto();

  void InitAsDefaultInstance();
  static KickSession* default_instance_;
};
// -------------------------------------------------------------------

class ReqRobotJoinRoom : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.ReqRobotJoinRoom) */ {
 public:
  ReqRobotJoinRoom();
  virtual ~ReqRobotJoinRoom();

  ReqRobotJoinRoom(const ReqRobotJoinRoom& from);

  inline ReqRobotJoinRoom& operator=(const ReqRobotJoinRoom& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqRobotJoinRoom& default_instance();

  void Swap(ReqRobotJoinRoom* other);

  // implements Message ----------------------------------------------

  inline ReqRobotJoinRoom* New() const { return New(NULL); }

  ReqRobotJoinRoom* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqRobotJoinRoom& from);
  void MergeFrom(const ReqRobotJoinRoom& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqRobotJoinRoom* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 room_id = 1;
  bool has_room_id() const;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  ::google::protobuf::int32 room_id() const;
  void set_room_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg_maj.ReqRobotJoinRoom)
 private:
  inline void set_has_room_id();
  inline void clear_has_room_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 room_id_;
  friend void  protobuf_AddDesc_msg_5fss_2eproto();
  friend void protobuf_AssignDesc_msg_5fss_2eproto();
  friend void protobuf_ShutdownFile_msg_5fss_2eproto();

  void InitAsDefaultInstance();
  static ReqRobotJoinRoom* default_instance_;
};
// -------------------------------------------------------------------

class ServerBrepairingNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.ServerBrepairingNotify) */ {
 public:
  ServerBrepairingNotify();
  virtual ~ServerBrepairingNotify();

  ServerBrepairingNotify(const ServerBrepairingNotify& from);

  inline ServerBrepairingNotify& operator=(const ServerBrepairingNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerBrepairingNotify& default_instance();

  void Swap(ServerBrepairingNotify* other);

  // implements Message ----------------------------------------------

  inline ServerBrepairingNotify* New() const { return New(NULL); }

  ServerBrepairingNotify* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerBrepairingNotify& from);
  void MergeFrom(const ServerBrepairingNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ServerBrepairingNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg_maj.ServerBrepairingNotify)
 private:
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 status_;
  friend void  protobuf_AddDesc_msg_5fss_2eproto();
  friend void protobuf_AssignDesc_msg_5fss_2eproto();
  friend void protobuf_ShutdownFile_msg_5fss_2eproto();

  void InitAsDefaultInstance();
  static ServerBrepairingNotify* default_instance_;
};
// -------------------------------------------------------------------

class RouteHead : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.RouteHead) */ {
 public:
  RouteHead();
  virtual ~RouteHead();

  RouteHead(const RouteHead& from);

  inline RouteHead& operator=(const RouteHead& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RouteHead& default_instance();

  void Swap(RouteHead* other);

  // implements Message ----------------------------------------------

  inline RouteHead* New() const { return New(NULL); }

  RouteHead* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RouteHead& from);
  void MergeFrom(const RouteHead& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RouteHead* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 from_id = 1;
  bool has_from_id() const;
  void clear_from_id();
  static const int kFromIdFieldNumber = 1;
  ::google::protobuf::int32 from_id() const;
  void set_from_id(::google::protobuf::int32 value);

  // required int32 to_id = 2;
  bool has_to_id() const;
  void clear_to_id();
  static const int kToIdFieldNumber = 2;
  ::google::protobuf::int32 to_id() const;
  void set_to_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg_maj.RouteHead)
 private:
  inline void set_has_from_id();
  inline void clear_has_from_id();
  inline void set_has_to_id();
  inline void clear_has_to_id();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 from_id_;
  ::google::protobuf::int32 to_id_;
  friend void  protobuf_AddDesc_msg_5fss_2eproto();
  friend void protobuf_AssignDesc_msg_5fss_2eproto();
  friend void protobuf_ShutdownFile_msg_5fss_2eproto();

  void InitAsDefaultInstance();
  static RouteHead* default_instance_;
};
// -------------------------------------------------------------------

class TransterToSceneReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.TransterToSceneReq) */ {
 public:
  TransterToSceneReq();
  virtual ~TransterToSceneReq();

  TransterToSceneReq(const TransterToSceneReq& from);

  inline TransterToSceneReq& operator=(const TransterToSceneReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TransterToSceneReq& default_instance();

  void Swap(TransterToSceneReq* other);

  // implements Message ----------------------------------------------

  inline TransterToSceneReq* New() const { return New(NULL); }

  TransterToSceneReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TransterToSceneReq& from);
  void MergeFrom(const TransterToSceneReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TransterToSceneReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 from_id = 1;
  bool has_from_id() const;
  void clear_from_id();
  static const int kFromIdFieldNumber = 1;
  ::google::protobuf::int32 from_id() const;
  void set_from_id(::google::protobuf::int32 value);

  // required int32 to_id = 2;
  bool has_to_id() const;
  void clear_to_id();
  static const int kToIdFieldNumber = 2;
  ::google::protobuf::int32 to_id() const;
  void set_to_id(::google::protobuf::int32 value);

  // repeated .msg_maj.Role role_list = 3;
  int role_list_size() const;
  void clear_role_list();
  static const int kRoleListFieldNumber = 3;
  const ::msg_maj::Role& role_list(int index) const;
  ::msg_maj::Role* mutable_role_list(int index);
  ::msg_maj::Role* add_role_list();
  ::google::protobuf::RepeatedPtrField< ::msg_maj::Role >*
      mutable_role_list();
  const ::google::protobuf::RepeatedPtrField< ::msg_maj::Role >&
      role_list() const;

  // @@protoc_insertion_point(class_scope:msg_maj.TransterToSceneReq)
 private:
  inline void set_has_from_id();
  inline void clear_has_from_id();
  inline void set_has_to_id();
  inline void clear_has_to_id();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 from_id_;
  ::google::protobuf::int32 to_id_;
  ::google::protobuf::RepeatedPtrField< ::msg_maj::Role > role_list_;
  friend void  protobuf_AddDesc_msg_5fss_2eproto();
  friend void protobuf_AssignDesc_msg_5fss_2eproto();
  friend void protobuf_ShutdownFile_msg_5fss_2eproto();

  void InitAsDefaultInstance();
  static TransterToSceneReq* default_instance_;
};
// -------------------------------------------------------------------

class TransterToSceneResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.TransterToSceneResp) */ {
 public:
  TransterToSceneResp();
  virtual ~TransterToSceneResp();

  TransterToSceneResp(const TransterToSceneResp& from);

  inline TransterToSceneResp& operator=(const TransterToSceneResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TransterToSceneResp& default_instance();

  void Swap(TransterToSceneResp* other);

  // implements Message ----------------------------------------------

  inline TransterToSceneResp* New() const { return New(NULL); }

  TransterToSceneResp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TransterToSceneResp& from);
  void MergeFrom(const TransterToSceneResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TransterToSceneResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg_maj.RouteHead head = 1;
  bool has_head() const;
  void clear_head();
  static const int kHeadFieldNumber = 1;
  const ::msg_maj::RouteHead& head() const;
  ::msg_maj::RouteHead* mutable_head();
  ::msg_maj::RouteHead* release_head();
  void set_allocated_head(::msg_maj::RouteHead* head);

  // @@protoc_insertion_point(class_scope:msg_maj.TransterToSceneResp)
 private:
  inline void set_has_head();
  inline void clear_has_head();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg_maj::RouteHead* head_;
  friend void  protobuf_AddDesc_msg_5fss_2eproto();
  friend void protobuf_AssignDesc_msg_5fss_2eproto();
  friend void protobuf_ShutdownFile_msg_5fss_2eproto();

  void InitAsDefaultInstance();
  static TransterToSceneResp* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginToScene

// optional uint64 uid = 1;
inline bool LoginToScene::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginToScene::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginToScene::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginToScene::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 LoginToScene::uid() const {
  // @@protoc_insertion_point(field_get:msg_maj.LoginToScene.uid)
  return uid_;
}
inline void LoginToScene::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.LoginToScene.uid)
}

// optional bool repeat_login = 2;
inline bool LoginToScene::has_repeat_login() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginToScene::set_has_repeat_login() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginToScene::clear_has_repeat_login() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginToScene::clear_repeat_login() {
  repeat_login_ = false;
  clear_has_repeat_login();
}
inline bool LoginToScene::repeat_login() const {
  // @@protoc_insertion_point(field_get:msg_maj.LoginToScene.repeat_login)
  return repeat_login_;
}
inline void LoginToScene::set_repeat_login(bool value) {
  set_has_repeat_login();
  repeat_login_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.LoginToScene.repeat_login)
}

// optional uint32 new_session_id = 3;
inline bool LoginToScene::has_new_session_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoginToScene::set_has_new_session_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LoginToScene::clear_has_new_session_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LoginToScene::clear_new_session_id() {
  new_session_id_ = 0u;
  clear_has_new_session_id();
}
inline ::google::protobuf::uint32 LoginToScene::new_session_id() const {
  // @@protoc_insertion_point(field_get:msg_maj.LoginToScene.new_session_id)
  return new_session_id_;
}
inline void LoginToScene::set_new_session_id(::google::protobuf::uint32 value) {
  set_has_new_session_id();
  new_session_id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.LoginToScene.new_session_id)
}

// optional uint32 join_room_id = 4;
inline bool LoginToScene::has_join_room_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LoginToScene::set_has_join_room_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LoginToScene::clear_has_join_room_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LoginToScene::clear_join_room_id() {
  join_room_id_ = 0u;
  clear_has_join_room_id();
}
inline ::google::protobuf::uint32 LoginToScene::join_room_id() const {
  // @@protoc_insertion_point(field_get:msg_maj.LoginToScene.join_room_id)
  return join_room_id_;
}
inline void LoginToScene::set_join_room_id(::google::protobuf::uint32 value) {
  set_has_join_room_id();
  join_room_id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.LoginToScene.join_room_id)
}

// -------------------------------------------------------------------

// LoginToken

// optional string openid = 1;
inline bool LoginToken::has_openid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginToken::set_has_openid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginToken::clear_has_openid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginToken::clear_openid() {
  openid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_openid();
}
inline const ::std::string& LoginToken::openid() const {
  // @@protoc_insertion_point(field_get:msg_maj.LoginToken.openid)
  return openid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginToken::set_openid(const ::std::string& value) {
  set_has_openid();
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.LoginToken.openid)
}
inline void LoginToken::set_openid(const char* value) {
  set_has_openid();
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.LoginToken.openid)
}
inline void LoginToken::set_openid(const char* value, size_t size) {
  set_has_openid();
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.LoginToken.openid)
}
inline ::std::string* LoginToken::mutable_openid() {
  set_has_openid();
  // @@protoc_insertion_point(field_mutable:msg_maj.LoginToken.openid)
  return openid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginToken::release_openid() {
  // @@protoc_insertion_point(field_release:msg_maj.LoginToken.openid)
  clear_has_openid();
  return openid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginToken::set_allocated_openid(::std::string* openid) {
  if (openid != NULL) {
    set_has_openid();
  } else {
    clear_has_openid();
  }
  openid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), openid);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.LoginToken.openid)
}

// optional string nickname = 2;
inline bool LoginToken::has_nickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginToken::set_has_nickname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginToken::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginToken::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& LoginToken::nickname() const {
  // @@protoc_insertion_point(field_get:msg_maj.LoginToken.nickname)
  return nickname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginToken::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.LoginToken.nickname)
}
inline void LoginToken::set_nickname(const char* value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.LoginToken.nickname)
}
inline void LoginToken::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.LoginToken.nickname)
}
inline ::std::string* LoginToken::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:msg_maj.LoginToken.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginToken::release_nickname() {
  // @@protoc_insertion_point(field_release:msg_maj.LoginToken.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginToken::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.LoginToken.nickname)
}

// optional int32 sex = 3;
inline bool LoginToken::has_sex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoginToken::set_has_sex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LoginToken::clear_has_sex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LoginToken::clear_sex() {
  sex_ = 0;
  clear_has_sex();
}
inline ::google::protobuf::int32 LoginToken::sex() const {
  // @@protoc_insertion_point(field_get:msg_maj.LoginToken.sex)
  return sex_;
}
inline void LoginToken::set_sex(::google::protobuf::int32 value) {
  set_has_sex();
  sex_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.LoginToken.sex)
}

// optional string province = 4;
inline bool LoginToken::has_province() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LoginToken::set_has_province() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LoginToken::clear_has_province() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LoginToken::clear_province() {
  province_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_province();
}
inline const ::std::string& LoginToken::province() const {
  // @@protoc_insertion_point(field_get:msg_maj.LoginToken.province)
  return province_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginToken::set_province(const ::std::string& value) {
  set_has_province();
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.LoginToken.province)
}
inline void LoginToken::set_province(const char* value) {
  set_has_province();
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.LoginToken.province)
}
inline void LoginToken::set_province(const char* value, size_t size) {
  set_has_province();
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.LoginToken.province)
}
inline ::std::string* LoginToken::mutable_province() {
  set_has_province();
  // @@protoc_insertion_point(field_mutable:msg_maj.LoginToken.province)
  return province_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginToken::release_province() {
  // @@protoc_insertion_point(field_release:msg_maj.LoginToken.province)
  clear_has_province();
  return province_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginToken::set_allocated_province(::std::string* province) {
  if (province != NULL) {
    set_has_province();
  } else {
    clear_has_province();
  }
  province_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), province);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.LoginToken.province)
}

// optional string city = 5;
inline bool LoginToken::has_city() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LoginToken::set_has_city() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LoginToken::clear_has_city() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LoginToken::clear_city() {
  city_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_city();
}
inline const ::std::string& LoginToken::city() const {
  // @@protoc_insertion_point(field_get:msg_maj.LoginToken.city)
  return city_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginToken::set_city(const ::std::string& value) {
  set_has_city();
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.LoginToken.city)
}
inline void LoginToken::set_city(const char* value) {
  set_has_city();
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.LoginToken.city)
}
inline void LoginToken::set_city(const char* value, size_t size) {
  set_has_city();
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.LoginToken.city)
}
inline ::std::string* LoginToken::mutable_city() {
  set_has_city();
  // @@protoc_insertion_point(field_mutable:msg_maj.LoginToken.city)
  return city_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginToken::release_city() {
  // @@protoc_insertion_point(field_release:msg_maj.LoginToken.city)
  clear_has_city();
  return city_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginToken::set_allocated_city(::std::string* city) {
  if (city != NULL) {
    set_has_city();
  } else {
    clear_has_city();
  }
  city_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), city);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.LoginToken.city)
}

// optional string country = 6;
inline bool LoginToken::has_country() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LoginToken::set_has_country() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LoginToken::clear_has_country() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LoginToken::clear_country() {
  country_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_country();
}
inline const ::std::string& LoginToken::country() const {
  // @@protoc_insertion_point(field_get:msg_maj.LoginToken.country)
  return country_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginToken::set_country(const ::std::string& value) {
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.LoginToken.country)
}
inline void LoginToken::set_country(const char* value) {
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.LoginToken.country)
}
inline void LoginToken::set_country(const char* value, size_t size) {
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.LoginToken.country)
}
inline ::std::string* LoginToken::mutable_country() {
  set_has_country();
  // @@protoc_insertion_point(field_mutable:msg_maj.LoginToken.country)
  return country_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginToken::release_country() {
  // @@protoc_insertion_point(field_release:msg_maj.LoginToken.country)
  clear_has_country();
  return country_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginToken::set_allocated_country(::std::string* country) {
  if (country != NULL) {
    set_has_country();
  } else {
    clear_has_country();
  }
  country_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), country);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.LoginToken.country)
}

// optional string headimgurl = 7;
inline bool LoginToken::has_headimgurl() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LoginToken::set_has_headimgurl() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LoginToken::clear_has_headimgurl() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LoginToken::clear_headimgurl() {
  headimgurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_headimgurl();
}
inline const ::std::string& LoginToken::headimgurl() const {
  // @@protoc_insertion_point(field_get:msg_maj.LoginToken.headimgurl)
  return headimgurl_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginToken::set_headimgurl(const ::std::string& value) {
  set_has_headimgurl();
  headimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.LoginToken.headimgurl)
}
inline void LoginToken::set_headimgurl(const char* value) {
  set_has_headimgurl();
  headimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.LoginToken.headimgurl)
}
inline void LoginToken::set_headimgurl(const char* value, size_t size) {
  set_has_headimgurl();
  headimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.LoginToken.headimgurl)
}
inline ::std::string* LoginToken::mutable_headimgurl() {
  set_has_headimgurl();
  // @@protoc_insertion_point(field_mutable:msg_maj.LoginToken.headimgurl)
  return headimgurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginToken::release_headimgurl() {
  // @@protoc_insertion_point(field_release:msg_maj.LoginToken.headimgurl)
  clear_has_headimgurl();
  return headimgurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginToken::set_allocated_headimgurl(::std::string* headimgurl) {
  if (headimgurl != NULL) {
    set_has_headimgurl();
  } else {
    clear_has_headimgurl();
  }
  headimgurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), headimgurl);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.LoginToken.headimgurl)
}

// optional string unionid = 8;
inline bool LoginToken::has_unionid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void LoginToken::set_has_unionid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void LoginToken::clear_has_unionid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void LoginToken::clear_unionid() {
  unionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_unionid();
}
inline const ::std::string& LoginToken::unionid() const {
  // @@protoc_insertion_point(field_get:msg_maj.LoginToken.unionid)
  return unionid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginToken::set_unionid(const ::std::string& value) {
  set_has_unionid();
  unionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.LoginToken.unionid)
}
inline void LoginToken::set_unionid(const char* value) {
  set_has_unionid();
  unionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.LoginToken.unionid)
}
inline void LoginToken::set_unionid(const char* value, size_t size) {
  set_has_unionid();
  unionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.LoginToken.unionid)
}
inline ::std::string* LoginToken::mutable_unionid() {
  set_has_unionid();
  // @@protoc_insertion_point(field_mutable:msg_maj.LoginToken.unionid)
  return unionid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginToken::release_unionid() {
  // @@protoc_insertion_point(field_release:msg_maj.LoginToken.unionid)
  clear_has_unionid();
  return unionid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginToken::set_allocated_unionid(::std::string* unionid) {
  if (unionid != NULL) {
    set_has_unionid();
  } else {
    clear_has_unionid();
  }
  unionid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), unionid);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.LoginToken.unionid)
}

// optional string ip = 9;
inline bool LoginToken::has_ip() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void LoginToken::set_has_ip() {
  _has_bits_[0] |= 0x00000100u;
}
inline void LoginToken::clear_has_ip() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void LoginToken::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip();
}
inline const ::std::string& LoginToken::ip() const {
  // @@protoc_insertion_point(field_get:msg_maj.LoginToken.ip)
  return ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginToken::set_ip(const ::std::string& value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.LoginToken.ip)
}
inline void LoginToken::set_ip(const char* value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.LoginToken.ip)
}
inline void LoginToken::set_ip(const char* value, size_t size) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.LoginToken.ip)
}
inline ::std::string* LoginToken::mutable_ip() {
  set_has_ip();
  // @@protoc_insertion_point(field_mutable:msg_maj.LoginToken.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginToken::release_ip() {
  // @@protoc_insertion_point(field_release:msg_maj.LoginToken.ip)
  clear_has_ip();
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginToken::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    set_has_ip();
  } else {
    clear_has_ip();
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.LoginToken.ip)
}

// -------------------------------------------------------------------

// LoginTokenNotify

// optional .msg_maj.LoginToken acctoken = 1;
inline bool LoginTokenNotify::has_acctoken() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginTokenNotify::set_has_acctoken() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginTokenNotify::clear_has_acctoken() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginTokenNotify::clear_acctoken() {
  if (acctoken_ != NULL) acctoken_->::msg_maj::LoginToken::Clear();
  clear_has_acctoken();
}
inline const ::msg_maj::LoginToken& LoginTokenNotify::acctoken() const {
  // @@protoc_insertion_point(field_get:msg_maj.LoginTokenNotify.acctoken)
  return acctoken_ != NULL ? *acctoken_ : *default_instance_->acctoken_;
}
inline ::msg_maj::LoginToken* LoginTokenNotify::mutable_acctoken() {
  set_has_acctoken();
  if (acctoken_ == NULL) {
    acctoken_ = new ::msg_maj::LoginToken;
  }
  // @@protoc_insertion_point(field_mutable:msg_maj.LoginTokenNotify.acctoken)
  return acctoken_;
}
inline ::msg_maj::LoginToken* LoginTokenNotify::release_acctoken() {
  // @@protoc_insertion_point(field_release:msg_maj.LoginTokenNotify.acctoken)
  clear_has_acctoken();
  ::msg_maj::LoginToken* temp = acctoken_;
  acctoken_ = NULL;
  return temp;
}
inline void LoginTokenNotify::set_allocated_acctoken(::msg_maj::LoginToken* acctoken) {
  delete acctoken_;
  acctoken_ = acctoken;
  if (acctoken) {
    set_has_acctoken();
  } else {
    clear_has_acctoken();
  }
  // @@protoc_insertion_point(field_set_allocated:msg_maj.LoginTokenNotify.acctoken)
}

// -------------------------------------------------------------------

// KickSession

// optional uint64 session_id = 1;
inline bool KickSession::has_session_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KickSession::set_has_session_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KickSession::clear_has_session_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KickSession::clear_session_id() {
  session_id_ = GOOGLE_ULONGLONG(0);
  clear_has_session_id();
}
inline ::google::protobuf::uint64 KickSession::session_id() const {
  // @@protoc_insertion_point(field_get:msg_maj.KickSession.session_id)
  return session_id_;
}
inline void KickSession::set_session_id(::google::protobuf::uint64 value) {
  set_has_session_id();
  session_id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.KickSession.session_id)
}

// -------------------------------------------------------------------

// ReqRobotJoinRoom

// optional int32 room_id = 1;
inline bool ReqRobotJoinRoom::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqRobotJoinRoom::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqRobotJoinRoom::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqRobotJoinRoom::clear_room_id() {
  room_id_ = 0;
  clear_has_room_id();
}
inline ::google::protobuf::int32 ReqRobotJoinRoom::room_id() const {
  // @@protoc_insertion_point(field_get:msg_maj.ReqRobotJoinRoom.room_id)
  return room_id_;
}
inline void ReqRobotJoinRoom::set_room_id(::google::protobuf::int32 value) {
  set_has_room_id();
  room_id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.ReqRobotJoinRoom.room_id)
}

// -------------------------------------------------------------------

// ServerBrepairingNotify

// optional int32 status = 1;
inline bool ServerBrepairingNotify::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServerBrepairingNotify::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServerBrepairingNotify::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServerBrepairingNotify::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 ServerBrepairingNotify::status() const {
  // @@protoc_insertion_point(field_get:msg_maj.ServerBrepairingNotify.status)
  return status_;
}
inline void ServerBrepairingNotify::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.ServerBrepairingNotify.status)
}

// -------------------------------------------------------------------

// RouteHead

// required int32 from_id = 1;
inline bool RouteHead::has_from_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RouteHead::set_has_from_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RouteHead::clear_has_from_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RouteHead::clear_from_id() {
  from_id_ = 0;
  clear_has_from_id();
}
inline ::google::protobuf::int32 RouteHead::from_id() const {
  // @@protoc_insertion_point(field_get:msg_maj.RouteHead.from_id)
  return from_id_;
}
inline void RouteHead::set_from_id(::google::protobuf::int32 value) {
  set_has_from_id();
  from_id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RouteHead.from_id)
}

// required int32 to_id = 2;
inline bool RouteHead::has_to_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RouteHead::set_has_to_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RouteHead::clear_has_to_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RouteHead::clear_to_id() {
  to_id_ = 0;
  clear_has_to_id();
}
inline ::google::protobuf::int32 RouteHead::to_id() const {
  // @@protoc_insertion_point(field_get:msg_maj.RouteHead.to_id)
  return to_id_;
}
inline void RouteHead::set_to_id(::google::protobuf::int32 value) {
  set_has_to_id();
  to_id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RouteHead.to_id)
}

// -------------------------------------------------------------------

// TransterToSceneReq

// required int32 from_id = 1;
inline bool TransterToSceneReq::has_from_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TransterToSceneReq::set_has_from_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TransterToSceneReq::clear_has_from_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TransterToSceneReq::clear_from_id() {
  from_id_ = 0;
  clear_has_from_id();
}
inline ::google::protobuf::int32 TransterToSceneReq::from_id() const {
  // @@protoc_insertion_point(field_get:msg_maj.TransterToSceneReq.from_id)
  return from_id_;
}
inline void TransterToSceneReq::set_from_id(::google::protobuf::int32 value) {
  set_has_from_id();
  from_id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.TransterToSceneReq.from_id)
}

// required int32 to_id = 2;
inline bool TransterToSceneReq::has_to_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TransterToSceneReq::set_has_to_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TransterToSceneReq::clear_has_to_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TransterToSceneReq::clear_to_id() {
  to_id_ = 0;
  clear_has_to_id();
}
inline ::google::protobuf::int32 TransterToSceneReq::to_id() const {
  // @@protoc_insertion_point(field_get:msg_maj.TransterToSceneReq.to_id)
  return to_id_;
}
inline void TransterToSceneReq::set_to_id(::google::protobuf::int32 value) {
  set_has_to_id();
  to_id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.TransterToSceneReq.to_id)
}

// repeated .msg_maj.Role role_list = 3;
inline int TransterToSceneReq::role_list_size() const {
  return role_list_.size();
}
inline void TransterToSceneReq::clear_role_list() {
  role_list_.Clear();
}
inline const ::msg_maj::Role& TransterToSceneReq::role_list(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.TransterToSceneReq.role_list)
  return role_list_.Get(index);
}
inline ::msg_maj::Role* TransterToSceneReq::mutable_role_list(int index) {
  // @@protoc_insertion_point(field_mutable:msg_maj.TransterToSceneReq.role_list)
  return role_list_.Mutable(index);
}
inline ::msg_maj::Role* TransterToSceneReq::add_role_list() {
  // @@protoc_insertion_point(field_add:msg_maj.TransterToSceneReq.role_list)
  return role_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::msg_maj::Role >*
TransterToSceneReq::mutable_role_list() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.TransterToSceneReq.role_list)
  return &role_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::msg_maj::Role >&
TransterToSceneReq::role_list() const {
  // @@protoc_insertion_point(field_list:msg_maj.TransterToSceneReq.role_list)
  return role_list_;
}

// -------------------------------------------------------------------

// TransterToSceneResp

// optional .msg_maj.RouteHead head = 1;
inline bool TransterToSceneResp::has_head() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TransterToSceneResp::set_has_head() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TransterToSceneResp::clear_has_head() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TransterToSceneResp::clear_head() {
  if (head_ != NULL) head_->::msg_maj::RouteHead::Clear();
  clear_has_head();
}
inline const ::msg_maj::RouteHead& TransterToSceneResp::head() const {
  // @@protoc_insertion_point(field_get:msg_maj.TransterToSceneResp.head)
  return head_ != NULL ? *head_ : *default_instance_->head_;
}
inline ::msg_maj::RouteHead* TransterToSceneResp::mutable_head() {
  set_has_head();
  if (head_ == NULL) {
    head_ = new ::msg_maj::RouteHead;
  }
  // @@protoc_insertion_point(field_mutable:msg_maj.TransterToSceneResp.head)
  return head_;
}
inline ::msg_maj::RouteHead* TransterToSceneResp::release_head() {
  // @@protoc_insertion_point(field_release:msg_maj.TransterToSceneResp.head)
  clear_has_head();
  ::msg_maj::RouteHead* temp = head_;
  head_ = NULL;
  return temp;
}
inline void TransterToSceneResp::set_allocated_head(::msg_maj::RouteHead* head) {
  delete head_;
  head_ = head;
  if (head) {
    set_has_head();
  } else {
    clear_has_head();
  }
  // @@protoc_insertion_point(field_set_allocated:msg_maj.TransterToSceneResp.head)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace msg_maj

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::msg_maj::c_cmd_ss> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg_maj::c_cmd_ss>() {
  return ::msg_maj::c_cmd_ss_descriptor();
}
template <> struct is_proto_enum< ::msg_maj::RouteType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg_maj::RouteType>() {
  return ::msg_maj::RouteType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_msg_5fss_2eproto__INCLUDED
