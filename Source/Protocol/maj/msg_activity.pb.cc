// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_activity.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "msg_activity.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace msg_maj {

namespace {

const ::google::protobuf::Descriptor* GetShareInfoReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetShareInfoReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetShareInfoResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetShareInfoResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* ShareReportReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ShareReportReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ShareReportResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ShareReportResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* RecvShareRewardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RecvShareRewardReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* RecvShareRewardResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RecvShareRewardResp_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* RecvShareRewardResp_ErrorCode_descriptor_ = NULL;
const ::google::protobuf::Descriptor* GetInvitationInfoReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetInvitationInfoReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetInvitationInfoResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetInvitationInfoResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* RecvInvitationRewardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RecvInvitationRewardReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* RecvInvitationRewardResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RecvInvitationRewardResp_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* RecvInvitationRewardResp_ErrorCode_descriptor_ = NULL;
const ::google::protobuf::Descriptor* GetBindingAgentInfoReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetBindingAgentInfoReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetBindingAgentInfoResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetBindingAgentInfoResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* BindingAgentReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BindingAgentReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* BindingAgentResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BindingAgentResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* SyncActivityInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SyncActivityInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* InputInvitationCodeReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InputInvitationCodeReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* InputInvitationCodeResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InputInvitationCodeResp_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* c_cmd_activity_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_msg_5factivity_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_msg_5factivity_2eproto() {
  protobuf_AddDesc_msg_5factivity_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "msg_activity.proto");
  GOOGLE_CHECK(file != NULL);
  GetShareInfoReq_descriptor_ = file->message_type(0);
  static const int GetShareInfoReq_offsets_[1] = {
  };
  GetShareInfoReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetShareInfoReq_descriptor_,
      GetShareInfoReq::default_instance_,
      GetShareInfoReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetShareInfoReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(GetShareInfoReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetShareInfoReq, _internal_metadata_),
      -1);
  GetShareInfoResp_descriptor_ = file->message_type(1);
  static const int GetShareInfoResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetShareInfoResp, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetShareInfoResp, room_card_),
  };
  GetShareInfoResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetShareInfoResp_descriptor_,
      GetShareInfoResp::default_instance_,
      GetShareInfoResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetShareInfoResp, _has_bits_[0]),
      -1,
      -1,
      sizeof(GetShareInfoResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetShareInfoResp, _internal_metadata_),
      -1);
  ShareReportReq_descriptor_ = file->message_type(2);
  static const int ShareReportReq_offsets_[1] = {
  };
  ShareReportReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ShareReportReq_descriptor_,
      ShareReportReq::default_instance_,
      ShareReportReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShareReportReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(ShareReportReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShareReportReq, _internal_metadata_),
      -1);
  ShareReportResp_descriptor_ = file->message_type(3);
  static const int ShareReportResp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShareReportResp, share_status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShareReportResp, today_status1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShareReportResp, today_status2_),
  };
  ShareReportResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ShareReportResp_descriptor_,
      ShareReportResp::default_instance_,
      ShareReportResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShareReportResp, _has_bits_[0]),
      -1,
      -1,
      sizeof(ShareReportResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShareReportResp, _internal_metadata_),
      -1);
  RecvShareRewardReq_descriptor_ = file->message_type(4);
  static const int RecvShareRewardReq_offsets_[1] = {
  };
  RecvShareRewardReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RecvShareRewardReq_descriptor_,
      RecvShareRewardReq::default_instance_,
      RecvShareRewardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecvShareRewardReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(RecvShareRewardReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecvShareRewardReq, _internal_metadata_),
      -1);
  RecvShareRewardResp_descriptor_ = file->message_type(5);
  static const int RecvShareRewardResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecvShareRewardResp, code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecvShareRewardResp, status_),
  };
  RecvShareRewardResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RecvShareRewardResp_descriptor_,
      RecvShareRewardResp::default_instance_,
      RecvShareRewardResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecvShareRewardResp, _has_bits_[0]),
      -1,
      -1,
      sizeof(RecvShareRewardResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecvShareRewardResp, _internal_metadata_),
      -1);
  RecvShareRewardResp_ErrorCode_descriptor_ = RecvShareRewardResp_descriptor_->enum_type(0);
  GetInvitationInfoReq_descriptor_ = file->message_type(6);
  static const int GetInvitationInfoReq_offsets_[1] = {
  };
  GetInvitationInfoReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetInvitationInfoReq_descriptor_,
      GetInvitationInfoReq::default_instance_,
      GetInvitationInfoReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetInvitationInfoReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(GetInvitationInfoReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetInvitationInfoReq, _internal_metadata_),
      -1);
  GetInvitationInfoResp_descriptor_ = file->message_type(7);
  static const int GetInvitationInfoResp_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetInvitationInfoResp, inv_friend_room_card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetInvitationInfoResp, has_inv_friend_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetInvitationInfoResp, has_get_room_card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetInvitationInfoResp, can_get_room_card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetInvitationInfoResp, invitation_player_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetInvitationInfoResp, need_player_games_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetInvitationInfoResp, reward_room_card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetInvitationInfoResp, recv_reward_status_),
  };
  GetInvitationInfoResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetInvitationInfoResp_descriptor_,
      GetInvitationInfoResp::default_instance_,
      GetInvitationInfoResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetInvitationInfoResp, _has_bits_[0]),
      -1,
      -1,
      sizeof(GetInvitationInfoResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetInvitationInfoResp, _internal_metadata_),
      -1);
  RecvInvitationRewardReq_descriptor_ = file->message_type(8);
  static const int RecvInvitationRewardReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecvInvitationRewardReq, reward_type_),
  };
  RecvInvitationRewardReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RecvInvitationRewardReq_descriptor_,
      RecvInvitationRewardReq::default_instance_,
      RecvInvitationRewardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecvInvitationRewardReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(RecvInvitationRewardReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecvInvitationRewardReq, _internal_metadata_),
      -1);
  RecvInvitationRewardResp_descriptor_ = file->message_type(9);
  static const int RecvInvitationRewardResp_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecvInvitationRewardResp, code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecvInvitationRewardResp, reward_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecvInvitationRewardResp, has_get_room_card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecvInvitationRewardResp, can_get_room_card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecvInvitationRewardResp, recv_reward_status_),
  };
  RecvInvitationRewardResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RecvInvitationRewardResp_descriptor_,
      RecvInvitationRewardResp::default_instance_,
      RecvInvitationRewardResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecvInvitationRewardResp, _has_bits_[0]),
      -1,
      -1,
      sizeof(RecvInvitationRewardResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecvInvitationRewardResp, _internal_metadata_),
      -1);
  RecvInvitationRewardResp_ErrorCode_descriptor_ = RecvInvitationRewardResp_descriptor_->enum_type(0);
  GetBindingAgentInfoReq_descriptor_ = file->message_type(10);
  static const int GetBindingAgentInfoReq_offsets_[1] = {
  };
  GetBindingAgentInfoReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetBindingAgentInfoReq_descriptor_,
      GetBindingAgentInfoReq::default_instance_,
      GetBindingAgentInfoReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBindingAgentInfoReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(GetBindingAgentInfoReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBindingAgentInfoReq, _internal_metadata_),
      -1);
  GetBindingAgentInfoResp_descriptor_ = file->message_type(11);
  static const int GetBindingAgentInfoResp_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBindingAgentInfoResp, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBindingAgentInfoResp, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBindingAgentInfoResp, wx_account_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBindingAgentInfoResp, icon_),
  };
  GetBindingAgentInfoResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetBindingAgentInfoResp_descriptor_,
      GetBindingAgentInfoResp::default_instance_,
      GetBindingAgentInfoResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBindingAgentInfoResp, _has_bits_[0]),
      -1,
      -1,
      sizeof(GetBindingAgentInfoResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBindingAgentInfoResp, _internal_metadata_),
      -1);
  BindingAgentReq_descriptor_ = file->message_type(12);
  static const int BindingAgentReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindingAgentReq, user_id_),
  };
  BindingAgentReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BindingAgentReq_descriptor_,
      BindingAgentReq::default_instance_,
      BindingAgentReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindingAgentReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(BindingAgentReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindingAgentReq, _internal_metadata_),
      -1);
  BindingAgentResp_descriptor_ = file->message_type(13);
  static const int BindingAgentResp_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindingAgentResp, code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindingAgentResp, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindingAgentResp, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindingAgentResp, wx_account_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindingAgentResp, icon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindingAgentResp, code_info_),
  };
  BindingAgentResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BindingAgentResp_descriptor_,
      BindingAgentResp::default_instance_,
      BindingAgentResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindingAgentResp, _has_bits_[0]),
      -1,
      -1,
      sizeof(BindingAgentResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindingAgentResp, _internal_metadata_),
      -1);
  SyncActivityInfo_descriptor_ = file->message_type(14);
  static const int SyncActivityInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncActivityInfo, share_status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncActivityInfo, inv_can_get_room_card_),
  };
  SyncActivityInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SyncActivityInfo_descriptor_,
      SyncActivityInfo::default_instance_,
      SyncActivityInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncActivityInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(SyncActivityInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncActivityInfo, _internal_metadata_),
      -1);
  InputInvitationCodeReq_descriptor_ = file->message_type(15);
  static const int InputInvitationCodeReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputInvitationCodeReq, invitation_code_),
  };
  InputInvitationCodeReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      InputInvitationCodeReq_descriptor_,
      InputInvitationCodeReq::default_instance_,
      InputInvitationCodeReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputInvitationCodeReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(InputInvitationCodeReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputInvitationCodeReq, _internal_metadata_),
      -1);
  InputInvitationCodeResp_descriptor_ = file->message_type(16);
  static const int InputInvitationCodeResp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputInvitationCodeResp, code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputInvitationCodeResp, reward_room_card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputInvitationCodeResp, code_info_),
  };
  InputInvitationCodeResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      InputInvitationCodeResp_descriptor_,
      InputInvitationCodeResp::default_instance_,
      InputInvitationCodeResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputInvitationCodeResp, _has_bits_[0]),
      -1,
      -1,
      sizeof(InputInvitationCodeResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputInvitationCodeResp, _internal_metadata_),
      -1);
  c_cmd_activity_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_msg_5factivity_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetShareInfoReq_descriptor_, &GetShareInfoReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetShareInfoResp_descriptor_, &GetShareInfoResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ShareReportReq_descriptor_, &ShareReportReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ShareReportResp_descriptor_, &ShareReportResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RecvShareRewardReq_descriptor_, &RecvShareRewardReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RecvShareRewardResp_descriptor_, &RecvShareRewardResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetInvitationInfoReq_descriptor_, &GetInvitationInfoReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetInvitationInfoResp_descriptor_, &GetInvitationInfoResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RecvInvitationRewardReq_descriptor_, &RecvInvitationRewardReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RecvInvitationRewardResp_descriptor_, &RecvInvitationRewardResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetBindingAgentInfoReq_descriptor_, &GetBindingAgentInfoReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetBindingAgentInfoResp_descriptor_, &GetBindingAgentInfoResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BindingAgentReq_descriptor_, &BindingAgentReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BindingAgentResp_descriptor_, &BindingAgentResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SyncActivityInfo_descriptor_, &SyncActivityInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      InputInvitationCodeReq_descriptor_, &InputInvitationCodeReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      InputInvitationCodeResp_descriptor_, &InputInvitationCodeResp::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_msg_5factivity_2eproto() {
  delete GetShareInfoReq::default_instance_;
  delete GetShareInfoReq_reflection_;
  delete GetShareInfoResp::default_instance_;
  delete GetShareInfoResp_reflection_;
  delete ShareReportReq::default_instance_;
  delete ShareReportReq_reflection_;
  delete ShareReportResp::default_instance_;
  delete ShareReportResp_reflection_;
  delete RecvShareRewardReq::default_instance_;
  delete RecvShareRewardReq_reflection_;
  delete RecvShareRewardResp::default_instance_;
  delete RecvShareRewardResp_reflection_;
  delete GetInvitationInfoReq::default_instance_;
  delete GetInvitationInfoReq_reflection_;
  delete GetInvitationInfoResp::default_instance_;
  delete GetInvitationInfoResp_reflection_;
  delete RecvInvitationRewardReq::default_instance_;
  delete RecvInvitationRewardReq_reflection_;
  delete RecvInvitationRewardResp::default_instance_;
  delete RecvInvitationRewardResp_reflection_;
  delete GetBindingAgentInfoReq::default_instance_;
  delete GetBindingAgentInfoReq_reflection_;
  delete GetBindingAgentInfoResp::default_instance_;
  delete GetBindingAgentInfoResp_reflection_;
  delete BindingAgentReq::default_instance_;
  delete BindingAgentReq_reflection_;
  delete BindingAgentResp::default_instance_;
  delete BindingAgentResp_reflection_;
  delete SyncActivityInfo::default_instance_;
  delete SyncActivityInfo_reflection_;
  delete InputInvitationCodeReq::default_instance_;
  delete InputInvitationCodeReq_reflection_;
  delete InputInvitationCodeResp::default_instance_;
  delete InputInvitationCodeResp_reflection_;
}

void protobuf_AddDesc_msg_5factivity_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_msg_5factivity_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022msg_activity.proto\022\007msg_maj\"\021\n\017GetShar"
    "eInfoReq\"5\n\020GetShareInfoResp\022\016\n\006status\030\001"
    " \001(\r\022\021\n\troom_card\030\002 \001(\r\"\020\n\016ShareReportRe"
    "q\"U\n\017ShareReportResp\022\024\n\014share_status\030\001 \001"
    "(\r\022\025\n\rtoday_status1\030\002 \001(\r\022\025\n\rtoday_statu"
    "s2\030\003 \001(\r\"\024\n\022RecvShareRewardReq\"\177\n\023RecvSh"
    "areRewardResp\0224\n\004code\030\001 \002(\0162&.msg_maj.Re"
    "cvShareRewardResp.ErrorCode\022\016\n\006status\030\002 "
    "\001(\r\"\"\n\tErrorCode\022\013\n\007SUCCESS\020\001\022\010\n\004FAIL\020\002\""
    "\026\n\024GetInvitationInfoReq\"\363\001\n\025GetInvitatio"
    "nInfoResp\022\034\n\024inv_friend_room_card\030\001 \001(\r\022"
    "\032\n\022has_inv_friend_num\030\002 \001(\r\022\031\n\021has_get_r"
    "oom_card\030\003 \001(\r\022\031\n\021can_get_room_card\030\004 \001("
    "\r\022\031\n\021invitation_player\030\005 \001(\t\022\031\n\021need_pla"
    "yer_games\030\006 \001(\r\022\030\n\020reward_room_card\030\007 \001("
    "\r\022\032\n\022recv_reward_status\030\010 \001(\r\".\n\027RecvInv"
    "itationRewardReq\022\023\n\013reward_type\030\001 \001(\r\"\340\001"
    "\n\030RecvInvitationRewardResp\0229\n\004code\030\001 \002(\016"
    "2+.msg_maj.RecvInvitationRewardResp.Erro"
    "rCode\022\023\n\013reward_type\030\002 \001(\r\022\031\n\021has_get_ro"
    "om_card\030\003 \001(\r\022\031\n\021can_get_room_card\030\004 \001(\r"
    "\022\032\n\022recv_reward_status\030\005 \001(\r\"\"\n\tErrorCod"
    "e\022\013\n\007SUCCESS\020\001\022\010\n\004FAIL\020\002\"\030\n\026GetBindingAg"
    "entInfoReq\"Z\n\027GetBindingAgentInfoResp\022\017\n"
    "\007user_id\030\001 \001(\r\022\014\n\004name\030\002 \001(\t\022\022\n\nwx_accou"
    "nt\030\003 \001(\t\022\014\n\004icon\030\004 \001(\t\"\"\n\017BindingAgentRe"
    "q\022\017\n\007user_id\030\001 \001(\r\"t\n\020BindingAgentResp\022\014"
    "\n\004code\030\001 \002(\005\022\017\n\007user_id\030\002 \001(\r\022\014\n\004name\030\003 "
    "\001(\t\022\022\n\nwx_account\030\004 \001(\t\022\014\n\004icon\030\005 \001(\t\022\021\n"
    "\tcode_info\030\006 \001(\t\"G\n\020SyncActivityInfo\022\024\n\014"
    "share_status\030\001 \001(\r\022\035\n\025inv_can_get_room_c"
    "ard\030\002 \001(\r\"1\n\026InputInvitationCodeReq\022\027\n\017i"
    "nvitation_code\030\001 \001(\t\"T\n\027InputInvitationC"
    "odeResp\022\014\n\004code\030\001 \001(\005\022\030\n\020reward_room_car"
    "d\030\002 \001(\r\022\021\n\tcode_info\030\003 \001(\t*\350\003\n\016c_cmd_act"
    "ivity\022\026\n\022get_share_info_req\020\001\022\027\n\023get_sha"
    "re_info_resp\020\002\022\024\n\020share_Report_req\020\003\022\025\n\021"
    "share_Report_resp\020\004\022\031\n\025Recv_share_reward"
    "_req\020\005\022\032\n\026Recv_share_reward_resp\020\006\022\033\n\027ge"
    "t_invitation_info_req\020\007\022\034\n\030get_invitatio"
    "n_info_resp\020\010\022\036\n\032Recv_invitation_reward_"
    "req\020\t\022\037\n\033Recv_invitation_reward_resp\020\n\022\036"
    "\n\032get_binding_agent_info_req\020\013\022\037\n\033get_bi"
    "nding_agent_info_resp\020\014\022\025\n\021binding_agent"
    "_req\020\r\022\026\n\022binding_agent_resp\020\016\022\026\n\022Sync_a"
    "ctivity_info\020\017\022\035\n\031input_invitation_code_"
    "req\020\021\022\036\n\032input_invitation_code_resp\020\022", 1877);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "msg_activity.proto", &protobuf_RegisterTypes);
  GetShareInfoReq::default_instance_ = new GetShareInfoReq();
  GetShareInfoResp::default_instance_ = new GetShareInfoResp();
  ShareReportReq::default_instance_ = new ShareReportReq();
  ShareReportResp::default_instance_ = new ShareReportResp();
  RecvShareRewardReq::default_instance_ = new RecvShareRewardReq();
  RecvShareRewardResp::default_instance_ = new RecvShareRewardResp();
  GetInvitationInfoReq::default_instance_ = new GetInvitationInfoReq();
  GetInvitationInfoResp::default_instance_ = new GetInvitationInfoResp();
  RecvInvitationRewardReq::default_instance_ = new RecvInvitationRewardReq();
  RecvInvitationRewardResp::default_instance_ = new RecvInvitationRewardResp();
  GetBindingAgentInfoReq::default_instance_ = new GetBindingAgentInfoReq();
  GetBindingAgentInfoResp::default_instance_ = new GetBindingAgentInfoResp();
  BindingAgentReq::default_instance_ = new BindingAgentReq();
  BindingAgentResp::default_instance_ = new BindingAgentResp();
  SyncActivityInfo::default_instance_ = new SyncActivityInfo();
  InputInvitationCodeReq::default_instance_ = new InputInvitationCodeReq();
  InputInvitationCodeResp::default_instance_ = new InputInvitationCodeResp();
  GetShareInfoReq::default_instance_->InitAsDefaultInstance();
  GetShareInfoResp::default_instance_->InitAsDefaultInstance();
  ShareReportReq::default_instance_->InitAsDefaultInstance();
  ShareReportResp::default_instance_->InitAsDefaultInstance();
  RecvShareRewardReq::default_instance_->InitAsDefaultInstance();
  RecvShareRewardResp::default_instance_->InitAsDefaultInstance();
  GetInvitationInfoReq::default_instance_->InitAsDefaultInstance();
  GetInvitationInfoResp::default_instance_->InitAsDefaultInstance();
  RecvInvitationRewardReq::default_instance_->InitAsDefaultInstance();
  RecvInvitationRewardResp::default_instance_->InitAsDefaultInstance();
  GetBindingAgentInfoReq::default_instance_->InitAsDefaultInstance();
  GetBindingAgentInfoResp::default_instance_->InitAsDefaultInstance();
  BindingAgentReq::default_instance_->InitAsDefaultInstance();
  BindingAgentResp::default_instance_->InitAsDefaultInstance();
  SyncActivityInfo::default_instance_->InitAsDefaultInstance();
  InputInvitationCodeReq::default_instance_->InitAsDefaultInstance();
  InputInvitationCodeResp::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_msg_5factivity_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_msg_5factivity_2eproto {
  StaticDescriptorInitializer_msg_5factivity_2eproto() {
    protobuf_AddDesc_msg_5factivity_2eproto();
  }
} static_descriptor_initializer_msg_5factivity_2eproto_;
const ::google::protobuf::EnumDescriptor* c_cmd_activity_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return c_cmd_activity_descriptor_;
}
bool c_cmd_activity_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 17:
    case 18:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetShareInfoReq::GetShareInfoReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.GetShareInfoReq)
}

void GetShareInfoReq::InitAsDefaultInstance() {
}

GetShareInfoReq::GetShareInfoReq(const GetShareInfoReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.GetShareInfoReq)
}

void GetShareInfoReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetShareInfoReq::~GetShareInfoReq() {
  // @@protoc_insertion_point(destructor:msg_maj.GetShareInfoReq)
  SharedDtor();
}

void GetShareInfoReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetShareInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetShareInfoReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetShareInfoReq_descriptor_;
}

const GetShareInfoReq& GetShareInfoReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5factivity_2eproto();
  return *default_instance_;
}

GetShareInfoReq* GetShareInfoReq::default_instance_ = NULL;

GetShareInfoReq* GetShareInfoReq::New(::google::protobuf::Arena* arena) const {
  GetShareInfoReq* n = new GetShareInfoReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetShareInfoReq::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.GetShareInfoReq)
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GetShareInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.GetShareInfoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.GetShareInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.GetShareInfoReq)
  return false;
#undef DO_
}

void GetShareInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.GetShareInfoReq)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.GetShareInfoReq)
}

::google::protobuf::uint8* GetShareInfoReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.GetShareInfoReq)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.GetShareInfoReq)
  return target;
}

int GetShareInfoReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.GetShareInfoReq)
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetShareInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.GetShareInfoReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetShareInfoReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetShareInfoReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.GetShareInfoReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.GetShareInfoReq)
    MergeFrom(*source);
  }
}

void GetShareInfoReq::MergeFrom(const GetShareInfoReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.GetShareInfoReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void GetShareInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.GetShareInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetShareInfoReq::CopyFrom(const GetShareInfoReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.GetShareInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetShareInfoReq::IsInitialized() const {

  return true;
}

void GetShareInfoReq::Swap(GetShareInfoReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetShareInfoReq::InternalSwap(GetShareInfoReq* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetShareInfoReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetShareInfoReq_descriptor_;
  metadata.reflection = GetShareInfoReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetShareInfoReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetShareInfoResp::kStatusFieldNumber;
const int GetShareInfoResp::kRoomCardFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetShareInfoResp::GetShareInfoResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.GetShareInfoResp)
}

void GetShareInfoResp::InitAsDefaultInstance() {
}

GetShareInfoResp::GetShareInfoResp(const GetShareInfoResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.GetShareInfoResp)
}

void GetShareInfoResp::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0u;
  room_card_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetShareInfoResp::~GetShareInfoResp() {
  // @@protoc_insertion_point(destructor:msg_maj.GetShareInfoResp)
  SharedDtor();
}

void GetShareInfoResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetShareInfoResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetShareInfoResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetShareInfoResp_descriptor_;
}

const GetShareInfoResp& GetShareInfoResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5factivity_2eproto();
  return *default_instance_;
}

GetShareInfoResp* GetShareInfoResp::default_instance_ = NULL;

GetShareInfoResp* GetShareInfoResp::New(::google::protobuf::Arena* arena) const {
  GetShareInfoResp* n = new GetShareInfoResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetShareInfoResp::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.GetShareInfoResp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(GetShareInfoResp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<GetShareInfoResp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(status_, room_card_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GetShareInfoResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.GetShareInfoResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 status = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_room_card;
        break;
      }

      // optional uint32 room_card = 2;
      case 2: {
        if (tag == 16) {
         parse_room_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &room_card_)));
          set_has_room_card();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.GetShareInfoResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.GetShareInfoResp)
  return false;
#undef DO_
}

void GetShareInfoResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.GetShareInfoResp)
  // optional uint32 status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->status(), output);
  }

  // optional uint32 room_card = 2;
  if (has_room_card()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->room_card(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.GetShareInfoResp)
}

::google::protobuf::uint8* GetShareInfoResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.GetShareInfoResp)
  // optional uint32 status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->status(), target);
  }

  // optional uint32 room_card = 2;
  if (has_room_card()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->room_card(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.GetShareInfoResp)
  return target;
}

int GetShareInfoResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.GetShareInfoResp)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->status());
    }

    // optional uint32 room_card = 2;
    if (has_room_card()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->room_card());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetShareInfoResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.GetShareInfoResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetShareInfoResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetShareInfoResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.GetShareInfoResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.GetShareInfoResp)
    MergeFrom(*source);
  }
}

void GetShareInfoResp::MergeFrom(const GetShareInfoResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.GetShareInfoResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_room_card()) {
      set_room_card(from.room_card());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void GetShareInfoResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.GetShareInfoResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetShareInfoResp::CopyFrom(const GetShareInfoResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.GetShareInfoResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetShareInfoResp::IsInitialized() const {

  return true;
}

void GetShareInfoResp::Swap(GetShareInfoResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetShareInfoResp::InternalSwap(GetShareInfoResp* other) {
  std::swap(status_, other->status_);
  std::swap(room_card_, other->room_card_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetShareInfoResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetShareInfoResp_descriptor_;
  metadata.reflection = GetShareInfoResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetShareInfoResp

// optional uint32 status = 1;
bool GetShareInfoResp::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetShareInfoResp::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
void GetShareInfoResp::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetShareInfoResp::clear_status() {
  status_ = 0u;
  clear_has_status();
}
 ::google::protobuf::uint32 GetShareInfoResp::status() const {
  // @@protoc_insertion_point(field_get:msg_maj.GetShareInfoResp.status)
  return status_;
}
 void GetShareInfoResp::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.GetShareInfoResp.status)
}

// optional uint32 room_card = 2;
bool GetShareInfoResp::has_room_card() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetShareInfoResp::set_has_room_card() {
  _has_bits_[0] |= 0x00000002u;
}
void GetShareInfoResp::clear_has_room_card() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetShareInfoResp::clear_room_card() {
  room_card_ = 0u;
  clear_has_room_card();
}
 ::google::protobuf::uint32 GetShareInfoResp::room_card() const {
  // @@protoc_insertion_point(field_get:msg_maj.GetShareInfoResp.room_card)
  return room_card_;
}
 void GetShareInfoResp::set_room_card(::google::protobuf::uint32 value) {
  set_has_room_card();
  room_card_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.GetShareInfoResp.room_card)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShareReportReq::ShareReportReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.ShareReportReq)
}

void ShareReportReq::InitAsDefaultInstance() {
}

ShareReportReq::ShareReportReq(const ShareReportReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.ShareReportReq)
}

void ShareReportReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ShareReportReq::~ShareReportReq() {
  // @@protoc_insertion_point(destructor:msg_maj.ShareReportReq)
  SharedDtor();
}

void ShareReportReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ShareReportReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShareReportReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ShareReportReq_descriptor_;
}

const ShareReportReq& ShareReportReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5factivity_2eproto();
  return *default_instance_;
}

ShareReportReq* ShareReportReq::default_instance_ = NULL;

ShareReportReq* ShareReportReq::New(::google::protobuf::Arena* arena) const {
  ShareReportReq* n = new ShareReportReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShareReportReq::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.ShareReportReq)
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ShareReportReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.ShareReportReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.ShareReportReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.ShareReportReq)
  return false;
#undef DO_
}

void ShareReportReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.ShareReportReq)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.ShareReportReq)
}

::google::protobuf::uint8* ShareReportReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.ShareReportReq)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.ShareReportReq)
  return target;
}

int ShareReportReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.ShareReportReq)
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShareReportReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.ShareReportReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ShareReportReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ShareReportReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.ShareReportReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.ShareReportReq)
    MergeFrom(*source);
  }
}

void ShareReportReq::MergeFrom(const ShareReportReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.ShareReportReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ShareReportReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.ShareReportReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShareReportReq::CopyFrom(const ShareReportReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.ShareReportReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShareReportReq::IsInitialized() const {

  return true;
}

void ShareReportReq::Swap(ShareReportReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShareReportReq::InternalSwap(ShareReportReq* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ShareReportReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ShareReportReq_descriptor_;
  metadata.reflection = ShareReportReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ShareReportReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShareReportResp::kShareStatusFieldNumber;
const int ShareReportResp::kTodayStatus1FieldNumber;
const int ShareReportResp::kTodayStatus2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShareReportResp::ShareReportResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.ShareReportResp)
}

void ShareReportResp::InitAsDefaultInstance() {
}

ShareReportResp::ShareReportResp(const ShareReportResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.ShareReportResp)
}

void ShareReportResp::SharedCtor() {
  _cached_size_ = 0;
  share_status_ = 0u;
  today_status1_ = 0u;
  today_status2_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ShareReportResp::~ShareReportResp() {
  // @@protoc_insertion_point(destructor:msg_maj.ShareReportResp)
  SharedDtor();
}

void ShareReportResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ShareReportResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShareReportResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ShareReportResp_descriptor_;
}

const ShareReportResp& ShareReportResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5factivity_2eproto();
  return *default_instance_;
}

ShareReportResp* ShareReportResp::default_instance_ = NULL;

ShareReportResp* ShareReportResp::New(::google::protobuf::Arena* arena) const {
  ShareReportResp* n = new ShareReportResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShareReportResp::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.ShareReportResp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ShareReportResp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ShareReportResp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(share_status_, today_status2_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ShareReportResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.ShareReportResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 share_status = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &share_status_)));
          set_has_share_status();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_today_status1;
        break;
      }

      // optional uint32 today_status1 = 2;
      case 2: {
        if (tag == 16) {
         parse_today_status1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &today_status1_)));
          set_has_today_status1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_today_status2;
        break;
      }

      // optional uint32 today_status2 = 3;
      case 3: {
        if (tag == 24) {
         parse_today_status2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &today_status2_)));
          set_has_today_status2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.ShareReportResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.ShareReportResp)
  return false;
#undef DO_
}

void ShareReportResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.ShareReportResp)
  // optional uint32 share_status = 1;
  if (has_share_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->share_status(), output);
  }

  // optional uint32 today_status1 = 2;
  if (has_today_status1()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->today_status1(), output);
  }

  // optional uint32 today_status2 = 3;
  if (has_today_status2()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->today_status2(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.ShareReportResp)
}

::google::protobuf::uint8* ShareReportResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.ShareReportResp)
  // optional uint32 share_status = 1;
  if (has_share_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->share_status(), target);
  }

  // optional uint32 today_status1 = 2;
  if (has_today_status1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->today_status1(), target);
  }

  // optional uint32 today_status2 = 3;
  if (has_today_status2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->today_status2(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.ShareReportResp)
  return target;
}

int ShareReportResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.ShareReportResp)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 share_status = 1;
    if (has_share_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->share_status());
    }

    // optional uint32 today_status1 = 2;
    if (has_today_status1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->today_status1());
    }

    // optional uint32 today_status2 = 3;
    if (has_today_status2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->today_status2());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShareReportResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.ShareReportResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ShareReportResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ShareReportResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.ShareReportResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.ShareReportResp)
    MergeFrom(*source);
  }
}

void ShareReportResp::MergeFrom(const ShareReportResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.ShareReportResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_share_status()) {
      set_share_status(from.share_status());
    }
    if (from.has_today_status1()) {
      set_today_status1(from.today_status1());
    }
    if (from.has_today_status2()) {
      set_today_status2(from.today_status2());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ShareReportResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.ShareReportResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShareReportResp::CopyFrom(const ShareReportResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.ShareReportResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShareReportResp::IsInitialized() const {

  return true;
}

void ShareReportResp::Swap(ShareReportResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShareReportResp::InternalSwap(ShareReportResp* other) {
  std::swap(share_status_, other->share_status_);
  std::swap(today_status1_, other->today_status1_);
  std::swap(today_status2_, other->today_status2_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ShareReportResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ShareReportResp_descriptor_;
  metadata.reflection = ShareReportResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ShareReportResp

// optional uint32 share_status = 1;
bool ShareReportResp::has_share_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ShareReportResp::set_has_share_status() {
  _has_bits_[0] |= 0x00000001u;
}
void ShareReportResp::clear_has_share_status() {
  _has_bits_[0] &= ~0x00000001u;
}
void ShareReportResp::clear_share_status() {
  share_status_ = 0u;
  clear_has_share_status();
}
 ::google::protobuf::uint32 ShareReportResp::share_status() const {
  // @@protoc_insertion_point(field_get:msg_maj.ShareReportResp.share_status)
  return share_status_;
}
 void ShareReportResp::set_share_status(::google::protobuf::uint32 value) {
  set_has_share_status();
  share_status_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.ShareReportResp.share_status)
}

// optional uint32 today_status1 = 2;
bool ShareReportResp::has_today_status1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ShareReportResp::set_has_today_status1() {
  _has_bits_[0] |= 0x00000002u;
}
void ShareReportResp::clear_has_today_status1() {
  _has_bits_[0] &= ~0x00000002u;
}
void ShareReportResp::clear_today_status1() {
  today_status1_ = 0u;
  clear_has_today_status1();
}
 ::google::protobuf::uint32 ShareReportResp::today_status1() const {
  // @@protoc_insertion_point(field_get:msg_maj.ShareReportResp.today_status1)
  return today_status1_;
}
 void ShareReportResp::set_today_status1(::google::protobuf::uint32 value) {
  set_has_today_status1();
  today_status1_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.ShareReportResp.today_status1)
}

// optional uint32 today_status2 = 3;
bool ShareReportResp::has_today_status2() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ShareReportResp::set_has_today_status2() {
  _has_bits_[0] |= 0x00000004u;
}
void ShareReportResp::clear_has_today_status2() {
  _has_bits_[0] &= ~0x00000004u;
}
void ShareReportResp::clear_today_status2() {
  today_status2_ = 0u;
  clear_has_today_status2();
}
 ::google::protobuf::uint32 ShareReportResp::today_status2() const {
  // @@protoc_insertion_point(field_get:msg_maj.ShareReportResp.today_status2)
  return today_status2_;
}
 void ShareReportResp::set_today_status2(::google::protobuf::uint32 value) {
  set_has_today_status2();
  today_status2_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.ShareReportResp.today_status2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RecvShareRewardReq::RecvShareRewardReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.RecvShareRewardReq)
}

void RecvShareRewardReq::InitAsDefaultInstance() {
}

RecvShareRewardReq::RecvShareRewardReq(const RecvShareRewardReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.RecvShareRewardReq)
}

void RecvShareRewardReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RecvShareRewardReq::~RecvShareRewardReq() {
  // @@protoc_insertion_point(destructor:msg_maj.RecvShareRewardReq)
  SharedDtor();
}

void RecvShareRewardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RecvShareRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RecvShareRewardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RecvShareRewardReq_descriptor_;
}

const RecvShareRewardReq& RecvShareRewardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5factivity_2eproto();
  return *default_instance_;
}

RecvShareRewardReq* RecvShareRewardReq::default_instance_ = NULL;

RecvShareRewardReq* RecvShareRewardReq::New(::google::protobuf::Arena* arena) const {
  RecvShareRewardReq* n = new RecvShareRewardReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RecvShareRewardReq::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.RecvShareRewardReq)
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RecvShareRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.RecvShareRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.RecvShareRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.RecvShareRewardReq)
  return false;
#undef DO_
}

void RecvShareRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.RecvShareRewardReq)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.RecvShareRewardReq)
}

::google::protobuf::uint8* RecvShareRewardReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.RecvShareRewardReq)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.RecvShareRewardReq)
  return target;
}

int RecvShareRewardReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.RecvShareRewardReq)
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RecvShareRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.RecvShareRewardReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RecvShareRewardReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RecvShareRewardReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.RecvShareRewardReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.RecvShareRewardReq)
    MergeFrom(*source);
  }
}

void RecvShareRewardReq::MergeFrom(const RecvShareRewardReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.RecvShareRewardReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void RecvShareRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.RecvShareRewardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecvShareRewardReq::CopyFrom(const RecvShareRewardReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.RecvShareRewardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecvShareRewardReq::IsInitialized() const {

  return true;
}

void RecvShareRewardReq::Swap(RecvShareRewardReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RecvShareRewardReq::InternalSwap(RecvShareRewardReq* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RecvShareRewardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RecvShareRewardReq_descriptor_;
  metadata.reflection = RecvShareRewardReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RecvShareRewardReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* RecvShareRewardResp_ErrorCode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RecvShareRewardResp_ErrorCode_descriptor_;
}
bool RecvShareRewardResp_ErrorCode_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const RecvShareRewardResp_ErrorCode RecvShareRewardResp::SUCCESS;
const RecvShareRewardResp_ErrorCode RecvShareRewardResp::FAIL;
const RecvShareRewardResp_ErrorCode RecvShareRewardResp::ErrorCode_MIN;
const RecvShareRewardResp_ErrorCode RecvShareRewardResp::ErrorCode_MAX;
const int RecvShareRewardResp::ErrorCode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RecvShareRewardResp::kCodeFieldNumber;
const int RecvShareRewardResp::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RecvShareRewardResp::RecvShareRewardResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.RecvShareRewardResp)
}

void RecvShareRewardResp::InitAsDefaultInstance() {
}

RecvShareRewardResp::RecvShareRewardResp(const RecvShareRewardResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.RecvShareRewardResp)
}

void RecvShareRewardResp::SharedCtor() {
  _cached_size_ = 0;
  code_ = 1;
  status_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RecvShareRewardResp::~RecvShareRewardResp() {
  // @@protoc_insertion_point(destructor:msg_maj.RecvShareRewardResp)
  SharedDtor();
}

void RecvShareRewardResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RecvShareRewardResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RecvShareRewardResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RecvShareRewardResp_descriptor_;
}

const RecvShareRewardResp& RecvShareRewardResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5factivity_2eproto();
  return *default_instance_;
}

RecvShareRewardResp* RecvShareRewardResp::default_instance_ = NULL;

RecvShareRewardResp* RecvShareRewardResp::New(::google::protobuf::Arena* arena) const {
  RecvShareRewardResp* n = new RecvShareRewardResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RecvShareRewardResp::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.RecvShareRewardResp)
  if (_has_bits_[0 / 32] & 3u) {
    code_ = 1;
    status_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RecvShareRewardResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.RecvShareRewardResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .msg_maj.RecvShareRewardResp.ErrorCode code = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::msg_maj::RecvShareRewardResp_ErrorCode_IsValid(value)) {
            set_code(static_cast< ::msg_maj::RecvShareRewardResp_ErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_status;
        break;
      }

      // optional uint32 status = 2;
      case 2: {
        if (tag == 16) {
         parse_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.RecvShareRewardResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.RecvShareRewardResp)
  return false;
#undef DO_
}

void RecvShareRewardResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.RecvShareRewardResp)
  // required .msg_maj.RecvShareRewardResp.ErrorCode code = 1;
  if (has_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->code(), output);
  }

  // optional uint32 status = 2;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.RecvShareRewardResp)
}

::google::protobuf::uint8* RecvShareRewardResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.RecvShareRewardResp)
  // required .msg_maj.RecvShareRewardResp.ErrorCode code = 1;
  if (has_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->code(), target);
  }

  // optional uint32 status = 2;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->status(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.RecvShareRewardResp)
  return target;
}

int RecvShareRewardResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.RecvShareRewardResp)
  int total_size = 0;

  // required .msg_maj.RecvShareRewardResp.ErrorCode code = 1;
  if (has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->code());
  }
  // optional uint32 status = 2;
  if (has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->status());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RecvShareRewardResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.RecvShareRewardResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RecvShareRewardResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RecvShareRewardResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.RecvShareRewardResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.RecvShareRewardResp)
    MergeFrom(*source);
  }
}

void RecvShareRewardResp::MergeFrom(const RecvShareRewardResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.RecvShareRewardResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_code()) {
      set_code(from.code());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void RecvShareRewardResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.RecvShareRewardResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecvShareRewardResp::CopyFrom(const RecvShareRewardResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.RecvShareRewardResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecvShareRewardResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RecvShareRewardResp::Swap(RecvShareRewardResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RecvShareRewardResp::InternalSwap(RecvShareRewardResp* other) {
  std::swap(code_, other->code_);
  std::swap(status_, other->status_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RecvShareRewardResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RecvShareRewardResp_descriptor_;
  metadata.reflection = RecvShareRewardResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RecvShareRewardResp

// required .msg_maj.RecvShareRewardResp.ErrorCode code = 1;
bool RecvShareRewardResp::has_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RecvShareRewardResp::set_has_code() {
  _has_bits_[0] |= 0x00000001u;
}
void RecvShareRewardResp::clear_has_code() {
  _has_bits_[0] &= ~0x00000001u;
}
void RecvShareRewardResp::clear_code() {
  code_ = 1;
  clear_has_code();
}
 ::msg_maj::RecvShareRewardResp_ErrorCode RecvShareRewardResp::code() const {
  // @@protoc_insertion_point(field_get:msg_maj.RecvShareRewardResp.code)
  return static_cast< ::msg_maj::RecvShareRewardResp_ErrorCode >(code_);
}
 void RecvShareRewardResp::set_code(::msg_maj::RecvShareRewardResp_ErrorCode value) {
  assert(::msg_maj::RecvShareRewardResp_ErrorCode_IsValid(value));
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RecvShareRewardResp.code)
}

// optional uint32 status = 2;
bool RecvShareRewardResp::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RecvShareRewardResp::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
void RecvShareRewardResp::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
void RecvShareRewardResp::clear_status() {
  status_ = 0u;
  clear_has_status();
}
 ::google::protobuf::uint32 RecvShareRewardResp::status() const {
  // @@protoc_insertion_point(field_get:msg_maj.RecvShareRewardResp.status)
  return status_;
}
 void RecvShareRewardResp::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RecvShareRewardResp.status)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetInvitationInfoReq::GetInvitationInfoReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.GetInvitationInfoReq)
}

void GetInvitationInfoReq::InitAsDefaultInstance() {
}

GetInvitationInfoReq::GetInvitationInfoReq(const GetInvitationInfoReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.GetInvitationInfoReq)
}

void GetInvitationInfoReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetInvitationInfoReq::~GetInvitationInfoReq() {
  // @@protoc_insertion_point(destructor:msg_maj.GetInvitationInfoReq)
  SharedDtor();
}

void GetInvitationInfoReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetInvitationInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetInvitationInfoReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetInvitationInfoReq_descriptor_;
}

const GetInvitationInfoReq& GetInvitationInfoReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5factivity_2eproto();
  return *default_instance_;
}

GetInvitationInfoReq* GetInvitationInfoReq::default_instance_ = NULL;

GetInvitationInfoReq* GetInvitationInfoReq::New(::google::protobuf::Arena* arena) const {
  GetInvitationInfoReq* n = new GetInvitationInfoReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetInvitationInfoReq::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.GetInvitationInfoReq)
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GetInvitationInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.GetInvitationInfoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.GetInvitationInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.GetInvitationInfoReq)
  return false;
#undef DO_
}

void GetInvitationInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.GetInvitationInfoReq)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.GetInvitationInfoReq)
}

::google::protobuf::uint8* GetInvitationInfoReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.GetInvitationInfoReq)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.GetInvitationInfoReq)
  return target;
}

int GetInvitationInfoReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.GetInvitationInfoReq)
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetInvitationInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.GetInvitationInfoReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetInvitationInfoReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetInvitationInfoReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.GetInvitationInfoReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.GetInvitationInfoReq)
    MergeFrom(*source);
  }
}

void GetInvitationInfoReq::MergeFrom(const GetInvitationInfoReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.GetInvitationInfoReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void GetInvitationInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.GetInvitationInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetInvitationInfoReq::CopyFrom(const GetInvitationInfoReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.GetInvitationInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetInvitationInfoReq::IsInitialized() const {

  return true;
}

void GetInvitationInfoReq::Swap(GetInvitationInfoReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetInvitationInfoReq::InternalSwap(GetInvitationInfoReq* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetInvitationInfoReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetInvitationInfoReq_descriptor_;
  metadata.reflection = GetInvitationInfoReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetInvitationInfoReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetInvitationInfoResp::kInvFriendRoomCardFieldNumber;
const int GetInvitationInfoResp::kHasInvFriendNumFieldNumber;
const int GetInvitationInfoResp::kHasGetRoomCardFieldNumber;
const int GetInvitationInfoResp::kCanGetRoomCardFieldNumber;
const int GetInvitationInfoResp::kInvitationPlayerFieldNumber;
const int GetInvitationInfoResp::kNeedPlayerGamesFieldNumber;
const int GetInvitationInfoResp::kRewardRoomCardFieldNumber;
const int GetInvitationInfoResp::kRecvRewardStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetInvitationInfoResp::GetInvitationInfoResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.GetInvitationInfoResp)
}

void GetInvitationInfoResp::InitAsDefaultInstance() {
}

GetInvitationInfoResp::GetInvitationInfoResp(const GetInvitationInfoResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.GetInvitationInfoResp)
}

void GetInvitationInfoResp::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  inv_friend_room_card_ = 0u;
  has_inv_friend_num_ = 0u;
  has_get_room_card_ = 0u;
  can_get_room_card_ = 0u;
  invitation_player_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  need_player_games_ = 0u;
  reward_room_card_ = 0u;
  recv_reward_status_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetInvitationInfoResp::~GetInvitationInfoResp() {
  // @@protoc_insertion_point(destructor:msg_maj.GetInvitationInfoResp)
  SharedDtor();
}

void GetInvitationInfoResp::SharedDtor() {
  invitation_player_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GetInvitationInfoResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetInvitationInfoResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetInvitationInfoResp_descriptor_;
}

const GetInvitationInfoResp& GetInvitationInfoResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5factivity_2eproto();
  return *default_instance_;
}

GetInvitationInfoResp* GetInvitationInfoResp::default_instance_ = NULL;

GetInvitationInfoResp* GetInvitationInfoResp::New(::google::protobuf::Arena* arena) const {
  GetInvitationInfoResp* n = new GetInvitationInfoResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetInvitationInfoResp::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.GetInvitationInfoResp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(GetInvitationInfoResp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<GetInvitationInfoResp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(inv_friend_room_card_, can_get_room_card_);
    ZR_(need_player_games_, recv_reward_status_);
    if (has_invitation_player()) {
      invitation_player_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GetInvitationInfoResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.GetInvitationInfoResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 inv_friend_room_card = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &inv_friend_room_card_)));
          set_has_inv_friend_room_card();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_has_inv_friend_num;
        break;
      }

      // optional uint32 has_inv_friend_num = 2;
      case 2: {
        if (tag == 16) {
         parse_has_inv_friend_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &has_inv_friend_num_)));
          set_has_has_inv_friend_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_has_get_room_card;
        break;
      }

      // optional uint32 has_get_room_card = 3;
      case 3: {
        if (tag == 24) {
         parse_has_get_room_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &has_get_room_card_)));
          set_has_has_get_room_card();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_can_get_room_card;
        break;
      }

      // optional uint32 can_get_room_card = 4;
      case 4: {
        if (tag == 32) {
         parse_can_get_room_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &can_get_room_card_)));
          set_has_can_get_room_card();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_invitation_player;
        break;
      }

      // optional string invitation_player = 5;
      case 5: {
        if (tag == 42) {
         parse_invitation_player:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_invitation_player()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->invitation_player().data(), this->invitation_player().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "msg_maj.GetInvitationInfoResp.invitation_player");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_need_player_games;
        break;
      }

      // optional uint32 need_player_games = 6;
      case 6: {
        if (tag == 48) {
         parse_need_player_games:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &need_player_games_)));
          set_has_need_player_games();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_reward_room_card;
        break;
      }

      // optional uint32 reward_room_card = 7;
      case 7: {
        if (tag == 56) {
         parse_reward_room_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reward_room_card_)));
          set_has_reward_room_card();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_recv_reward_status;
        break;
      }

      // optional uint32 recv_reward_status = 8;
      case 8: {
        if (tag == 64) {
         parse_recv_reward_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &recv_reward_status_)));
          set_has_recv_reward_status();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.GetInvitationInfoResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.GetInvitationInfoResp)
  return false;
#undef DO_
}

void GetInvitationInfoResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.GetInvitationInfoResp)
  // optional uint32 inv_friend_room_card = 1;
  if (has_inv_friend_room_card()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->inv_friend_room_card(), output);
  }

  // optional uint32 has_inv_friend_num = 2;
  if (has_has_inv_friend_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->has_inv_friend_num(), output);
  }

  // optional uint32 has_get_room_card = 3;
  if (has_has_get_room_card()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->has_get_room_card(), output);
  }

  // optional uint32 can_get_room_card = 4;
  if (has_can_get_room_card()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->can_get_room_card(), output);
  }

  // optional string invitation_player = 5;
  if (has_invitation_player()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->invitation_player().data(), this->invitation_player().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg_maj.GetInvitationInfoResp.invitation_player");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->invitation_player(), output);
  }

  // optional uint32 need_player_games = 6;
  if (has_need_player_games()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->need_player_games(), output);
  }

  // optional uint32 reward_room_card = 7;
  if (has_reward_room_card()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->reward_room_card(), output);
  }

  // optional uint32 recv_reward_status = 8;
  if (has_recv_reward_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->recv_reward_status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.GetInvitationInfoResp)
}

::google::protobuf::uint8* GetInvitationInfoResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.GetInvitationInfoResp)
  // optional uint32 inv_friend_room_card = 1;
  if (has_inv_friend_room_card()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->inv_friend_room_card(), target);
  }

  // optional uint32 has_inv_friend_num = 2;
  if (has_has_inv_friend_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->has_inv_friend_num(), target);
  }

  // optional uint32 has_get_room_card = 3;
  if (has_has_get_room_card()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->has_get_room_card(), target);
  }

  // optional uint32 can_get_room_card = 4;
  if (has_can_get_room_card()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->can_get_room_card(), target);
  }

  // optional string invitation_player = 5;
  if (has_invitation_player()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->invitation_player().data(), this->invitation_player().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg_maj.GetInvitationInfoResp.invitation_player");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->invitation_player(), target);
  }

  // optional uint32 need_player_games = 6;
  if (has_need_player_games()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->need_player_games(), target);
  }

  // optional uint32 reward_room_card = 7;
  if (has_reward_room_card()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->reward_room_card(), target);
  }

  // optional uint32 recv_reward_status = 8;
  if (has_recv_reward_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->recv_reward_status(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.GetInvitationInfoResp)
  return target;
}

int GetInvitationInfoResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.GetInvitationInfoResp)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional uint32 inv_friend_room_card = 1;
    if (has_inv_friend_room_card()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->inv_friend_room_card());
    }

    // optional uint32 has_inv_friend_num = 2;
    if (has_has_inv_friend_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->has_inv_friend_num());
    }

    // optional uint32 has_get_room_card = 3;
    if (has_has_get_room_card()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->has_get_room_card());
    }

    // optional uint32 can_get_room_card = 4;
    if (has_can_get_room_card()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->can_get_room_card());
    }

    // optional string invitation_player = 5;
    if (has_invitation_player()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->invitation_player());
    }

    // optional uint32 need_player_games = 6;
    if (has_need_player_games()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->need_player_games());
    }

    // optional uint32 reward_room_card = 7;
    if (has_reward_room_card()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->reward_room_card());
    }

    // optional uint32 recv_reward_status = 8;
    if (has_recv_reward_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->recv_reward_status());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetInvitationInfoResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.GetInvitationInfoResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetInvitationInfoResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetInvitationInfoResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.GetInvitationInfoResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.GetInvitationInfoResp)
    MergeFrom(*source);
  }
}

void GetInvitationInfoResp::MergeFrom(const GetInvitationInfoResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.GetInvitationInfoResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_inv_friend_room_card()) {
      set_inv_friend_room_card(from.inv_friend_room_card());
    }
    if (from.has_has_inv_friend_num()) {
      set_has_inv_friend_num(from.has_inv_friend_num());
    }
    if (from.has_has_get_room_card()) {
      set_has_get_room_card(from.has_get_room_card());
    }
    if (from.has_can_get_room_card()) {
      set_can_get_room_card(from.can_get_room_card());
    }
    if (from.has_invitation_player()) {
      set_has_invitation_player();
      invitation_player_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.invitation_player_);
    }
    if (from.has_need_player_games()) {
      set_need_player_games(from.need_player_games());
    }
    if (from.has_reward_room_card()) {
      set_reward_room_card(from.reward_room_card());
    }
    if (from.has_recv_reward_status()) {
      set_recv_reward_status(from.recv_reward_status());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void GetInvitationInfoResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.GetInvitationInfoResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetInvitationInfoResp::CopyFrom(const GetInvitationInfoResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.GetInvitationInfoResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetInvitationInfoResp::IsInitialized() const {

  return true;
}

void GetInvitationInfoResp::Swap(GetInvitationInfoResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetInvitationInfoResp::InternalSwap(GetInvitationInfoResp* other) {
  std::swap(inv_friend_room_card_, other->inv_friend_room_card_);
  std::swap(has_inv_friend_num_, other->has_inv_friend_num_);
  std::swap(has_get_room_card_, other->has_get_room_card_);
  std::swap(can_get_room_card_, other->can_get_room_card_);
  invitation_player_.Swap(&other->invitation_player_);
  std::swap(need_player_games_, other->need_player_games_);
  std::swap(reward_room_card_, other->reward_room_card_);
  std::swap(recv_reward_status_, other->recv_reward_status_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetInvitationInfoResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetInvitationInfoResp_descriptor_;
  metadata.reflection = GetInvitationInfoResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetInvitationInfoResp

// optional uint32 inv_friend_room_card = 1;
bool GetInvitationInfoResp::has_inv_friend_room_card() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetInvitationInfoResp::set_has_inv_friend_room_card() {
  _has_bits_[0] |= 0x00000001u;
}
void GetInvitationInfoResp::clear_has_inv_friend_room_card() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetInvitationInfoResp::clear_inv_friend_room_card() {
  inv_friend_room_card_ = 0u;
  clear_has_inv_friend_room_card();
}
 ::google::protobuf::uint32 GetInvitationInfoResp::inv_friend_room_card() const {
  // @@protoc_insertion_point(field_get:msg_maj.GetInvitationInfoResp.inv_friend_room_card)
  return inv_friend_room_card_;
}
 void GetInvitationInfoResp::set_inv_friend_room_card(::google::protobuf::uint32 value) {
  set_has_inv_friend_room_card();
  inv_friend_room_card_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.GetInvitationInfoResp.inv_friend_room_card)
}

// optional uint32 has_inv_friend_num = 2;
bool GetInvitationInfoResp::has_has_inv_friend_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetInvitationInfoResp::set_has_has_inv_friend_num() {
  _has_bits_[0] |= 0x00000002u;
}
void GetInvitationInfoResp::clear_has_has_inv_friend_num() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetInvitationInfoResp::clear_has_inv_friend_num() {
  has_inv_friend_num_ = 0u;
  clear_has_has_inv_friend_num();
}
 ::google::protobuf::uint32 GetInvitationInfoResp::has_inv_friend_num() const {
  // @@protoc_insertion_point(field_get:msg_maj.GetInvitationInfoResp.has_inv_friend_num)
  return has_inv_friend_num_;
}
 void GetInvitationInfoResp::set_has_inv_friend_num(::google::protobuf::uint32 value) {
  set_has_has_inv_friend_num();
  has_inv_friend_num_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.GetInvitationInfoResp.has_inv_friend_num)
}

// optional uint32 has_get_room_card = 3;
bool GetInvitationInfoResp::has_has_get_room_card() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GetInvitationInfoResp::set_has_has_get_room_card() {
  _has_bits_[0] |= 0x00000004u;
}
void GetInvitationInfoResp::clear_has_has_get_room_card() {
  _has_bits_[0] &= ~0x00000004u;
}
void GetInvitationInfoResp::clear_has_get_room_card() {
  has_get_room_card_ = 0u;
  clear_has_has_get_room_card();
}
 ::google::protobuf::uint32 GetInvitationInfoResp::has_get_room_card() const {
  // @@protoc_insertion_point(field_get:msg_maj.GetInvitationInfoResp.has_get_room_card)
  return has_get_room_card_;
}
 void GetInvitationInfoResp::set_has_get_room_card(::google::protobuf::uint32 value) {
  set_has_has_get_room_card();
  has_get_room_card_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.GetInvitationInfoResp.has_get_room_card)
}

// optional uint32 can_get_room_card = 4;
bool GetInvitationInfoResp::has_can_get_room_card() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void GetInvitationInfoResp::set_has_can_get_room_card() {
  _has_bits_[0] |= 0x00000008u;
}
void GetInvitationInfoResp::clear_has_can_get_room_card() {
  _has_bits_[0] &= ~0x00000008u;
}
void GetInvitationInfoResp::clear_can_get_room_card() {
  can_get_room_card_ = 0u;
  clear_has_can_get_room_card();
}
 ::google::protobuf::uint32 GetInvitationInfoResp::can_get_room_card() const {
  // @@protoc_insertion_point(field_get:msg_maj.GetInvitationInfoResp.can_get_room_card)
  return can_get_room_card_;
}
 void GetInvitationInfoResp::set_can_get_room_card(::google::protobuf::uint32 value) {
  set_has_can_get_room_card();
  can_get_room_card_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.GetInvitationInfoResp.can_get_room_card)
}

// optional string invitation_player = 5;
bool GetInvitationInfoResp::has_invitation_player() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void GetInvitationInfoResp::set_has_invitation_player() {
  _has_bits_[0] |= 0x00000010u;
}
void GetInvitationInfoResp::clear_has_invitation_player() {
  _has_bits_[0] &= ~0x00000010u;
}
void GetInvitationInfoResp::clear_invitation_player() {
  invitation_player_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_invitation_player();
}
 const ::std::string& GetInvitationInfoResp::invitation_player() const {
  // @@protoc_insertion_point(field_get:msg_maj.GetInvitationInfoResp.invitation_player)
  return invitation_player_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetInvitationInfoResp::set_invitation_player(const ::std::string& value) {
  set_has_invitation_player();
  invitation_player_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.GetInvitationInfoResp.invitation_player)
}
 void GetInvitationInfoResp::set_invitation_player(const char* value) {
  set_has_invitation_player();
  invitation_player_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.GetInvitationInfoResp.invitation_player)
}
 void GetInvitationInfoResp::set_invitation_player(const char* value, size_t size) {
  set_has_invitation_player();
  invitation_player_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.GetInvitationInfoResp.invitation_player)
}
 ::std::string* GetInvitationInfoResp::mutable_invitation_player() {
  set_has_invitation_player();
  // @@protoc_insertion_point(field_mutable:msg_maj.GetInvitationInfoResp.invitation_player)
  return invitation_player_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetInvitationInfoResp::release_invitation_player() {
  // @@protoc_insertion_point(field_release:msg_maj.GetInvitationInfoResp.invitation_player)
  clear_has_invitation_player();
  return invitation_player_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetInvitationInfoResp::set_allocated_invitation_player(::std::string* invitation_player) {
  if (invitation_player != NULL) {
    set_has_invitation_player();
  } else {
    clear_has_invitation_player();
  }
  invitation_player_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), invitation_player);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.GetInvitationInfoResp.invitation_player)
}

// optional uint32 need_player_games = 6;
bool GetInvitationInfoResp::has_need_player_games() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void GetInvitationInfoResp::set_has_need_player_games() {
  _has_bits_[0] |= 0x00000020u;
}
void GetInvitationInfoResp::clear_has_need_player_games() {
  _has_bits_[0] &= ~0x00000020u;
}
void GetInvitationInfoResp::clear_need_player_games() {
  need_player_games_ = 0u;
  clear_has_need_player_games();
}
 ::google::protobuf::uint32 GetInvitationInfoResp::need_player_games() const {
  // @@protoc_insertion_point(field_get:msg_maj.GetInvitationInfoResp.need_player_games)
  return need_player_games_;
}
 void GetInvitationInfoResp::set_need_player_games(::google::protobuf::uint32 value) {
  set_has_need_player_games();
  need_player_games_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.GetInvitationInfoResp.need_player_games)
}

// optional uint32 reward_room_card = 7;
bool GetInvitationInfoResp::has_reward_room_card() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void GetInvitationInfoResp::set_has_reward_room_card() {
  _has_bits_[0] |= 0x00000040u;
}
void GetInvitationInfoResp::clear_has_reward_room_card() {
  _has_bits_[0] &= ~0x00000040u;
}
void GetInvitationInfoResp::clear_reward_room_card() {
  reward_room_card_ = 0u;
  clear_has_reward_room_card();
}
 ::google::protobuf::uint32 GetInvitationInfoResp::reward_room_card() const {
  // @@protoc_insertion_point(field_get:msg_maj.GetInvitationInfoResp.reward_room_card)
  return reward_room_card_;
}
 void GetInvitationInfoResp::set_reward_room_card(::google::protobuf::uint32 value) {
  set_has_reward_room_card();
  reward_room_card_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.GetInvitationInfoResp.reward_room_card)
}

// optional uint32 recv_reward_status = 8;
bool GetInvitationInfoResp::has_recv_reward_status() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void GetInvitationInfoResp::set_has_recv_reward_status() {
  _has_bits_[0] |= 0x00000080u;
}
void GetInvitationInfoResp::clear_has_recv_reward_status() {
  _has_bits_[0] &= ~0x00000080u;
}
void GetInvitationInfoResp::clear_recv_reward_status() {
  recv_reward_status_ = 0u;
  clear_has_recv_reward_status();
}
 ::google::protobuf::uint32 GetInvitationInfoResp::recv_reward_status() const {
  // @@protoc_insertion_point(field_get:msg_maj.GetInvitationInfoResp.recv_reward_status)
  return recv_reward_status_;
}
 void GetInvitationInfoResp::set_recv_reward_status(::google::protobuf::uint32 value) {
  set_has_recv_reward_status();
  recv_reward_status_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.GetInvitationInfoResp.recv_reward_status)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RecvInvitationRewardReq::kRewardTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RecvInvitationRewardReq::RecvInvitationRewardReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.RecvInvitationRewardReq)
}

void RecvInvitationRewardReq::InitAsDefaultInstance() {
}

RecvInvitationRewardReq::RecvInvitationRewardReq(const RecvInvitationRewardReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.RecvInvitationRewardReq)
}

void RecvInvitationRewardReq::SharedCtor() {
  _cached_size_ = 0;
  reward_type_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RecvInvitationRewardReq::~RecvInvitationRewardReq() {
  // @@protoc_insertion_point(destructor:msg_maj.RecvInvitationRewardReq)
  SharedDtor();
}

void RecvInvitationRewardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RecvInvitationRewardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RecvInvitationRewardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RecvInvitationRewardReq_descriptor_;
}

const RecvInvitationRewardReq& RecvInvitationRewardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5factivity_2eproto();
  return *default_instance_;
}

RecvInvitationRewardReq* RecvInvitationRewardReq::default_instance_ = NULL;

RecvInvitationRewardReq* RecvInvitationRewardReq::New(::google::protobuf::Arena* arena) const {
  RecvInvitationRewardReq* n = new RecvInvitationRewardReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RecvInvitationRewardReq::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.RecvInvitationRewardReq)
  reward_type_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RecvInvitationRewardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.RecvInvitationRewardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 reward_type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reward_type_)));
          set_has_reward_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.RecvInvitationRewardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.RecvInvitationRewardReq)
  return false;
#undef DO_
}

void RecvInvitationRewardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.RecvInvitationRewardReq)
  // optional uint32 reward_type = 1;
  if (has_reward_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->reward_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.RecvInvitationRewardReq)
}

::google::protobuf::uint8* RecvInvitationRewardReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.RecvInvitationRewardReq)
  // optional uint32 reward_type = 1;
  if (has_reward_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->reward_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.RecvInvitationRewardReq)
  return target;
}

int RecvInvitationRewardReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.RecvInvitationRewardReq)
  int total_size = 0;

  // optional uint32 reward_type = 1;
  if (has_reward_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->reward_type());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RecvInvitationRewardReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.RecvInvitationRewardReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RecvInvitationRewardReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RecvInvitationRewardReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.RecvInvitationRewardReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.RecvInvitationRewardReq)
    MergeFrom(*source);
  }
}

void RecvInvitationRewardReq::MergeFrom(const RecvInvitationRewardReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.RecvInvitationRewardReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_reward_type()) {
      set_reward_type(from.reward_type());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void RecvInvitationRewardReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.RecvInvitationRewardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecvInvitationRewardReq::CopyFrom(const RecvInvitationRewardReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.RecvInvitationRewardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecvInvitationRewardReq::IsInitialized() const {

  return true;
}

void RecvInvitationRewardReq::Swap(RecvInvitationRewardReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RecvInvitationRewardReq::InternalSwap(RecvInvitationRewardReq* other) {
  std::swap(reward_type_, other->reward_type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RecvInvitationRewardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RecvInvitationRewardReq_descriptor_;
  metadata.reflection = RecvInvitationRewardReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RecvInvitationRewardReq

// optional uint32 reward_type = 1;
bool RecvInvitationRewardReq::has_reward_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RecvInvitationRewardReq::set_has_reward_type() {
  _has_bits_[0] |= 0x00000001u;
}
void RecvInvitationRewardReq::clear_has_reward_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void RecvInvitationRewardReq::clear_reward_type() {
  reward_type_ = 0u;
  clear_has_reward_type();
}
 ::google::protobuf::uint32 RecvInvitationRewardReq::reward_type() const {
  // @@protoc_insertion_point(field_get:msg_maj.RecvInvitationRewardReq.reward_type)
  return reward_type_;
}
 void RecvInvitationRewardReq::set_reward_type(::google::protobuf::uint32 value) {
  set_has_reward_type();
  reward_type_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RecvInvitationRewardReq.reward_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* RecvInvitationRewardResp_ErrorCode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RecvInvitationRewardResp_ErrorCode_descriptor_;
}
bool RecvInvitationRewardResp_ErrorCode_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const RecvInvitationRewardResp_ErrorCode RecvInvitationRewardResp::SUCCESS;
const RecvInvitationRewardResp_ErrorCode RecvInvitationRewardResp::FAIL;
const RecvInvitationRewardResp_ErrorCode RecvInvitationRewardResp::ErrorCode_MIN;
const RecvInvitationRewardResp_ErrorCode RecvInvitationRewardResp::ErrorCode_MAX;
const int RecvInvitationRewardResp::ErrorCode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RecvInvitationRewardResp::kCodeFieldNumber;
const int RecvInvitationRewardResp::kRewardTypeFieldNumber;
const int RecvInvitationRewardResp::kHasGetRoomCardFieldNumber;
const int RecvInvitationRewardResp::kCanGetRoomCardFieldNumber;
const int RecvInvitationRewardResp::kRecvRewardStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RecvInvitationRewardResp::RecvInvitationRewardResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.RecvInvitationRewardResp)
}

void RecvInvitationRewardResp::InitAsDefaultInstance() {
}

RecvInvitationRewardResp::RecvInvitationRewardResp(const RecvInvitationRewardResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.RecvInvitationRewardResp)
}

void RecvInvitationRewardResp::SharedCtor() {
  _cached_size_ = 0;
  code_ = 1;
  reward_type_ = 0u;
  has_get_room_card_ = 0u;
  can_get_room_card_ = 0u;
  recv_reward_status_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RecvInvitationRewardResp::~RecvInvitationRewardResp() {
  // @@protoc_insertion_point(destructor:msg_maj.RecvInvitationRewardResp)
  SharedDtor();
}

void RecvInvitationRewardResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RecvInvitationRewardResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RecvInvitationRewardResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RecvInvitationRewardResp_descriptor_;
}

const RecvInvitationRewardResp& RecvInvitationRewardResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5factivity_2eproto();
  return *default_instance_;
}

RecvInvitationRewardResp* RecvInvitationRewardResp::default_instance_ = NULL;

RecvInvitationRewardResp* RecvInvitationRewardResp::New(::google::protobuf::Arena* arena) const {
  RecvInvitationRewardResp* n = new RecvInvitationRewardResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RecvInvitationRewardResp::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.RecvInvitationRewardResp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(RecvInvitationRewardResp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<RecvInvitationRewardResp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31u) {
    ZR_(reward_type_, recv_reward_status_);
    code_ = 1;
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RecvInvitationRewardResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.RecvInvitationRewardResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .msg_maj.RecvInvitationRewardResp.ErrorCode code = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::msg_maj::RecvInvitationRewardResp_ErrorCode_IsValid(value)) {
            set_code(static_cast< ::msg_maj::RecvInvitationRewardResp_ErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_reward_type;
        break;
      }

      // optional uint32 reward_type = 2;
      case 2: {
        if (tag == 16) {
         parse_reward_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reward_type_)));
          set_has_reward_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_has_get_room_card;
        break;
      }

      // optional uint32 has_get_room_card = 3;
      case 3: {
        if (tag == 24) {
         parse_has_get_room_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &has_get_room_card_)));
          set_has_has_get_room_card();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_can_get_room_card;
        break;
      }

      // optional uint32 can_get_room_card = 4;
      case 4: {
        if (tag == 32) {
         parse_can_get_room_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &can_get_room_card_)));
          set_has_can_get_room_card();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_recv_reward_status;
        break;
      }

      // optional uint32 recv_reward_status = 5;
      case 5: {
        if (tag == 40) {
         parse_recv_reward_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &recv_reward_status_)));
          set_has_recv_reward_status();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.RecvInvitationRewardResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.RecvInvitationRewardResp)
  return false;
#undef DO_
}

void RecvInvitationRewardResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.RecvInvitationRewardResp)
  // required .msg_maj.RecvInvitationRewardResp.ErrorCode code = 1;
  if (has_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->code(), output);
  }

  // optional uint32 reward_type = 2;
  if (has_reward_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->reward_type(), output);
  }

  // optional uint32 has_get_room_card = 3;
  if (has_has_get_room_card()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->has_get_room_card(), output);
  }

  // optional uint32 can_get_room_card = 4;
  if (has_can_get_room_card()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->can_get_room_card(), output);
  }

  // optional uint32 recv_reward_status = 5;
  if (has_recv_reward_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->recv_reward_status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.RecvInvitationRewardResp)
}

::google::protobuf::uint8* RecvInvitationRewardResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.RecvInvitationRewardResp)
  // required .msg_maj.RecvInvitationRewardResp.ErrorCode code = 1;
  if (has_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->code(), target);
  }

  // optional uint32 reward_type = 2;
  if (has_reward_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->reward_type(), target);
  }

  // optional uint32 has_get_room_card = 3;
  if (has_has_get_room_card()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->has_get_room_card(), target);
  }

  // optional uint32 can_get_room_card = 4;
  if (has_can_get_room_card()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->can_get_room_card(), target);
  }

  // optional uint32 recv_reward_status = 5;
  if (has_recv_reward_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->recv_reward_status(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.RecvInvitationRewardResp)
  return target;
}

int RecvInvitationRewardResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.RecvInvitationRewardResp)
  int total_size = 0;

  // required .msg_maj.RecvInvitationRewardResp.ErrorCode code = 1;
  if (has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->code());
  }
  if (_has_bits_[1 / 32] & 30u) {
    // optional uint32 reward_type = 2;
    if (has_reward_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->reward_type());
    }

    // optional uint32 has_get_room_card = 3;
    if (has_has_get_room_card()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->has_get_room_card());
    }

    // optional uint32 can_get_room_card = 4;
    if (has_can_get_room_card()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->can_get_room_card());
    }

    // optional uint32 recv_reward_status = 5;
    if (has_recv_reward_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->recv_reward_status());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RecvInvitationRewardResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.RecvInvitationRewardResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RecvInvitationRewardResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RecvInvitationRewardResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.RecvInvitationRewardResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.RecvInvitationRewardResp)
    MergeFrom(*source);
  }
}

void RecvInvitationRewardResp::MergeFrom(const RecvInvitationRewardResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.RecvInvitationRewardResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_code()) {
      set_code(from.code());
    }
    if (from.has_reward_type()) {
      set_reward_type(from.reward_type());
    }
    if (from.has_has_get_room_card()) {
      set_has_get_room_card(from.has_get_room_card());
    }
    if (from.has_can_get_room_card()) {
      set_can_get_room_card(from.can_get_room_card());
    }
    if (from.has_recv_reward_status()) {
      set_recv_reward_status(from.recv_reward_status());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void RecvInvitationRewardResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.RecvInvitationRewardResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecvInvitationRewardResp::CopyFrom(const RecvInvitationRewardResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.RecvInvitationRewardResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecvInvitationRewardResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RecvInvitationRewardResp::Swap(RecvInvitationRewardResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RecvInvitationRewardResp::InternalSwap(RecvInvitationRewardResp* other) {
  std::swap(code_, other->code_);
  std::swap(reward_type_, other->reward_type_);
  std::swap(has_get_room_card_, other->has_get_room_card_);
  std::swap(can_get_room_card_, other->can_get_room_card_);
  std::swap(recv_reward_status_, other->recv_reward_status_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RecvInvitationRewardResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RecvInvitationRewardResp_descriptor_;
  metadata.reflection = RecvInvitationRewardResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RecvInvitationRewardResp

// required .msg_maj.RecvInvitationRewardResp.ErrorCode code = 1;
bool RecvInvitationRewardResp::has_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RecvInvitationRewardResp::set_has_code() {
  _has_bits_[0] |= 0x00000001u;
}
void RecvInvitationRewardResp::clear_has_code() {
  _has_bits_[0] &= ~0x00000001u;
}
void RecvInvitationRewardResp::clear_code() {
  code_ = 1;
  clear_has_code();
}
 ::msg_maj::RecvInvitationRewardResp_ErrorCode RecvInvitationRewardResp::code() const {
  // @@protoc_insertion_point(field_get:msg_maj.RecvInvitationRewardResp.code)
  return static_cast< ::msg_maj::RecvInvitationRewardResp_ErrorCode >(code_);
}
 void RecvInvitationRewardResp::set_code(::msg_maj::RecvInvitationRewardResp_ErrorCode value) {
  assert(::msg_maj::RecvInvitationRewardResp_ErrorCode_IsValid(value));
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RecvInvitationRewardResp.code)
}

// optional uint32 reward_type = 2;
bool RecvInvitationRewardResp::has_reward_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RecvInvitationRewardResp::set_has_reward_type() {
  _has_bits_[0] |= 0x00000002u;
}
void RecvInvitationRewardResp::clear_has_reward_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void RecvInvitationRewardResp::clear_reward_type() {
  reward_type_ = 0u;
  clear_has_reward_type();
}
 ::google::protobuf::uint32 RecvInvitationRewardResp::reward_type() const {
  // @@protoc_insertion_point(field_get:msg_maj.RecvInvitationRewardResp.reward_type)
  return reward_type_;
}
 void RecvInvitationRewardResp::set_reward_type(::google::protobuf::uint32 value) {
  set_has_reward_type();
  reward_type_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RecvInvitationRewardResp.reward_type)
}

// optional uint32 has_get_room_card = 3;
bool RecvInvitationRewardResp::has_has_get_room_card() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void RecvInvitationRewardResp::set_has_has_get_room_card() {
  _has_bits_[0] |= 0x00000004u;
}
void RecvInvitationRewardResp::clear_has_has_get_room_card() {
  _has_bits_[0] &= ~0x00000004u;
}
void RecvInvitationRewardResp::clear_has_get_room_card() {
  has_get_room_card_ = 0u;
  clear_has_has_get_room_card();
}
 ::google::protobuf::uint32 RecvInvitationRewardResp::has_get_room_card() const {
  // @@protoc_insertion_point(field_get:msg_maj.RecvInvitationRewardResp.has_get_room_card)
  return has_get_room_card_;
}
 void RecvInvitationRewardResp::set_has_get_room_card(::google::protobuf::uint32 value) {
  set_has_has_get_room_card();
  has_get_room_card_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RecvInvitationRewardResp.has_get_room_card)
}

// optional uint32 can_get_room_card = 4;
bool RecvInvitationRewardResp::has_can_get_room_card() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void RecvInvitationRewardResp::set_has_can_get_room_card() {
  _has_bits_[0] |= 0x00000008u;
}
void RecvInvitationRewardResp::clear_has_can_get_room_card() {
  _has_bits_[0] &= ~0x00000008u;
}
void RecvInvitationRewardResp::clear_can_get_room_card() {
  can_get_room_card_ = 0u;
  clear_has_can_get_room_card();
}
 ::google::protobuf::uint32 RecvInvitationRewardResp::can_get_room_card() const {
  // @@protoc_insertion_point(field_get:msg_maj.RecvInvitationRewardResp.can_get_room_card)
  return can_get_room_card_;
}
 void RecvInvitationRewardResp::set_can_get_room_card(::google::protobuf::uint32 value) {
  set_has_can_get_room_card();
  can_get_room_card_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RecvInvitationRewardResp.can_get_room_card)
}

// optional uint32 recv_reward_status = 5;
bool RecvInvitationRewardResp::has_recv_reward_status() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void RecvInvitationRewardResp::set_has_recv_reward_status() {
  _has_bits_[0] |= 0x00000010u;
}
void RecvInvitationRewardResp::clear_has_recv_reward_status() {
  _has_bits_[0] &= ~0x00000010u;
}
void RecvInvitationRewardResp::clear_recv_reward_status() {
  recv_reward_status_ = 0u;
  clear_has_recv_reward_status();
}
 ::google::protobuf::uint32 RecvInvitationRewardResp::recv_reward_status() const {
  // @@protoc_insertion_point(field_get:msg_maj.RecvInvitationRewardResp.recv_reward_status)
  return recv_reward_status_;
}
 void RecvInvitationRewardResp::set_recv_reward_status(::google::protobuf::uint32 value) {
  set_has_recv_reward_status();
  recv_reward_status_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RecvInvitationRewardResp.recv_reward_status)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetBindingAgentInfoReq::GetBindingAgentInfoReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.GetBindingAgentInfoReq)
}

void GetBindingAgentInfoReq::InitAsDefaultInstance() {
}

GetBindingAgentInfoReq::GetBindingAgentInfoReq(const GetBindingAgentInfoReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.GetBindingAgentInfoReq)
}

void GetBindingAgentInfoReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetBindingAgentInfoReq::~GetBindingAgentInfoReq() {
  // @@protoc_insertion_point(destructor:msg_maj.GetBindingAgentInfoReq)
  SharedDtor();
}

void GetBindingAgentInfoReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetBindingAgentInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetBindingAgentInfoReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetBindingAgentInfoReq_descriptor_;
}

const GetBindingAgentInfoReq& GetBindingAgentInfoReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5factivity_2eproto();
  return *default_instance_;
}

GetBindingAgentInfoReq* GetBindingAgentInfoReq::default_instance_ = NULL;

GetBindingAgentInfoReq* GetBindingAgentInfoReq::New(::google::protobuf::Arena* arena) const {
  GetBindingAgentInfoReq* n = new GetBindingAgentInfoReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetBindingAgentInfoReq::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.GetBindingAgentInfoReq)
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GetBindingAgentInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.GetBindingAgentInfoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.GetBindingAgentInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.GetBindingAgentInfoReq)
  return false;
#undef DO_
}

void GetBindingAgentInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.GetBindingAgentInfoReq)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.GetBindingAgentInfoReq)
}

::google::protobuf::uint8* GetBindingAgentInfoReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.GetBindingAgentInfoReq)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.GetBindingAgentInfoReq)
  return target;
}

int GetBindingAgentInfoReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.GetBindingAgentInfoReq)
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetBindingAgentInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.GetBindingAgentInfoReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetBindingAgentInfoReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetBindingAgentInfoReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.GetBindingAgentInfoReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.GetBindingAgentInfoReq)
    MergeFrom(*source);
  }
}

void GetBindingAgentInfoReq::MergeFrom(const GetBindingAgentInfoReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.GetBindingAgentInfoReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void GetBindingAgentInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.GetBindingAgentInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBindingAgentInfoReq::CopyFrom(const GetBindingAgentInfoReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.GetBindingAgentInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBindingAgentInfoReq::IsInitialized() const {

  return true;
}

void GetBindingAgentInfoReq::Swap(GetBindingAgentInfoReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetBindingAgentInfoReq::InternalSwap(GetBindingAgentInfoReq* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetBindingAgentInfoReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetBindingAgentInfoReq_descriptor_;
  metadata.reflection = GetBindingAgentInfoReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetBindingAgentInfoReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetBindingAgentInfoResp::kUserIdFieldNumber;
const int GetBindingAgentInfoResp::kNameFieldNumber;
const int GetBindingAgentInfoResp::kWxAccountFieldNumber;
const int GetBindingAgentInfoResp::kIconFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetBindingAgentInfoResp::GetBindingAgentInfoResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.GetBindingAgentInfoResp)
}

void GetBindingAgentInfoResp::InitAsDefaultInstance() {
}

GetBindingAgentInfoResp::GetBindingAgentInfoResp(const GetBindingAgentInfoResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.GetBindingAgentInfoResp)
}

void GetBindingAgentInfoResp::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  user_id_ = 0u;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wx_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetBindingAgentInfoResp::~GetBindingAgentInfoResp() {
  // @@protoc_insertion_point(destructor:msg_maj.GetBindingAgentInfoResp)
  SharedDtor();
}

void GetBindingAgentInfoResp::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wx_account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GetBindingAgentInfoResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetBindingAgentInfoResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetBindingAgentInfoResp_descriptor_;
}

const GetBindingAgentInfoResp& GetBindingAgentInfoResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5factivity_2eproto();
  return *default_instance_;
}

GetBindingAgentInfoResp* GetBindingAgentInfoResp::default_instance_ = NULL;

GetBindingAgentInfoResp* GetBindingAgentInfoResp::New(::google::protobuf::Arena* arena) const {
  GetBindingAgentInfoResp* n = new GetBindingAgentInfoResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetBindingAgentInfoResp::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.GetBindingAgentInfoResp)
  if (_has_bits_[0 / 32] & 15u) {
    user_id_ = 0u;
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_wx_account()) {
      wx_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_icon()) {
      icon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GetBindingAgentInfoResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.GetBindingAgentInfoResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 user_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
          set_has_user_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "msg_maj.GetBindingAgentInfoResp.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_wx_account;
        break;
      }

      // optional string wx_account = 3;
      case 3: {
        if (tag == 26) {
         parse_wx_account:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_wx_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->wx_account().data(), this->wx_account().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "msg_maj.GetBindingAgentInfoResp.wx_account");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_icon;
        break;
      }

      // optional string icon = 4;
      case 4: {
        if (tag == 34) {
         parse_icon:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_icon()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->icon().data(), this->icon().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "msg_maj.GetBindingAgentInfoResp.icon");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.GetBindingAgentInfoResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.GetBindingAgentInfoResp)
  return false;
#undef DO_
}

void GetBindingAgentInfoResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.GetBindingAgentInfoResp)
  // optional uint32 user_id = 1;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg_maj.GetBindingAgentInfoResp.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional string wx_account = 3;
  if (has_wx_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->wx_account().data(), this->wx_account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg_maj.GetBindingAgentInfoResp.wx_account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->wx_account(), output);
  }

  // optional string icon = 4;
  if (has_icon()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->icon().data(), this->icon().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg_maj.GetBindingAgentInfoResp.icon");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->icon(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.GetBindingAgentInfoResp)
}

::google::protobuf::uint8* GetBindingAgentInfoResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.GetBindingAgentInfoResp)
  // optional uint32 user_id = 1;
  if (has_user_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg_maj.GetBindingAgentInfoResp.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional string wx_account = 3;
  if (has_wx_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->wx_account().data(), this->wx_account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg_maj.GetBindingAgentInfoResp.wx_account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->wx_account(), target);
  }

  // optional string icon = 4;
  if (has_icon()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->icon().data(), this->icon().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg_maj.GetBindingAgentInfoResp.icon");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->icon(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.GetBindingAgentInfoResp)
  return target;
}

int GetBindingAgentInfoResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.GetBindingAgentInfoResp)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 15u) {
    // optional uint32 user_id = 1;
    if (has_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->user_id());
    }

    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string wx_account = 3;
    if (has_wx_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->wx_account());
    }

    // optional string icon = 4;
    if (has_icon()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->icon());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetBindingAgentInfoResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.GetBindingAgentInfoResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetBindingAgentInfoResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetBindingAgentInfoResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.GetBindingAgentInfoResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.GetBindingAgentInfoResp)
    MergeFrom(*source);
  }
}

void GetBindingAgentInfoResp::MergeFrom(const GetBindingAgentInfoResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.GetBindingAgentInfoResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_user_id()) {
      set_user_id(from.user_id());
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_wx_account()) {
      set_has_wx_account();
      wx_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.wx_account_);
    }
    if (from.has_icon()) {
      set_has_icon();
      icon_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.icon_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void GetBindingAgentInfoResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.GetBindingAgentInfoResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBindingAgentInfoResp::CopyFrom(const GetBindingAgentInfoResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.GetBindingAgentInfoResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBindingAgentInfoResp::IsInitialized() const {

  return true;
}

void GetBindingAgentInfoResp::Swap(GetBindingAgentInfoResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetBindingAgentInfoResp::InternalSwap(GetBindingAgentInfoResp* other) {
  std::swap(user_id_, other->user_id_);
  name_.Swap(&other->name_);
  wx_account_.Swap(&other->wx_account_);
  icon_.Swap(&other->icon_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetBindingAgentInfoResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetBindingAgentInfoResp_descriptor_;
  metadata.reflection = GetBindingAgentInfoResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetBindingAgentInfoResp

// optional uint32 user_id = 1;
bool GetBindingAgentInfoResp::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetBindingAgentInfoResp::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
void GetBindingAgentInfoResp::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetBindingAgentInfoResp::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
 ::google::protobuf::uint32 GetBindingAgentInfoResp::user_id() const {
  // @@protoc_insertion_point(field_get:msg_maj.GetBindingAgentInfoResp.user_id)
  return user_id_;
}
 void GetBindingAgentInfoResp::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.GetBindingAgentInfoResp.user_id)
}

// optional string name = 2;
bool GetBindingAgentInfoResp::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetBindingAgentInfoResp::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
void GetBindingAgentInfoResp::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetBindingAgentInfoResp::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& GetBindingAgentInfoResp::name() const {
  // @@protoc_insertion_point(field_get:msg_maj.GetBindingAgentInfoResp.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetBindingAgentInfoResp::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.GetBindingAgentInfoResp.name)
}
 void GetBindingAgentInfoResp::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.GetBindingAgentInfoResp.name)
}
 void GetBindingAgentInfoResp::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.GetBindingAgentInfoResp.name)
}
 ::std::string* GetBindingAgentInfoResp::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:msg_maj.GetBindingAgentInfoResp.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetBindingAgentInfoResp::release_name() {
  // @@protoc_insertion_point(field_release:msg_maj.GetBindingAgentInfoResp.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetBindingAgentInfoResp::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.GetBindingAgentInfoResp.name)
}

// optional string wx_account = 3;
bool GetBindingAgentInfoResp::has_wx_account() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GetBindingAgentInfoResp::set_has_wx_account() {
  _has_bits_[0] |= 0x00000004u;
}
void GetBindingAgentInfoResp::clear_has_wx_account() {
  _has_bits_[0] &= ~0x00000004u;
}
void GetBindingAgentInfoResp::clear_wx_account() {
  wx_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_wx_account();
}
 const ::std::string& GetBindingAgentInfoResp::wx_account() const {
  // @@protoc_insertion_point(field_get:msg_maj.GetBindingAgentInfoResp.wx_account)
  return wx_account_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetBindingAgentInfoResp::set_wx_account(const ::std::string& value) {
  set_has_wx_account();
  wx_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.GetBindingAgentInfoResp.wx_account)
}
 void GetBindingAgentInfoResp::set_wx_account(const char* value) {
  set_has_wx_account();
  wx_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.GetBindingAgentInfoResp.wx_account)
}
 void GetBindingAgentInfoResp::set_wx_account(const char* value, size_t size) {
  set_has_wx_account();
  wx_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.GetBindingAgentInfoResp.wx_account)
}
 ::std::string* GetBindingAgentInfoResp::mutable_wx_account() {
  set_has_wx_account();
  // @@protoc_insertion_point(field_mutable:msg_maj.GetBindingAgentInfoResp.wx_account)
  return wx_account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetBindingAgentInfoResp::release_wx_account() {
  // @@protoc_insertion_point(field_release:msg_maj.GetBindingAgentInfoResp.wx_account)
  clear_has_wx_account();
  return wx_account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetBindingAgentInfoResp::set_allocated_wx_account(::std::string* wx_account) {
  if (wx_account != NULL) {
    set_has_wx_account();
  } else {
    clear_has_wx_account();
  }
  wx_account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), wx_account);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.GetBindingAgentInfoResp.wx_account)
}

// optional string icon = 4;
bool GetBindingAgentInfoResp::has_icon() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void GetBindingAgentInfoResp::set_has_icon() {
  _has_bits_[0] |= 0x00000008u;
}
void GetBindingAgentInfoResp::clear_has_icon() {
  _has_bits_[0] &= ~0x00000008u;
}
void GetBindingAgentInfoResp::clear_icon() {
  icon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_icon();
}
 const ::std::string& GetBindingAgentInfoResp::icon() const {
  // @@protoc_insertion_point(field_get:msg_maj.GetBindingAgentInfoResp.icon)
  return icon_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetBindingAgentInfoResp::set_icon(const ::std::string& value) {
  set_has_icon();
  icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.GetBindingAgentInfoResp.icon)
}
 void GetBindingAgentInfoResp::set_icon(const char* value) {
  set_has_icon();
  icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.GetBindingAgentInfoResp.icon)
}
 void GetBindingAgentInfoResp::set_icon(const char* value, size_t size) {
  set_has_icon();
  icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.GetBindingAgentInfoResp.icon)
}
 ::std::string* GetBindingAgentInfoResp::mutable_icon() {
  set_has_icon();
  // @@protoc_insertion_point(field_mutable:msg_maj.GetBindingAgentInfoResp.icon)
  return icon_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetBindingAgentInfoResp::release_icon() {
  // @@protoc_insertion_point(field_release:msg_maj.GetBindingAgentInfoResp.icon)
  clear_has_icon();
  return icon_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetBindingAgentInfoResp::set_allocated_icon(::std::string* icon) {
  if (icon != NULL) {
    set_has_icon();
  } else {
    clear_has_icon();
  }
  icon_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), icon);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.GetBindingAgentInfoResp.icon)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BindingAgentReq::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BindingAgentReq::BindingAgentReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.BindingAgentReq)
}

void BindingAgentReq::InitAsDefaultInstance() {
}

BindingAgentReq::BindingAgentReq(const BindingAgentReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.BindingAgentReq)
}

void BindingAgentReq::SharedCtor() {
  _cached_size_ = 0;
  user_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BindingAgentReq::~BindingAgentReq() {
  // @@protoc_insertion_point(destructor:msg_maj.BindingAgentReq)
  SharedDtor();
}

void BindingAgentReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BindingAgentReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BindingAgentReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BindingAgentReq_descriptor_;
}

const BindingAgentReq& BindingAgentReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5factivity_2eproto();
  return *default_instance_;
}

BindingAgentReq* BindingAgentReq::default_instance_ = NULL;

BindingAgentReq* BindingAgentReq::New(::google::protobuf::Arena* arena) const {
  BindingAgentReq* n = new BindingAgentReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BindingAgentReq::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.BindingAgentReq)
  user_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool BindingAgentReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.BindingAgentReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 user_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
          set_has_user_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.BindingAgentReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.BindingAgentReq)
  return false;
#undef DO_
}

void BindingAgentReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.BindingAgentReq)
  // optional uint32 user_id = 1;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.BindingAgentReq)
}

::google::protobuf::uint8* BindingAgentReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.BindingAgentReq)
  // optional uint32 user_id = 1;
  if (has_user_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.BindingAgentReq)
  return target;
}

int BindingAgentReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.BindingAgentReq)
  int total_size = 0;

  // optional uint32 user_id = 1;
  if (has_user_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BindingAgentReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.BindingAgentReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BindingAgentReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BindingAgentReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.BindingAgentReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.BindingAgentReq)
    MergeFrom(*source);
  }
}

void BindingAgentReq::MergeFrom(const BindingAgentReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.BindingAgentReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_user_id()) {
      set_user_id(from.user_id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void BindingAgentReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.BindingAgentReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BindingAgentReq::CopyFrom(const BindingAgentReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.BindingAgentReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BindingAgentReq::IsInitialized() const {

  return true;
}

void BindingAgentReq::Swap(BindingAgentReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BindingAgentReq::InternalSwap(BindingAgentReq* other) {
  std::swap(user_id_, other->user_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BindingAgentReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BindingAgentReq_descriptor_;
  metadata.reflection = BindingAgentReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BindingAgentReq

// optional uint32 user_id = 1;
bool BindingAgentReq::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BindingAgentReq::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
void BindingAgentReq::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void BindingAgentReq::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
 ::google::protobuf::uint32 BindingAgentReq::user_id() const {
  // @@protoc_insertion_point(field_get:msg_maj.BindingAgentReq.user_id)
  return user_id_;
}
 void BindingAgentReq::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.BindingAgentReq.user_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BindingAgentResp::kCodeFieldNumber;
const int BindingAgentResp::kUserIdFieldNumber;
const int BindingAgentResp::kNameFieldNumber;
const int BindingAgentResp::kWxAccountFieldNumber;
const int BindingAgentResp::kIconFieldNumber;
const int BindingAgentResp::kCodeInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BindingAgentResp::BindingAgentResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.BindingAgentResp)
}

void BindingAgentResp::InitAsDefaultInstance() {
}

BindingAgentResp::BindingAgentResp(const BindingAgentResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.BindingAgentResp)
}

void BindingAgentResp::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  code_ = 0;
  user_id_ = 0u;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wx_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BindingAgentResp::~BindingAgentResp() {
  // @@protoc_insertion_point(destructor:msg_maj.BindingAgentResp)
  SharedDtor();
}

void BindingAgentResp::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wx_account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void BindingAgentResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BindingAgentResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BindingAgentResp_descriptor_;
}

const BindingAgentResp& BindingAgentResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5factivity_2eproto();
  return *default_instance_;
}

BindingAgentResp* BindingAgentResp::default_instance_ = NULL;

BindingAgentResp* BindingAgentResp::New(::google::protobuf::Arena* arena) const {
  BindingAgentResp* n = new BindingAgentResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BindingAgentResp::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.BindingAgentResp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(BindingAgentResp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<BindingAgentResp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 63u) {
    ZR_(code_, user_id_);
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_wx_account()) {
      wx_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_icon()) {
      icon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_code_info()) {
      code_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool BindingAgentResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.BindingAgentResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 code = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
          set_has_code();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_user_id;
        break;
      }

      // optional uint32 user_id = 2;
      case 2: {
        if (tag == 16) {
         parse_user_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
          set_has_user_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_name;
        break;
      }

      // optional string name = 3;
      case 3: {
        if (tag == 26) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "msg_maj.BindingAgentResp.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_wx_account;
        break;
      }

      // optional string wx_account = 4;
      case 4: {
        if (tag == 34) {
         parse_wx_account:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_wx_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->wx_account().data(), this->wx_account().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "msg_maj.BindingAgentResp.wx_account");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_icon;
        break;
      }

      // optional string icon = 5;
      case 5: {
        if (tag == 42) {
         parse_icon:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_icon()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->icon().data(), this->icon().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "msg_maj.BindingAgentResp.icon");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_code_info;
        break;
      }

      // optional string code_info = 6;
      case 6: {
        if (tag == 50) {
         parse_code_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code_info()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->code_info().data(), this->code_info().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "msg_maj.BindingAgentResp.code_info");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.BindingAgentResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.BindingAgentResp)
  return false;
#undef DO_
}

void BindingAgentResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.BindingAgentResp)
  // required int32 code = 1;
  if (has_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // optional uint32 user_id = 2;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->user_id(), output);
  }

  // optional string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg_maj.BindingAgentResp.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // optional string wx_account = 4;
  if (has_wx_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->wx_account().data(), this->wx_account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg_maj.BindingAgentResp.wx_account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->wx_account(), output);
  }

  // optional string icon = 5;
  if (has_icon()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->icon().data(), this->icon().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg_maj.BindingAgentResp.icon");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->icon(), output);
  }

  // optional string code_info = 6;
  if (has_code_info()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code_info().data(), this->code_info().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg_maj.BindingAgentResp.code_info");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->code_info(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.BindingAgentResp)
}

::google::protobuf::uint8* BindingAgentResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.BindingAgentResp)
  // required int32 code = 1;
  if (has_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // optional uint32 user_id = 2;
  if (has_user_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->user_id(), target);
  }

  // optional string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg_maj.BindingAgentResp.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // optional string wx_account = 4;
  if (has_wx_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->wx_account().data(), this->wx_account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg_maj.BindingAgentResp.wx_account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->wx_account(), target);
  }

  // optional string icon = 5;
  if (has_icon()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->icon().data(), this->icon().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg_maj.BindingAgentResp.icon");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->icon(), target);
  }

  // optional string code_info = 6;
  if (has_code_info()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code_info().data(), this->code_info().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg_maj.BindingAgentResp.code_info");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->code_info(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.BindingAgentResp)
  return target;
}

int BindingAgentResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.BindingAgentResp)
  int total_size = 0;

  // required int32 code = 1;
  if (has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }
  if (_has_bits_[1 / 32] & 62u) {
    // optional uint32 user_id = 2;
    if (has_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->user_id());
    }

    // optional string name = 3;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string wx_account = 4;
    if (has_wx_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->wx_account());
    }

    // optional string icon = 5;
    if (has_icon()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->icon());
    }

    // optional string code_info = 6;
    if (has_code_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->code_info());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BindingAgentResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.BindingAgentResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BindingAgentResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BindingAgentResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.BindingAgentResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.BindingAgentResp)
    MergeFrom(*source);
  }
}

void BindingAgentResp::MergeFrom(const BindingAgentResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.BindingAgentResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_code()) {
      set_code(from.code());
    }
    if (from.has_user_id()) {
      set_user_id(from.user_id());
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_wx_account()) {
      set_has_wx_account();
      wx_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.wx_account_);
    }
    if (from.has_icon()) {
      set_has_icon();
      icon_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.icon_);
    }
    if (from.has_code_info()) {
      set_has_code_info();
      code_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_info_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void BindingAgentResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.BindingAgentResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BindingAgentResp::CopyFrom(const BindingAgentResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.BindingAgentResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BindingAgentResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void BindingAgentResp::Swap(BindingAgentResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BindingAgentResp::InternalSwap(BindingAgentResp* other) {
  std::swap(code_, other->code_);
  std::swap(user_id_, other->user_id_);
  name_.Swap(&other->name_);
  wx_account_.Swap(&other->wx_account_);
  icon_.Swap(&other->icon_);
  code_info_.Swap(&other->code_info_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BindingAgentResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BindingAgentResp_descriptor_;
  metadata.reflection = BindingAgentResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BindingAgentResp

// required int32 code = 1;
bool BindingAgentResp::has_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BindingAgentResp::set_has_code() {
  _has_bits_[0] |= 0x00000001u;
}
void BindingAgentResp::clear_has_code() {
  _has_bits_[0] &= ~0x00000001u;
}
void BindingAgentResp::clear_code() {
  code_ = 0;
  clear_has_code();
}
 ::google::protobuf::int32 BindingAgentResp::code() const {
  // @@protoc_insertion_point(field_get:msg_maj.BindingAgentResp.code)
  return code_;
}
 void BindingAgentResp::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.BindingAgentResp.code)
}

// optional uint32 user_id = 2;
bool BindingAgentResp::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BindingAgentResp::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
void BindingAgentResp::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void BindingAgentResp::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
 ::google::protobuf::uint32 BindingAgentResp::user_id() const {
  // @@protoc_insertion_point(field_get:msg_maj.BindingAgentResp.user_id)
  return user_id_;
}
 void BindingAgentResp::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.BindingAgentResp.user_id)
}

// optional string name = 3;
bool BindingAgentResp::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BindingAgentResp::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
void BindingAgentResp::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
void BindingAgentResp::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& BindingAgentResp::name() const {
  // @@protoc_insertion_point(field_get:msg_maj.BindingAgentResp.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BindingAgentResp::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.BindingAgentResp.name)
}
 void BindingAgentResp::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.BindingAgentResp.name)
}
 void BindingAgentResp::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.BindingAgentResp.name)
}
 ::std::string* BindingAgentResp::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:msg_maj.BindingAgentResp.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BindingAgentResp::release_name() {
  // @@protoc_insertion_point(field_release:msg_maj.BindingAgentResp.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BindingAgentResp::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.BindingAgentResp.name)
}

// optional string wx_account = 4;
bool BindingAgentResp::has_wx_account() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BindingAgentResp::set_has_wx_account() {
  _has_bits_[0] |= 0x00000008u;
}
void BindingAgentResp::clear_has_wx_account() {
  _has_bits_[0] &= ~0x00000008u;
}
void BindingAgentResp::clear_wx_account() {
  wx_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_wx_account();
}
 const ::std::string& BindingAgentResp::wx_account() const {
  // @@protoc_insertion_point(field_get:msg_maj.BindingAgentResp.wx_account)
  return wx_account_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BindingAgentResp::set_wx_account(const ::std::string& value) {
  set_has_wx_account();
  wx_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.BindingAgentResp.wx_account)
}
 void BindingAgentResp::set_wx_account(const char* value) {
  set_has_wx_account();
  wx_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.BindingAgentResp.wx_account)
}
 void BindingAgentResp::set_wx_account(const char* value, size_t size) {
  set_has_wx_account();
  wx_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.BindingAgentResp.wx_account)
}
 ::std::string* BindingAgentResp::mutable_wx_account() {
  set_has_wx_account();
  // @@protoc_insertion_point(field_mutable:msg_maj.BindingAgentResp.wx_account)
  return wx_account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BindingAgentResp::release_wx_account() {
  // @@protoc_insertion_point(field_release:msg_maj.BindingAgentResp.wx_account)
  clear_has_wx_account();
  return wx_account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BindingAgentResp::set_allocated_wx_account(::std::string* wx_account) {
  if (wx_account != NULL) {
    set_has_wx_account();
  } else {
    clear_has_wx_account();
  }
  wx_account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), wx_account);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.BindingAgentResp.wx_account)
}

// optional string icon = 5;
bool BindingAgentResp::has_icon() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void BindingAgentResp::set_has_icon() {
  _has_bits_[0] |= 0x00000010u;
}
void BindingAgentResp::clear_has_icon() {
  _has_bits_[0] &= ~0x00000010u;
}
void BindingAgentResp::clear_icon() {
  icon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_icon();
}
 const ::std::string& BindingAgentResp::icon() const {
  // @@protoc_insertion_point(field_get:msg_maj.BindingAgentResp.icon)
  return icon_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BindingAgentResp::set_icon(const ::std::string& value) {
  set_has_icon();
  icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.BindingAgentResp.icon)
}
 void BindingAgentResp::set_icon(const char* value) {
  set_has_icon();
  icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.BindingAgentResp.icon)
}
 void BindingAgentResp::set_icon(const char* value, size_t size) {
  set_has_icon();
  icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.BindingAgentResp.icon)
}
 ::std::string* BindingAgentResp::mutable_icon() {
  set_has_icon();
  // @@protoc_insertion_point(field_mutable:msg_maj.BindingAgentResp.icon)
  return icon_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BindingAgentResp::release_icon() {
  // @@protoc_insertion_point(field_release:msg_maj.BindingAgentResp.icon)
  clear_has_icon();
  return icon_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BindingAgentResp::set_allocated_icon(::std::string* icon) {
  if (icon != NULL) {
    set_has_icon();
  } else {
    clear_has_icon();
  }
  icon_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), icon);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.BindingAgentResp.icon)
}

// optional string code_info = 6;
bool BindingAgentResp::has_code_info() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void BindingAgentResp::set_has_code_info() {
  _has_bits_[0] |= 0x00000020u;
}
void BindingAgentResp::clear_has_code_info() {
  _has_bits_[0] &= ~0x00000020u;
}
void BindingAgentResp::clear_code_info() {
  code_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_code_info();
}
 const ::std::string& BindingAgentResp::code_info() const {
  // @@protoc_insertion_point(field_get:msg_maj.BindingAgentResp.code_info)
  return code_info_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BindingAgentResp::set_code_info(const ::std::string& value) {
  set_has_code_info();
  code_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.BindingAgentResp.code_info)
}
 void BindingAgentResp::set_code_info(const char* value) {
  set_has_code_info();
  code_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.BindingAgentResp.code_info)
}
 void BindingAgentResp::set_code_info(const char* value, size_t size) {
  set_has_code_info();
  code_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.BindingAgentResp.code_info)
}
 ::std::string* BindingAgentResp::mutable_code_info() {
  set_has_code_info();
  // @@protoc_insertion_point(field_mutable:msg_maj.BindingAgentResp.code_info)
  return code_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BindingAgentResp::release_code_info() {
  // @@protoc_insertion_point(field_release:msg_maj.BindingAgentResp.code_info)
  clear_has_code_info();
  return code_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BindingAgentResp::set_allocated_code_info(::std::string* code_info) {
  if (code_info != NULL) {
    set_has_code_info();
  } else {
    clear_has_code_info();
  }
  code_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code_info);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.BindingAgentResp.code_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SyncActivityInfo::kShareStatusFieldNumber;
const int SyncActivityInfo::kInvCanGetRoomCardFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SyncActivityInfo::SyncActivityInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.SyncActivityInfo)
}

void SyncActivityInfo::InitAsDefaultInstance() {
}

SyncActivityInfo::SyncActivityInfo(const SyncActivityInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.SyncActivityInfo)
}

void SyncActivityInfo::SharedCtor() {
  _cached_size_ = 0;
  share_status_ = 0u;
  inv_can_get_room_card_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SyncActivityInfo::~SyncActivityInfo() {
  // @@protoc_insertion_point(destructor:msg_maj.SyncActivityInfo)
  SharedDtor();
}

void SyncActivityInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SyncActivityInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SyncActivityInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SyncActivityInfo_descriptor_;
}

const SyncActivityInfo& SyncActivityInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5factivity_2eproto();
  return *default_instance_;
}

SyncActivityInfo* SyncActivityInfo::default_instance_ = NULL;

SyncActivityInfo* SyncActivityInfo::New(::google::protobuf::Arena* arena) const {
  SyncActivityInfo* n = new SyncActivityInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SyncActivityInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.SyncActivityInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(SyncActivityInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SyncActivityInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(share_status_, inv_can_get_room_card_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SyncActivityInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.SyncActivityInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 share_status = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &share_status_)));
          set_has_share_status();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_inv_can_get_room_card;
        break;
      }

      // optional uint32 inv_can_get_room_card = 2;
      case 2: {
        if (tag == 16) {
         parse_inv_can_get_room_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &inv_can_get_room_card_)));
          set_has_inv_can_get_room_card();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.SyncActivityInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.SyncActivityInfo)
  return false;
#undef DO_
}

void SyncActivityInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.SyncActivityInfo)
  // optional uint32 share_status = 1;
  if (has_share_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->share_status(), output);
  }

  // optional uint32 inv_can_get_room_card = 2;
  if (has_inv_can_get_room_card()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->inv_can_get_room_card(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.SyncActivityInfo)
}

::google::protobuf::uint8* SyncActivityInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.SyncActivityInfo)
  // optional uint32 share_status = 1;
  if (has_share_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->share_status(), target);
  }

  // optional uint32 inv_can_get_room_card = 2;
  if (has_inv_can_get_room_card()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->inv_can_get_room_card(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.SyncActivityInfo)
  return target;
}

int SyncActivityInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.SyncActivityInfo)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 share_status = 1;
    if (has_share_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->share_status());
    }

    // optional uint32 inv_can_get_room_card = 2;
    if (has_inv_can_get_room_card()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->inv_can_get_room_card());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncActivityInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.SyncActivityInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SyncActivityInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SyncActivityInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.SyncActivityInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.SyncActivityInfo)
    MergeFrom(*source);
  }
}

void SyncActivityInfo::MergeFrom(const SyncActivityInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.SyncActivityInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_share_status()) {
      set_share_status(from.share_status());
    }
    if (from.has_inv_can_get_room_card()) {
      set_inv_can_get_room_card(from.inv_can_get_room_card());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SyncActivityInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.SyncActivityInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncActivityInfo::CopyFrom(const SyncActivityInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.SyncActivityInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncActivityInfo::IsInitialized() const {

  return true;
}

void SyncActivityInfo::Swap(SyncActivityInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SyncActivityInfo::InternalSwap(SyncActivityInfo* other) {
  std::swap(share_status_, other->share_status_);
  std::swap(inv_can_get_room_card_, other->inv_can_get_room_card_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SyncActivityInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SyncActivityInfo_descriptor_;
  metadata.reflection = SyncActivityInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SyncActivityInfo

// optional uint32 share_status = 1;
bool SyncActivityInfo::has_share_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SyncActivityInfo::set_has_share_status() {
  _has_bits_[0] |= 0x00000001u;
}
void SyncActivityInfo::clear_has_share_status() {
  _has_bits_[0] &= ~0x00000001u;
}
void SyncActivityInfo::clear_share_status() {
  share_status_ = 0u;
  clear_has_share_status();
}
 ::google::protobuf::uint32 SyncActivityInfo::share_status() const {
  // @@protoc_insertion_point(field_get:msg_maj.SyncActivityInfo.share_status)
  return share_status_;
}
 void SyncActivityInfo::set_share_status(::google::protobuf::uint32 value) {
  set_has_share_status();
  share_status_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.SyncActivityInfo.share_status)
}

// optional uint32 inv_can_get_room_card = 2;
bool SyncActivityInfo::has_inv_can_get_room_card() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SyncActivityInfo::set_has_inv_can_get_room_card() {
  _has_bits_[0] |= 0x00000002u;
}
void SyncActivityInfo::clear_has_inv_can_get_room_card() {
  _has_bits_[0] &= ~0x00000002u;
}
void SyncActivityInfo::clear_inv_can_get_room_card() {
  inv_can_get_room_card_ = 0u;
  clear_has_inv_can_get_room_card();
}
 ::google::protobuf::uint32 SyncActivityInfo::inv_can_get_room_card() const {
  // @@protoc_insertion_point(field_get:msg_maj.SyncActivityInfo.inv_can_get_room_card)
  return inv_can_get_room_card_;
}
 void SyncActivityInfo::set_inv_can_get_room_card(::google::protobuf::uint32 value) {
  set_has_inv_can_get_room_card();
  inv_can_get_room_card_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.SyncActivityInfo.inv_can_get_room_card)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InputInvitationCodeReq::kInvitationCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InputInvitationCodeReq::InputInvitationCodeReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.InputInvitationCodeReq)
}

void InputInvitationCodeReq::InitAsDefaultInstance() {
}

InputInvitationCodeReq::InputInvitationCodeReq(const InputInvitationCodeReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.InputInvitationCodeReq)
}

void InputInvitationCodeReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  invitation_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InputInvitationCodeReq::~InputInvitationCodeReq() {
  // @@protoc_insertion_point(destructor:msg_maj.InputInvitationCodeReq)
  SharedDtor();
}

void InputInvitationCodeReq::SharedDtor() {
  invitation_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void InputInvitationCodeReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InputInvitationCodeReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InputInvitationCodeReq_descriptor_;
}

const InputInvitationCodeReq& InputInvitationCodeReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5factivity_2eproto();
  return *default_instance_;
}

InputInvitationCodeReq* InputInvitationCodeReq::default_instance_ = NULL;

InputInvitationCodeReq* InputInvitationCodeReq::New(::google::protobuf::Arena* arena) const {
  InputInvitationCodeReq* n = new InputInvitationCodeReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InputInvitationCodeReq::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.InputInvitationCodeReq)
  if (has_invitation_code()) {
    invitation_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool InputInvitationCodeReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.InputInvitationCodeReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string invitation_code = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_invitation_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->invitation_code().data(), this->invitation_code().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "msg_maj.InputInvitationCodeReq.invitation_code");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.InputInvitationCodeReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.InputInvitationCodeReq)
  return false;
#undef DO_
}

void InputInvitationCodeReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.InputInvitationCodeReq)
  // optional string invitation_code = 1;
  if (has_invitation_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->invitation_code().data(), this->invitation_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg_maj.InputInvitationCodeReq.invitation_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->invitation_code(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.InputInvitationCodeReq)
}

::google::protobuf::uint8* InputInvitationCodeReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.InputInvitationCodeReq)
  // optional string invitation_code = 1;
  if (has_invitation_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->invitation_code().data(), this->invitation_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg_maj.InputInvitationCodeReq.invitation_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->invitation_code(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.InputInvitationCodeReq)
  return target;
}

int InputInvitationCodeReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.InputInvitationCodeReq)
  int total_size = 0;

  // optional string invitation_code = 1;
  if (has_invitation_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->invitation_code());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InputInvitationCodeReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.InputInvitationCodeReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const InputInvitationCodeReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const InputInvitationCodeReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.InputInvitationCodeReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.InputInvitationCodeReq)
    MergeFrom(*source);
  }
}

void InputInvitationCodeReq::MergeFrom(const InputInvitationCodeReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.InputInvitationCodeReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_invitation_code()) {
      set_has_invitation_code();
      invitation_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.invitation_code_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void InputInvitationCodeReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.InputInvitationCodeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InputInvitationCodeReq::CopyFrom(const InputInvitationCodeReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.InputInvitationCodeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InputInvitationCodeReq::IsInitialized() const {

  return true;
}

void InputInvitationCodeReq::Swap(InputInvitationCodeReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InputInvitationCodeReq::InternalSwap(InputInvitationCodeReq* other) {
  invitation_code_.Swap(&other->invitation_code_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InputInvitationCodeReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InputInvitationCodeReq_descriptor_;
  metadata.reflection = InputInvitationCodeReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InputInvitationCodeReq

// optional string invitation_code = 1;
bool InputInvitationCodeReq::has_invitation_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void InputInvitationCodeReq::set_has_invitation_code() {
  _has_bits_[0] |= 0x00000001u;
}
void InputInvitationCodeReq::clear_has_invitation_code() {
  _has_bits_[0] &= ~0x00000001u;
}
void InputInvitationCodeReq::clear_invitation_code() {
  invitation_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_invitation_code();
}
 const ::std::string& InputInvitationCodeReq::invitation_code() const {
  // @@protoc_insertion_point(field_get:msg_maj.InputInvitationCodeReq.invitation_code)
  return invitation_code_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InputInvitationCodeReq::set_invitation_code(const ::std::string& value) {
  set_has_invitation_code();
  invitation_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.InputInvitationCodeReq.invitation_code)
}
 void InputInvitationCodeReq::set_invitation_code(const char* value) {
  set_has_invitation_code();
  invitation_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.InputInvitationCodeReq.invitation_code)
}
 void InputInvitationCodeReq::set_invitation_code(const char* value, size_t size) {
  set_has_invitation_code();
  invitation_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.InputInvitationCodeReq.invitation_code)
}
 ::std::string* InputInvitationCodeReq::mutable_invitation_code() {
  set_has_invitation_code();
  // @@protoc_insertion_point(field_mutable:msg_maj.InputInvitationCodeReq.invitation_code)
  return invitation_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* InputInvitationCodeReq::release_invitation_code() {
  // @@protoc_insertion_point(field_release:msg_maj.InputInvitationCodeReq.invitation_code)
  clear_has_invitation_code();
  return invitation_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InputInvitationCodeReq::set_allocated_invitation_code(::std::string* invitation_code) {
  if (invitation_code != NULL) {
    set_has_invitation_code();
  } else {
    clear_has_invitation_code();
  }
  invitation_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), invitation_code);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.InputInvitationCodeReq.invitation_code)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InputInvitationCodeResp::kCodeFieldNumber;
const int InputInvitationCodeResp::kRewardRoomCardFieldNumber;
const int InputInvitationCodeResp::kCodeInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InputInvitationCodeResp::InputInvitationCodeResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.InputInvitationCodeResp)
}

void InputInvitationCodeResp::InitAsDefaultInstance() {
}

InputInvitationCodeResp::InputInvitationCodeResp(const InputInvitationCodeResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.InputInvitationCodeResp)
}

void InputInvitationCodeResp::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  code_ = 0;
  reward_room_card_ = 0u;
  code_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InputInvitationCodeResp::~InputInvitationCodeResp() {
  // @@protoc_insertion_point(destructor:msg_maj.InputInvitationCodeResp)
  SharedDtor();
}

void InputInvitationCodeResp::SharedDtor() {
  code_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void InputInvitationCodeResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InputInvitationCodeResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InputInvitationCodeResp_descriptor_;
}

const InputInvitationCodeResp& InputInvitationCodeResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5factivity_2eproto();
  return *default_instance_;
}

InputInvitationCodeResp* InputInvitationCodeResp::default_instance_ = NULL;

InputInvitationCodeResp* InputInvitationCodeResp::New(::google::protobuf::Arena* arena) const {
  InputInvitationCodeResp* n = new InputInvitationCodeResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InputInvitationCodeResp::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.InputInvitationCodeResp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(InputInvitationCodeResp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<InputInvitationCodeResp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 7u) {
    ZR_(code_, reward_room_card_);
    if (has_code_info()) {
      code_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool InputInvitationCodeResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.InputInvitationCodeResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 code = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
          set_has_code();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_reward_room_card;
        break;
      }

      // optional uint32 reward_room_card = 2;
      case 2: {
        if (tag == 16) {
         parse_reward_room_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reward_room_card_)));
          set_has_reward_room_card();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_code_info;
        break;
      }

      // optional string code_info = 3;
      case 3: {
        if (tag == 26) {
         parse_code_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code_info()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->code_info().data(), this->code_info().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "msg_maj.InputInvitationCodeResp.code_info");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.InputInvitationCodeResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.InputInvitationCodeResp)
  return false;
#undef DO_
}

void InputInvitationCodeResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.InputInvitationCodeResp)
  // optional int32 code = 1;
  if (has_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // optional uint32 reward_room_card = 2;
  if (has_reward_room_card()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->reward_room_card(), output);
  }

  // optional string code_info = 3;
  if (has_code_info()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code_info().data(), this->code_info().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg_maj.InputInvitationCodeResp.code_info");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->code_info(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.InputInvitationCodeResp)
}

::google::protobuf::uint8* InputInvitationCodeResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.InputInvitationCodeResp)
  // optional int32 code = 1;
  if (has_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // optional uint32 reward_room_card = 2;
  if (has_reward_room_card()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->reward_room_card(), target);
  }

  // optional string code_info = 3;
  if (has_code_info()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code_info().data(), this->code_info().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg_maj.InputInvitationCodeResp.code_info");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->code_info(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.InputInvitationCodeResp)
  return target;
}

int InputInvitationCodeResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.InputInvitationCodeResp)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 code = 1;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->code());
    }

    // optional uint32 reward_room_card = 2;
    if (has_reward_room_card()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->reward_room_card());
    }

    // optional string code_info = 3;
    if (has_code_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->code_info());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InputInvitationCodeResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.InputInvitationCodeResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const InputInvitationCodeResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const InputInvitationCodeResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.InputInvitationCodeResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.InputInvitationCodeResp)
    MergeFrom(*source);
  }
}

void InputInvitationCodeResp::MergeFrom(const InputInvitationCodeResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.InputInvitationCodeResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_code()) {
      set_code(from.code());
    }
    if (from.has_reward_room_card()) {
      set_reward_room_card(from.reward_room_card());
    }
    if (from.has_code_info()) {
      set_has_code_info();
      code_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_info_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void InputInvitationCodeResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.InputInvitationCodeResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InputInvitationCodeResp::CopyFrom(const InputInvitationCodeResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.InputInvitationCodeResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InputInvitationCodeResp::IsInitialized() const {

  return true;
}

void InputInvitationCodeResp::Swap(InputInvitationCodeResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InputInvitationCodeResp::InternalSwap(InputInvitationCodeResp* other) {
  std::swap(code_, other->code_);
  std::swap(reward_room_card_, other->reward_room_card_);
  code_info_.Swap(&other->code_info_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InputInvitationCodeResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InputInvitationCodeResp_descriptor_;
  metadata.reflection = InputInvitationCodeResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InputInvitationCodeResp

// optional int32 code = 1;
bool InputInvitationCodeResp::has_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void InputInvitationCodeResp::set_has_code() {
  _has_bits_[0] |= 0x00000001u;
}
void InputInvitationCodeResp::clear_has_code() {
  _has_bits_[0] &= ~0x00000001u;
}
void InputInvitationCodeResp::clear_code() {
  code_ = 0;
  clear_has_code();
}
 ::google::protobuf::int32 InputInvitationCodeResp::code() const {
  // @@protoc_insertion_point(field_get:msg_maj.InputInvitationCodeResp.code)
  return code_;
}
 void InputInvitationCodeResp::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.InputInvitationCodeResp.code)
}

// optional uint32 reward_room_card = 2;
bool InputInvitationCodeResp::has_reward_room_card() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void InputInvitationCodeResp::set_has_reward_room_card() {
  _has_bits_[0] |= 0x00000002u;
}
void InputInvitationCodeResp::clear_has_reward_room_card() {
  _has_bits_[0] &= ~0x00000002u;
}
void InputInvitationCodeResp::clear_reward_room_card() {
  reward_room_card_ = 0u;
  clear_has_reward_room_card();
}
 ::google::protobuf::uint32 InputInvitationCodeResp::reward_room_card() const {
  // @@protoc_insertion_point(field_get:msg_maj.InputInvitationCodeResp.reward_room_card)
  return reward_room_card_;
}
 void InputInvitationCodeResp::set_reward_room_card(::google::protobuf::uint32 value) {
  set_has_reward_room_card();
  reward_room_card_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.InputInvitationCodeResp.reward_room_card)
}

// optional string code_info = 3;
bool InputInvitationCodeResp::has_code_info() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void InputInvitationCodeResp::set_has_code_info() {
  _has_bits_[0] |= 0x00000004u;
}
void InputInvitationCodeResp::clear_has_code_info() {
  _has_bits_[0] &= ~0x00000004u;
}
void InputInvitationCodeResp::clear_code_info() {
  code_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_code_info();
}
 const ::std::string& InputInvitationCodeResp::code_info() const {
  // @@protoc_insertion_point(field_get:msg_maj.InputInvitationCodeResp.code_info)
  return code_info_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InputInvitationCodeResp::set_code_info(const ::std::string& value) {
  set_has_code_info();
  code_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.InputInvitationCodeResp.code_info)
}
 void InputInvitationCodeResp::set_code_info(const char* value) {
  set_has_code_info();
  code_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.InputInvitationCodeResp.code_info)
}
 void InputInvitationCodeResp::set_code_info(const char* value, size_t size) {
  set_has_code_info();
  code_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.InputInvitationCodeResp.code_info)
}
 ::std::string* InputInvitationCodeResp::mutable_code_info() {
  set_has_code_info();
  // @@protoc_insertion_point(field_mutable:msg_maj.InputInvitationCodeResp.code_info)
  return code_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* InputInvitationCodeResp::release_code_info() {
  // @@protoc_insertion_point(field_release:msg_maj.InputInvitationCodeResp.code_info)
  clear_has_code_info();
  return code_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InputInvitationCodeResp::set_allocated_code_info(::std::string* code_info) {
  if (code_info != NULL) {
    set_has_code_info();
  } else {
    clear_has_code_info();
  }
  code_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code_info);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.InputInvitationCodeResp.code_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace msg_maj

// @@protoc_insertion_point(global_scope)
