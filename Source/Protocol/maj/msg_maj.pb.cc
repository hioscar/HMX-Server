// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_maj.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "msg_maj.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace msg_maj {

namespace {

const ::google::protobuf::Descriptor* StartGameReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StartGameReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* StartRoundResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StartRoundResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* DiscardReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DiscardReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* EventInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EventInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* DiscardResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DiscardResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PromptPai_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PromptPai_reflection_ = NULL;
const ::google::protobuf::Descriptor* TingPai_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TingPai_reflection_ = NULL;
const ::google::protobuf::Descriptor* TingPaiDiscardNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TingPaiDiscardNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* TingPaiWaiteNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TingPaiWaiteNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* DealNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DealNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResponseEventReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResponseEventReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResponseEventResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResponseEventResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* GameResultNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GameResultNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* DisCardOver_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DisCardOver_reflection_ = NULL;
const ::google::protobuf::Descriptor* TotalResultNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TotalResultNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReconnectLoadReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReconnectLoadReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReconnectPrepare_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReconnectPrepare_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReconnectLoadResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReconnectLoadResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReconnectReadyReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReconnectReadyReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReconnectSyncCard_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReconnectSyncCard_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReconnectOtherReadyReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReconnectOtherReadyReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* SyncPlayerStatus_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SyncPlayerStatus_reflection_ = NULL;
const ::google::protobuf::Descriptor* GpsSeatInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GpsSeatInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* AskStartGame_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AskStartGame_reflection_ = NULL;
const ::google::protobuf::Descriptor* AcceptStartReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AcceptStartReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* AcceptStartNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AcceptStartNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* PrepareRoundReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PrepareRoundReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PrepareRoundNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PrepareRoundNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* TotalResultSeat_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TotalResultSeat_reflection_ = NULL;
const ::google::protobuf::Descriptor* SeatInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SeatInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* GameResultSeat_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GameResultSeat_reflection_ = NULL;
const ::google::protobuf::Descriptor* HuDetail_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HuDetail_reflection_ = NULL;
const ::google::protobuf::Descriptor* FengYuDetail_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FengYuDetail_reflection_ = NULL;
const ::google::protobuf::Descriptor* HuaZhuDetail_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HuaZhuDetail_reflection_ = NULL;
const ::google::protobuf::Descriptor* DaJiaoDetail_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DaJiaoDetail_reflection_ = NULL;
const ::google::protobuf::Descriptor* ScoreDetail_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ScoreDetail_reflection_ = NULL;
const ::google::protobuf::Descriptor* OpenTile_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OpenTile_reflection_ = NULL;
const ::google::protobuf::Descriptor* YlHuInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  YlHuInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* BbHuInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BbHuInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* LcHuInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LcHuInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* XzHuInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  XzHuInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* XlHuInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  XlHuInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* HuInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HuInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* SameIpSeats_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SameIpSeats_reflection_ = NULL;
const ::google::protobuf::Descriptor* QuickMessageReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QuickMessageReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* QuickMessageResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QuickMessageResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* NotifyPlayerEvent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifyPlayerEvent_reflection_ = NULL;
const ::google::protobuf::Descriptor* NotifyGhostPaiListResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifyGhostPaiListResult_reflection_ = NULL;
const ::google::protobuf::Descriptor* NotifyGenzhuang_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifyGenzhuang_reflection_ = NULL;
const ::google::protobuf::Descriptor* AskSanZhang_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AskSanZhang_reflection_ = NULL;
const ::google::protobuf::Descriptor* HuanSanZhangReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HuanSanZhangReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* HuanSanZhangNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HuanSanZhangNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* AskDingQue_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AskDingQue_reflection_ = NULL;
const ::google::protobuf::Descriptor* DingQueReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DingQueReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* DingQueNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DingQueNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* HuPaiListNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HuPaiListNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* MyScoreListReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MyScoreListReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* MyScoreListResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MyScoreListResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* MyTingPaiListReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MyTingPaiListReq_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* c_cmd_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* op_code_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* maj_type_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* player_status_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* event_type_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* kong_type_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* hu_type_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* hu_way_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_msg_5fmaj_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_msg_5fmaj_2eproto() {
  protobuf_AddDesc_msg_5fmaj_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "msg_maj.proto");
  GOOGLE_CHECK(file != NULL);
  StartGameReq_descriptor_ = file->message_type(0);
  static const int StartGameReq_offsets_[1] = {
  };
  StartGameReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      StartGameReq_descriptor_,
      StartGameReq::default_instance_,
      StartGameReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartGameReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(StartGameReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartGameReq, _internal_metadata_),
      -1);
  StartRoundResp_descriptor_ = file->message_type(1);
  static const int StartRoundResp_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartRoundResp, deny_seat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartRoundResp, dice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartRoundResp, tile_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartRoundResp, banker_seat_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartRoundResp, events_),
  };
  StartRoundResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      StartRoundResp_descriptor_,
      StartRoundResp::default_instance_,
      StartRoundResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartRoundResp, _has_bits_[0]),
      -1,
      -1,
      sizeof(StartRoundResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartRoundResp, _internal_metadata_),
      -1);
  DiscardReq_descriptor_ = file->message_type(2);
  static const int DiscardReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DiscardReq, tile_),
  };
  DiscardReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DiscardReq_descriptor_,
      DiscardReq::default_instance_,
      DiscardReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DiscardReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(DiscardReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DiscardReq, _internal_metadata_),
      -1);
  EventInfo_descriptor_ = file->message_type(3);
  static const int EventInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventInfo, event_t_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventInfo, event_pai_),
  };
  EventInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EventInfo_descriptor_,
      EventInfo::default_instance_,
      EventInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(EventInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventInfo, _internal_metadata_),
      -1);
  DiscardResp_descriptor_ = file->message_type(4);
  static const int DiscardResp_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DiscardResp, seat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DiscardResp, tile_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DiscardResp, tileleftcount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DiscardResp, eventlist_),
  };
  DiscardResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DiscardResp_descriptor_,
      DiscardResp::default_instance_,
      DiscardResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DiscardResp, _has_bits_[0]),
      -1,
      -1,
      sizeof(DiscardResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DiscardResp, _internal_metadata_),
      -1);
  PromptPai_descriptor_ = file->message_type(5);
  static const int PromptPai_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PromptPai, hupai_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PromptPai, paidest_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PromptPai, painum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PromptPai, hutype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PromptPai, mulit_),
  };
  PromptPai_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PromptPai_descriptor_,
      PromptPai::default_instance_,
      PromptPai_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PromptPai, _has_bits_[0]),
      -1,
      -1,
      sizeof(PromptPai),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PromptPai, _internal_metadata_),
      -1);
  TingPai_descriptor_ = file->message_type(6);
  static const int TingPai_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TingPai, dicard_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TingPai, prompt_list_),
  };
  TingPai_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TingPai_descriptor_,
      TingPai::default_instance_,
      TingPai_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TingPai, _has_bits_[0]),
      -1,
      -1,
      sizeof(TingPai),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TingPai, _internal_metadata_),
      -1);
  TingPaiDiscardNotify_descriptor_ = file->message_type(7);
  static const int TingPaiDiscardNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TingPaiDiscardNotify, ting_list_),
  };
  TingPaiDiscardNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TingPaiDiscardNotify_descriptor_,
      TingPaiDiscardNotify::default_instance_,
      TingPaiDiscardNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TingPaiDiscardNotify, _has_bits_[0]),
      -1,
      -1,
      sizeof(TingPaiDiscardNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TingPaiDiscardNotify, _internal_metadata_),
      -1);
  TingPaiWaiteNotify_descriptor_ = file->message_type(8);
  static const int TingPaiWaiteNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TingPaiWaiteNotify, prompt_list_),
  };
  TingPaiWaiteNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TingPaiWaiteNotify_descriptor_,
      TingPaiWaiteNotify::default_instance_,
      TingPaiWaiteNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TingPaiWaiteNotify, _has_bits_[0]),
      -1,
      -1,
      sizeof(TingPaiWaiteNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TingPaiWaiteNotify, _internal_metadata_),
      -1);
  DealNotify_descriptor_ = file->message_type(9);
  static const int DealNotify_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DealNotify, seat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DealNotify, tile_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DealNotify, tail_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DealNotify, eventlist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DealNotify, desk_tile_count_),
  };
  DealNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DealNotify_descriptor_,
      DealNotify::default_instance_,
      DealNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DealNotify, _has_bits_[0]),
      -1,
      -1,
      sizeof(DealNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DealNotify, _internal_metadata_),
      -1);
  ResponseEventReq_descriptor_ = file->message_type(10);
  static const int ResponseEventReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseEventReq, event_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseEventReq, tile_),
  };
  ResponseEventReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ResponseEventReq_descriptor_,
      ResponseEventReq::default_instance_,
      ResponseEventReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseEventReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(ResponseEventReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseEventReq, _internal_metadata_),
      -1);
  ResponseEventResp_descriptor_ = file->message_type(11);
  static const int ResponseEventResp_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseEventResp, code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseEventResp, seat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseEventResp, event_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseEventResp, eventtilelist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseEventResp, hu_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseEventResp, victim_seat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseEventResp, triggerevents_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseEventResp, tileleftcount_),
  };
  ResponseEventResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ResponseEventResp_descriptor_,
      ResponseEventResp::default_instance_,
      ResponseEventResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseEventResp, _has_bits_[0]),
      -1,
      -1,
      sizeof(ResponseEventResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseEventResp, _internal_metadata_),
      -1);
  GameResultNotify_descriptor_ = file->message_type(12);
  static const int GameResultNotify_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameResultNotify, is_end_all_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameResultNotify, this_inn_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameResultNotify, seats_),
  };
  GameResultNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GameResultNotify_descriptor_,
      GameResultNotify::default_instance_,
      GameResultNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameResultNotify, _has_bits_[0]),
      -1,
      -1,
      sizeof(GameResultNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameResultNotify, _internal_metadata_),
      -1);
  DisCardOver_descriptor_ = file->message_type(13);
  static const int DisCardOver_offsets_[1] = {
  };
  DisCardOver_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DisCardOver_descriptor_,
      DisCardOver::default_instance_,
      DisCardOver_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DisCardOver, _has_bits_[0]),
      -1,
      -1,
      sizeof(DisCardOver),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DisCardOver, _internal_metadata_),
      -1);
  TotalResultNotify_descriptor_ = file->message_type(14);
  static const int TotalResultNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TotalResultNotify, seats_),
  };
  TotalResultNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TotalResultNotify_descriptor_,
      TotalResultNotify::default_instance_,
      TotalResultNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TotalResultNotify, _has_bits_[0]),
      -1,
      -1,
      sizeof(TotalResultNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TotalResultNotify, _internal_metadata_),
      -1);
  ReconnectLoadReq_descriptor_ = file->message_type(15);
  static const int ReconnectLoadReq_offsets_[1] = {
  };
  ReconnectLoadReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReconnectLoadReq_descriptor_,
      ReconnectLoadReq::default_instance_,
      ReconnectLoadReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReconnectLoadReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(ReconnectLoadReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReconnectLoadReq, _internal_metadata_),
      -1);
  ReconnectPrepare_descriptor_ = file->message_type(16);
  static const int ReconnectPrepare_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReconnectPrepare, seat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReconnectPrepare, accept_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReconnectPrepare, pstatus_),
  };
  ReconnectPrepare_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReconnectPrepare_descriptor_,
      ReconnectPrepare::default_instance_,
      ReconnectPrepare_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReconnectPrepare, _has_bits_[0]),
      -1,
      -1,
      sizeof(ReconnectPrepare),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReconnectPrepare, _internal_metadata_),
      -1);
  ReconnectLoadResp_descriptor_ = file->message_type(17);
  static const int ReconnectLoadResp_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReconnectLoadResp, is_start_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReconnectLoadResp, self_seat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReconnectLoadResp, banker_seat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReconnectLoadResp, dice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReconnectLoadResp, desk_tile_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReconnectLoadResp, self_events_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReconnectLoadResp, curr_tile_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReconnectLoadResp, self_discard_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReconnectLoadResp, send_disover_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReconnectLoadResp, prepare_info_),
  };
  ReconnectLoadResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReconnectLoadResp_descriptor_,
      ReconnectLoadResp::default_instance_,
      ReconnectLoadResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReconnectLoadResp, _has_bits_[0]),
      -1,
      -1,
      sizeof(ReconnectLoadResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReconnectLoadResp, _internal_metadata_),
      -1);
  ReconnectReadyReq_descriptor_ = file->message_type(18);
  static const int ReconnectReadyReq_offsets_[1] = {
  };
  ReconnectReadyReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReconnectReadyReq_descriptor_,
      ReconnectReadyReq::default_instance_,
      ReconnectReadyReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReconnectReadyReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(ReconnectReadyReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReconnectReadyReq, _internal_metadata_),
      -1);
  ReconnectSyncCard_descriptor_ = file->message_type(19);
  static const int ReconnectSyncCard_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReconnectSyncCard, desk_tile_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReconnectSyncCard, seats_),
  };
  ReconnectSyncCard_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReconnectSyncCard_descriptor_,
      ReconnectSyncCard::default_instance_,
      ReconnectSyncCard_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReconnectSyncCard, _has_bits_[0]),
      -1,
      -1,
      sizeof(ReconnectSyncCard),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReconnectSyncCard, _internal_metadata_),
      -1);
  ReconnectOtherReadyReq_descriptor_ = file->message_type(20);
  static const int ReconnectOtherReadyReq_offsets_[1] = {
  };
  ReconnectOtherReadyReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReconnectOtherReadyReq_descriptor_,
      ReconnectOtherReadyReq::default_instance_,
      ReconnectOtherReadyReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReconnectOtherReadyReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(ReconnectOtherReadyReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReconnectOtherReadyReq, _internal_metadata_),
      -1);
  SyncPlayerStatus_descriptor_ = file->message_type(21);
  static const int SyncPlayerStatus_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncPlayerStatus, seat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncPlayerStatus, pstatus_),
  };
  SyncPlayerStatus_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SyncPlayerStatus_descriptor_,
      SyncPlayerStatus::default_instance_,
      SyncPlayerStatus_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncPlayerStatus, _has_bits_[0]),
      -1,
      -1,
      sizeof(SyncPlayerStatus),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncPlayerStatus, _internal_metadata_),
      -1);
  GpsSeatInfo_descriptor_ = file->message_type(22);
  static const int GpsSeatInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GpsSeatInfo, seat_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GpsSeatInfo, longitude_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GpsSeatInfo, latitude_),
  };
  GpsSeatInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GpsSeatInfo_descriptor_,
      GpsSeatInfo::default_instance_,
      GpsSeatInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GpsSeatInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(GpsSeatInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GpsSeatInfo, _internal_metadata_),
      -1);
  AskStartGame_descriptor_ = file->message_type(23);
  static const int AskStartGame_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AskStartGame, same_ips_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AskStartGame, timer_sec_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AskStartGame, seat_gps_list_),
  };
  AskStartGame_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AskStartGame_descriptor_,
      AskStartGame::default_instance_,
      AskStartGame_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AskStartGame, _has_bits_[0]),
      -1,
      -1,
      sizeof(AskStartGame),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AskStartGame, _internal_metadata_),
      -1);
  AcceptStartReq_descriptor_ = file->message_type(24);
  static const int AcceptStartReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptStartReq, accept_),
  };
  AcceptStartReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AcceptStartReq_descriptor_,
      AcceptStartReq::default_instance_,
      AcceptStartReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptStartReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(AcceptStartReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptStartReq, _internal_metadata_),
      -1);
  AcceptStartNotify_descriptor_ = file->message_type(25);
  static const int AcceptStartNotify_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptStartNotify, seat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptStartNotify, accept_),
  };
  AcceptStartNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AcceptStartNotify_descriptor_,
      AcceptStartNotify::default_instance_,
      AcceptStartNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptStartNotify, _has_bits_[0]),
      -1,
      -1,
      sizeof(AcceptStartNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptStartNotify, _internal_metadata_),
      -1);
  PrepareRoundReq_descriptor_ = file->message_type(26);
  static const int PrepareRoundReq_offsets_[1] = {
  };
  PrepareRoundReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PrepareRoundReq_descriptor_,
      PrepareRoundReq::default_instance_,
      PrepareRoundReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrepareRoundReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(PrepareRoundReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrepareRoundReq, _internal_metadata_),
      -1);
  PrepareRoundNotify_descriptor_ = file->message_type(27);
  static const int PrepareRoundNotify_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrepareRoundNotify, seat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrepareRoundNotify, prepare_),
  };
  PrepareRoundNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PrepareRoundNotify_descriptor_,
      PrepareRoundNotify::default_instance_,
      PrepareRoundNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrepareRoundNotify, _has_bits_[0]),
      -1,
      -1,
      sizeof(PrepareRoundNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrepareRoundNotify, _internal_metadata_),
      -1);
  TotalResultSeat_descriptor_ = file->message_type(28);
  static const int TotalResultSeat_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TotalResultSeat, seat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TotalResultSeat, total_score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TotalResultSeat, big_win_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TotalResultSeat, zimo_cnt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TotalResultSeat, ghost_zimo_cnt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TotalResultSeat, dianpao_cnt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TotalResultSeat, angang_cnt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TotalResultSeat, minggang_cnt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TotalResultSeat, guoshougang_cnt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TotalResultSeat, total_gang_cnt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TotalResultSeat, fanggang_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TotalResultSeat, hit_ma_cnt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TotalResultSeat, hu_total_cnt_),
  };
  TotalResultSeat_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TotalResultSeat_descriptor_,
      TotalResultSeat::default_instance_,
      TotalResultSeat_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TotalResultSeat, _has_bits_[0]),
      -1,
      -1,
      sizeof(TotalResultSeat),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TotalResultSeat, _internal_metadata_),
      -1);
  SeatInfo_descriptor_ = file->message_type(29);
  static const int SeatInfo_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SeatInfo, seat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SeatInfo, hand_tiles_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SeatInfo, open_tiles_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SeatInfo, discard_tiles_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SeatInfo, hu_tiles_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SeatInfo, pstatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SeatInfo, score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SeatInfo, dingque_),
  };
  SeatInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SeatInfo_descriptor_,
      SeatInfo::default_instance_,
      SeatInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SeatInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(SeatInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SeatInfo, _internal_metadata_),
      -1);
  GameResultSeat_descriptor_ = file->message_type(30);
  static const int GameResultSeat_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameResultSeat, seat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameResultSeat, total_score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameResultSeat, hand_tiles_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameResultSeat, open_tiles_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameResultSeat, an_gang_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameResultSeat, ming_gang_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameResultSeat, guo_shou_gang_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameResultSeat, hu_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameResultSeat, hu_tile_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameResultSeat, dingque_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameResultSeat, score_detail_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameResultSeat, game_type_),
  };
  GameResultSeat_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GameResultSeat_descriptor_,
      GameResultSeat::default_instance_,
      GameResultSeat_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameResultSeat, _has_bits_[0]),
      -1,
      -1,
      sizeof(GameResultSeat),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameResultSeat, _internal_metadata_),
      -1);
  HuDetail_descriptor_ = file->message_type(31);
  static const int HuDetail_offsets_[20] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HuDetail, myseat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HuDetail, huseat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HuDetail, doedseat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HuDetail, score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HuDetail, huway_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HuDetail, hutype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HuDetail, humulti_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HuDetail, hutile_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HuDetail, item1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HuDetail, item2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HuDetail, item3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HuDetail, item4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HuDetail, item5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HuDetail, item6_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HuDetail, item7_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HuDetail, item8_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HuDetail, item9_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HuDetail, item10_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HuDetail, item11_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HuDetail, doedmultiseat_),
  };
  HuDetail_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HuDetail_descriptor_,
      HuDetail::default_instance_,
      HuDetail_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HuDetail, _has_bits_[0]),
      -1,
      -1,
      sizeof(HuDetail),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HuDetail, _internal_metadata_),
      -1);
  FengYuDetail_descriptor_ = file->message_type(32);
  static const int FengYuDetail_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FengYuDetail, myseat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FengYuDetail, huseat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FengYuDetail, doedseat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FengYuDetail, score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FengYuDetail, fengyutype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FengYuDetail, doedmultiseat_),
  };
  FengYuDetail_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FengYuDetail_descriptor_,
      FengYuDetail::default_instance_,
      FengYuDetail_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FengYuDetail, _has_bits_[0]),
      -1,
      -1,
      sizeof(FengYuDetail),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FengYuDetail, _internal_metadata_),
      -1);
  HuaZhuDetail_descriptor_ = file->message_type(33);
  static const int HuaZhuDetail_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HuaZhuDetail, myseat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HuaZhuDetail, huseat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HuaZhuDetail, doedseat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HuaZhuDetail, score_),
  };
  HuaZhuDetail_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HuaZhuDetail_descriptor_,
      HuaZhuDetail::default_instance_,
      HuaZhuDetail_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HuaZhuDetail, _has_bits_[0]),
      -1,
      -1,
      sizeof(HuaZhuDetail),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HuaZhuDetail, _internal_metadata_),
      -1);
  DaJiaoDetail_descriptor_ = file->message_type(34);
  static const int DaJiaoDetail_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DaJiaoDetail, myseat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DaJiaoDetail, huseat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DaJiaoDetail, doedseat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DaJiaoDetail, score_),
  };
  DaJiaoDetail_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DaJiaoDetail_descriptor_,
      DaJiaoDetail::default_instance_,
      DaJiaoDetail_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DaJiaoDetail, _has_bits_[0]),
      -1,
      -1,
      sizeof(DaJiaoDetail),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DaJiaoDetail, _internal_metadata_),
      -1);
  ScoreDetail_descriptor_ = file->message_type(35);
  static const int ScoreDetail_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScoreDetail, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScoreDetail, hu_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScoreDetail, fengyu_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScoreDetail, huazhu_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScoreDetail, dajiao_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScoreDetail, backtax_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScoreDetail, hujzy_),
  };
  ScoreDetail_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ScoreDetail_descriptor_,
      ScoreDetail::default_instance_,
      ScoreDetail_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScoreDetail, _has_bits_[0]),
      -1,
      -1,
      sizeof(ScoreDetail),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScoreDetail, _internal_metadata_),
      -1);
  OpenTile_descriptor_ = file->message_type(36);
  static const int OpenTile_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenTile, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenTile, tile_list_),
  };
  OpenTile_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      OpenTile_descriptor_,
      OpenTile::default_instance_,
      OpenTile_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenTile, _has_bits_[0]),
      -1,
      -1,
      sizeof(OpenTile),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenTile, _internal_metadata_),
      -1);
  YlHuInfo_descriptor_ = file->message_type(37);
  static const int YlHuInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YlHuInfo, huway_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YlHuInfo, hutype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YlHuInfo, ma_pai_all_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YlHuInfo, ma_pai_hit_),
  };
  YlHuInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      YlHuInfo_descriptor_,
      YlHuInfo::default_instance_,
      YlHuInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YlHuInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(YlHuInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YlHuInfo, _internal_metadata_),
      -1);
  BbHuInfo_descriptor_ = file->message_type(38);
  static const int BbHuInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BbHuInfo, huway_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BbHuInfo, hutype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BbHuInfo, ma_pai_all_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BbHuInfo, ma_pai_hit_),
  };
  BbHuInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BbHuInfo_descriptor_,
      BbHuInfo::default_instance_,
      BbHuInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BbHuInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(BbHuInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BbHuInfo, _internal_metadata_),
      -1);
  LcHuInfo_descriptor_ = file->message_type(39);
  static const int LcHuInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LcHuInfo, huway_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LcHuInfo, hutype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LcHuInfo, ma_pai_all_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LcHuInfo, ma_pai_hit_),
  };
  LcHuInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LcHuInfo_descriptor_,
      LcHuInfo::default_instance_,
      LcHuInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LcHuInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(LcHuInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LcHuInfo, _internal_metadata_),
      -1);
  XzHuInfo_descriptor_ = file->message_type(40);
  static const int XzHuInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XzHuInfo, huway_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XzHuInfo, hutype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XzHuInfo, ma_pai_all_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XzHuInfo, ma_pai_hit_),
  };
  XzHuInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      XzHuInfo_descriptor_,
      XzHuInfo::default_instance_,
      XzHuInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XzHuInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(XzHuInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XzHuInfo, _internal_metadata_),
      -1);
  XlHuInfo_descriptor_ = file->message_type(41);
  static const int XlHuInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XlHuInfo, huway_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XlHuInfo, hutype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XlHuInfo, ma_pai_all_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XlHuInfo, ma_pai_hit_),
  };
  XlHuInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      XlHuInfo_descriptor_,
      XlHuInfo::default_instance_,
      XlHuInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XlHuInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(XlHuInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(XlHuInfo, _internal_metadata_),
      -1);
  HuInfo_descriptor_ = file->message_type(42);
  static const int HuInfo_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HuInfo, game_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HuInfo, yl_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HuInfo, bb_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HuInfo, lc_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HuInfo, xz_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HuInfo, xl_info_),
  };
  HuInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HuInfo_descriptor_,
      HuInfo::default_instance_,
      HuInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HuInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(HuInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HuInfo, _internal_metadata_),
      -1);
  SameIpSeats_descriptor_ = file->message_type(43);
  static const int SameIpSeats_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SameIpSeats, seat_),
  };
  SameIpSeats_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SameIpSeats_descriptor_,
      SameIpSeats::default_instance_,
      SameIpSeats_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SameIpSeats, _has_bits_[0]),
      -1,
      -1,
      sizeof(SameIpSeats),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SameIpSeats, _internal_metadata_),
      -1);
  QuickMessageReq_descriptor_ = file->message_type(44);
  static const int QuickMessageReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuickMessageReq, msg_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuickMessageReq, seat_),
  };
  QuickMessageReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QuickMessageReq_descriptor_,
      QuickMessageReq::default_instance_,
      QuickMessageReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuickMessageReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(QuickMessageReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuickMessageReq, _internal_metadata_),
      -1);
  QuickMessageResp_descriptor_ = file->message_type(45);
  static const int QuickMessageResp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuickMessageResp, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuickMessageResp, msg_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuickMessageResp, seat_),
  };
  QuickMessageResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QuickMessageResp_descriptor_,
      QuickMessageResp::default_instance_,
      QuickMessageResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuickMessageResp, _has_bits_[0]),
      -1,
      -1,
      sizeof(QuickMessageResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuickMessageResp, _internal_metadata_),
      -1);
  NotifyPlayerEvent_descriptor_ = file->message_type(46);
  static const int NotifyPlayerEvent_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyPlayerEvent, event_list_),
  };
  NotifyPlayerEvent_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      NotifyPlayerEvent_descriptor_,
      NotifyPlayerEvent::default_instance_,
      NotifyPlayerEvent_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyPlayerEvent, _has_bits_[0]),
      -1,
      -1,
      sizeof(NotifyPlayerEvent),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyPlayerEvent, _internal_metadata_),
      -1);
  NotifyGhostPaiListResult_descriptor_ = file->message_type(47);
  static const int NotifyGhostPaiListResult_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyGhostPaiListResult, game_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyGhostPaiListResult, desk_tile_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyGhostPaiListResult, fan_pai_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyGhostPaiListResult, ghost_pai_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyGhostPaiListResult, is_disconn_),
  };
  NotifyGhostPaiListResult_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      NotifyGhostPaiListResult_descriptor_,
      NotifyGhostPaiListResult::default_instance_,
      NotifyGhostPaiListResult_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyGhostPaiListResult, _has_bits_[0]),
      -1,
      -1,
      sizeof(NotifyGhostPaiListResult),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyGhostPaiListResult, _internal_metadata_),
      -1);
  NotifyGenzhuang_descriptor_ = file->message_type(48);
  static const int NotifyGenzhuang_offsets_[1] = {
  };
  NotifyGenzhuang_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      NotifyGenzhuang_descriptor_,
      NotifyGenzhuang::default_instance_,
      NotifyGenzhuang_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyGenzhuang, _has_bits_[0]),
      -1,
      -1,
      sizeof(NotifyGenzhuang),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyGenzhuang, _internal_metadata_),
      -1);
  AskSanZhang_descriptor_ = file->message_type(49);
  static const int AskSanZhang_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AskSanZhang, lesstype_),
  };
  AskSanZhang_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AskSanZhang_descriptor_,
      AskSanZhang::default_instance_,
      AskSanZhang_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AskSanZhang, _has_bits_[0]),
      -1,
      -1,
      sizeof(AskSanZhang),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AskSanZhang, _internal_metadata_),
      -1);
  HuanSanZhangReq_descriptor_ = file->message_type(50);
  static const int HuanSanZhangReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HuanSanZhangReq, seat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HuanSanZhangReq, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HuanSanZhangReq, pais_),
  };
  HuanSanZhangReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HuanSanZhangReq_descriptor_,
      HuanSanZhangReq::default_instance_,
      HuanSanZhangReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HuanSanZhangReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(HuanSanZhangReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HuanSanZhangReq, _internal_metadata_),
      -1);
  HuanSanZhangNotify_descriptor_ = file->message_type(51);
  static const int HuanSanZhangNotify_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HuanSanZhangNotify, direct_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HuanSanZhangNotify, seat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HuanSanZhangNotify, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HuanSanZhangNotify, pais_),
  };
  HuanSanZhangNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HuanSanZhangNotify_descriptor_,
      HuanSanZhangNotify::default_instance_,
      HuanSanZhangNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HuanSanZhangNotify, _has_bits_[0]),
      -1,
      -1,
      sizeof(HuanSanZhangNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HuanSanZhangNotify, _internal_metadata_),
      -1);
  AskDingQue_descriptor_ = file->message_type(52);
  static const int AskDingQue_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AskDingQue, lesstype_),
  };
  AskDingQue_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AskDingQue_descriptor_,
      AskDingQue::default_instance_,
      AskDingQue_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AskDingQue, _has_bits_[0]),
      -1,
      -1,
      sizeof(AskDingQue),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AskDingQue, _internal_metadata_),
      -1);
  DingQueReq_descriptor_ = file->message_type(53);
  static const int DingQueReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DingQueReq, seat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DingQueReq, type_),
  };
  DingQueReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DingQueReq_descriptor_,
      DingQueReq::default_instance_,
      DingQueReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DingQueReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(DingQueReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DingQueReq, _internal_metadata_),
      -1);
  DingQueNotify_descriptor_ = file->message_type(54);
  static const int DingQueNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DingQueNotify, quelist_),
  };
  DingQueNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DingQueNotify_descriptor_,
      DingQueNotify::default_instance_,
      DingQueNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DingQueNotify, _has_bits_[0]),
      -1,
      -1,
      sizeof(DingQueNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DingQueNotify, _internal_metadata_),
      -1);
  HuPaiListNotify_descriptor_ = file->message_type(55);
  static const int HuPaiListNotify_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HuPaiListNotify, seat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HuPaiListNotify, tiles_),
  };
  HuPaiListNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HuPaiListNotify_descriptor_,
      HuPaiListNotify::default_instance_,
      HuPaiListNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HuPaiListNotify, _has_bits_[0]),
      -1,
      -1,
      sizeof(HuPaiListNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HuPaiListNotify, _internal_metadata_),
      -1);
  MyScoreListReq_descriptor_ = file->message_type(56);
  static const int MyScoreListReq_offsets_[1] = {
  };
  MyScoreListReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MyScoreListReq_descriptor_,
      MyScoreListReq::default_instance_,
      MyScoreListReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyScoreListReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(MyScoreListReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyScoreListReq, _internal_metadata_),
      -1);
  MyScoreListResp_descriptor_ = file->message_type(57);
  static const int MyScoreListResp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyScoreListResp, myscore_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyScoreListResp, scorelist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyScoreListResp, game_type_),
  };
  MyScoreListResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MyScoreListResp_descriptor_,
      MyScoreListResp::default_instance_,
      MyScoreListResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyScoreListResp, _has_bits_[0]),
      -1,
      -1,
      sizeof(MyScoreListResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyScoreListResp, _internal_metadata_),
      -1);
  MyTingPaiListReq_descriptor_ = file->message_type(58);
  static const int MyTingPaiListReq_offsets_[1] = {
  };
  MyTingPaiListReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MyTingPaiListReq_descriptor_,
      MyTingPaiListReq::default_instance_,
      MyTingPaiListReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyTingPaiListReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(MyTingPaiListReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyTingPaiListReq, _internal_metadata_),
      -1);
  c_cmd_descriptor_ = file->enum_type(0);
  op_code_descriptor_ = file->enum_type(1);
  maj_type_descriptor_ = file->enum_type(2);
  player_status_descriptor_ = file->enum_type(3);
  event_type_descriptor_ = file->enum_type(4);
  kong_type_descriptor_ = file->enum_type(5);
  hu_type_descriptor_ = file->enum_type(6);
  hu_way_descriptor_ = file->enum_type(7);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_msg_5fmaj_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      StartGameReq_descriptor_, &StartGameReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      StartRoundResp_descriptor_, &StartRoundResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DiscardReq_descriptor_, &DiscardReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EventInfo_descriptor_, &EventInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DiscardResp_descriptor_, &DiscardResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PromptPai_descriptor_, &PromptPai::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TingPai_descriptor_, &TingPai::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TingPaiDiscardNotify_descriptor_, &TingPaiDiscardNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TingPaiWaiteNotify_descriptor_, &TingPaiWaiteNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DealNotify_descriptor_, &DealNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ResponseEventReq_descriptor_, &ResponseEventReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ResponseEventResp_descriptor_, &ResponseEventResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GameResultNotify_descriptor_, &GameResultNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DisCardOver_descriptor_, &DisCardOver::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TotalResultNotify_descriptor_, &TotalResultNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReconnectLoadReq_descriptor_, &ReconnectLoadReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReconnectPrepare_descriptor_, &ReconnectPrepare::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReconnectLoadResp_descriptor_, &ReconnectLoadResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReconnectReadyReq_descriptor_, &ReconnectReadyReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReconnectSyncCard_descriptor_, &ReconnectSyncCard::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReconnectOtherReadyReq_descriptor_, &ReconnectOtherReadyReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SyncPlayerStatus_descriptor_, &SyncPlayerStatus::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GpsSeatInfo_descriptor_, &GpsSeatInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AskStartGame_descriptor_, &AskStartGame::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AcceptStartReq_descriptor_, &AcceptStartReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AcceptStartNotify_descriptor_, &AcceptStartNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PrepareRoundReq_descriptor_, &PrepareRoundReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PrepareRoundNotify_descriptor_, &PrepareRoundNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TotalResultSeat_descriptor_, &TotalResultSeat::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SeatInfo_descriptor_, &SeatInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GameResultSeat_descriptor_, &GameResultSeat::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HuDetail_descriptor_, &HuDetail::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FengYuDetail_descriptor_, &FengYuDetail::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HuaZhuDetail_descriptor_, &HuaZhuDetail::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DaJiaoDetail_descriptor_, &DaJiaoDetail::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ScoreDetail_descriptor_, &ScoreDetail::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      OpenTile_descriptor_, &OpenTile::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      YlHuInfo_descriptor_, &YlHuInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BbHuInfo_descriptor_, &BbHuInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LcHuInfo_descriptor_, &LcHuInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      XzHuInfo_descriptor_, &XzHuInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      XlHuInfo_descriptor_, &XlHuInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HuInfo_descriptor_, &HuInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SameIpSeats_descriptor_, &SameIpSeats::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QuickMessageReq_descriptor_, &QuickMessageReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QuickMessageResp_descriptor_, &QuickMessageResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      NotifyPlayerEvent_descriptor_, &NotifyPlayerEvent::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      NotifyGhostPaiListResult_descriptor_, &NotifyGhostPaiListResult::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      NotifyGenzhuang_descriptor_, &NotifyGenzhuang::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AskSanZhang_descriptor_, &AskSanZhang::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HuanSanZhangReq_descriptor_, &HuanSanZhangReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HuanSanZhangNotify_descriptor_, &HuanSanZhangNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AskDingQue_descriptor_, &AskDingQue::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DingQueReq_descriptor_, &DingQueReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DingQueNotify_descriptor_, &DingQueNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HuPaiListNotify_descriptor_, &HuPaiListNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MyScoreListReq_descriptor_, &MyScoreListReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MyScoreListResp_descriptor_, &MyScoreListResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MyTingPaiListReq_descriptor_, &MyTingPaiListReq::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_msg_5fmaj_2eproto() {
  delete StartGameReq::default_instance_;
  delete StartGameReq_reflection_;
  delete StartRoundResp::default_instance_;
  delete StartRoundResp_reflection_;
  delete DiscardReq::default_instance_;
  delete DiscardReq_reflection_;
  delete EventInfo::default_instance_;
  delete EventInfo_reflection_;
  delete DiscardResp::default_instance_;
  delete DiscardResp_reflection_;
  delete PromptPai::default_instance_;
  delete PromptPai_reflection_;
  delete TingPai::default_instance_;
  delete TingPai_reflection_;
  delete TingPaiDiscardNotify::default_instance_;
  delete TingPaiDiscardNotify_reflection_;
  delete TingPaiWaiteNotify::default_instance_;
  delete TingPaiWaiteNotify_reflection_;
  delete DealNotify::default_instance_;
  delete DealNotify_reflection_;
  delete ResponseEventReq::default_instance_;
  delete ResponseEventReq_reflection_;
  delete ResponseEventResp::default_instance_;
  delete ResponseEventResp_reflection_;
  delete GameResultNotify::default_instance_;
  delete GameResultNotify_reflection_;
  delete DisCardOver::default_instance_;
  delete DisCardOver_reflection_;
  delete TotalResultNotify::default_instance_;
  delete TotalResultNotify_reflection_;
  delete ReconnectLoadReq::default_instance_;
  delete ReconnectLoadReq_reflection_;
  delete ReconnectPrepare::default_instance_;
  delete ReconnectPrepare_reflection_;
  delete ReconnectLoadResp::default_instance_;
  delete ReconnectLoadResp_reflection_;
  delete ReconnectReadyReq::default_instance_;
  delete ReconnectReadyReq_reflection_;
  delete ReconnectSyncCard::default_instance_;
  delete ReconnectSyncCard_reflection_;
  delete ReconnectOtherReadyReq::default_instance_;
  delete ReconnectOtherReadyReq_reflection_;
  delete SyncPlayerStatus::default_instance_;
  delete SyncPlayerStatus_reflection_;
  delete GpsSeatInfo::default_instance_;
  delete GpsSeatInfo_reflection_;
  delete AskStartGame::default_instance_;
  delete AskStartGame_reflection_;
  delete AcceptStartReq::default_instance_;
  delete AcceptStartReq_reflection_;
  delete AcceptStartNotify::default_instance_;
  delete AcceptStartNotify_reflection_;
  delete PrepareRoundReq::default_instance_;
  delete PrepareRoundReq_reflection_;
  delete PrepareRoundNotify::default_instance_;
  delete PrepareRoundNotify_reflection_;
  delete TotalResultSeat::default_instance_;
  delete TotalResultSeat_reflection_;
  delete SeatInfo::default_instance_;
  delete SeatInfo_reflection_;
  delete GameResultSeat::default_instance_;
  delete GameResultSeat_reflection_;
  delete HuDetail::default_instance_;
  delete HuDetail_reflection_;
  delete FengYuDetail::default_instance_;
  delete FengYuDetail_reflection_;
  delete HuaZhuDetail::default_instance_;
  delete HuaZhuDetail_reflection_;
  delete DaJiaoDetail::default_instance_;
  delete DaJiaoDetail_reflection_;
  delete ScoreDetail::default_instance_;
  delete ScoreDetail_reflection_;
  delete OpenTile::default_instance_;
  delete OpenTile_reflection_;
  delete YlHuInfo::default_instance_;
  delete YlHuInfo_reflection_;
  delete BbHuInfo::default_instance_;
  delete BbHuInfo_reflection_;
  delete LcHuInfo::default_instance_;
  delete LcHuInfo_reflection_;
  delete XzHuInfo::default_instance_;
  delete XzHuInfo_reflection_;
  delete XlHuInfo::default_instance_;
  delete XlHuInfo_reflection_;
  delete HuInfo::default_instance_;
  delete HuInfo_reflection_;
  delete SameIpSeats::default_instance_;
  delete SameIpSeats_reflection_;
  delete QuickMessageReq::default_instance_;
  delete QuickMessageReq_reflection_;
  delete QuickMessageResp::default_instance_;
  delete QuickMessageResp_reflection_;
  delete NotifyPlayerEvent::default_instance_;
  delete NotifyPlayerEvent_reflection_;
  delete NotifyGhostPaiListResult::default_instance_;
  delete NotifyGhostPaiListResult_reflection_;
  delete NotifyGenzhuang::default_instance_;
  delete NotifyGenzhuang_reflection_;
  delete AskSanZhang::default_instance_;
  delete AskSanZhang_reflection_;
  delete HuanSanZhangReq::default_instance_;
  delete HuanSanZhangReq_reflection_;
  delete HuanSanZhangNotify::default_instance_;
  delete HuanSanZhangNotify_reflection_;
  delete AskDingQue::default_instance_;
  delete AskDingQue_reflection_;
  delete DingQueReq::default_instance_;
  delete DingQueReq_reflection_;
  delete DingQueNotify::default_instance_;
  delete DingQueNotify_reflection_;
  delete HuPaiListNotify::default_instance_;
  delete HuPaiListNotify_reflection_;
  delete MyScoreListReq::default_instance_;
  delete MyScoreListReq_reflection_;
  delete MyScoreListResp::default_instance_;
  delete MyScoreListResp_reflection_;
  delete MyTingPaiListReq::default_instance_;
  delete MyTingPaiListReq_reflection_;
}

void protobuf_AddDesc_msg_5fmaj_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_msg_5fmaj_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rmsg_maj.proto\022\007msg_maj\"\016\n\014StartGameReq"
    "\"\201\001\n\016StartRoundResp\022\021\n\tdeny_seat\030\001 \001(\r\022\014"
    "\n\004dice\030\002 \001(\r\022\021\n\ttile_list\030\003 \003(\r\022\026\n\016banke"
    "r_seat_id\030\004 \001(\r\022#\n\006events\030\005 \003(\0162\023.msg_ma"
    "j.event_type\"\032\n\nDiscardReq\022\014\n\004tile\030\001 \002(\r"
    "\"D\n\tEventInfo\022$\n\007event_t\030\001 \002(\0162\023.msg_maj"
    ".event_type\022\021\n\tevent_pai\030\002 \003(\r\"g\n\013Discar"
    "dResp\022\014\n\004seat\030\001 \002(\r\022\014\n\004tile\030\002 \002(\r\022\025\n\rtil"
    "eLeftCount\030\003 \002(\r\022%\n\teventList\030\004 \003(\0132\022.ms"
    "g_maj.EventInfo\"l\n\tPromptPai\022\r\n\005hupai\030\001 "
    "\001(\r\022\017\n\007paidest\030\002 \001(\r\022\016\n\006painum\030\003 \001(\r\022 \n\006"
    "hutype\030\004 \001(\0162\020.msg_maj.hu_type\022\r\n\005mulit\030"
    "\005 \001(\r\"B\n\007TingPai\022\016\n\006dicard\030\001 \001(\r\022\'\n\013prom"
    "pt_list\030\002 \003(\0132\022.msg_maj.PromptPai\";\n\024Tin"
    "gPaiDiscardNotify\022#\n\tting_list\030\001 \003(\0132\020.m"
    "sg_maj.TingPai\"=\n\022TingPaiWaiteNotify\022\'\n\013"
    "prompt_list\030\001 \003(\0132\022.msg_maj.PromptPai\"v\n"
    "\nDealNotify\022\014\n\004seat\030\001 \002(\r\022\014\n\004tile\030\002 \001(\r\022"
    "\014\n\004tail\030\003 \002(\010\022%\n\teventList\030\004 \003(\0132\022.msg_m"
    "aj.EventInfo\022\027\n\017desk_tile_count\030\005 \002(\005\"D\n"
    "\020ResponseEventReq\022\"\n\005event\030\001 \002(\0162\023.msg_m"
    "aj.event_type\022\014\n\004tile\030\002 \001(\r\"\366\001\n\021Response"
    "EventResp\022\036\n\004code\030\001 \002(\0162\020.msg_maj.op_cod"
    "e\022\014\n\004seat\030\002 \002(\r\022\"\n\005event\030\003 \002(\0162\023.msg_maj"
    ".event_type\022\025\n\reventTileList\030\004 \003(\r\022 \n\007hu"
    "_info\030\005 \001(\0132\017.msg_maj.HuInfo\022\023\n\013victim_s"
    "eat\030\006 \001(\r\022*\n\rtriggerEvents\030\007 \003(\0162\023.msg_m"
    "aj.event_type\022\025\n\rtileLeftCount\030\010 \001(\r\"c\n\020"
    "GameResultNotify\022\022\n\nis_end_all\030\001 \002(\010\022\023\n\013"
    "this_inn_id\030\002 \002(\r\022&\n\005seats\030\003 \003(\0132\027.msg_m"
    "aj.GameResultSeat\"\r\n\013DisCardOver\"<\n\021Tota"
    "lResultNotify\022\'\n\005seats\030\001 \003(\0132\030.msg_maj.T"
    "otalResultSeat\"\022\n\020ReconnectLoadReq\"Y\n\020Re"
    "connectPrepare\022\014\n\004seat\030\001 \002(\r\022\016\n\006accept\030\002"
    " \002(\010\022\'\n\007pstatus\030\003 \002(\0162\026.msg_maj.player_s"
    "tatus\"\240\002\n\021ReconnectLoadResp\022\020\n\010is_start\030"
    "\001 \002(\010\022$\n\tself_seat\030\002 \001(\0132\021.msg_maj.SeatI"
    "nfo\022\023\n\013banker_seat\030\003 \001(\r\022\014\n\004dice\030\004 \001(\r\022\027"
    "\n\017desk_tile_count\030\005 \001(\005\022\'\n\013self_events\030\006"
    " \003(\0132\022.msg_maj.EventInfo\022\021\n\tcurr_tile\030\007 "
    "\001(\r\022\024\n\014self_discard\030\010 \001(\010\022\024\n\014send_disove"
    "r\030\t \001(\010\022/\n\014prepare_info\030\n \003(\0132\031.msg_maj."
    "ReconnectPrepare\"\023\n\021ReconnectReadyReq\"N\n"
    "\021ReconnectSyncCard\022\027\n\017desk_tile_count\030\001 "
    "\002(\005\022 \n\005seats\030\002 \003(\0132\021.msg_maj.SeatInfo\"\030\n"
    "\026ReconnectOtherReadyReq\"I\n\020SyncPlayerSta"
    "tus\022\014\n\004seat\030\001 \002(\r\022\'\n\007pstatus\030\002 \002(\0162\026.msg"
    "_maj.player_status\"C\n\013GpsSeatInfo\022\017\n\007sea"
    "t_id\030\001 \002(\005\022\021\n\tlongitude\030\002 \002(\001\022\020\n\010latitud"
    "e\030\003 \002(\001\"v\n\014AskStartGame\022&\n\010same_ips\030\001 \003("
    "\0132\024.msg_maj.SameIpSeats\022\021\n\ttimer_sec\030\002 \001"
    "(\r\022+\n\rseat_gps_list\030\003 \003(\0132\024.msg_maj.GpsS"
    "eatInfo\" \n\016AcceptStartReq\022\016\n\006accept\030\001 \002("
    "\010\"1\n\021AcceptStartNotify\022\014\n\004seat\030\001 \002(\r\022\016\n\006"
    "accept\030\002 \002(\010\"\021\n\017PrepareRoundReq\"3\n\022Prepa"
    "reRoundNotify\022\014\n\004seat\030\001 \002(\r\022\017\n\007prepare\030\002"
    " \002(\010\"\241\002\n\017TotalResultSeat\022\014\n\004seat\030\001 \002(\r\022\023"
    "\n\013total_score\030\002 \002(\005\022\017\n\007big_win\030\003 \001(\010\022\020\n\010"
    "zimo_cnt\030\004 \001(\r\022\026\n\016ghost_zimo_cnt\030\005 \001(\r\022\023"
    "\n\013dianpao_cnt\030\006 \001(\r\022\022\n\nangang_cnt\030\007 \001(\r\022"
    "\024\n\014minggang_cnt\030\010 \001(\r\022\027\n\017guoshougang_cnt"
    "\030\t \001(\r\022\026\n\016total_gang_cnt\030\n \001(\r\022\026\n\016fangga"
    "ng_times\030\013 \001(\r\022\022\n\nhit_ma_cnt\030\014 \001(\r\022\024\n\014hu"
    "_total_cnt\030\r \001(\r\"\305\001\n\010SeatInfo\022\014\n\004seat\030\001 "
    "\002(\r\022\022\n\nhand_tiles\030\002 \003(\r\022%\n\nopen_tiles\030\003 "
    "\003(\0132\021.msg_maj.OpenTile\022\025\n\rdiscard_tiles\030"
    "\004 \003(\r\022\020\n\010hu_tiles\030\005 \003(\r\022\'\n\007pstatus\030\006 \002(\016"
    "2\026.msg_maj.player_status\022\r\n\005score\030\007 \002(\005\022"
    "\017\n\007dingque\030\010 \001(\005\"\254\002\n\016GameResultSeat\022\014\n\004s"
    "eat\030\001 \002(\r\022\023\n\013total_score\030\002 \002(\005\022\022\n\nhand_t"
    "iles\030\003 \003(\r\022%\n\nopen_tiles\030\004 \003(\0132\021.msg_maj"
    ".OpenTile\022\017\n\007an_gang\030\005 \001(\r\022\021\n\tming_gang\030"
    "\006 \001(\r\022\025\n\rguo_shou_gang\030\007 \001(\r\022 \n\007hu_info\030"
    "\010 \001(\0132\017.msg_maj.HuInfo\022\017\n\007hu_tile\030\t \001(\r\022"
    "\017\n\007dingque\030\n \001(\r\022*\n\014score_detail\030\013 \003(\0132\024"
    ".msg_maj.ScoreDetail\022\021\n\tgame_type\030\014 \001(\r\""
    "\311\002\n\010HuDetail\022\016\n\006mySeat\030\001 \001(\005\022\016\n\006huSeat\030\002"
    " \001(\005\022\020\n\010doedSeat\030\003 \001(\005\022\r\n\005score\030\004 \001(\005\022\r\n"
    "\005huway\030\005 \001(\005\022\016\n\006hutype\030\006 \001(\005\022\017\n\007humulti\030"
    "\007 \001(\005\022\016\n\006huTile\030\010 \001(\r\022\r\n\005item1\030\t \001(\005\022\r\n\005"
    "item2\030\n \001(\005\022\r\n\005item3\030\013 \001(\005\022\r\n\005item4\030\014 \001("
    "\005\022\r\n\005item5\030\r \001(\005\022\r\n\005item6\030\016 \001(\005\022\r\n\005item7"
    "\030\017 \001(\005\022\r\n\005item8\030\020 \001(\005\022\r\n\005item9\030\021 \001(\005\022\016\n\006"
    "item10\030\022 \001(\005\022\016\n\006item11\030\023 \001(\005\022\025\n\rdoedmult"
    "iseat\030\024 \003(\005\"z\n\014FengYuDetail\022\016\n\006mySeat\030\001 "
    "\001(\005\022\016\n\006huSeat\030\002 \001(\005\022\020\n\010doedSeat\030\003 \001(\005\022\r\n"
    "\005score\030\004 \001(\005\022\022\n\nfengYuType\030\005 \001(\005\022\025\n\rdoed"
    "multiseat\030\006 \003(\005\"O\n\014HuaZhuDetail\022\016\n\006mySea"
    "t\030\001 \001(\005\022\016\n\006huSeat\030\002 \001(\005\022\020\n\010doedSeat\030\003 \001("
    "\005\022\r\n\005score\030\004 \001(\005\"O\n\014DaJiaoDetail\022\016\n\006mySe"
    "at\030\001 \001(\005\022\016\n\006huSeat\030\002 \001(\005\022\020\n\010doedSeat\030\003 \001"
    "(\005\022\r\n\005score\030\004 \001(\005\"\317\001\n\013ScoreDetail\022\014\n\004typ"
    "e\030\001 \001(\005\022\035\n\002hu\030\002 \001(\0132\021.msg_maj.HuDetail\022%"
    "\n\006fengyu\030\003 \001(\0132\025.msg_maj.FengYuDetail\022%\n"
    "\006huazhu\030\004 \001(\0132\025.msg_maj.HuaZhuDetail\022%\n\006"
    "dajiao\030\005 \001(\0132\025.msg_maj.DaJiaoDetail\022\017\n\007b"
    "acktax\030\006 \001(\005\022\r\n\005hujzy\030\007 \001(\005\"@\n\010OpenTile\022"
    "!\n\004type\030\001 \002(\0162\023.msg_maj.event_type\022\021\n\tti"
    "le_list\030\002 \003(\r\"t\n\010YlHuInfo\022\036\n\005huway\030\001 \002(\016"
    "2\017.msg_maj.hu_way\022 \n\006huType\030\002 \002(\0162\020.msg_"
    "maj.hu_type\022\022\n\nma_pai_all\030\003 \003(\r\022\022\n\nma_pa"
    "i_hit\030\004 \003(\r\"t\n\010BbHuInfo\022\036\n\005huway\030\001 \002(\0162\017"
    ".msg_maj.hu_way\022 \n\006huType\030\002 \002(\0162\020.msg_ma"
    "j.hu_type\022\022\n\nma_pai_all\030\003 \003(\r\022\022\n\nma_pai_"
    "hit\030\004 \003(\r\"t\n\010LcHuInfo\022\036\n\005huway\030\001 \002(\0162\017.m"
    "sg_maj.hu_way\022 \n\006huType\030\002 \002(\0162\020.msg_maj."
    "hu_type\022\022\n\nma_pai_all\030\003 \003(\r\022\022\n\nma_pai_hi"
    "t\030\004 \003(\r\"t\n\010XzHuInfo\022\036\n\005huway\030\001 \002(\0162\017.msg"
    "_maj.hu_way\022 \n\006huType\030\002 \002(\0162\020.msg_maj.hu"
    "_type\022\022\n\nma_pai_all\030\003 \003(\r\022\022\n\nma_pai_hit\030"
    "\004 \003(\r\"t\n\010XlHuInfo\022\036\n\005huway\030\001 \002(\0162\017.msg_m"
    "aj.hu_way\022 \n\006huType\030\002 \002(\0162\020.msg_maj.hu_t"
    "ype\022\022\n\nma_pai_all\030\003 \003(\r\022\022\n\nma_pai_hit\030\004 "
    "\003(\r\"\317\001\n\006HuInfo\022\021\n\tgame_type\030\001 \002(\r\022\"\n\007yl_"
    "info\030\002 \001(\0132\021.msg_maj.YlHuInfo\022\"\n\007bb_info"
    "\030\003 \001(\0132\021.msg_maj.BbHuInfo\022\"\n\007lc_info\030\004 \001"
    "(\0132\021.msg_maj.LcHuInfo\022\"\n\007xz_info\030\005 \001(\0132\021"
    ".msg_maj.XzHuInfo\022\"\n\007xl_info\030\006 \001(\0132\021.msg"
    "_maj.XlHuInfo\"\033\n\013SameIpSeats\022\014\n\004seat\030\001 \003"
    "(\r\"2\n\017QuickMessageReq\022\021\n\tmsg_index\030\001 \002(\r"
    "\022\014\n\004seat\030\002 \002(\r\"@\n\020QuickMessageResp\022\013\n\003re"
    "t\030\001 \002(\r\022\021\n\tmsg_index\030\002 \002(\r\022\014\n\004seat\030\003 \002(\r"
    "\";\n\021NotifyPlayerEvent\022&\n\nevent_list\030\001 \003("
    "\0132\022.msg_maj.EventInfo\"~\n\030NotifyGhostPaiL"
    "istResult\022\021\n\tgame_type\030\001 \002(\005\022\027\n\017desk_til"
    "e_count\030\002 \002(\005\022\017\n\007fan_pai\030\003 \002(\005\022\021\n\tghost_"
    "pai\030\004 \003(\005\022\022\n\nis_disconn\030\005 \002(\010\"\021\n\017NotifyG"
    "enzhuang\"\037\n\013AskSanZhang\022\020\n\010lesstype\030\001 \002("
    "\005\";\n\017HuanSanZhangReq\022\014\n\004seat\030\001 \002(\005\022\014\n\004ty"
    "pe\030\002 \002(\005\022\014\n\004pais\030\003 \003(\005\"N\n\022HuanSanZhangNo"
    "tify\022\016\n\006direct\030\001 \002(\005\022\014\n\004seat\030\002 \002(\005\022\014\n\004ty"
    "pe\030\003 \002(\005\022\014\n\004pais\030\004 \003(\005\"\036\n\nAskDingQue\022\020\n\010"
    "lesstype\030\001 \002(\005\"(\n\nDingQueReq\022\014\n\004seat\030\001 \002"
    "(\005\022\014\n\004type\030\002 \002(\005\"5\n\rDingQueNotify\022$\n\007que"
    "list\030\001 \003(\0132\023.msg_maj.DingQueReq\".\n\017HuPai"
    "ListNotify\022\014\n\004seat\030\001 \002(\005\022\r\n\005tiles\030\002 \003(\005\""
    "\020\n\016MyScoreListReq\"^\n\017MyScoreListResp\022\017\n\007"
    "myscore\030\001 \002(\005\022\'\n\tscorelist\030\002 \003(\0132\024.msg_m"
    "aj.ScoreDetail\022\021\n\tgame_type\030\003 \001(\005\"\022\n\020MyT"
    "ingPaiListReq*\320\007\n\005c_cmd\022\010\n\004none\020\000\022\022\n\016sta"
    "rt_game_req\020\001\022\024\n\020start_round_resp\020\002\022\024\n\020d"
    "iscard_tile_req\020\003\022\025\n\021discard_tile_resp\020\004"
    "\022\024\n\020deal_tile_notify\020\005\022\020\n\014response_req\020\006"
    "\022\021\n\rresponse_resp\020\007\022\026\n\022game_result_notif"
    "y\020\010\022\024\n\020disover_card_req\020\t\022\027\n\023total_resul"
    "t_notify\020\n\022\021\n\rreconnect_req\020\013\022\022\n\016reconne"
    "ct_resp\020\014\022\027\n\023reconnect_ready_req\020\r\022\022\n\016as"
    "k_start_game\020\016\022\024\n\020accept_start_req\020\017\022\027\n\023"
    "accept_start_notify\020\020\022\025\n\021prepare_round_r"
    "eq\020\021\022\030\n\024prepare_round_notify\020\022\022\027\n\023reconn"
    "ect_sync_card\020\023\022\026\n\022sync_player_status\020\024\022"
    "\024\n\020quickmessage_req\020\025\022\025\n\021quickmessage_re"
    "sp\020\026\022\027\n\023notify_player_event\020\027\022\032\n\026notify_"
    "ghostpai_result\020\030\022\034\n\030notify_genzhuang_su"
    "ccess\020\031\022\026\n\022ask_start_sanzhang\020\035\022\025\n\021huan_"
    "sanzhang_req\020\036\022\030\n\024huan_sanzhang_notify\020\037"
    "\022\025\n\021ask_start_dingque\020 \022\017\n\013dingque_req\020!"
    "\022\022\n\016dingque_notify\020\"\022\025\n\021hu_pailist_notif"
    "y\020#\022\033\n\027ting_pai_discard_notify\020$\022\031\n\025ting"
    "_pai_waite_notify\020%\022\024\n\020my_scorelist_req\020"
    "&\022\025\n\021my_scorelist_resp\020\'\022\023\n\017my_ting_pai_"
    "req\020(\022\024\n\020my_ting_pai_resp\020)\022\035\n\031reconnect"
    "_other_ready_req\020*\022\030\n\024robot_reconnect_re"
    "sp\0202\022\032\n\026robot_start_round_resp\0203**\n\007op_c"
    "ode\022\006\n\002ok\020\000\022\010\n\004fail\020\001\022\r\n\tnot_exist\020\002*t\n\010"
    "maj_type\022\016\n\nmaj_t_none\020\000\022\017\n\013maj_t_yulin\020"
    "\001\022\017\n\013maj_t_bobai\020\002\022\021\n\rmaj_t_luchuan\020\003\022\021\n"
    "\rmaj_t_xiezhan\020\010\022\020\n\014maj_t_xieliu\020\t*:\n\rpl"
    "ayer_status\022\n\n\006normal\020\001\022\016\n\ndisconnect\020\002\022"
    "\r\n\treconnect\020\003*\253\001\n\nevent_type\022\n\n\006e_none\020"
    "\000\022\014\n\010zi_mo_hu\020\001\022\017\n\013dian_pao_hu\020\002\022\r\n\tming"
    "_gang\020\003\022\013\n\007an_gang\020\004\022\021\n\rguo_shou_gang\020\005\022"
    "\010\n\004pong\020\006\022\010\n\004pass\020\007\022\013\n\007discard\020\010\022\010\n\004deal"
    "\020\t\022\r\n\tdeal_tail\020\n\022\t\n\005e_max\020\013*\'\n\tkong_typ"
    "e\022\013\n\007EXPOSED\020\001\022\r\n\tCONCEALED\020\002*\202\n\n\007hu_typ"
    "e\022\013\n\007hu_none\020\000\022\022\n\016hu_t_yl_pinghu\020e\022\021\n\rhu"
    "_t_yl_qidui\020f\022\020\n\014hu_t_yl_pphu\020g\022\017\n\013hu_t_"
    "yl_qys\020h\022\023\n\017hu_t_yl_qyspphu\020i\022\021\n\rhu_t_yl"
    "_qysqd\020j\022\021\n\rhu_t_yl_13yao\020k\022\022\n\016hu_t_yl_t"
    "ianhu\020l\022\020\n\014hu_t_yl_dihu\020m\022\023\n\016hu_t_bb_pin"
    "ghu\020\311\001\022\022\n\rhu_t_bb_qidui\020\312\001\022\021\n\014hu_t_bb_pp"
    "hu\020\313\001\022\020\n\013hu_t_bb_qys\020\314\001\022\024\n\017hu_t_bb_qyspp"
    "hu\020\315\001\022\022\n\rhu_t_bb_qysqd\020\316\001\022\022\n\rhu_t_bb_13y"
    "ao\020\317\001\022\023\n\016hu_t_bb_tianhu\020\320\001\022\021\n\014hu_t_bb_di"
    "hu\020\321\001\022\023\n\016hu_t_lc_pinghu\020\255\002\022\022\n\rhu_t_lc_qi"
    "dui\020\256\002\022\021\n\014hu_t_lc_pphu\020\257\002\022\020\n\013hu_t_lc_qys"
    "\020\260\002\022\024\n\017hu_t_lc_qyspphu\020\261\002\022\022\n\rhu_t_lc_qys"
    "qd\020\262\002\022\022\n\rhu_t_lc_13yao\020\263\002\022\023\n\016hu_t_lc_tia"
    "nhu\020\264\002\022\021\n\014hu_t_lc_dihu\020\265\002\022\023\n\016hu_t_xz_pin"
    "ghu\020\351\007\022\021\n\014hu_t_xz_pphu\020\352\007\022\017\n\nhu_t_xz_mq\020"
    "\353\007\022\023\n\016hu_t_xz_duanyj\020\354\007\022\020\n\013hu_t_xz_qys\020\355"
    "\007\022\022\n\rhu_t_xz_daiyj\020\356\007\022\022\n\rhu_t_xz_qidui\020\357"
    "\007\022\020\n\013hu_t_xz_jgg\020\360\007\022\024\n\017hu_t_xz_qingdui\020\361"
    "\007\022\023\n\016hu_t_xz_longqd\020\362\007\022\023\n\016hu_t_xz_qingqd"
    "\020\363\007\022\023\n\016hu_t_xz_qingyj\020\364\007\022\021\n\014hu_t_xz_jjgg"
    "\020\365\007\022\021\n\014hu_t_xz_qjgg\020\366\007\022\023\n\016hu_t_xz_tianhu"
    "\020\367\007\022\021\n\014hu_t_xz_dihu\020\370\007\022\024\n\017hu_t_xz_qinglq"
    "d\020\371\007\022\021\n\014hu_t_xz_18lh\020\372\007\022\023\n\016hu_t_xl_pingh"
    "u\020\315\010\022\021\n\014hu_t_xl_pphu\020\316\010\022\017\n\nhu_t_xl_mq\020\317\010"
    "\022\023\n\016hu_t_xl_duanyj\020\320\010\022\020\n\013hu_t_xl_qys\020\321\010\022"
    "\022\n\rhu_t_xl_daiyj\020\322\010\022\022\n\rhu_t_xl_qidui\020\323\010\022"
    "\020\n\013hu_t_xl_jgg\020\324\010\022\024\n\017hu_t_xl_qingdui\020\325\010\022"
    "\023\n\016hu_t_xl_longqd\020\326\010\022\023\n\016hu_t_xl_qingqd\020\327"
    "\010\022\023\n\016hu_t_xl_qingyj\020\330\010\022\021\n\014hu_t_xl_jjgg\020\331"
    "\010\022\021\n\014hu_t_xl_qjgg\020\332\010\022\023\n\016hu_t_xl_tianhu\020\333"
    "\010\022\021\n\014hu_t_xl_dihu\020\334\010\022\024\n\017hu_t_xl_qinglqd\020"
    "\335\010\022\021\n\014hu_t_xl_18lh\020\336\010\022\013\n\006hu_max\020\351\013*\306\010\n\006h"
    "u_way\022\017\n\013hu_way_none\020\000\022\017\n\013hu_way_zimo\020\001\022"
    "\026\n\022hu_way_qiangganghu\020\002\022\027\n\023hu_way_gangsh"
    "angpao\020\003\022\025\n\021hu_way_gangkaihua\020\004\022\022\n\016hu_wa"
    "y_dianpao\020\005\022\025\n\021hu_way_zimo_haidi\020\006\022\030\n\024hu"
    "_way_dianpao_haidi\020\007\022\022\n\016hu_way_yl_zimo\020\013"
    "\022\031\n\025hu_way_yl_qiangganghu\020\014\022\032\n\026hu_way_yl"
    "_gangshangpao\020\r\022\030\n\024hu_way_yl_gangkaihua\020"
    "\016\022\025\n\021hu_way_yl_dianpao\020\017\022\030\n\024hu_way_yl_zi"
    "mo_haidi\020\020\022\033\n\027hu_way_yl_dianpao_haidi\020\021\022"
    "\022\n\016hu_way_bb_zimo\020\025\022\031\n\025hu_way_bb_qiangga"
    "nghu\020\026\022\032\n\026hu_way_bb_gangshangpao\020\027\022\030\n\024hu"
    "_way_bb_gangkaihua\020\030\022\025\n\021hu_way_bb_dianpa"
    "o\020\031\022\030\n\024hu_way_bb_zimo_haidi\020\032\022\033\n\027hu_way_"
    "bb_dianpao_haidi\020\033\022\022\n\016hu_way_lc_zimo\020\037\022\031"
    "\n\025hu_way_lc_qiangganghu\020 \022\032\n\026hu_way_lc_g"
    "angshangpao\020!\022\030\n\024hu_way_lc_gangkaihua\020\"\022"
    "\025\n\021hu_way_lc_dianpao\020#\022\030\n\024hu_way_lc_zimo"
    "_haidi\020$\022\033\n\027hu_way_lc_dianpao_haidi\020%\022\022\n"
    "\016hu_way_xz_zimo\020e\022\031\n\025hu_way_xz_qianggang"
    "hu\020f\022\032\n\026hu_way_xz_gangshangpao\020g\022\030\n\024hu_w"
    "ay_xz_gangkaihua\020h\022\025\n\021hu_way_xz_dianpao\020"
    "i\022\030\n\024hu_way_xz_zimo_haidi\020j\022\033\n\027hu_way_xz"
    "_dianpao_haidi\020k\022\022\n\016hu_way_xl_zimo\020o\022\031\n\025"
    "hu_way_xl_qiangganghu\020p\022\032\n\026hu_way_xl_gan"
    "gshangpao\020q\022\030\n\024hu_way_xl_gangkaihua\020r\022\025\n"
    "\021hu_way_xl_dianpao\020s\022\030\n\024hu_way_xl_zimo_h"
    "aidi\020t\022\033\n\027hu_way_xl_dianpao_haidi\020u\022\016\n\nh"
    "u_way_max\020d", 9371);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "msg_maj.proto", &protobuf_RegisterTypes);
  StartGameReq::default_instance_ = new StartGameReq();
  StartRoundResp::default_instance_ = new StartRoundResp();
  DiscardReq::default_instance_ = new DiscardReq();
  EventInfo::default_instance_ = new EventInfo();
  DiscardResp::default_instance_ = new DiscardResp();
  PromptPai::default_instance_ = new PromptPai();
  TingPai::default_instance_ = new TingPai();
  TingPaiDiscardNotify::default_instance_ = new TingPaiDiscardNotify();
  TingPaiWaiteNotify::default_instance_ = new TingPaiWaiteNotify();
  DealNotify::default_instance_ = new DealNotify();
  ResponseEventReq::default_instance_ = new ResponseEventReq();
  ResponseEventResp::default_instance_ = new ResponseEventResp();
  GameResultNotify::default_instance_ = new GameResultNotify();
  DisCardOver::default_instance_ = new DisCardOver();
  TotalResultNotify::default_instance_ = new TotalResultNotify();
  ReconnectLoadReq::default_instance_ = new ReconnectLoadReq();
  ReconnectPrepare::default_instance_ = new ReconnectPrepare();
  ReconnectLoadResp::default_instance_ = new ReconnectLoadResp();
  ReconnectReadyReq::default_instance_ = new ReconnectReadyReq();
  ReconnectSyncCard::default_instance_ = new ReconnectSyncCard();
  ReconnectOtherReadyReq::default_instance_ = new ReconnectOtherReadyReq();
  SyncPlayerStatus::default_instance_ = new SyncPlayerStatus();
  GpsSeatInfo::default_instance_ = new GpsSeatInfo();
  AskStartGame::default_instance_ = new AskStartGame();
  AcceptStartReq::default_instance_ = new AcceptStartReq();
  AcceptStartNotify::default_instance_ = new AcceptStartNotify();
  PrepareRoundReq::default_instance_ = new PrepareRoundReq();
  PrepareRoundNotify::default_instance_ = new PrepareRoundNotify();
  TotalResultSeat::default_instance_ = new TotalResultSeat();
  SeatInfo::default_instance_ = new SeatInfo();
  GameResultSeat::default_instance_ = new GameResultSeat();
  HuDetail::default_instance_ = new HuDetail();
  FengYuDetail::default_instance_ = new FengYuDetail();
  HuaZhuDetail::default_instance_ = new HuaZhuDetail();
  DaJiaoDetail::default_instance_ = new DaJiaoDetail();
  ScoreDetail::default_instance_ = new ScoreDetail();
  OpenTile::default_instance_ = new OpenTile();
  YlHuInfo::default_instance_ = new YlHuInfo();
  BbHuInfo::default_instance_ = new BbHuInfo();
  LcHuInfo::default_instance_ = new LcHuInfo();
  XzHuInfo::default_instance_ = new XzHuInfo();
  XlHuInfo::default_instance_ = new XlHuInfo();
  HuInfo::default_instance_ = new HuInfo();
  SameIpSeats::default_instance_ = new SameIpSeats();
  QuickMessageReq::default_instance_ = new QuickMessageReq();
  QuickMessageResp::default_instance_ = new QuickMessageResp();
  NotifyPlayerEvent::default_instance_ = new NotifyPlayerEvent();
  NotifyGhostPaiListResult::default_instance_ = new NotifyGhostPaiListResult();
  NotifyGenzhuang::default_instance_ = new NotifyGenzhuang();
  AskSanZhang::default_instance_ = new AskSanZhang();
  HuanSanZhangReq::default_instance_ = new HuanSanZhangReq();
  HuanSanZhangNotify::default_instance_ = new HuanSanZhangNotify();
  AskDingQue::default_instance_ = new AskDingQue();
  DingQueReq::default_instance_ = new DingQueReq();
  DingQueNotify::default_instance_ = new DingQueNotify();
  HuPaiListNotify::default_instance_ = new HuPaiListNotify();
  MyScoreListReq::default_instance_ = new MyScoreListReq();
  MyScoreListResp::default_instance_ = new MyScoreListResp();
  MyTingPaiListReq::default_instance_ = new MyTingPaiListReq();
  StartGameReq::default_instance_->InitAsDefaultInstance();
  StartRoundResp::default_instance_->InitAsDefaultInstance();
  DiscardReq::default_instance_->InitAsDefaultInstance();
  EventInfo::default_instance_->InitAsDefaultInstance();
  DiscardResp::default_instance_->InitAsDefaultInstance();
  PromptPai::default_instance_->InitAsDefaultInstance();
  TingPai::default_instance_->InitAsDefaultInstance();
  TingPaiDiscardNotify::default_instance_->InitAsDefaultInstance();
  TingPaiWaiteNotify::default_instance_->InitAsDefaultInstance();
  DealNotify::default_instance_->InitAsDefaultInstance();
  ResponseEventReq::default_instance_->InitAsDefaultInstance();
  ResponseEventResp::default_instance_->InitAsDefaultInstance();
  GameResultNotify::default_instance_->InitAsDefaultInstance();
  DisCardOver::default_instance_->InitAsDefaultInstance();
  TotalResultNotify::default_instance_->InitAsDefaultInstance();
  ReconnectLoadReq::default_instance_->InitAsDefaultInstance();
  ReconnectPrepare::default_instance_->InitAsDefaultInstance();
  ReconnectLoadResp::default_instance_->InitAsDefaultInstance();
  ReconnectReadyReq::default_instance_->InitAsDefaultInstance();
  ReconnectSyncCard::default_instance_->InitAsDefaultInstance();
  ReconnectOtherReadyReq::default_instance_->InitAsDefaultInstance();
  SyncPlayerStatus::default_instance_->InitAsDefaultInstance();
  GpsSeatInfo::default_instance_->InitAsDefaultInstance();
  AskStartGame::default_instance_->InitAsDefaultInstance();
  AcceptStartReq::default_instance_->InitAsDefaultInstance();
  AcceptStartNotify::default_instance_->InitAsDefaultInstance();
  PrepareRoundReq::default_instance_->InitAsDefaultInstance();
  PrepareRoundNotify::default_instance_->InitAsDefaultInstance();
  TotalResultSeat::default_instance_->InitAsDefaultInstance();
  SeatInfo::default_instance_->InitAsDefaultInstance();
  GameResultSeat::default_instance_->InitAsDefaultInstance();
  HuDetail::default_instance_->InitAsDefaultInstance();
  FengYuDetail::default_instance_->InitAsDefaultInstance();
  HuaZhuDetail::default_instance_->InitAsDefaultInstance();
  DaJiaoDetail::default_instance_->InitAsDefaultInstance();
  ScoreDetail::default_instance_->InitAsDefaultInstance();
  OpenTile::default_instance_->InitAsDefaultInstance();
  YlHuInfo::default_instance_->InitAsDefaultInstance();
  BbHuInfo::default_instance_->InitAsDefaultInstance();
  LcHuInfo::default_instance_->InitAsDefaultInstance();
  XzHuInfo::default_instance_->InitAsDefaultInstance();
  XlHuInfo::default_instance_->InitAsDefaultInstance();
  HuInfo::default_instance_->InitAsDefaultInstance();
  SameIpSeats::default_instance_->InitAsDefaultInstance();
  QuickMessageReq::default_instance_->InitAsDefaultInstance();
  QuickMessageResp::default_instance_->InitAsDefaultInstance();
  NotifyPlayerEvent::default_instance_->InitAsDefaultInstance();
  NotifyGhostPaiListResult::default_instance_->InitAsDefaultInstance();
  NotifyGenzhuang::default_instance_->InitAsDefaultInstance();
  AskSanZhang::default_instance_->InitAsDefaultInstance();
  HuanSanZhangReq::default_instance_->InitAsDefaultInstance();
  HuanSanZhangNotify::default_instance_->InitAsDefaultInstance();
  AskDingQue::default_instance_->InitAsDefaultInstance();
  DingQueReq::default_instance_->InitAsDefaultInstance();
  DingQueNotify::default_instance_->InitAsDefaultInstance();
  HuPaiListNotify::default_instance_->InitAsDefaultInstance();
  MyScoreListReq::default_instance_->InitAsDefaultInstance();
  MyScoreListResp::default_instance_->InitAsDefaultInstance();
  MyTingPaiListReq::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_msg_5fmaj_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_msg_5fmaj_2eproto {
  StaticDescriptorInitializer_msg_5fmaj_2eproto() {
    protobuf_AddDesc_msg_5fmaj_2eproto();
  }
} static_descriptor_initializer_msg_5fmaj_2eproto_;
const ::google::protobuf::EnumDescriptor* c_cmd_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return c_cmd_descriptor_;
}
bool c_cmd_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 50:
    case 51:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* op_code_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return op_code_descriptor_;
}
bool op_code_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* maj_type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return maj_type_descriptor_;
}
bool maj_type_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* player_status_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return player_status_descriptor_;
}
bool player_status_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* event_type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return event_type_descriptor_;
}
bool event_type_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* kong_type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return kong_type_descriptor_;
}
bool kong_type_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* hu_type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return hu_type_descriptor_;
}
bool hu_type_IsValid(int value) {
  switch(value) {
    case 0:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 201:
    case 202:
    case 203:
    case 204:
    case 205:
    case 206:
    case 207:
    case 208:
    case 209:
    case 301:
    case 302:
    case 303:
    case 304:
    case 305:
    case 306:
    case 307:
    case 308:
    case 309:
    case 1001:
    case 1002:
    case 1003:
    case 1004:
    case 1005:
    case 1006:
    case 1007:
    case 1008:
    case 1009:
    case 1010:
    case 1011:
    case 1012:
    case 1013:
    case 1014:
    case 1015:
    case 1016:
    case 1017:
    case 1018:
    case 1101:
    case 1102:
    case 1103:
    case 1104:
    case 1105:
    case 1106:
    case 1107:
    case 1108:
    case 1109:
    case 1110:
    case 1111:
    case 1112:
    case 1113:
    case 1114:
    case 1115:
    case 1116:
    case 1117:
    case 1118:
    case 1513:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* hu_way_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return hu_way_descriptor_;
}
bool hu_way_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 117:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StartGameReq::StartGameReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.StartGameReq)
}

void StartGameReq::InitAsDefaultInstance() {
}

StartGameReq::StartGameReq(const StartGameReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.StartGameReq)
}

void StartGameReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StartGameReq::~StartGameReq() {
  // @@protoc_insertion_point(destructor:msg_maj.StartGameReq)
  SharedDtor();
}

void StartGameReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void StartGameReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StartGameReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StartGameReq_descriptor_;
}

const StartGameReq& StartGameReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmaj_2eproto();
  return *default_instance_;
}

StartGameReq* StartGameReq::default_instance_ = NULL;

StartGameReq* StartGameReq::New(::google::protobuf::Arena* arena) const {
  StartGameReq* n = new StartGameReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StartGameReq::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.StartGameReq)
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool StartGameReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.StartGameReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.StartGameReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.StartGameReq)
  return false;
#undef DO_
}

void StartGameReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.StartGameReq)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.StartGameReq)
}

::google::protobuf::uint8* StartGameReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.StartGameReq)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.StartGameReq)
  return target;
}

int StartGameReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.StartGameReq)
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StartGameReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.StartGameReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const StartGameReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const StartGameReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.StartGameReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.StartGameReq)
    MergeFrom(*source);
  }
}

void StartGameReq::MergeFrom(const StartGameReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.StartGameReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void StartGameReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.StartGameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartGameReq::CopyFrom(const StartGameReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.StartGameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartGameReq::IsInitialized() const {

  return true;
}

void StartGameReq::Swap(StartGameReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StartGameReq::InternalSwap(StartGameReq* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StartGameReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StartGameReq_descriptor_;
  metadata.reflection = StartGameReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StartGameReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StartRoundResp::kDenySeatFieldNumber;
const int StartRoundResp::kDiceFieldNumber;
const int StartRoundResp::kTileListFieldNumber;
const int StartRoundResp::kBankerSeatIdFieldNumber;
const int StartRoundResp::kEventsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StartRoundResp::StartRoundResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.StartRoundResp)
}

void StartRoundResp::InitAsDefaultInstance() {
}

StartRoundResp::StartRoundResp(const StartRoundResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.StartRoundResp)
}

void StartRoundResp::SharedCtor() {
  _cached_size_ = 0;
  deny_seat_ = 0u;
  dice_ = 0u;
  banker_seat_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StartRoundResp::~StartRoundResp() {
  // @@protoc_insertion_point(destructor:msg_maj.StartRoundResp)
  SharedDtor();
}

void StartRoundResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void StartRoundResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StartRoundResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StartRoundResp_descriptor_;
}

const StartRoundResp& StartRoundResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmaj_2eproto();
  return *default_instance_;
}

StartRoundResp* StartRoundResp::default_instance_ = NULL;

StartRoundResp* StartRoundResp::New(::google::protobuf::Arena* arena) const {
  StartRoundResp* n = new StartRoundResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StartRoundResp::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.StartRoundResp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(StartRoundResp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<StartRoundResp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 11u) {
    ZR_(deny_seat_, dice_);
    banker_seat_id_ = 0u;
  }

#undef ZR_HELPER_
#undef ZR_

  tile_list_.Clear();
  events_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool StartRoundResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.StartRoundResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 deny_seat = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &deny_seat_)));
          set_has_deny_seat();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_dice;
        break;
      }

      // optional uint32 dice = 2;
      case 2: {
        if (tag == 16) {
         parse_dice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dice_)));
          set_has_dice();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_tile_list;
        break;
      }

      // repeated uint32 tile_list = 3;
      case 3: {
        if (tag == 24) {
         parse_tile_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24, input, this->mutable_tile_list())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_tile_list())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_tile_list;
        if (input->ExpectTag(32)) goto parse_banker_seat_id;
        break;
      }

      // optional uint32 banker_seat_id = 4;
      case 4: {
        if (tag == 32) {
         parse_banker_seat_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &banker_seat_id_)));
          set_has_banker_seat_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_events;
        break;
      }

      // repeated .msg_maj.event_type events = 5;
      case 5: {
        if (tag == 40) {
         parse_events:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::msg_maj::event_type_IsValid(value)) {
            add_events(static_cast< ::msg_maj::event_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else if (tag == 42) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 5,
                 ::msg_maj::event_type_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_events())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_events;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.StartRoundResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.StartRoundResp)
  return false;
#undef DO_
}

void StartRoundResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.StartRoundResp)
  // optional uint32 deny_seat = 1;
  if (has_deny_seat()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->deny_seat(), output);
  }

  // optional uint32 dice = 2;
  if (has_dice()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->dice(), output);
  }

  // repeated uint32 tile_list = 3;
  for (int i = 0; i < this->tile_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->tile_list(i), output);
  }

  // optional uint32 banker_seat_id = 4;
  if (has_banker_seat_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->banker_seat_id(), output);
  }

  // repeated .msg_maj.event_type events = 5;
  for (int i = 0; i < this->events_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->events(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.StartRoundResp)
}

::google::protobuf::uint8* StartRoundResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.StartRoundResp)
  // optional uint32 deny_seat = 1;
  if (has_deny_seat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->deny_seat(), target);
  }

  // optional uint32 dice = 2;
  if (has_dice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->dice(), target);
  }

  // repeated uint32 tile_list = 3;
  for (int i = 0; i < this->tile_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(3, this->tile_list(i), target);
  }

  // optional uint32 banker_seat_id = 4;
  if (has_banker_seat_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->banker_seat_id(), target);
  }

  // repeated .msg_maj.event_type events = 5;
  for (int i = 0; i < this->events_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->events(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.StartRoundResp)
  return target;
}

int StartRoundResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.StartRoundResp)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 11u) {
    // optional uint32 deny_seat = 1;
    if (has_deny_seat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->deny_seat());
    }

    // optional uint32 dice = 2;
    if (has_dice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->dice());
    }

    // optional uint32 banker_seat_id = 4;
    if (has_banker_seat_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->banker_seat_id());
    }

  }
  // repeated uint32 tile_list = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->tile_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->tile_list(i));
    }
    total_size += 1 * this->tile_list_size() + data_size;
  }

  // repeated .msg_maj.event_type events = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->events_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->events(i));
    }
    total_size += 1 * this->events_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StartRoundResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.StartRoundResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const StartRoundResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const StartRoundResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.StartRoundResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.StartRoundResp)
    MergeFrom(*source);
  }
}

void StartRoundResp::MergeFrom(const StartRoundResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.StartRoundResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  tile_list_.MergeFrom(from.tile_list_);
  events_.MergeFrom(from.events_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_deny_seat()) {
      set_deny_seat(from.deny_seat());
    }
    if (from.has_dice()) {
      set_dice(from.dice());
    }
    if (from.has_banker_seat_id()) {
      set_banker_seat_id(from.banker_seat_id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void StartRoundResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.StartRoundResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartRoundResp::CopyFrom(const StartRoundResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.StartRoundResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartRoundResp::IsInitialized() const {

  return true;
}

void StartRoundResp::Swap(StartRoundResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StartRoundResp::InternalSwap(StartRoundResp* other) {
  std::swap(deny_seat_, other->deny_seat_);
  std::swap(dice_, other->dice_);
  tile_list_.UnsafeArenaSwap(&other->tile_list_);
  std::swap(banker_seat_id_, other->banker_seat_id_);
  events_.UnsafeArenaSwap(&other->events_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StartRoundResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StartRoundResp_descriptor_;
  metadata.reflection = StartRoundResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StartRoundResp

// optional uint32 deny_seat = 1;
bool StartRoundResp::has_deny_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void StartRoundResp::set_has_deny_seat() {
  _has_bits_[0] |= 0x00000001u;
}
void StartRoundResp::clear_has_deny_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
void StartRoundResp::clear_deny_seat() {
  deny_seat_ = 0u;
  clear_has_deny_seat();
}
 ::google::protobuf::uint32 StartRoundResp::deny_seat() const {
  // @@protoc_insertion_point(field_get:msg_maj.StartRoundResp.deny_seat)
  return deny_seat_;
}
 void StartRoundResp::set_deny_seat(::google::protobuf::uint32 value) {
  set_has_deny_seat();
  deny_seat_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.StartRoundResp.deny_seat)
}

// optional uint32 dice = 2;
bool StartRoundResp::has_dice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void StartRoundResp::set_has_dice() {
  _has_bits_[0] |= 0x00000002u;
}
void StartRoundResp::clear_has_dice() {
  _has_bits_[0] &= ~0x00000002u;
}
void StartRoundResp::clear_dice() {
  dice_ = 0u;
  clear_has_dice();
}
 ::google::protobuf::uint32 StartRoundResp::dice() const {
  // @@protoc_insertion_point(field_get:msg_maj.StartRoundResp.dice)
  return dice_;
}
 void StartRoundResp::set_dice(::google::protobuf::uint32 value) {
  set_has_dice();
  dice_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.StartRoundResp.dice)
}

// repeated uint32 tile_list = 3;
int StartRoundResp::tile_list_size() const {
  return tile_list_.size();
}
void StartRoundResp::clear_tile_list() {
  tile_list_.Clear();
}
 ::google::protobuf::uint32 StartRoundResp::tile_list(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.StartRoundResp.tile_list)
  return tile_list_.Get(index);
}
 void StartRoundResp::set_tile_list(int index, ::google::protobuf::uint32 value) {
  tile_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg_maj.StartRoundResp.tile_list)
}
 void StartRoundResp::add_tile_list(::google::protobuf::uint32 value) {
  tile_list_.Add(value);
  // @@protoc_insertion_point(field_add:msg_maj.StartRoundResp.tile_list)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
StartRoundResp::tile_list() const {
  // @@protoc_insertion_point(field_list:msg_maj.StartRoundResp.tile_list)
  return tile_list_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
StartRoundResp::mutable_tile_list() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.StartRoundResp.tile_list)
  return &tile_list_;
}

// optional uint32 banker_seat_id = 4;
bool StartRoundResp::has_banker_seat_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void StartRoundResp::set_has_banker_seat_id() {
  _has_bits_[0] |= 0x00000008u;
}
void StartRoundResp::clear_has_banker_seat_id() {
  _has_bits_[0] &= ~0x00000008u;
}
void StartRoundResp::clear_banker_seat_id() {
  banker_seat_id_ = 0u;
  clear_has_banker_seat_id();
}
 ::google::protobuf::uint32 StartRoundResp::banker_seat_id() const {
  // @@protoc_insertion_point(field_get:msg_maj.StartRoundResp.banker_seat_id)
  return banker_seat_id_;
}
 void StartRoundResp::set_banker_seat_id(::google::protobuf::uint32 value) {
  set_has_banker_seat_id();
  banker_seat_id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.StartRoundResp.banker_seat_id)
}

// repeated .msg_maj.event_type events = 5;
int StartRoundResp::events_size() const {
  return events_.size();
}
void StartRoundResp::clear_events() {
  events_.Clear();
}
 ::msg_maj::event_type StartRoundResp::events(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.StartRoundResp.events)
  return static_cast< ::msg_maj::event_type >(events_.Get(index));
}
 void StartRoundResp::set_events(int index, ::msg_maj::event_type value) {
  assert(::msg_maj::event_type_IsValid(value));
  events_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg_maj.StartRoundResp.events)
}
 void StartRoundResp::add_events(::msg_maj::event_type value) {
  assert(::msg_maj::event_type_IsValid(value));
  events_.Add(value);
  // @@protoc_insertion_point(field_add:msg_maj.StartRoundResp.events)
}
 const ::google::protobuf::RepeatedField<int>&
StartRoundResp::events() const {
  // @@protoc_insertion_point(field_list:msg_maj.StartRoundResp.events)
  return events_;
}
 ::google::protobuf::RepeatedField<int>*
StartRoundResp::mutable_events() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.StartRoundResp.events)
  return &events_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DiscardReq::kTileFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DiscardReq::DiscardReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.DiscardReq)
}

void DiscardReq::InitAsDefaultInstance() {
}

DiscardReq::DiscardReq(const DiscardReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.DiscardReq)
}

void DiscardReq::SharedCtor() {
  _cached_size_ = 0;
  tile_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DiscardReq::~DiscardReq() {
  // @@protoc_insertion_point(destructor:msg_maj.DiscardReq)
  SharedDtor();
}

void DiscardReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DiscardReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DiscardReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DiscardReq_descriptor_;
}

const DiscardReq& DiscardReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmaj_2eproto();
  return *default_instance_;
}

DiscardReq* DiscardReq::default_instance_ = NULL;

DiscardReq* DiscardReq::New(::google::protobuf::Arena* arena) const {
  DiscardReq* n = new DiscardReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DiscardReq::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.DiscardReq)
  tile_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DiscardReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.DiscardReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 tile = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tile_)));
          set_has_tile();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.DiscardReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.DiscardReq)
  return false;
#undef DO_
}

void DiscardReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.DiscardReq)
  // required uint32 tile = 1;
  if (has_tile()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tile(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.DiscardReq)
}

::google::protobuf::uint8* DiscardReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.DiscardReq)
  // required uint32 tile = 1;
  if (has_tile()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tile(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.DiscardReq)
  return target;
}

int DiscardReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.DiscardReq)
  int total_size = 0;

  // required uint32 tile = 1;
  if (has_tile()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tile());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DiscardReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.DiscardReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DiscardReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DiscardReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.DiscardReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.DiscardReq)
    MergeFrom(*source);
  }
}

void DiscardReq::MergeFrom(const DiscardReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.DiscardReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tile()) {
      set_tile(from.tile());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void DiscardReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.DiscardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DiscardReq::CopyFrom(const DiscardReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.DiscardReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DiscardReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void DiscardReq::Swap(DiscardReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DiscardReq::InternalSwap(DiscardReq* other) {
  std::swap(tile_, other->tile_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DiscardReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DiscardReq_descriptor_;
  metadata.reflection = DiscardReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DiscardReq

// required uint32 tile = 1;
bool DiscardReq::has_tile() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DiscardReq::set_has_tile() {
  _has_bits_[0] |= 0x00000001u;
}
void DiscardReq::clear_has_tile() {
  _has_bits_[0] &= ~0x00000001u;
}
void DiscardReq::clear_tile() {
  tile_ = 0u;
  clear_has_tile();
}
 ::google::protobuf::uint32 DiscardReq::tile() const {
  // @@protoc_insertion_point(field_get:msg_maj.DiscardReq.tile)
  return tile_;
}
 void DiscardReq::set_tile(::google::protobuf::uint32 value) {
  set_has_tile();
  tile_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.DiscardReq.tile)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EventInfo::kEventTFieldNumber;
const int EventInfo::kEventPaiFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EventInfo::EventInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.EventInfo)
}

void EventInfo::InitAsDefaultInstance() {
}

EventInfo::EventInfo(const EventInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.EventInfo)
}

void EventInfo::SharedCtor() {
  _cached_size_ = 0;
  event_t_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EventInfo::~EventInfo() {
  // @@protoc_insertion_point(destructor:msg_maj.EventInfo)
  SharedDtor();
}

void EventInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void EventInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EventInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EventInfo_descriptor_;
}

const EventInfo& EventInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmaj_2eproto();
  return *default_instance_;
}

EventInfo* EventInfo::default_instance_ = NULL;

EventInfo* EventInfo::New(::google::protobuf::Arena* arena) const {
  EventInfo* n = new EventInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EventInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.EventInfo)
  event_t_ = 0;
  event_pai_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool EventInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.EventInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .msg_maj.event_type event_t = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::msg_maj::event_type_IsValid(value)) {
            set_event_t(static_cast< ::msg_maj::event_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_event_pai;
        break;
      }

      // repeated uint32 event_pai = 2;
      case 2: {
        if (tag == 16) {
         parse_event_pai:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_event_pai())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_event_pai())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_event_pai;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.EventInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.EventInfo)
  return false;
#undef DO_
}

void EventInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.EventInfo)
  // required .msg_maj.event_type event_t = 1;
  if (has_event_t()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->event_t(), output);
  }

  // repeated uint32 event_pai = 2;
  for (int i = 0; i < this->event_pai_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->event_pai(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.EventInfo)
}

::google::protobuf::uint8* EventInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.EventInfo)
  // required .msg_maj.event_type event_t = 1;
  if (has_event_t()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->event_t(), target);
  }

  // repeated uint32 event_pai = 2;
  for (int i = 0; i < this->event_pai_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->event_pai(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.EventInfo)
  return target;
}

int EventInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.EventInfo)
  int total_size = 0;

  // required .msg_maj.event_type event_t = 1;
  if (has_event_t()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->event_t());
  }
  // repeated uint32 event_pai = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->event_pai_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->event_pai(i));
    }
    total_size += 1 * this->event_pai_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EventInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.EventInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const EventInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const EventInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.EventInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.EventInfo)
    MergeFrom(*source);
  }
}

void EventInfo::MergeFrom(const EventInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.EventInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  event_pai_.MergeFrom(from.event_pai_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_event_t()) {
      set_event_t(from.event_t());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void EventInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.EventInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EventInfo::CopyFrom(const EventInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.EventInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void EventInfo::Swap(EventInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EventInfo::InternalSwap(EventInfo* other) {
  std::swap(event_t_, other->event_t_);
  event_pai_.UnsafeArenaSwap(&other->event_pai_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EventInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EventInfo_descriptor_;
  metadata.reflection = EventInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EventInfo

// required .msg_maj.event_type event_t = 1;
bool EventInfo::has_event_t() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EventInfo::set_has_event_t() {
  _has_bits_[0] |= 0x00000001u;
}
void EventInfo::clear_has_event_t() {
  _has_bits_[0] &= ~0x00000001u;
}
void EventInfo::clear_event_t() {
  event_t_ = 0;
  clear_has_event_t();
}
 ::msg_maj::event_type EventInfo::event_t() const {
  // @@protoc_insertion_point(field_get:msg_maj.EventInfo.event_t)
  return static_cast< ::msg_maj::event_type >(event_t_);
}
 void EventInfo::set_event_t(::msg_maj::event_type value) {
  assert(::msg_maj::event_type_IsValid(value));
  set_has_event_t();
  event_t_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.EventInfo.event_t)
}

// repeated uint32 event_pai = 2;
int EventInfo::event_pai_size() const {
  return event_pai_.size();
}
void EventInfo::clear_event_pai() {
  event_pai_.Clear();
}
 ::google::protobuf::uint32 EventInfo::event_pai(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.EventInfo.event_pai)
  return event_pai_.Get(index);
}
 void EventInfo::set_event_pai(int index, ::google::protobuf::uint32 value) {
  event_pai_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg_maj.EventInfo.event_pai)
}
 void EventInfo::add_event_pai(::google::protobuf::uint32 value) {
  event_pai_.Add(value);
  // @@protoc_insertion_point(field_add:msg_maj.EventInfo.event_pai)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
EventInfo::event_pai() const {
  // @@protoc_insertion_point(field_list:msg_maj.EventInfo.event_pai)
  return event_pai_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
EventInfo::mutable_event_pai() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.EventInfo.event_pai)
  return &event_pai_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DiscardResp::kSeatFieldNumber;
const int DiscardResp::kTileFieldNumber;
const int DiscardResp::kTileLeftCountFieldNumber;
const int DiscardResp::kEventListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DiscardResp::DiscardResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.DiscardResp)
}

void DiscardResp::InitAsDefaultInstance() {
}

DiscardResp::DiscardResp(const DiscardResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.DiscardResp)
}

void DiscardResp::SharedCtor() {
  _cached_size_ = 0;
  seat_ = 0u;
  tile_ = 0u;
  tileleftcount_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DiscardResp::~DiscardResp() {
  // @@protoc_insertion_point(destructor:msg_maj.DiscardResp)
  SharedDtor();
}

void DiscardResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DiscardResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DiscardResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DiscardResp_descriptor_;
}

const DiscardResp& DiscardResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmaj_2eproto();
  return *default_instance_;
}

DiscardResp* DiscardResp::default_instance_ = NULL;

DiscardResp* DiscardResp::New(::google::protobuf::Arena* arena) const {
  DiscardResp* n = new DiscardResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DiscardResp::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.DiscardResp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(DiscardResp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<DiscardResp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 7u) {
    ZR_(seat_, tile_);
    tileleftcount_ = 0u;
  }

#undef ZR_HELPER_
#undef ZR_

  eventlist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DiscardResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.DiscardResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 seat = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seat_)));
          set_has_seat();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_tile;
        break;
      }

      // required uint32 tile = 2;
      case 2: {
        if (tag == 16) {
         parse_tile:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tile_)));
          set_has_tile();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_tileLeftCount;
        break;
      }

      // required uint32 tileLeftCount = 3;
      case 3: {
        if (tag == 24) {
         parse_tileLeftCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tileleftcount_)));
          set_has_tileleftcount();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_eventList;
        break;
      }

      // repeated .msg_maj.EventInfo eventList = 4;
      case 4: {
        if (tag == 34) {
         parse_eventList:
          DO_(input->IncrementRecursionDepth());
         parse_loop_eventList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_eventlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_eventList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.DiscardResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.DiscardResp)
  return false;
#undef DO_
}

void DiscardResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.DiscardResp)
  // required uint32 seat = 1;
  if (has_seat()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->seat(), output);
  }

  // required uint32 tile = 2;
  if (has_tile()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->tile(), output);
  }

  // required uint32 tileLeftCount = 3;
  if (has_tileleftcount()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->tileleftcount(), output);
  }

  // repeated .msg_maj.EventInfo eventList = 4;
  for (unsigned int i = 0, n = this->eventlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->eventlist(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.DiscardResp)
}

::google::protobuf::uint8* DiscardResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.DiscardResp)
  // required uint32 seat = 1;
  if (has_seat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->seat(), target);
  }

  // required uint32 tile = 2;
  if (has_tile()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->tile(), target);
  }

  // required uint32 tileLeftCount = 3;
  if (has_tileleftcount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->tileleftcount(), target);
  }

  // repeated .msg_maj.EventInfo eventList = 4;
  for (unsigned int i = 0, n = this->eventlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->eventlist(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.DiscardResp)
  return target;
}

int DiscardResp::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:msg_maj.DiscardResp)
  int total_size = 0;

  if (has_seat()) {
    // required uint32 seat = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->seat());
  }

  if (has_tile()) {
    // required uint32 tile = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tile());
  }

  if (has_tileleftcount()) {
    // required uint32 tileLeftCount = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tileleftcount());
  }

  return total_size;
}
int DiscardResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.DiscardResp)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required uint32 seat = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->seat());

    // required uint32 tile = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tile());

    // required uint32 tileLeftCount = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tileleftcount());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .msg_maj.EventInfo eventList = 4;
  total_size += 1 * this->eventlist_size();
  for (int i = 0; i < this->eventlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->eventlist(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DiscardResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.DiscardResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DiscardResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DiscardResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.DiscardResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.DiscardResp)
    MergeFrom(*source);
  }
}

void DiscardResp::MergeFrom(const DiscardResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.DiscardResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  eventlist_.MergeFrom(from.eventlist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_seat()) {
      set_seat(from.seat());
    }
    if (from.has_tile()) {
      set_tile(from.tile());
    }
    if (from.has_tileleftcount()) {
      set_tileleftcount(from.tileleftcount());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void DiscardResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.DiscardResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DiscardResp::CopyFrom(const DiscardResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.DiscardResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DiscardResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->eventlist())) return false;
  return true;
}

void DiscardResp::Swap(DiscardResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DiscardResp::InternalSwap(DiscardResp* other) {
  std::swap(seat_, other->seat_);
  std::swap(tile_, other->tile_);
  std::swap(tileleftcount_, other->tileleftcount_);
  eventlist_.UnsafeArenaSwap(&other->eventlist_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DiscardResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DiscardResp_descriptor_;
  metadata.reflection = DiscardResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DiscardResp

// required uint32 seat = 1;
bool DiscardResp::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DiscardResp::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
void DiscardResp::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
void DiscardResp::clear_seat() {
  seat_ = 0u;
  clear_has_seat();
}
 ::google::protobuf::uint32 DiscardResp::seat() const {
  // @@protoc_insertion_point(field_get:msg_maj.DiscardResp.seat)
  return seat_;
}
 void DiscardResp::set_seat(::google::protobuf::uint32 value) {
  set_has_seat();
  seat_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.DiscardResp.seat)
}

// required uint32 tile = 2;
bool DiscardResp::has_tile() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DiscardResp::set_has_tile() {
  _has_bits_[0] |= 0x00000002u;
}
void DiscardResp::clear_has_tile() {
  _has_bits_[0] &= ~0x00000002u;
}
void DiscardResp::clear_tile() {
  tile_ = 0u;
  clear_has_tile();
}
 ::google::protobuf::uint32 DiscardResp::tile() const {
  // @@protoc_insertion_point(field_get:msg_maj.DiscardResp.tile)
  return tile_;
}
 void DiscardResp::set_tile(::google::protobuf::uint32 value) {
  set_has_tile();
  tile_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.DiscardResp.tile)
}

// required uint32 tileLeftCount = 3;
bool DiscardResp::has_tileleftcount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void DiscardResp::set_has_tileleftcount() {
  _has_bits_[0] |= 0x00000004u;
}
void DiscardResp::clear_has_tileleftcount() {
  _has_bits_[0] &= ~0x00000004u;
}
void DiscardResp::clear_tileleftcount() {
  tileleftcount_ = 0u;
  clear_has_tileleftcount();
}
 ::google::protobuf::uint32 DiscardResp::tileleftcount() const {
  // @@protoc_insertion_point(field_get:msg_maj.DiscardResp.tileLeftCount)
  return tileleftcount_;
}
 void DiscardResp::set_tileleftcount(::google::protobuf::uint32 value) {
  set_has_tileleftcount();
  tileleftcount_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.DiscardResp.tileLeftCount)
}

// repeated .msg_maj.EventInfo eventList = 4;
int DiscardResp::eventlist_size() const {
  return eventlist_.size();
}
void DiscardResp::clear_eventlist() {
  eventlist_.Clear();
}
const ::msg_maj::EventInfo& DiscardResp::eventlist(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.DiscardResp.eventList)
  return eventlist_.Get(index);
}
::msg_maj::EventInfo* DiscardResp::mutable_eventlist(int index) {
  // @@protoc_insertion_point(field_mutable:msg_maj.DiscardResp.eventList)
  return eventlist_.Mutable(index);
}
::msg_maj::EventInfo* DiscardResp::add_eventlist() {
  // @@protoc_insertion_point(field_add:msg_maj.DiscardResp.eventList)
  return eventlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::msg_maj::EventInfo >*
DiscardResp::mutable_eventlist() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.DiscardResp.eventList)
  return &eventlist_;
}
const ::google::protobuf::RepeatedPtrField< ::msg_maj::EventInfo >&
DiscardResp::eventlist() const {
  // @@protoc_insertion_point(field_list:msg_maj.DiscardResp.eventList)
  return eventlist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PromptPai::kHupaiFieldNumber;
const int PromptPai::kPaidestFieldNumber;
const int PromptPai::kPainumFieldNumber;
const int PromptPai::kHutypeFieldNumber;
const int PromptPai::kMulitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PromptPai::PromptPai()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.PromptPai)
}

void PromptPai::InitAsDefaultInstance() {
}

PromptPai::PromptPai(const PromptPai& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.PromptPai)
}

void PromptPai::SharedCtor() {
  _cached_size_ = 0;
  hupai_ = 0u;
  paidest_ = 0u;
  painum_ = 0u;
  hutype_ = 0;
  mulit_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PromptPai::~PromptPai() {
  // @@protoc_insertion_point(destructor:msg_maj.PromptPai)
  SharedDtor();
}

void PromptPai::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PromptPai::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PromptPai::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PromptPai_descriptor_;
}

const PromptPai& PromptPai::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmaj_2eproto();
  return *default_instance_;
}

PromptPai* PromptPai::default_instance_ = NULL;

PromptPai* PromptPai::New(::google::protobuf::Arena* arena) const {
  PromptPai* n = new PromptPai;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PromptPai::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.PromptPai)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PromptPai, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PromptPai*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31u) {
    ZR_(hupai_, mulit_);
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PromptPai::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.PromptPai)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 hupai = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hupai_)));
          set_has_hupai();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_paidest;
        break;
      }

      // optional uint32 paidest = 2;
      case 2: {
        if (tag == 16) {
         parse_paidest:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &paidest_)));
          set_has_paidest();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_painum;
        break;
      }

      // optional uint32 painum = 3;
      case 3: {
        if (tag == 24) {
         parse_painum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &painum_)));
          set_has_painum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_hutype;
        break;
      }

      // optional .msg_maj.hu_type hutype = 4;
      case 4: {
        if (tag == 32) {
         parse_hutype:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::msg_maj::hu_type_IsValid(value)) {
            set_hutype(static_cast< ::msg_maj::hu_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_mulit;
        break;
      }

      // optional uint32 mulit = 5;
      case 5: {
        if (tag == 40) {
         parse_mulit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mulit_)));
          set_has_mulit();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.PromptPai)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.PromptPai)
  return false;
#undef DO_
}

void PromptPai::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.PromptPai)
  // optional uint32 hupai = 1;
  if (has_hupai()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hupai(), output);
  }

  // optional uint32 paidest = 2;
  if (has_paidest()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->paidest(), output);
  }

  // optional uint32 painum = 3;
  if (has_painum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->painum(), output);
  }

  // optional .msg_maj.hu_type hutype = 4;
  if (has_hutype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->hutype(), output);
  }

  // optional uint32 mulit = 5;
  if (has_mulit()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->mulit(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.PromptPai)
}

::google::protobuf::uint8* PromptPai::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.PromptPai)
  // optional uint32 hupai = 1;
  if (has_hupai()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hupai(), target);
  }

  // optional uint32 paidest = 2;
  if (has_paidest()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->paidest(), target);
  }

  // optional uint32 painum = 3;
  if (has_painum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->painum(), target);
  }

  // optional .msg_maj.hu_type hutype = 4;
  if (has_hutype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->hutype(), target);
  }

  // optional uint32 mulit = 5;
  if (has_mulit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->mulit(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.PromptPai)
  return target;
}

int PromptPai::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.PromptPai)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 31u) {
    // optional uint32 hupai = 1;
    if (has_hupai()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hupai());
    }

    // optional uint32 paidest = 2;
    if (has_paidest()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->paidest());
    }

    // optional uint32 painum = 3;
    if (has_painum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->painum());
    }

    // optional .msg_maj.hu_type hutype = 4;
    if (has_hutype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->hutype());
    }

    // optional uint32 mulit = 5;
    if (has_mulit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->mulit());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PromptPai::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.PromptPai)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PromptPai* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PromptPai>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.PromptPai)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.PromptPai)
    MergeFrom(*source);
  }
}

void PromptPai::MergeFrom(const PromptPai& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.PromptPai)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hupai()) {
      set_hupai(from.hupai());
    }
    if (from.has_paidest()) {
      set_paidest(from.paidest());
    }
    if (from.has_painum()) {
      set_painum(from.painum());
    }
    if (from.has_hutype()) {
      set_hutype(from.hutype());
    }
    if (from.has_mulit()) {
      set_mulit(from.mulit());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PromptPai::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.PromptPai)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PromptPai::CopyFrom(const PromptPai& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.PromptPai)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PromptPai::IsInitialized() const {

  return true;
}

void PromptPai::Swap(PromptPai* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PromptPai::InternalSwap(PromptPai* other) {
  std::swap(hupai_, other->hupai_);
  std::swap(paidest_, other->paidest_);
  std::swap(painum_, other->painum_);
  std::swap(hutype_, other->hutype_);
  std::swap(mulit_, other->mulit_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PromptPai::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PromptPai_descriptor_;
  metadata.reflection = PromptPai_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PromptPai

// optional uint32 hupai = 1;
bool PromptPai::has_hupai() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PromptPai::set_has_hupai() {
  _has_bits_[0] |= 0x00000001u;
}
void PromptPai::clear_has_hupai() {
  _has_bits_[0] &= ~0x00000001u;
}
void PromptPai::clear_hupai() {
  hupai_ = 0u;
  clear_has_hupai();
}
 ::google::protobuf::uint32 PromptPai::hupai() const {
  // @@protoc_insertion_point(field_get:msg_maj.PromptPai.hupai)
  return hupai_;
}
 void PromptPai::set_hupai(::google::protobuf::uint32 value) {
  set_has_hupai();
  hupai_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.PromptPai.hupai)
}

// optional uint32 paidest = 2;
bool PromptPai::has_paidest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PromptPai::set_has_paidest() {
  _has_bits_[0] |= 0x00000002u;
}
void PromptPai::clear_has_paidest() {
  _has_bits_[0] &= ~0x00000002u;
}
void PromptPai::clear_paidest() {
  paidest_ = 0u;
  clear_has_paidest();
}
 ::google::protobuf::uint32 PromptPai::paidest() const {
  // @@protoc_insertion_point(field_get:msg_maj.PromptPai.paidest)
  return paidest_;
}
 void PromptPai::set_paidest(::google::protobuf::uint32 value) {
  set_has_paidest();
  paidest_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.PromptPai.paidest)
}

// optional uint32 painum = 3;
bool PromptPai::has_painum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void PromptPai::set_has_painum() {
  _has_bits_[0] |= 0x00000004u;
}
void PromptPai::clear_has_painum() {
  _has_bits_[0] &= ~0x00000004u;
}
void PromptPai::clear_painum() {
  painum_ = 0u;
  clear_has_painum();
}
 ::google::protobuf::uint32 PromptPai::painum() const {
  // @@protoc_insertion_point(field_get:msg_maj.PromptPai.painum)
  return painum_;
}
 void PromptPai::set_painum(::google::protobuf::uint32 value) {
  set_has_painum();
  painum_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.PromptPai.painum)
}

// optional .msg_maj.hu_type hutype = 4;
bool PromptPai::has_hutype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void PromptPai::set_has_hutype() {
  _has_bits_[0] |= 0x00000008u;
}
void PromptPai::clear_has_hutype() {
  _has_bits_[0] &= ~0x00000008u;
}
void PromptPai::clear_hutype() {
  hutype_ = 0;
  clear_has_hutype();
}
 ::msg_maj::hu_type PromptPai::hutype() const {
  // @@protoc_insertion_point(field_get:msg_maj.PromptPai.hutype)
  return static_cast< ::msg_maj::hu_type >(hutype_);
}
 void PromptPai::set_hutype(::msg_maj::hu_type value) {
  assert(::msg_maj::hu_type_IsValid(value));
  set_has_hutype();
  hutype_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.PromptPai.hutype)
}

// optional uint32 mulit = 5;
bool PromptPai::has_mulit() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void PromptPai::set_has_mulit() {
  _has_bits_[0] |= 0x00000010u;
}
void PromptPai::clear_has_mulit() {
  _has_bits_[0] &= ~0x00000010u;
}
void PromptPai::clear_mulit() {
  mulit_ = 0u;
  clear_has_mulit();
}
 ::google::protobuf::uint32 PromptPai::mulit() const {
  // @@protoc_insertion_point(field_get:msg_maj.PromptPai.mulit)
  return mulit_;
}
 void PromptPai::set_mulit(::google::protobuf::uint32 value) {
  set_has_mulit();
  mulit_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.PromptPai.mulit)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TingPai::kDicardFieldNumber;
const int TingPai::kPromptListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TingPai::TingPai()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.TingPai)
}

void TingPai::InitAsDefaultInstance() {
}

TingPai::TingPai(const TingPai& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.TingPai)
}

void TingPai::SharedCtor() {
  _cached_size_ = 0;
  dicard_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TingPai::~TingPai() {
  // @@protoc_insertion_point(destructor:msg_maj.TingPai)
  SharedDtor();
}

void TingPai::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TingPai::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TingPai::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TingPai_descriptor_;
}

const TingPai& TingPai::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmaj_2eproto();
  return *default_instance_;
}

TingPai* TingPai::default_instance_ = NULL;

TingPai* TingPai::New(::google::protobuf::Arena* arena) const {
  TingPai* n = new TingPai;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TingPai::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.TingPai)
  dicard_ = 0u;
  prompt_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TingPai::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.TingPai)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 dicard = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dicard_)));
          set_has_dicard();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_prompt_list;
        break;
      }

      // repeated .msg_maj.PromptPai prompt_list = 2;
      case 2: {
        if (tag == 18) {
         parse_prompt_list:
          DO_(input->IncrementRecursionDepth());
         parse_loop_prompt_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_prompt_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_prompt_list;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.TingPai)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.TingPai)
  return false;
#undef DO_
}

void TingPai::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.TingPai)
  // optional uint32 dicard = 1;
  if (has_dicard()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->dicard(), output);
  }

  // repeated .msg_maj.PromptPai prompt_list = 2;
  for (unsigned int i = 0, n = this->prompt_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->prompt_list(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.TingPai)
}

::google::protobuf::uint8* TingPai::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.TingPai)
  // optional uint32 dicard = 1;
  if (has_dicard()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->dicard(), target);
  }

  // repeated .msg_maj.PromptPai prompt_list = 2;
  for (unsigned int i = 0, n = this->prompt_list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->prompt_list(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.TingPai)
  return target;
}

int TingPai::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.TingPai)
  int total_size = 0;

  // optional uint32 dicard = 1;
  if (has_dicard()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dicard());
  }

  // repeated .msg_maj.PromptPai prompt_list = 2;
  total_size += 1 * this->prompt_list_size();
  for (int i = 0; i < this->prompt_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->prompt_list(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TingPai::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.TingPai)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const TingPai* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TingPai>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.TingPai)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.TingPai)
    MergeFrom(*source);
  }
}

void TingPai::MergeFrom(const TingPai& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.TingPai)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  prompt_list_.MergeFrom(from.prompt_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_dicard()) {
      set_dicard(from.dicard());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void TingPai::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.TingPai)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TingPai::CopyFrom(const TingPai& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.TingPai)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TingPai::IsInitialized() const {

  return true;
}

void TingPai::Swap(TingPai* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TingPai::InternalSwap(TingPai* other) {
  std::swap(dicard_, other->dicard_);
  prompt_list_.UnsafeArenaSwap(&other->prompt_list_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TingPai::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TingPai_descriptor_;
  metadata.reflection = TingPai_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TingPai

// optional uint32 dicard = 1;
bool TingPai::has_dicard() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TingPai::set_has_dicard() {
  _has_bits_[0] |= 0x00000001u;
}
void TingPai::clear_has_dicard() {
  _has_bits_[0] &= ~0x00000001u;
}
void TingPai::clear_dicard() {
  dicard_ = 0u;
  clear_has_dicard();
}
 ::google::protobuf::uint32 TingPai::dicard() const {
  // @@protoc_insertion_point(field_get:msg_maj.TingPai.dicard)
  return dicard_;
}
 void TingPai::set_dicard(::google::protobuf::uint32 value) {
  set_has_dicard();
  dicard_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.TingPai.dicard)
}

// repeated .msg_maj.PromptPai prompt_list = 2;
int TingPai::prompt_list_size() const {
  return prompt_list_.size();
}
void TingPai::clear_prompt_list() {
  prompt_list_.Clear();
}
const ::msg_maj::PromptPai& TingPai::prompt_list(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.TingPai.prompt_list)
  return prompt_list_.Get(index);
}
::msg_maj::PromptPai* TingPai::mutable_prompt_list(int index) {
  // @@protoc_insertion_point(field_mutable:msg_maj.TingPai.prompt_list)
  return prompt_list_.Mutable(index);
}
::msg_maj::PromptPai* TingPai::add_prompt_list() {
  // @@protoc_insertion_point(field_add:msg_maj.TingPai.prompt_list)
  return prompt_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::msg_maj::PromptPai >*
TingPai::mutable_prompt_list() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.TingPai.prompt_list)
  return &prompt_list_;
}
const ::google::protobuf::RepeatedPtrField< ::msg_maj::PromptPai >&
TingPai::prompt_list() const {
  // @@protoc_insertion_point(field_list:msg_maj.TingPai.prompt_list)
  return prompt_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TingPaiDiscardNotify::kTingListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TingPaiDiscardNotify::TingPaiDiscardNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.TingPaiDiscardNotify)
}

void TingPaiDiscardNotify::InitAsDefaultInstance() {
}

TingPaiDiscardNotify::TingPaiDiscardNotify(const TingPaiDiscardNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.TingPaiDiscardNotify)
}

void TingPaiDiscardNotify::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TingPaiDiscardNotify::~TingPaiDiscardNotify() {
  // @@protoc_insertion_point(destructor:msg_maj.TingPaiDiscardNotify)
  SharedDtor();
}

void TingPaiDiscardNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TingPaiDiscardNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TingPaiDiscardNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TingPaiDiscardNotify_descriptor_;
}

const TingPaiDiscardNotify& TingPaiDiscardNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmaj_2eproto();
  return *default_instance_;
}

TingPaiDiscardNotify* TingPaiDiscardNotify::default_instance_ = NULL;

TingPaiDiscardNotify* TingPaiDiscardNotify::New(::google::protobuf::Arena* arena) const {
  TingPaiDiscardNotify* n = new TingPaiDiscardNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TingPaiDiscardNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.TingPaiDiscardNotify)
  ting_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TingPaiDiscardNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.TingPaiDiscardNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .msg_maj.TingPai ting_list = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_ting_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_ting_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_ting_list;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.TingPaiDiscardNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.TingPaiDiscardNotify)
  return false;
#undef DO_
}

void TingPaiDiscardNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.TingPaiDiscardNotify)
  // repeated .msg_maj.TingPai ting_list = 1;
  for (unsigned int i = 0, n = this->ting_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->ting_list(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.TingPaiDiscardNotify)
}

::google::protobuf::uint8* TingPaiDiscardNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.TingPaiDiscardNotify)
  // repeated .msg_maj.TingPai ting_list = 1;
  for (unsigned int i = 0, n = this->ting_list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->ting_list(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.TingPaiDiscardNotify)
  return target;
}

int TingPaiDiscardNotify::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.TingPaiDiscardNotify)
  int total_size = 0;

  // repeated .msg_maj.TingPai ting_list = 1;
  total_size += 1 * this->ting_list_size();
  for (int i = 0; i < this->ting_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->ting_list(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TingPaiDiscardNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.TingPaiDiscardNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const TingPaiDiscardNotify* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TingPaiDiscardNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.TingPaiDiscardNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.TingPaiDiscardNotify)
    MergeFrom(*source);
  }
}

void TingPaiDiscardNotify::MergeFrom(const TingPaiDiscardNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.TingPaiDiscardNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  ting_list_.MergeFrom(from.ting_list_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void TingPaiDiscardNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.TingPaiDiscardNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TingPaiDiscardNotify::CopyFrom(const TingPaiDiscardNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.TingPaiDiscardNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TingPaiDiscardNotify::IsInitialized() const {

  return true;
}

void TingPaiDiscardNotify::Swap(TingPaiDiscardNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TingPaiDiscardNotify::InternalSwap(TingPaiDiscardNotify* other) {
  ting_list_.UnsafeArenaSwap(&other->ting_list_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TingPaiDiscardNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TingPaiDiscardNotify_descriptor_;
  metadata.reflection = TingPaiDiscardNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TingPaiDiscardNotify

// repeated .msg_maj.TingPai ting_list = 1;
int TingPaiDiscardNotify::ting_list_size() const {
  return ting_list_.size();
}
void TingPaiDiscardNotify::clear_ting_list() {
  ting_list_.Clear();
}
const ::msg_maj::TingPai& TingPaiDiscardNotify::ting_list(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.TingPaiDiscardNotify.ting_list)
  return ting_list_.Get(index);
}
::msg_maj::TingPai* TingPaiDiscardNotify::mutable_ting_list(int index) {
  // @@protoc_insertion_point(field_mutable:msg_maj.TingPaiDiscardNotify.ting_list)
  return ting_list_.Mutable(index);
}
::msg_maj::TingPai* TingPaiDiscardNotify::add_ting_list() {
  // @@protoc_insertion_point(field_add:msg_maj.TingPaiDiscardNotify.ting_list)
  return ting_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::msg_maj::TingPai >*
TingPaiDiscardNotify::mutable_ting_list() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.TingPaiDiscardNotify.ting_list)
  return &ting_list_;
}
const ::google::protobuf::RepeatedPtrField< ::msg_maj::TingPai >&
TingPaiDiscardNotify::ting_list() const {
  // @@protoc_insertion_point(field_list:msg_maj.TingPaiDiscardNotify.ting_list)
  return ting_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TingPaiWaiteNotify::kPromptListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TingPaiWaiteNotify::TingPaiWaiteNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.TingPaiWaiteNotify)
}

void TingPaiWaiteNotify::InitAsDefaultInstance() {
}

TingPaiWaiteNotify::TingPaiWaiteNotify(const TingPaiWaiteNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.TingPaiWaiteNotify)
}

void TingPaiWaiteNotify::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TingPaiWaiteNotify::~TingPaiWaiteNotify() {
  // @@protoc_insertion_point(destructor:msg_maj.TingPaiWaiteNotify)
  SharedDtor();
}

void TingPaiWaiteNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TingPaiWaiteNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TingPaiWaiteNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TingPaiWaiteNotify_descriptor_;
}

const TingPaiWaiteNotify& TingPaiWaiteNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmaj_2eproto();
  return *default_instance_;
}

TingPaiWaiteNotify* TingPaiWaiteNotify::default_instance_ = NULL;

TingPaiWaiteNotify* TingPaiWaiteNotify::New(::google::protobuf::Arena* arena) const {
  TingPaiWaiteNotify* n = new TingPaiWaiteNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TingPaiWaiteNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.TingPaiWaiteNotify)
  prompt_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TingPaiWaiteNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.TingPaiWaiteNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .msg_maj.PromptPai prompt_list = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_prompt_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_prompt_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_prompt_list;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.TingPaiWaiteNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.TingPaiWaiteNotify)
  return false;
#undef DO_
}

void TingPaiWaiteNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.TingPaiWaiteNotify)
  // repeated .msg_maj.PromptPai prompt_list = 1;
  for (unsigned int i = 0, n = this->prompt_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->prompt_list(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.TingPaiWaiteNotify)
}

::google::protobuf::uint8* TingPaiWaiteNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.TingPaiWaiteNotify)
  // repeated .msg_maj.PromptPai prompt_list = 1;
  for (unsigned int i = 0, n = this->prompt_list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->prompt_list(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.TingPaiWaiteNotify)
  return target;
}

int TingPaiWaiteNotify::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.TingPaiWaiteNotify)
  int total_size = 0;

  // repeated .msg_maj.PromptPai prompt_list = 1;
  total_size += 1 * this->prompt_list_size();
  for (int i = 0; i < this->prompt_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->prompt_list(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TingPaiWaiteNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.TingPaiWaiteNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const TingPaiWaiteNotify* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TingPaiWaiteNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.TingPaiWaiteNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.TingPaiWaiteNotify)
    MergeFrom(*source);
  }
}

void TingPaiWaiteNotify::MergeFrom(const TingPaiWaiteNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.TingPaiWaiteNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  prompt_list_.MergeFrom(from.prompt_list_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void TingPaiWaiteNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.TingPaiWaiteNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TingPaiWaiteNotify::CopyFrom(const TingPaiWaiteNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.TingPaiWaiteNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TingPaiWaiteNotify::IsInitialized() const {

  return true;
}

void TingPaiWaiteNotify::Swap(TingPaiWaiteNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TingPaiWaiteNotify::InternalSwap(TingPaiWaiteNotify* other) {
  prompt_list_.UnsafeArenaSwap(&other->prompt_list_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TingPaiWaiteNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TingPaiWaiteNotify_descriptor_;
  metadata.reflection = TingPaiWaiteNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TingPaiWaiteNotify

// repeated .msg_maj.PromptPai prompt_list = 1;
int TingPaiWaiteNotify::prompt_list_size() const {
  return prompt_list_.size();
}
void TingPaiWaiteNotify::clear_prompt_list() {
  prompt_list_.Clear();
}
const ::msg_maj::PromptPai& TingPaiWaiteNotify::prompt_list(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.TingPaiWaiteNotify.prompt_list)
  return prompt_list_.Get(index);
}
::msg_maj::PromptPai* TingPaiWaiteNotify::mutable_prompt_list(int index) {
  // @@protoc_insertion_point(field_mutable:msg_maj.TingPaiWaiteNotify.prompt_list)
  return prompt_list_.Mutable(index);
}
::msg_maj::PromptPai* TingPaiWaiteNotify::add_prompt_list() {
  // @@protoc_insertion_point(field_add:msg_maj.TingPaiWaiteNotify.prompt_list)
  return prompt_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::msg_maj::PromptPai >*
TingPaiWaiteNotify::mutable_prompt_list() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.TingPaiWaiteNotify.prompt_list)
  return &prompt_list_;
}
const ::google::protobuf::RepeatedPtrField< ::msg_maj::PromptPai >&
TingPaiWaiteNotify::prompt_list() const {
  // @@protoc_insertion_point(field_list:msg_maj.TingPaiWaiteNotify.prompt_list)
  return prompt_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DealNotify::kSeatFieldNumber;
const int DealNotify::kTileFieldNumber;
const int DealNotify::kTailFieldNumber;
const int DealNotify::kEventListFieldNumber;
const int DealNotify::kDeskTileCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DealNotify::DealNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.DealNotify)
}

void DealNotify::InitAsDefaultInstance() {
}

DealNotify::DealNotify(const DealNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.DealNotify)
}

void DealNotify::SharedCtor() {
  _cached_size_ = 0;
  seat_ = 0u;
  tile_ = 0u;
  tail_ = false;
  desk_tile_count_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DealNotify::~DealNotify() {
  // @@protoc_insertion_point(destructor:msg_maj.DealNotify)
  SharedDtor();
}

void DealNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DealNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DealNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DealNotify_descriptor_;
}

const DealNotify& DealNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmaj_2eproto();
  return *default_instance_;
}

DealNotify* DealNotify::default_instance_ = NULL;

DealNotify* DealNotify::New(::google::protobuf::Arena* arena) const {
  DealNotify* n = new DealNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DealNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.DealNotify)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(DealNotify, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<DealNotify*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(seat_, tile_);
  ZR_(tail_, desk_tile_count_);

#undef ZR_HELPER_
#undef ZR_

  eventlist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DealNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.DealNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 seat = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seat_)));
          set_has_seat();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_tile;
        break;
      }

      // optional uint32 tile = 2;
      case 2: {
        if (tag == 16) {
         parse_tile:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tile_)));
          set_has_tile();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_tail;
        break;
      }

      // required bool tail = 3;
      case 3: {
        if (tag == 24) {
         parse_tail:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &tail_)));
          set_has_tail();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_eventList;
        break;
      }

      // repeated .msg_maj.EventInfo eventList = 4;
      case 4: {
        if (tag == 34) {
         parse_eventList:
          DO_(input->IncrementRecursionDepth());
         parse_loop_eventList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_eventlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_eventList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(40)) goto parse_desk_tile_count;
        break;
      }

      // required int32 desk_tile_count = 5;
      case 5: {
        if (tag == 40) {
         parse_desk_tile_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &desk_tile_count_)));
          set_has_desk_tile_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.DealNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.DealNotify)
  return false;
#undef DO_
}

void DealNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.DealNotify)
  // required uint32 seat = 1;
  if (has_seat()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->seat(), output);
  }

  // optional uint32 tile = 2;
  if (has_tile()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->tile(), output);
  }

  // required bool tail = 3;
  if (has_tail()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->tail(), output);
  }

  // repeated .msg_maj.EventInfo eventList = 4;
  for (unsigned int i = 0, n = this->eventlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->eventlist(i), output);
  }

  // required int32 desk_tile_count = 5;
  if (has_desk_tile_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->desk_tile_count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.DealNotify)
}

::google::protobuf::uint8* DealNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.DealNotify)
  // required uint32 seat = 1;
  if (has_seat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->seat(), target);
  }

  // optional uint32 tile = 2;
  if (has_tile()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->tile(), target);
  }

  // required bool tail = 3;
  if (has_tail()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->tail(), target);
  }

  // repeated .msg_maj.EventInfo eventList = 4;
  for (unsigned int i = 0, n = this->eventlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->eventlist(i), false, target);
  }

  // required int32 desk_tile_count = 5;
  if (has_desk_tile_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->desk_tile_count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.DealNotify)
  return target;
}

int DealNotify::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:msg_maj.DealNotify)
  int total_size = 0;

  if (has_seat()) {
    // required uint32 seat = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->seat());
  }

  if (has_tail()) {
    // required bool tail = 3;
    total_size += 1 + 1;
  }

  if (has_desk_tile_count()) {
    // required int32 desk_tile_count = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->desk_tile_count());
  }

  return total_size;
}
int DealNotify::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.DealNotify)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000015) ^ 0x00000015) == 0) {  // All required fields are present.
    // required uint32 seat = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->seat());

    // required bool tail = 3;
    total_size += 1 + 1;

    // required int32 desk_tile_count = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->desk_tile_count());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional uint32 tile = 2;
  if (has_tile()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tile());
  }

  // repeated .msg_maj.EventInfo eventList = 4;
  total_size += 1 * this->eventlist_size();
  for (int i = 0; i < this->eventlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->eventlist(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DealNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.DealNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DealNotify* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DealNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.DealNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.DealNotify)
    MergeFrom(*source);
  }
}

void DealNotify::MergeFrom(const DealNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.DealNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  eventlist_.MergeFrom(from.eventlist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_seat()) {
      set_seat(from.seat());
    }
    if (from.has_tile()) {
      set_tile(from.tile());
    }
    if (from.has_tail()) {
      set_tail(from.tail());
    }
    if (from.has_desk_tile_count()) {
      set_desk_tile_count(from.desk_tile_count());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void DealNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.DealNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DealNotify::CopyFrom(const DealNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.DealNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DealNotify::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000015) != 0x00000015) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->eventlist())) return false;
  return true;
}

void DealNotify::Swap(DealNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DealNotify::InternalSwap(DealNotify* other) {
  std::swap(seat_, other->seat_);
  std::swap(tile_, other->tile_);
  std::swap(tail_, other->tail_);
  eventlist_.UnsafeArenaSwap(&other->eventlist_);
  std::swap(desk_tile_count_, other->desk_tile_count_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DealNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DealNotify_descriptor_;
  metadata.reflection = DealNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DealNotify

// required uint32 seat = 1;
bool DealNotify::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DealNotify::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
void DealNotify::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
void DealNotify::clear_seat() {
  seat_ = 0u;
  clear_has_seat();
}
 ::google::protobuf::uint32 DealNotify::seat() const {
  // @@protoc_insertion_point(field_get:msg_maj.DealNotify.seat)
  return seat_;
}
 void DealNotify::set_seat(::google::protobuf::uint32 value) {
  set_has_seat();
  seat_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.DealNotify.seat)
}

// optional uint32 tile = 2;
bool DealNotify::has_tile() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DealNotify::set_has_tile() {
  _has_bits_[0] |= 0x00000002u;
}
void DealNotify::clear_has_tile() {
  _has_bits_[0] &= ~0x00000002u;
}
void DealNotify::clear_tile() {
  tile_ = 0u;
  clear_has_tile();
}
 ::google::protobuf::uint32 DealNotify::tile() const {
  // @@protoc_insertion_point(field_get:msg_maj.DealNotify.tile)
  return tile_;
}
 void DealNotify::set_tile(::google::protobuf::uint32 value) {
  set_has_tile();
  tile_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.DealNotify.tile)
}

// required bool tail = 3;
bool DealNotify::has_tail() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void DealNotify::set_has_tail() {
  _has_bits_[0] |= 0x00000004u;
}
void DealNotify::clear_has_tail() {
  _has_bits_[0] &= ~0x00000004u;
}
void DealNotify::clear_tail() {
  tail_ = false;
  clear_has_tail();
}
 bool DealNotify::tail() const {
  // @@protoc_insertion_point(field_get:msg_maj.DealNotify.tail)
  return tail_;
}
 void DealNotify::set_tail(bool value) {
  set_has_tail();
  tail_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.DealNotify.tail)
}

// repeated .msg_maj.EventInfo eventList = 4;
int DealNotify::eventlist_size() const {
  return eventlist_.size();
}
void DealNotify::clear_eventlist() {
  eventlist_.Clear();
}
const ::msg_maj::EventInfo& DealNotify::eventlist(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.DealNotify.eventList)
  return eventlist_.Get(index);
}
::msg_maj::EventInfo* DealNotify::mutable_eventlist(int index) {
  // @@protoc_insertion_point(field_mutable:msg_maj.DealNotify.eventList)
  return eventlist_.Mutable(index);
}
::msg_maj::EventInfo* DealNotify::add_eventlist() {
  // @@protoc_insertion_point(field_add:msg_maj.DealNotify.eventList)
  return eventlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::msg_maj::EventInfo >*
DealNotify::mutable_eventlist() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.DealNotify.eventList)
  return &eventlist_;
}
const ::google::protobuf::RepeatedPtrField< ::msg_maj::EventInfo >&
DealNotify::eventlist() const {
  // @@protoc_insertion_point(field_list:msg_maj.DealNotify.eventList)
  return eventlist_;
}

// required int32 desk_tile_count = 5;
bool DealNotify::has_desk_tile_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void DealNotify::set_has_desk_tile_count() {
  _has_bits_[0] |= 0x00000010u;
}
void DealNotify::clear_has_desk_tile_count() {
  _has_bits_[0] &= ~0x00000010u;
}
void DealNotify::clear_desk_tile_count() {
  desk_tile_count_ = 0;
  clear_has_desk_tile_count();
}
 ::google::protobuf::int32 DealNotify::desk_tile_count() const {
  // @@protoc_insertion_point(field_get:msg_maj.DealNotify.desk_tile_count)
  return desk_tile_count_;
}
 void DealNotify::set_desk_tile_count(::google::protobuf::int32 value) {
  set_has_desk_tile_count();
  desk_tile_count_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.DealNotify.desk_tile_count)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResponseEventReq::kEventFieldNumber;
const int ResponseEventReq::kTileFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResponseEventReq::ResponseEventReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.ResponseEventReq)
}

void ResponseEventReq::InitAsDefaultInstance() {
}

ResponseEventReq::ResponseEventReq(const ResponseEventReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.ResponseEventReq)
}

void ResponseEventReq::SharedCtor() {
  _cached_size_ = 0;
  event_ = 0;
  tile_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResponseEventReq::~ResponseEventReq() {
  // @@protoc_insertion_point(destructor:msg_maj.ResponseEventReq)
  SharedDtor();
}

void ResponseEventReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ResponseEventReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResponseEventReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResponseEventReq_descriptor_;
}

const ResponseEventReq& ResponseEventReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmaj_2eproto();
  return *default_instance_;
}

ResponseEventReq* ResponseEventReq::default_instance_ = NULL;

ResponseEventReq* ResponseEventReq::New(::google::protobuf::Arena* arena) const {
  ResponseEventReq* n = new ResponseEventReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResponseEventReq::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.ResponseEventReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ResponseEventReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ResponseEventReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(event_, tile_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ResponseEventReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.ResponseEventReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .msg_maj.event_type event = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::msg_maj::event_type_IsValid(value)) {
            set_event(static_cast< ::msg_maj::event_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_tile;
        break;
      }

      // optional uint32 tile = 2;
      case 2: {
        if (tag == 16) {
         parse_tile:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tile_)));
          set_has_tile();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.ResponseEventReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.ResponseEventReq)
  return false;
#undef DO_
}

void ResponseEventReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.ResponseEventReq)
  // required .msg_maj.event_type event = 1;
  if (has_event()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->event(), output);
  }

  // optional uint32 tile = 2;
  if (has_tile()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->tile(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.ResponseEventReq)
}

::google::protobuf::uint8* ResponseEventReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.ResponseEventReq)
  // required .msg_maj.event_type event = 1;
  if (has_event()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->event(), target);
  }

  // optional uint32 tile = 2;
  if (has_tile()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->tile(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.ResponseEventReq)
  return target;
}

int ResponseEventReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.ResponseEventReq)
  int total_size = 0;

  // required .msg_maj.event_type event = 1;
  if (has_event()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->event());
  }
  // optional uint32 tile = 2;
  if (has_tile()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tile());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResponseEventReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.ResponseEventReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ResponseEventReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ResponseEventReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.ResponseEventReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.ResponseEventReq)
    MergeFrom(*source);
  }
}

void ResponseEventReq::MergeFrom(const ResponseEventReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.ResponseEventReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_event()) {
      set_event(from.event());
    }
    if (from.has_tile()) {
      set_tile(from.tile());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ResponseEventReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.ResponseEventReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResponseEventReq::CopyFrom(const ResponseEventReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.ResponseEventReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseEventReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ResponseEventReq::Swap(ResponseEventReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResponseEventReq::InternalSwap(ResponseEventReq* other) {
  std::swap(event_, other->event_);
  std::swap(tile_, other->tile_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResponseEventReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResponseEventReq_descriptor_;
  metadata.reflection = ResponseEventReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResponseEventReq

// required .msg_maj.event_type event = 1;
bool ResponseEventReq::has_event() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ResponseEventReq::set_has_event() {
  _has_bits_[0] |= 0x00000001u;
}
void ResponseEventReq::clear_has_event() {
  _has_bits_[0] &= ~0x00000001u;
}
void ResponseEventReq::clear_event() {
  event_ = 0;
  clear_has_event();
}
 ::msg_maj::event_type ResponseEventReq::event() const {
  // @@protoc_insertion_point(field_get:msg_maj.ResponseEventReq.event)
  return static_cast< ::msg_maj::event_type >(event_);
}
 void ResponseEventReq::set_event(::msg_maj::event_type value) {
  assert(::msg_maj::event_type_IsValid(value));
  set_has_event();
  event_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.ResponseEventReq.event)
}

// optional uint32 tile = 2;
bool ResponseEventReq::has_tile() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ResponseEventReq::set_has_tile() {
  _has_bits_[0] |= 0x00000002u;
}
void ResponseEventReq::clear_has_tile() {
  _has_bits_[0] &= ~0x00000002u;
}
void ResponseEventReq::clear_tile() {
  tile_ = 0u;
  clear_has_tile();
}
 ::google::protobuf::uint32 ResponseEventReq::tile() const {
  // @@protoc_insertion_point(field_get:msg_maj.ResponseEventReq.tile)
  return tile_;
}
 void ResponseEventReq::set_tile(::google::protobuf::uint32 value) {
  set_has_tile();
  tile_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.ResponseEventReq.tile)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResponseEventResp::kCodeFieldNumber;
const int ResponseEventResp::kSeatFieldNumber;
const int ResponseEventResp::kEventFieldNumber;
const int ResponseEventResp::kEventTileListFieldNumber;
const int ResponseEventResp::kHuInfoFieldNumber;
const int ResponseEventResp::kVictimSeatFieldNumber;
const int ResponseEventResp::kTriggerEventsFieldNumber;
const int ResponseEventResp::kTileLeftCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResponseEventResp::ResponseEventResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.ResponseEventResp)
}

void ResponseEventResp::InitAsDefaultInstance() {
  hu_info_ = const_cast< ::msg_maj::HuInfo*>(&::msg_maj::HuInfo::default_instance());
}

ResponseEventResp::ResponseEventResp(const ResponseEventResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.ResponseEventResp)
}

void ResponseEventResp::SharedCtor() {
  _cached_size_ = 0;
  code_ = 0;
  seat_ = 0u;
  event_ = 0;
  hu_info_ = NULL;
  victim_seat_ = 0u;
  tileleftcount_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResponseEventResp::~ResponseEventResp() {
  // @@protoc_insertion_point(destructor:msg_maj.ResponseEventResp)
  SharedDtor();
}

void ResponseEventResp::SharedDtor() {
  if (this != default_instance_) {
    delete hu_info_;
  }
}

void ResponseEventResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResponseEventResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResponseEventResp_descriptor_;
}

const ResponseEventResp& ResponseEventResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmaj_2eproto();
  return *default_instance_;
}

ResponseEventResp* ResponseEventResp::default_instance_ = NULL;

ResponseEventResp* ResponseEventResp::New(::google::protobuf::Arena* arena) const {
  ResponseEventResp* n = new ResponseEventResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResponseEventResp::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.ResponseEventResp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ResponseEventResp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ResponseEventResp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 183u) {
    ZR_(code_, seat_);
    ZR_(event_, victim_seat_);
    if (has_hu_info()) {
      if (hu_info_ != NULL) hu_info_->::msg_maj::HuInfo::Clear();
    }
    tileleftcount_ = 0u;
  }

#undef ZR_HELPER_
#undef ZR_

  eventtilelist_.Clear();
  triggerevents_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ResponseEventResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.ResponseEventResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .msg_maj.op_code code = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::msg_maj::op_code_IsValid(value)) {
            set_code(static_cast< ::msg_maj::op_code >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_seat;
        break;
      }

      // required uint32 seat = 2;
      case 2: {
        if (tag == 16) {
         parse_seat:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seat_)));
          set_has_seat();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_event;
        break;
      }

      // required .msg_maj.event_type event = 3;
      case 3: {
        if (tag == 24) {
         parse_event:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::msg_maj::event_type_IsValid(value)) {
            set_event(static_cast< ::msg_maj::event_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_eventTileList;
        break;
      }

      // repeated uint32 eventTileList = 4;
      case 4: {
        if (tag == 32) {
         parse_eventTileList:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 32, input, this->mutable_eventtilelist())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_eventtilelist())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_eventTileList;
        if (input->ExpectTag(42)) goto parse_hu_info;
        break;
      }

      // optional .msg_maj.HuInfo hu_info = 5;
      case 5: {
        if (tag == 42) {
         parse_hu_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hu_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_victim_seat;
        break;
      }

      // optional uint32 victim_seat = 6;
      case 6: {
        if (tag == 48) {
         parse_victim_seat:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &victim_seat_)));
          set_has_victim_seat();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_triggerEvents;
        break;
      }

      // repeated .msg_maj.event_type triggerEvents = 7;
      case 7: {
        if (tag == 56) {
         parse_triggerEvents:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::msg_maj::event_type_IsValid(value)) {
            add_triggerevents(static_cast< ::msg_maj::event_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(7, value);
          }
        } else if (tag == 58) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 7,
                 ::msg_maj::event_type_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_triggerevents())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_triggerEvents;
        if (input->ExpectTag(64)) goto parse_tileLeftCount;
        break;
      }

      // optional uint32 tileLeftCount = 8;
      case 8: {
        if (tag == 64) {
         parse_tileLeftCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tileleftcount_)));
          set_has_tileleftcount();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.ResponseEventResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.ResponseEventResp)
  return false;
#undef DO_
}

void ResponseEventResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.ResponseEventResp)
  // required .msg_maj.op_code code = 1;
  if (has_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->code(), output);
  }

  // required uint32 seat = 2;
  if (has_seat()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->seat(), output);
  }

  // required .msg_maj.event_type event = 3;
  if (has_event()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->event(), output);
  }

  // repeated uint32 eventTileList = 4;
  for (int i = 0; i < this->eventtilelist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      4, this->eventtilelist(i), output);
  }

  // optional .msg_maj.HuInfo hu_info = 5;
  if (has_hu_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->hu_info_, output);
  }

  // optional uint32 victim_seat = 6;
  if (has_victim_seat()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->victim_seat(), output);
  }

  // repeated .msg_maj.event_type triggerEvents = 7;
  for (int i = 0; i < this->triggerevents_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->triggerevents(i), output);
  }

  // optional uint32 tileLeftCount = 8;
  if (has_tileleftcount()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->tileleftcount(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.ResponseEventResp)
}

::google::protobuf::uint8* ResponseEventResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.ResponseEventResp)
  // required .msg_maj.op_code code = 1;
  if (has_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->code(), target);
  }

  // required uint32 seat = 2;
  if (has_seat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->seat(), target);
  }

  // required .msg_maj.event_type event = 3;
  if (has_event()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->event(), target);
  }

  // repeated uint32 eventTileList = 4;
  for (int i = 0; i < this->eventtilelist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(4, this->eventtilelist(i), target);
  }

  // optional .msg_maj.HuInfo hu_info = 5;
  if (has_hu_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->hu_info_, false, target);
  }

  // optional uint32 victim_seat = 6;
  if (has_victim_seat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->victim_seat(), target);
  }

  // repeated .msg_maj.event_type triggerEvents = 7;
  for (int i = 0; i < this->triggerevents_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->triggerevents(i), target);
  }

  // optional uint32 tileLeftCount = 8;
  if (has_tileleftcount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->tileleftcount(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.ResponseEventResp)
  return target;
}

int ResponseEventResp::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:msg_maj.ResponseEventResp)
  int total_size = 0;

  if (has_code()) {
    // required .msg_maj.op_code code = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->code());
  }

  if (has_seat()) {
    // required uint32 seat = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->seat());
  }

  if (has_event()) {
    // required .msg_maj.event_type event = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->event());
  }

  return total_size;
}
int ResponseEventResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.ResponseEventResp)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required .msg_maj.op_code code = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->code());

    // required uint32 seat = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->seat());

    // required .msg_maj.event_type event = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->event());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[4 / 32] & 176u) {
    // optional .msg_maj.HuInfo hu_info = 5;
    if (has_hu_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->hu_info_);
    }

    // optional uint32 victim_seat = 6;
    if (has_victim_seat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->victim_seat());
    }

    // optional uint32 tileLeftCount = 8;
    if (has_tileleftcount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tileleftcount());
    }

  }
  // repeated uint32 eventTileList = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->eventtilelist_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->eventtilelist(i));
    }
    total_size += 1 * this->eventtilelist_size() + data_size;
  }

  // repeated .msg_maj.event_type triggerEvents = 7;
  {
    int data_size = 0;
    for (int i = 0; i < this->triggerevents_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->triggerevents(i));
    }
    total_size += 1 * this->triggerevents_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResponseEventResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.ResponseEventResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ResponseEventResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ResponseEventResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.ResponseEventResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.ResponseEventResp)
    MergeFrom(*source);
  }
}

void ResponseEventResp::MergeFrom(const ResponseEventResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.ResponseEventResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  eventtilelist_.MergeFrom(from.eventtilelist_);
  triggerevents_.MergeFrom(from.triggerevents_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_code()) {
      set_code(from.code());
    }
    if (from.has_seat()) {
      set_seat(from.seat());
    }
    if (from.has_event()) {
      set_event(from.event());
    }
    if (from.has_hu_info()) {
      mutable_hu_info()->::msg_maj::HuInfo::MergeFrom(from.hu_info());
    }
    if (from.has_victim_seat()) {
      set_victim_seat(from.victim_seat());
    }
    if (from.has_tileleftcount()) {
      set_tileleftcount(from.tileleftcount());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ResponseEventResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.ResponseEventResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResponseEventResp::CopyFrom(const ResponseEventResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.ResponseEventResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseEventResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_hu_info()) {
    if (!this->hu_info_->IsInitialized()) return false;
  }
  return true;
}

void ResponseEventResp::Swap(ResponseEventResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResponseEventResp::InternalSwap(ResponseEventResp* other) {
  std::swap(code_, other->code_);
  std::swap(seat_, other->seat_);
  std::swap(event_, other->event_);
  eventtilelist_.UnsafeArenaSwap(&other->eventtilelist_);
  std::swap(hu_info_, other->hu_info_);
  std::swap(victim_seat_, other->victim_seat_);
  triggerevents_.UnsafeArenaSwap(&other->triggerevents_);
  std::swap(tileleftcount_, other->tileleftcount_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResponseEventResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResponseEventResp_descriptor_;
  metadata.reflection = ResponseEventResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResponseEventResp

// required .msg_maj.op_code code = 1;
bool ResponseEventResp::has_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ResponseEventResp::set_has_code() {
  _has_bits_[0] |= 0x00000001u;
}
void ResponseEventResp::clear_has_code() {
  _has_bits_[0] &= ~0x00000001u;
}
void ResponseEventResp::clear_code() {
  code_ = 0;
  clear_has_code();
}
 ::msg_maj::op_code ResponseEventResp::code() const {
  // @@protoc_insertion_point(field_get:msg_maj.ResponseEventResp.code)
  return static_cast< ::msg_maj::op_code >(code_);
}
 void ResponseEventResp::set_code(::msg_maj::op_code value) {
  assert(::msg_maj::op_code_IsValid(value));
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.ResponseEventResp.code)
}

// required uint32 seat = 2;
bool ResponseEventResp::has_seat() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ResponseEventResp::set_has_seat() {
  _has_bits_[0] |= 0x00000002u;
}
void ResponseEventResp::clear_has_seat() {
  _has_bits_[0] &= ~0x00000002u;
}
void ResponseEventResp::clear_seat() {
  seat_ = 0u;
  clear_has_seat();
}
 ::google::protobuf::uint32 ResponseEventResp::seat() const {
  // @@protoc_insertion_point(field_get:msg_maj.ResponseEventResp.seat)
  return seat_;
}
 void ResponseEventResp::set_seat(::google::protobuf::uint32 value) {
  set_has_seat();
  seat_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.ResponseEventResp.seat)
}

// required .msg_maj.event_type event = 3;
bool ResponseEventResp::has_event() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ResponseEventResp::set_has_event() {
  _has_bits_[0] |= 0x00000004u;
}
void ResponseEventResp::clear_has_event() {
  _has_bits_[0] &= ~0x00000004u;
}
void ResponseEventResp::clear_event() {
  event_ = 0;
  clear_has_event();
}
 ::msg_maj::event_type ResponseEventResp::event() const {
  // @@protoc_insertion_point(field_get:msg_maj.ResponseEventResp.event)
  return static_cast< ::msg_maj::event_type >(event_);
}
 void ResponseEventResp::set_event(::msg_maj::event_type value) {
  assert(::msg_maj::event_type_IsValid(value));
  set_has_event();
  event_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.ResponseEventResp.event)
}

// repeated uint32 eventTileList = 4;
int ResponseEventResp::eventtilelist_size() const {
  return eventtilelist_.size();
}
void ResponseEventResp::clear_eventtilelist() {
  eventtilelist_.Clear();
}
 ::google::protobuf::uint32 ResponseEventResp::eventtilelist(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.ResponseEventResp.eventTileList)
  return eventtilelist_.Get(index);
}
 void ResponseEventResp::set_eventtilelist(int index, ::google::protobuf::uint32 value) {
  eventtilelist_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg_maj.ResponseEventResp.eventTileList)
}
 void ResponseEventResp::add_eventtilelist(::google::protobuf::uint32 value) {
  eventtilelist_.Add(value);
  // @@protoc_insertion_point(field_add:msg_maj.ResponseEventResp.eventTileList)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ResponseEventResp::eventtilelist() const {
  // @@protoc_insertion_point(field_list:msg_maj.ResponseEventResp.eventTileList)
  return eventtilelist_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ResponseEventResp::mutable_eventtilelist() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.ResponseEventResp.eventTileList)
  return &eventtilelist_;
}

// optional .msg_maj.HuInfo hu_info = 5;
bool ResponseEventResp::has_hu_info() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ResponseEventResp::set_has_hu_info() {
  _has_bits_[0] |= 0x00000010u;
}
void ResponseEventResp::clear_has_hu_info() {
  _has_bits_[0] &= ~0x00000010u;
}
void ResponseEventResp::clear_hu_info() {
  if (hu_info_ != NULL) hu_info_->::msg_maj::HuInfo::Clear();
  clear_has_hu_info();
}
const ::msg_maj::HuInfo& ResponseEventResp::hu_info() const {
  // @@protoc_insertion_point(field_get:msg_maj.ResponseEventResp.hu_info)
  return hu_info_ != NULL ? *hu_info_ : *default_instance_->hu_info_;
}
::msg_maj::HuInfo* ResponseEventResp::mutable_hu_info() {
  set_has_hu_info();
  if (hu_info_ == NULL) {
    hu_info_ = new ::msg_maj::HuInfo;
  }
  // @@protoc_insertion_point(field_mutable:msg_maj.ResponseEventResp.hu_info)
  return hu_info_;
}
::msg_maj::HuInfo* ResponseEventResp::release_hu_info() {
  // @@protoc_insertion_point(field_release:msg_maj.ResponseEventResp.hu_info)
  clear_has_hu_info();
  ::msg_maj::HuInfo* temp = hu_info_;
  hu_info_ = NULL;
  return temp;
}
void ResponseEventResp::set_allocated_hu_info(::msg_maj::HuInfo* hu_info) {
  delete hu_info_;
  hu_info_ = hu_info;
  if (hu_info) {
    set_has_hu_info();
  } else {
    clear_has_hu_info();
  }
  // @@protoc_insertion_point(field_set_allocated:msg_maj.ResponseEventResp.hu_info)
}

// optional uint32 victim_seat = 6;
bool ResponseEventResp::has_victim_seat() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ResponseEventResp::set_has_victim_seat() {
  _has_bits_[0] |= 0x00000020u;
}
void ResponseEventResp::clear_has_victim_seat() {
  _has_bits_[0] &= ~0x00000020u;
}
void ResponseEventResp::clear_victim_seat() {
  victim_seat_ = 0u;
  clear_has_victim_seat();
}
 ::google::protobuf::uint32 ResponseEventResp::victim_seat() const {
  // @@protoc_insertion_point(field_get:msg_maj.ResponseEventResp.victim_seat)
  return victim_seat_;
}
 void ResponseEventResp::set_victim_seat(::google::protobuf::uint32 value) {
  set_has_victim_seat();
  victim_seat_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.ResponseEventResp.victim_seat)
}

// repeated .msg_maj.event_type triggerEvents = 7;
int ResponseEventResp::triggerevents_size() const {
  return triggerevents_.size();
}
void ResponseEventResp::clear_triggerevents() {
  triggerevents_.Clear();
}
 ::msg_maj::event_type ResponseEventResp::triggerevents(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.ResponseEventResp.triggerEvents)
  return static_cast< ::msg_maj::event_type >(triggerevents_.Get(index));
}
 void ResponseEventResp::set_triggerevents(int index, ::msg_maj::event_type value) {
  assert(::msg_maj::event_type_IsValid(value));
  triggerevents_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg_maj.ResponseEventResp.triggerEvents)
}
 void ResponseEventResp::add_triggerevents(::msg_maj::event_type value) {
  assert(::msg_maj::event_type_IsValid(value));
  triggerevents_.Add(value);
  // @@protoc_insertion_point(field_add:msg_maj.ResponseEventResp.triggerEvents)
}
 const ::google::protobuf::RepeatedField<int>&
ResponseEventResp::triggerevents() const {
  // @@protoc_insertion_point(field_list:msg_maj.ResponseEventResp.triggerEvents)
  return triggerevents_;
}
 ::google::protobuf::RepeatedField<int>*
ResponseEventResp::mutable_triggerevents() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.ResponseEventResp.triggerEvents)
  return &triggerevents_;
}

// optional uint32 tileLeftCount = 8;
bool ResponseEventResp::has_tileleftcount() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void ResponseEventResp::set_has_tileleftcount() {
  _has_bits_[0] |= 0x00000080u;
}
void ResponseEventResp::clear_has_tileleftcount() {
  _has_bits_[0] &= ~0x00000080u;
}
void ResponseEventResp::clear_tileleftcount() {
  tileleftcount_ = 0u;
  clear_has_tileleftcount();
}
 ::google::protobuf::uint32 ResponseEventResp::tileleftcount() const {
  // @@protoc_insertion_point(field_get:msg_maj.ResponseEventResp.tileLeftCount)
  return tileleftcount_;
}
 void ResponseEventResp::set_tileleftcount(::google::protobuf::uint32 value) {
  set_has_tileleftcount();
  tileleftcount_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.ResponseEventResp.tileLeftCount)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameResultNotify::kIsEndAllFieldNumber;
const int GameResultNotify::kThisInnIdFieldNumber;
const int GameResultNotify::kSeatsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameResultNotify::GameResultNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.GameResultNotify)
}

void GameResultNotify::InitAsDefaultInstance() {
}

GameResultNotify::GameResultNotify(const GameResultNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.GameResultNotify)
}

void GameResultNotify::SharedCtor() {
  _cached_size_ = 0;
  is_end_all_ = false;
  this_inn_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GameResultNotify::~GameResultNotify() {
  // @@protoc_insertion_point(destructor:msg_maj.GameResultNotify)
  SharedDtor();
}

void GameResultNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GameResultNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GameResultNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GameResultNotify_descriptor_;
}

const GameResultNotify& GameResultNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmaj_2eproto();
  return *default_instance_;
}

GameResultNotify* GameResultNotify::default_instance_ = NULL;

GameResultNotify* GameResultNotify::New(::google::protobuf::Arena* arena) const {
  GameResultNotify* n = new GameResultNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GameResultNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.GameResultNotify)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(GameResultNotify, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<GameResultNotify*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(is_end_all_, this_inn_id_);

#undef ZR_HELPER_
#undef ZR_

  seats_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GameResultNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.GameResultNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool is_end_all = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_end_all_)));
          set_has_is_end_all();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_this_inn_id;
        break;
      }

      // required uint32 this_inn_id = 2;
      case 2: {
        if (tag == 16) {
         parse_this_inn_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &this_inn_id_)));
          set_has_this_inn_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_seats;
        break;
      }

      // repeated .msg_maj.GameResultSeat seats = 3;
      case 3: {
        if (tag == 26) {
         parse_seats:
          DO_(input->IncrementRecursionDepth());
         parse_loop_seats:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_seats()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_seats;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.GameResultNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.GameResultNotify)
  return false;
#undef DO_
}

void GameResultNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.GameResultNotify)
  // required bool is_end_all = 1;
  if (has_is_end_all()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_end_all(), output);
  }

  // required uint32 this_inn_id = 2;
  if (has_this_inn_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->this_inn_id(), output);
  }

  // repeated .msg_maj.GameResultSeat seats = 3;
  for (unsigned int i = 0, n = this->seats_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->seats(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.GameResultNotify)
}

::google::protobuf::uint8* GameResultNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.GameResultNotify)
  // required bool is_end_all = 1;
  if (has_is_end_all()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_end_all(), target);
  }

  // required uint32 this_inn_id = 2;
  if (has_this_inn_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->this_inn_id(), target);
  }

  // repeated .msg_maj.GameResultSeat seats = 3;
  for (unsigned int i = 0, n = this->seats_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->seats(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.GameResultNotify)
  return target;
}

int GameResultNotify::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:msg_maj.GameResultNotify)
  int total_size = 0;

  if (has_is_end_all()) {
    // required bool is_end_all = 1;
    total_size += 1 + 1;
  }

  if (has_this_inn_id()) {
    // required uint32 this_inn_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->this_inn_id());
  }

  return total_size;
}
int GameResultNotify::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.GameResultNotify)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bool is_end_all = 1;
    total_size += 1 + 1;

    // required uint32 this_inn_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->this_inn_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .msg_maj.GameResultSeat seats = 3;
  total_size += 1 * this->seats_size();
  for (int i = 0; i < this->seats_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->seats(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GameResultNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.GameResultNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GameResultNotify* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GameResultNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.GameResultNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.GameResultNotify)
    MergeFrom(*source);
  }
}

void GameResultNotify::MergeFrom(const GameResultNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.GameResultNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  seats_.MergeFrom(from.seats_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_is_end_all()) {
      set_is_end_all(from.is_end_all());
    }
    if (from.has_this_inn_id()) {
      set_this_inn_id(from.this_inn_id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void GameResultNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.GameResultNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameResultNotify::CopyFrom(const GameResultNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.GameResultNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameResultNotify::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->seats())) return false;
  return true;
}

void GameResultNotify::Swap(GameResultNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameResultNotify::InternalSwap(GameResultNotify* other) {
  std::swap(is_end_all_, other->is_end_all_);
  std::swap(this_inn_id_, other->this_inn_id_);
  seats_.UnsafeArenaSwap(&other->seats_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GameResultNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GameResultNotify_descriptor_;
  metadata.reflection = GameResultNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GameResultNotify

// required bool is_end_all = 1;
bool GameResultNotify::has_is_end_all() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GameResultNotify::set_has_is_end_all() {
  _has_bits_[0] |= 0x00000001u;
}
void GameResultNotify::clear_has_is_end_all() {
  _has_bits_[0] &= ~0x00000001u;
}
void GameResultNotify::clear_is_end_all() {
  is_end_all_ = false;
  clear_has_is_end_all();
}
 bool GameResultNotify::is_end_all() const {
  // @@protoc_insertion_point(field_get:msg_maj.GameResultNotify.is_end_all)
  return is_end_all_;
}
 void GameResultNotify::set_is_end_all(bool value) {
  set_has_is_end_all();
  is_end_all_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.GameResultNotify.is_end_all)
}

// required uint32 this_inn_id = 2;
bool GameResultNotify::has_this_inn_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GameResultNotify::set_has_this_inn_id() {
  _has_bits_[0] |= 0x00000002u;
}
void GameResultNotify::clear_has_this_inn_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void GameResultNotify::clear_this_inn_id() {
  this_inn_id_ = 0u;
  clear_has_this_inn_id();
}
 ::google::protobuf::uint32 GameResultNotify::this_inn_id() const {
  // @@protoc_insertion_point(field_get:msg_maj.GameResultNotify.this_inn_id)
  return this_inn_id_;
}
 void GameResultNotify::set_this_inn_id(::google::protobuf::uint32 value) {
  set_has_this_inn_id();
  this_inn_id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.GameResultNotify.this_inn_id)
}

// repeated .msg_maj.GameResultSeat seats = 3;
int GameResultNotify::seats_size() const {
  return seats_.size();
}
void GameResultNotify::clear_seats() {
  seats_.Clear();
}
const ::msg_maj::GameResultSeat& GameResultNotify::seats(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.GameResultNotify.seats)
  return seats_.Get(index);
}
::msg_maj::GameResultSeat* GameResultNotify::mutable_seats(int index) {
  // @@protoc_insertion_point(field_mutable:msg_maj.GameResultNotify.seats)
  return seats_.Mutable(index);
}
::msg_maj::GameResultSeat* GameResultNotify::add_seats() {
  // @@protoc_insertion_point(field_add:msg_maj.GameResultNotify.seats)
  return seats_.Add();
}
::google::protobuf::RepeatedPtrField< ::msg_maj::GameResultSeat >*
GameResultNotify::mutable_seats() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.GameResultNotify.seats)
  return &seats_;
}
const ::google::protobuf::RepeatedPtrField< ::msg_maj::GameResultSeat >&
GameResultNotify::seats() const {
  // @@protoc_insertion_point(field_list:msg_maj.GameResultNotify.seats)
  return seats_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DisCardOver::DisCardOver()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.DisCardOver)
}

void DisCardOver::InitAsDefaultInstance() {
}

DisCardOver::DisCardOver(const DisCardOver& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.DisCardOver)
}

void DisCardOver::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DisCardOver::~DisCardOver() {
  // @@protoc_insertion_point(destructor:msg_maj.DisCardOver)
  SharedDtor();
}

void DisCardOver::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DisCardOver::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DisCardOver::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DisCardOver_descriptor_;
}

const DisCardOver& DisCardOver::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmaj_2eproto();
  return *default_instance_;
}

DisCardOver* DisCardOver::default_instance_ = NULL;

DisCardOver* DisCardOver::New(::google::protobuf::Arena* arena) const {
  DisCardOver* n = new DisCardOver;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DisCardOver::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.DisCardOver)
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DisCardOver::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.DisCardOver)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.DisCardOver)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.DisCardOver)
  return false;
#undef DO_
}

void DisCardOver::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.DisCardOver)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.DisCardOver)
}

::google::protobuf::uint8* DisCardOver::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.DisCardOver)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.DisCardOver)
  return target;
}

int DisCardOver::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.DisCardOver)
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DisCardOver::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.DisCardOver)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DisCardOver* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DisCardOver>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.DisCardOver)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.DisCardOver)
    MergeFrom(*source);
  }
}

void DisCardOver::MergeFrom(const DisCardOver& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.DisCardOver)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void DisCardOver::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.DisCardOver)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DisCardOver::CopyFrom(const DisCardOver& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.DisCardOver)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisCardOver::IsInitialized() const {

  return true;
}

void DisCardOver::Swap(DisCardOver* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DisCardOver::InternalSwap(DisCardOver* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DisCardOver::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DisCardOver_descriptor_;
  metadata.reflection = DisCardOver_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DisCardOver

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TotalResultNotify::kSeatsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TotalResultNotify::TotalResultNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.TotalResultNotify)
}

void TotalResultNotify::InitAsDefaultInstance() {
}

TotalResultNotify::TotalResultNotify(const TotalResultNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.TotalResultNotify)
}

void TotalResultNotify::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TotalResultNotify::~TotalResultNotify() {
  // @@protoc_insertion_point(destructor:msg_maj.TotalResultNotify)
  SharedDtor();
}

void TotalResultNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TotalResultNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TotalResultNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TotalResultNotify_descriptor_;
}

const TotalResultNotify& TotalResultNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmaj_2eproto();
  return *default_instance_;
}

TotalResultNotify* TotalResultNotify::default_instance_ = NULL;

TotalResultNotify* TotalResultNotify::New(::google::protobuf::Arena* arena) const {
  TotalResultNotify* n = new TotalResultNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TotalResultNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.TotalResultNotify)
  seats_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TotalResultNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.TotalResultNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .msg_maj.TotalResultSeat seats = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_seats:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_seats()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_seats;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.TotalResultNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.TotalResultNotify)
  return false;
#undef DO_
}

void TotalResultNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.TotalResultNotify)
  // repeated .msg_maj.TotalResultSeat seats = 1;
  for (unsigned int i = 0, n = this->seats_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->seats(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.TotalResultNotify)
}

::google::protobuf::uint8* TotalResultNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.TotalResultNotify)
  // repeated .msg_maj.TotalResultSeat seats = 1;
  for (unsigned int i = 0, n = this->seats_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->seats(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.TotalResultNotify)
  return target;
}

int TotalResultNotify::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.TotalResultNotify)
  int total_size = 0;

  // repeated .msg_maj.TotalResultSeat seats = 1;
  total_size += 1 * this->seats_size();
  for (int i = 0; i < this->seats_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->seats(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TotalResultNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.TotalResultNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const TotalResultNotify* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TotalResultNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.TotalResultNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.TotalResultNotify)
    MergeFrom(*source);
  }
}

void TotalResultNotify::MergeFrom(const TotalResultNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.TotalResultNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  seats_.MergeFrom(from.seats_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void TotalResultNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.TotalResultNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TotalResultNotify::CopyFrom(const TotalResultNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.TotalResultNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TotalResultNotify::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->seats())) return false;
  return true;
}

void TotalResultNotify::Swap(TotalResultNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TotalResultNotify::InternalSwap(TotalResultNotify* other) {
  seats_.UnsafeArenaSwap(&other->seats_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TotalResultNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TotalResultNotify_descriptor_;
  metadata.reflection = TotalResultNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TotalResultNotify

// repeated .msg_maj.TotalResultSeat seats = 1;
int TotalResultNotify::seats_size() const {
  return seats_.size();
}
void TotalResultNotify::clear_seats() {
  seats_.Clear();
}
const ::msg_maj::TotalResultSeat& TotalResultNotify::seats(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.TotalResultNotify.seats)
  return seats_.Get(index);
}
::msg_maj::TotalResultSeat* TotalResultNotify::mutable_seats(int index) {
  // @@protoc_insertion_point(field_mutable:msg_maj.TotalResultNotify.seats)
  return seats_.Mutable(index);
}
::msg_maj::TotalResultSeat* TotalResultNotify::add_seats() {
  // @@protoc_insertion_point(field_add:msg_maj.TotalResultNotify.seats)
  return seats_.Add();
}
::google::protobuf::RepeatedPtrField< ::msg_maj::TotalResultSeat >*
TotalResultNotify::mutable_seats() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.TotalResultNotify.seats)
  return &seats_;
}
const ::google::protobuf::RepeatedPtrField< ::msg_maj::TotalResultSeat >&
TotalResultNotify::seats() const {
  // @@protoc_insertion_point(field_list:msg_maj.TotalResultNotify.seats)
  return seats_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReconnectLoadReq::ReconnectLoadReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.ReconnectLoadReq)
}

void ReconnectLoadReq::InitAsDefaultInstance() {
}

ReconnectLoadReq::ReconnectLoadReq(const ReconnectLoadReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.ReconnectLoadReq)
}

void ReconnectLoadReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReconnectLoadReq::~ReconnectLoadReq() {
  // @@protoc_insertion_point(destructor:msg_maj.ReconnectLoadReq)
  SharedDtor();
}

void ReconnectLoadReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ReconnectLoadReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReconnectLoadReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReconnectLoadReq_descriptor_;
}

const ReconnectLoadReq& ReconnectLoadReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmaj_2eproto();
  return *default_instance_;
}

ReconnectLoadReq* ReconnectLoadReq::default_instance_ = NULL;

ReconnectLoadReq* ReconnectLoadReq::New(::google::protobuf::Arena* arena) const {
  ReconnectLoadReq* n = new ReconnectLoadReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReconnectLoadReq::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.ReconnectLoadReq)
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ReconnectLoadReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.ReconnectLoadReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.ReconnectLoadReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.ReconnectLoadReq)
  return false;
#undef DO_
}

void ReconnectLoadReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.ReconnectLoadReq)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.ReconnectLoadReq)
}

::google::protobuf::uint8* ReconnectLoadReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.ReconnectLoadReq)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.ReconnectLoadReq)
  return target;
}

int ReconnectLoadReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.ReconnectLoadReq)
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReconnectLoadReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.ReconnectLoadReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ReconnectLoadReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ReconnectLoadReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.ReconnectLoadReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.ReconnectLoadReq)
    MergeFrom(*source);
  }
}

void ReconnectLoadReq::MergeFrom(const ReconnectLoadReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.ReconnectLoadReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ReconnectLoadReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.ReconnectLoadReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReconnectLoadReq::CopyFrom(const ReconnectLoadReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.ReconnectLoadReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReconnectLoadReq::IsInitialized() const {

  return true;
}

void ReconnectLoadReq::Swap(ReconnectLoadReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReconnectLoadReq::InternalSwap(ReconnectLoadReq* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReconnectLoadReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReconnectLoadReq_descriptor_;
  metadata.reflection = ReconnectLoadReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReconnectLoadReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReconnectPrepare::kSeatFieldNumber;
const int ReconnectPrepare::kAcceptFieldNumber;
const int ReconnectPrepare::kPstatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReconnectPrepare::ReconnectPrepare()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.ReconnectPrepare)
}

void ReconnectPrepare::InitAsDefaultInstance() {
}

ReconnectPrepare::ReconnectPrepare(const ReconnectPrepare& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.ReconnectPrepare)
}

void ReconnectPrepare::SharedCtor() {
  _cached_size_ = 0;
  seat_ = 0u;
  accept_ = false;
  pstatus_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReconnectPrepare::~ReconnectPrepare() {
  // @@protoc_insertion_point(destructor:msg_maj.ReconnectPrepare)
  SharedDtor();
}

void ReconnectPrepare::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ReconnectPrepare::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReconnectPrepare::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReconnectPrepare_descriptor_;
}

const ReconnectPrepare& ReconnectPrepare::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmaj_2eproto();
  return *default_instance_;
}

ReconnectPrepare* ReconnectPrepare::default_instance_ = NULL;

ReconnectPrepare* ReconnectPrepare::New(::google::protobuf::Arena* arena) const {
  ReconnectPrepare* n = new ReconnectPrepare;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReconnectPrepare::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.ReconnectPrepare)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ReconnectPrepare, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ReconnectPrepare*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 7u) {
    ZR_(seat_, accept_);
    pstatus_ = 1;
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ReconnectPrepare::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.ReconnectPrepare)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 seat = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seat_)));
          set_has_seat();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_accept;
        break;
      }

      // required bool accept = 2;
      case 2: {
        if (tag == 16) {
         parse_accept:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &accept_)));
          set_has_accept();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_pstatus;
        break;
      }

      // required .msg_maj.player_status pstatus = 3;
      case 3: {
        if (tag == 24) {
         parse_pstatus:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::msg_maj::player_status_IsValid(value)) {
            set_pstatus(static_cast< ::msg_maj::player_status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.ReconnectPrepare)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.ReconnectPrepare)
  return false;
#undef DO_
}

void ReconnectPrepare::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.ReconnectPrepare)
  // required uint32 seat = 1;
  if (has_seat()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->seat(), output);
  }

  // required bool accept = 2;
  if (has_accept()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->accept(), output);
  }

  // required .msg_maj.player_status pstatus = 3;
  if (has_pstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->pstatus(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.ReconnectPrepare)
}

::google::protobuf::uint8* ReconnectPrepare::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.ReconnectPrepare)
  // required uint32 seat = 1;
  if (has_seat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->seat(), target);
  }

  // required bool accept = 2;
  if (has_accept()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->accept(), target);
  }

  // required .msg_maj.player_status pstatus = 3;
  if (has_pstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->pstatus(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.ReconnectPrepare)
  return target;
}

int ReconnectPrepare::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:msg_maj.ReconnectPrepare)
  int total_size = 0;

  if (has_seat()) {
    // required uint32 seat = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->seat());
  }

  if (has_accept()) {
    // required bool accept = 2;
    total_size += 1 + 1;
  }

  if (has_pstatus()) {
    // required .msg_maj.player_status pstatus = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->pstatus());
  }

  return total_size;
}
int ReconnectPrepare::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.ReconnectPrepare)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required uint32 seat = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->seat());

    // required bool accept = 2;
    total_size += 1 + 1;

    // required .msg_maj.player_status pstatus = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->pstatus());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReconnectPrepare::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.ReconnectPrepare)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ReconnectPrepare* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ReconnectPrepare>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.ReconnectPrepare)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.ReconnectPrepare)
    MergeFrom(*source);
  }
}

void ReconnectPrepare::MergeFrom(const ReconnectPrepare& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.ReconnectPrepare)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_seat()) {
      set_seat(from.seat());
    }
    if (from.has_accept()) {
      set_accept(from.accept());
    }
    if (from.has_pstatus()) {
      set_pstatus(from.pstatus());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ReconnectPrepare::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.ReconnectPrepare)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReconnectPrepare::CopyFrom(const ReconnectPrepare& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.ReconnectPrepare)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReconnectPrepare::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void ReconnectPrepare::Swap(ReconnectPrepare* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReconnectPrepare::InternalSwap(ReconnectPrepare* other) {
  std::swap(seat_, other->seat_);
  std::swap(accept_, other->accept_);
  std::swap(pstatus_, other->pstatus_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReconnectPrepare::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReconnectPrepare_descriptor_;
  metadata.reflection = ReconnectPrepare_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReconnectPrepare

// required uint32 seat = 1;
bool ReconnectPrepare::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ReconnectPrepare::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
void ReconnectPrepare::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
void ReconnectPrepare::clear_seat() {
  seat_ = 0u;
  clear_has_seat();
}
 ::google::protobuf::uint32 ReconnectPrepare::seat() const {
  // @@protoc_insertion_point(field_get:msg_maj.ReconnectPrepare.seat)
  return seat_;
}
 void ReconnectPrepare::set_seat(::google::protobuf::uint32 value) {
  set_has_seat();
  seat_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.ReconnectPrepare.seat)
}

// required bool accept = 2;
bool ReconnectPrepare::has_accept() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ReconnectPrepare::set_has_accept() {
  _has_bits_[0] |= 0x00000002u;
}
void ReconnectPrepare::clear_has_accept() {
  _has_bits_[0] &= ~0x00000002u;
}
void ReconnectPrepare::clear_accept() {
  accept_ = false;
  clear_has_accept();
}
 bool ReconnectPrepare::accept() const {
  // @@protoc_insertion_point(field_get:msg_maj.ReconnectPrepare.accept)
  return accept_;
}
 void ReconnectPrepare::set_accept(bool value) {
  set_has_accept();
  accept_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.ReconnectPrepare.accept)
}

// required .msg_maj.player_status pstatus = 3;
bool ReconnectPrepare::has_pstatus() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ReconnectPrepare::set_has_pstatus() {
  _has_bits_[0] |= 0x00000004u;
}
void ReconnectPrepare::clear_has_pstatus() {
  _has_bits_[0] &= ~0x00000004u;
}
void ReconnectPrepare::clear_pstatus() {
  pstatus_ = 1;
  clear_has_pstatus();
}
 ::msg_maj::player_status ReconnectPrepare::pstatus() const {
  // @@protoc_insertion_point(field_get:msg_maj.ReconnectPrepare.pstatus)
  return static_cast< ::msg_maj::player_status >(pstatus_);
}
 void ReconnectPrepare::set_pstatus(::msg_maj::player_status value) {
  assert(::msg_maj::player_status_IsValid(value));
  set_has_pstatus();
  pstatus_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.ReconnectPrepare.pstatus)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReconnectLoadResp::kIsStartFieldNumber;
const int ReconnectLoadResp::kSelfSeatFieldNumber;
const int ReconnectLoadResp::kBankerSeatFieldNumber;
const int ReconnectLoadResp::kDiceFieldNumber;
const int ReconnectLoadResp::kDeskTileCountFieldNumber;
const int ReconnectLoadResp::kSelfEventsFieldNumber;
const int ReconnectLoadResp::kCurrTileFieldNumber;
const int ReconnectLoadResp::kSelfDiscardFieldNumber;
const int ReconnectLoadResp::kSendDisoverFieldNumber;
const int ReconnectLoadResp::kPrepareInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReconnectLoadResp::ReconnectLoadResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.ReconnectLoadResp)
}

void ReconnectLoadResp::InitAsDefaultInstance() {
  self_seat_ = const_cast< ::msg_maj::SeatInfo*>(&::msg_maj::SeatInfo::default_instance());
}

ReconnectLoadResp::ReconnectLoadResp(const ReconnectLoadResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.ReconnectLoadResp)
}

void ReconnectLoadResp::SharedCtor() {
  _cached_size_ = 0;
  is_start_ = false;
  self_seat_ = NULL;
  banker_seat_ = 0u;
  dice_ = 0u;
  desk_tile_count_ = 0;
  curr_tile_ = 0u;
  self_discard_ = false;
  send_disover_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReconnectLoadResp::~ReconnectLoadResp() {
  // @@protoc_insertion_point(destructor:msg_maj.ReconnectLoadResp)
  SharedDtor();
}

void ReconnectLoadResp::SharedDtor() {
  if (this != default_instance_) {
    delete self_seat_;
  }
}

void ReconnectLoadResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReconnectLoadResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReconnectLoadResp_descriptor_;
}

const ReconnectLoadResp& ReconnectLoadResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmaj_2eproto();
  return *default_instance_;
}

ReconnectLoadResp* ReconnectLoadResp::default_instance_ = NULL;

ReconnectLoadResp* ReconnectLoadResp::New(::google::protobuf::Arena* arena) const {
  ReconnectLoadResp* n = new ReconnectLoadResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReconnectLoadResp::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.ReconnectLoadResp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ReconnectLoadResp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ReconnectLoadResp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 223u) {
    ZR_(banker_seat_, self_discard_);
    if (has_self_seat()) {
      if (self_seat_ != NULL) self_seat_->::msg_maj::SeatInfo::Clear();
    }
    curr_tile_ = 0u;
  }
  send_disover_ = false;

#undef ZR_HELPER_
#undef ZR_

  self_events_.Clear();
  prepare_info_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ReconnectLoadResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.ReconnectLoadResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool is_start = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_start_)));
          set_has_is_start();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_self_seat;
        break;
      }

      // optional .msg_maj.SeatInfo self_seat = 2;
      case 2: {
        if (tag == 18) {
         parse_self_seat:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_self_seat()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_banker_seat;
        break;
      }

      // optional uint32 banker_seat = 3;
      case 3: {
        if (tag == 24) {
         parse_banker_seat:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &banker_seat_)));
          set_has_banker_seat();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_dice;
        break;
      }

      // optional uint32 dice = 4;
      case 4: {
        if (tag == 32) {
         parse_dice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dice_)));
          set_has_dice();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_desk_tile_count;
        break;
      }

      // optional int32 desk_tile_count = 5;
      case 5: {
        if (tag == 40) {
         parse_desk_tile_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &desk_tile_count_)));
          set_has_desk_tile_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_self_events;
        break;
      }

      // repeated .msg_maj.EventInfo self_events = 6;
      case 6: {
        if (tag == 50) {
         parse_self_events:
          DO_(input->IncrementRecursionDepth());
         parse_loop_self_events:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_self_events()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_loop_self_events;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(56)) goto parse_curr_tile;
        break;
      }

      // optional uint32 curr_tile = 7;
      case 7: {
        if (tag == 56) {
         parse_curr_tile:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &curr_tile_)));
          set_has_curr_tile();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_self_discard;
        break;
      }

      // optional bool self_discard = 8;
      case 8: {
        if (tag == 64) {
         parse_self_discard:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &self_discard_)));
          set_has_self_discard();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_send_disover;
        break;
      }

      // optional bool send_disover = 9;
      case 9: {
        if (tag == 72) {
         parse_send_disover:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &send_disover_)));
          set_has_send_disover();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_prepare_info;
        break;
      }

      // repeated .msg_maj.ReconnectPrepare prepare_info = 10;
      case 10: {
        if (tag == 82) {
         parse_prepare_info:
          DO_(input->IncrementRecursionDepth());
         parse_loop_prepare_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_prepare_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_loop_prepare_info;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.ReconnectLoadResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.ReconnectLoadResp)
  return false;
#undef DO_
}

void ReconnectLoadResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.ReconnectLoadResp)
  // required bool is_start = 1;
  if (has_is_start()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_start(), output);
  }

  // optional .msg_maj.SeatInfo self_seat = 2;
  if (has_self_seat()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->self_seat_, output);
  }

  // optional uint32 banker_seat = 3;
  if (has_banker_seat()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->banker_seat(), output);
  }

  // optional uint32 dice = 4;
  if (has_dice()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->dice(), output);
  }

  // optional int32 desk_tile_count = 5;
  if (has_desk_tile_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->desk_tile_count(), output);
  }

  // repeated .msg_maj.EventInfo self_events = 6;
  for (unsigned int i = 0, n = this->self_events_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->self_events(i), output);
  }

  // optional uint32 curr_tile = 7;
  if (has_curr_tile()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->curr_tile(), output);
  }

  // optional bool self_discard = 8;
  if (has_self_discard()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->self_discard(), output);
  }

  // optional bool send_disover = 9;
  if (has_send_disover()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->send_disover(), output);
  }

  // repeated .msg_maj.ReconnectPrepare prepare_info = 10;
  for (unsigned int i = 0, n = this->prepare_info_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->prepare_info(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.ReconnectLoadResp)
}

::google::protobuf::uint8* ReconnectLoadResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.ReconnectLoadResp)
  // required bool is_start = 1;
  if (has_is_start()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_start(), target);
  }

  // optional .msg_maj.SeatInfo self_seat = 2;
  if (has_self_seat()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->self_seat_, false, target);
  }

  // optional uint32 banker_seat = 3;
  if (has_banker_seat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->banker_seat(), target);
  }

  // optional uint32 dice = 4;
  if (has_dice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->dice(), target);
  }

  // optional int32 desk_tile_count = 5;
  if (has_desk_tile_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->desk_tile_count(), target);
  }

  // repeated .msg_maj.EventInfo self_events = 6;
  for (unsigned int i = 0, n = this->self_events_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->self_events(i), false, target);
  }

  // optional uint32 curr_tile = 7;
  if (has_curr_tile()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->curr_tile(), target);
  }

  // optional bool self_discard = 8;
  if (has_self_discard()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->self_discard(), target);
  }

  // optional bool send_disover = 9;
  if (has_send_disover()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->send_disover(), target);
  }

  // repeated .msg_maj.ReconnectPrepare prepare_info = 10;
  for (unsigned int i = 0, n = this->prepare_info_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, this->prepare_info(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.ReconnectLoadResp)
  return target;
}

int ReconnectLoadResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.ReconnectLoadResp)
  int total_size = 0;

  // required bool is_start = 1;
  if (has_is_start()) {
    total_size += 1 + 1;
  }
  if (_has_bits_[1 / 32] & 222u) {
    // optional .msg_maj.SeatInfo self_seat = 2;
    if (has_self_seat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->self_seat_);
    }

    // optional uint32 banker_seat = 3;
    if (has_banker_seat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->banker_seat());
    }

    // optional uint32 dice = 4;
    if (has_dice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->dice());
    }

    // optional int32 desk_tile_count = 5;
    if (has_desk_tile_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->desk_tile_count());
    }

    // optional uint32 curr_tile = 7;
    if (has_curr_tile()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->curr_tile());
    }

    // optional bool self_discard = 8;
    if (has_self_discard()) {
      total_size += 1 + 1;
    }

  }
  // optional bool send_disover = 9;
  if (has_send_disover()) {
    total_size += 1 + 1;
  }

  // repeated .msg_maj.EventInfo self_events = 6;
  total_size += 1 * this->self_events_size();
  for (int i = 0; i < this->self_events_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->self_events(i));
  }

  // repeated .msg_maj.ReconnectPrepare prepare_info = 10;
  total_size += 1 * this->prepare_info_size();
  for (int i = 0; i < this->prepare_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->prepare_info(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReconnectLoadResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.ReconnectLoadResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ReconnectLoadResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ReconnectLoadResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.ReconnectLoadResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.ReconnectLoadResp)
    MergeFrom(*source);
  }
}

void ReconnectLoadResp::MergeFrom(const ReconnectLoadResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.ReconnectLoadResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  self_events_.MergeFrom(from.self_events_);
  prepare_info_.MergeFrom(from.prepare_info_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_is_start()) {
      set_is_start(from.is_start());
    }
    if (from.has_self_seat()) {
      mutable_self_seat()->::msg_maj::SeatInfo::MergeFrom(from.self_seat());
    }
    if (from.has_banker_seat()) {
      set_banker_seat(from.banker_seat());
    }
    if (from.has_dice()) {
      set_dice(from.dice());
    }
    if (from.has_desk_tile_count()) {
      set_desk_tile_count(from.desk_tile_count());
    }
    if (from.has_curr_tile()) {
      set_curr_tile(from.curr_tile());
    }
    if (from.has_self_discard()) {
      set_self_discard(from.self_discard());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_send_disover()) {
      set_send_disover(from.send_disover());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ReconnectLoadResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.ReconnectLoadResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReconnectLoadResp::CopyFrom(const ReconnectLoadResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.ReconnectLoadResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReconnectLoadResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_self_seat()) {
    if (!this->self_seat_->IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->self_events())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->prepare_info())) return false;
  return true;
}

void ReconnectLoadResp::Swap(ReconnectLoadResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReconnectLoadResp::InternalSwap(ReconnectLoadResp* other) {
  std::swap(is_start_, other->is_start_);
  std::swap(self_seat_, other->self_seat_);
  std::swap(banker_seat_, other->banker_seat_);
  std::swap(dice_, other->dice_);
  std::swap(desk_tile_count_, other->desk_tile_count_);
  self_events_.UnsafeArenaSwap(&other->self_events_);
  std::swap(curr_tile_, other->curr_tile_);
  std::swap(self_discard_, other->self_discard_);
  std::swap(send_disover_, other->send_disover_);
  prepare_info_.UnsafeArenaSwap(&other->prepare_info_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReconnectLoadResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReconnectLoadResp_descriptor_;
  metadata.reflection = ReconnectLoadResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReconnectLoadResp

// required bool is_start = 1;
bool ReconnectLoadResp::has_is_start() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ReconnectLoadResp::set_has_is_start() {
  _has_bits_[0] |= 0x00000001u;
}
void ReconnectLoadResp::clear_has_is_start() {
  _has_bits_[0] &= ~0x00000001u;
}
void ReconnectLoadResp::clear_is_start() {
  is_start_ = false;
  clear_has_is_start();
}
 bool ReconnectLoadResp::is_start() const {
  // @@protoc_insertion_point(field_get:msg_maj.ReconnectLoadResp.is_start)
  return is_start_;
}
 void ReconnectLoadResp::set_is_start(bool value) {
  set_has_is_start();
  is_start_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.ReconnectLoadResp.is_start)
}

// optional .msg_maj.SeatInfo self_seat = 2;
bool ReconnectLoadResp::has_self_seat() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ReconnectLoadResp::set_has_self_seat() {
  _has_bits_[0] |= 0x00000002u;
}
void ReconnectLoadResp::clear_has_self_seat() {
  _has_bits_[0] &= ~0x00000002u;
}
void ReconnectLoadResp::clear_self_seat() {
  if (self_seat_ != NULL) self_seat_->::msg_maj::SeatInfo::Clear();
  clear_has_self_seat();
}
const ::msg_maj::SeatInfo& ReconnectLoadResp::self_seat() const {
  // @@protoc_insertion_point(field_get:msg_maj.ReconnectLoadResp.self_seat)
  return self_seat_ != NULL ? *self_seat_ : *default_instance_->self_seat_;
}
::msg_maj::SeatInfo* ReconnectLoadResp::mutable_self_seat() {
  set_has_self_seat();
  if (self_seat_ == NULL) {
    self_seat_ = new ::msg_maj::SeatInfo;
  }
  // @@protoc_insertion_point(field_mutable:msg_maj.ReconnectLoadResp.self_seat)
  return self_seat_;
}
::msg_maj::SeatInfo* ReconnectLoadResp::release_self_seat() {
  // @@protoc_insertion_point(field_release:msg_maj.ReconnectLoadResp.self_seat)
  clear_has_self_seat();
  ::msg_maj::SeatInfo* temp = self_seat_;
  self_seat_ = NULL;
  return temp;
}
void ReconnectLoadResp::set_allocated_self_seat(::msg_maj::SeatInfo* self_seat) {
  delete self_seat_;
  self_seat_ = self_seat;
  if (self_seat) {
    set_has_self_seat();
  } else {
    clear_has_self_seat();
  }
  // @@protoc_insertion_point(field_set_allocated:msg_maj.ReconnectLoadResp.self_seat)
}

// optional uint32 banker_seat = 3;
bool ReconnectLoadResp::has_banker_seat() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ReconnectLoadResp::set_has_banker_seat() {
  _has_bits_[0] |= 0x00000004u;
}
void ReconnectLoadResp::clear_has_banker_seat() {
  _has_bits_[0] &= ~0x00000004u;
}
void ReconnectLoadResp::clear_banker_seat() {
  banker_seat_ = 0u;
  clear_has_banker_seat();
}
 ::google::protobuf::uint32 ReconnectLoadResp::banker_seat() const {
  // @@protoc_insertion_point(field_get:msg_maj.ReconnectLoadResp.banker_seat)
  return banker_seat_;
}
 void ReconnectLoadResp::set_banker_seat(::google::protobuf::uint32 value) {
  set_has_banker_seat();
  banker_seat_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.ReconnectLoadResp.banker_seat)
}

// optional uint32 dice = 4;
bool ReconnectLoadResp::has_dice() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ReconnectLoadResp::set_has_dice() {
  _has_bits_[0] |= 0x00000008u;
}
void ReconnectLoadResp::clear_has_dice() {
  _has_bits_[0] &= ~0x00000008u;
}
void ReconnectLoadResp::clear_dice() {
  dice_ = 0u;
  clear_has_dice();
}
 ::google::protobuf::uint32 ReconnectLoadResp::dice() const {
  // @@protoc_insertion_point(field_get:msg_maj.ReconnectLoadResp.dice)
  return dice_;
}
 void ReconnectLoadResp::set_dice(::google::protobuf::uint32 value) {
  set_has_dice();
  dice_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.ReconnectLoadResp.dice)
}

// optional int32 desk_tile_count = 5;
bool ReconnectLoadResp::has_desk_tile_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ReconnectLoadResp::set_has_desk_tile_count() {
  _has_bits_[0] |= 0x00000010u;
}
void ReconnectLoadResp::clear_has_desk_tile_count() {
  _has_bits_[0] &= ~0x00000010u;
}
void ReconnectLoadResp::clear_desk_tile_count() {
  desk_tile_count_ = 0;
  clear_has_desk_tile_count();
}
 ::google::protobuf::int32 ReconnectLoadResp::desk_tile_count() const {
  // @@protoc_insertion_point(field_get:msg_maj.ReconnectLoadResp.desk_tile_count)
  return desk_tile_count_;
}
 void ReconnectLoadResp::set_desk_tile_count(::google::protobuf::int32 value) {
  set_has_desk_tile_count();
  desk_tile_count_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.ReconnectLoadResp.desk_tile_count)
}

// repeated .msg_maj.EventInfo self_events = 6;
int ReconnectLoadResp::self_events_size() const {
  return self_events_.size();
}
void ReconnectLoadResp::clear_self_events() {
  self_events_.Clear();
}
const ::msg_maj::EventInfo& ReconnectLoadResp::self_events(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.ReconnectLoadResp.self_events)
  return self_events_.Get(index);
}
::msg_maj::EventInfo* ReconnectLoadResp::mutable_self_events(int index) {
  // @@protoc_insertion_point(field_mutable:msg_maj.ReconnectLoadResp.self_events)
  return self_events_.Mutable(index);
}
::msg_maj::EventInfo* ReconnectLoadResp::add_self_events() {
  // @@protoc_insertion_point(field_add:msg_maj.ReconnectLoadResp.self_events)
  return self_events_.Add();
}
::google::protobuf::RepeatedPtrField< ::msg_maj::EventInfo >*
ReconnectLoadResp::mutable_self_events() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.ReconnectLoadResp.self_events)
  return &self_events_;
}
const ::google::protobuf::RepeatedPtrField< ::msg_maj::EventInfo >&
ReconnectLoadResp::self_events() const {
  // @@protoc_insertion_point(field_list:msg_maj.ReconnectLoadResp.self_events)
  return self_events_;
}

// optional uint32 curr_tile = 7;
bool ReconnectLoadResp::has_curr_tile() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void ReconnectLoadResp::set_has_curr_tile() {
  _has_bits_[0] |= 0x00000040u;
}
void ReconnectLoadResp::clear_has_curr_tile() {
  _has_bits_[0] &= ~0x00000040u;
}
void ReconnectLoadResp::clear_curr_tile() {
  curr_tile_ = 0u;
  clear_has_curr_tile();
}
 ::google::protobuf::uint32 ReconnectLoadResp::curr_tile() const {
  // @@protoc_insertion_point(field_get:msg_maj.ReconnectLoadResp.curr_tile)
  return curr_tile_;
}
 void ReconnectLoadResp::set_curr_tile(::google::protobuf::uint32 value) {
  set_has_curr_tile();
  curr_tile_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.ReconnectLoadResp.curr_tile)
}

// optional bool self_discard = 8;
bool ReconnectLoadResp::has_self_discard() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void ReconnectLoadResp::set_has_self_discard() {
  _has_bits_[0] |= 0x00000080u;
}
void ReconnectLoadResp::clear_has_self_discard() {
  _has_bits_[0] &= ~0x00000080u;
}
void ReconnectLoadResp::clear_self_discard() {
  self_discard_ = false;
  clear_has_self_discard();
}
 bool ReconnectLoadResp::self_discard() const {
  // @@protoc_insertion_point(field_get:msg_maj.ReconnectLoadResp.self_discard)
  return self_discard_;
}
 void ReconnectLoadResp::set_self_discard(bool value) {
  set_has_self_discard();
  self_discard_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.ReconnectLoadResp.self_discard)
}

// optional bool send_disover = 9;
bool ReconnectLoadResp::has_send_disover() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void ReconnectLoadResp::set_has_send_disover() {
  _has_bits_[0] |= 0x00000100u;
}
void ReconnectLoadResp::clear_has_send_disover() {
  _has_bits_[0] &= ~0x00000100u;
}
void ReconnectLoadResp::clear_send_disover() {
  send_disover_ = false;
  clear_has_send_disover();
}
 bool ReconnectLoadResp::send_disover() const {
  // @@protoc_insertion_point(field_get:msg_maj.ReconnectLoadResp.send_disover)
  return send_disover_;
}
 void ReconnectLoadResp::set_send_disover(bool value) {
  set_has_send_disover();
  send_disover_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.ReconnectLoadResp.send_disover)
}

// repeated .msg_maj.ReconnectPrepare prepare_info = 10;
int ReconnectLoadResp::prepare_info_size() const {
  return prepare_info_.size();
}
void ReconnectLoadResp::clear_prepare_info() {
  prepare_info_.Clear();
}
const ::msg_maj::ReconnectPrepare& ReconnectLoadResp::prepare_info(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.ReconnectLoadResp.prepare_info)
  return prepare_info_.Get(index);
}
::msg_maj::ReconnectPrepare* ReconnectLoadResp::mutable_prepare_info(int index) {
  // @@protoc_insertion_point(field_mutable:msg_maj.ReconnectLoadResp.prepare_info)
  return prepare_info_.Mutable(index);
}
::msg_maj::ReconnectPrepare* ReconnectLoadResp::add_prepare_info() {
  // @@protoc_insertion_point(field_add:msg_maj.ReconnectLoadResp.prepare_info)
  return prepare_info_.Add();
}
::google::protobuf::RepeatedPtrField< ::msg_maj::ReconnectPrepare >*
ReconnectLoadResp::mutable_prepare_info() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.ReconnectLoadResp.prepare_info)
  return &prepare_info_;
}
const ::google::protobuf::RepeatedPtrField< ::msg_maj::ReconnectPrepare >&
ReconnectLoadResp::prepare_info() const {
  // @@protoc_insertion_point(field_list:msg_maj.ReconnectLoadResp.prepare_info)
  return prepare_info_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReconnectReadyReq::ReconnectReadyReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.ReconnectReadyReq)
}

void ReconnectReadyReq::InitAsDefaultInstance() {
}

ReconnectReadyReq::ReconnectReadyReq(const ReconnectReadyReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.ReconnectReadyReq)
}

void ReconnectReadyReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReconnectReadyReq::~ReconnectReadyReq() {
  // @@protoc_insertion_point(destructor:msg_maj.ReconnectReadyReq)
  SharedDtor();
}

void ReconnectReadyReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ReconnectReadyReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReconnectReadyReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReconnectReadyReq_descriptor_;
}

const ReconnectReadyReq& ReconnectReadyReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmaj_2eproto();
  return *default_instance_;
}

ReconnectReadyReq* ReconnectReadyReq::default_instance_ = NULL;

ReconnectReadyReq* ReconnectReadyReq::New(::google::protobuf::Arena* arena) const {
  ReconnectReadyReq* n = new ReconnectReadyReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReconnectReadyReq::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.ReconnectReadyReq)
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ReconnectReadyReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.ReconnectReadyReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.ReconnectReadyReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.ReconnectReadyReq)
  return false;
#undef DO_
}

void ReconnectReadyReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.ReconnectReadyReq)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.ReconnectReadyReq)
}

::google::protobuf::uint8* ReconnectReadyReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.ReconnectReadyReq)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.ReconnectReadyReq)
  return target;
}

int ReconnectReadyReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.ReconnectReadyReq)
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReconnectReadyReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.ReconnectReadyReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ReconnectReadyReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ReconnectReadyReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.ReconnectReadyReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.ReconnectReadyReq)
    MergeFrom(*source);
  }
}

void ReconnectReadyReq::MergeFrom(const ReconnectReadyReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.ReconnectReadyReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ReconnectReadyReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.ReconnectReadyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReconnectReadyReq::CopyFrom(const ReconnectReadyReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.ReconnectReadyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReconnectReadyReq::IsInitialized() const {

  return true;
}

void ReconnectReadyReq::Swap(ReconnectReadyReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReconnectReadyReq::InternalSwap(ReconnectReadyReq* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReconnectReadyReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReconnectReadyReq_descriptor_;
  metadata.reflection = ReconnectReadyReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReconnectReadyReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReconnectSyncCard::kDeskTileCountFieldNumber;
const int ReconnectSyncCard::kSeatsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReconnectSyncCard::ReconnectSyncCard()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.ReconnectSyncCard)
}

void ReconnectSyncCard::InitAsDefaultInstance() {
}

ReconnectSyncCard::ReconnectSyncCard(const ReconnectSyncCard& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.ReconnectSyncCard)
}

void ReconnectSyncCard::SharedCtor() {
  _cached_size_ = 0;
  desk_tile_count_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReconnectSyncCard::~ReconnectSyncCard() {
  // @@protoc_insertion_point(destructor:msg_maj.ReconnectSyncCard)
  SharedDtor();
}

void ReconnectSyncCard::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ReconnectSyncCard::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReconnectSyncCard::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReconnectSyncCard_descriptor_;
}

const ReconnectSyncCard& ReconnectSyncCard::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmaj_2eproto();
  return *default_instance_;
}

ReconnectSyncCard* ReconnectSyncCard::default_instance_ = NULL;

ReconnectSyncCard* ReconnectSyncCard::New(::google::protobuf::Arena* arena) const {
  ReconnectSyncCard* n = new ReconnectSyncCard;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReconnectSyncCard::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.ReconnectSyncCard)
  desk_tile_count_ = 0;
  seats_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ReconnectSyncCard::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.ReconnectSyncCard)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 desk_tile_count = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &desk_tile_count_)));
          set_has_desk_tile_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_seats;
        break;
      }

      // repeated .msg_maj.SeatInfo seats = 2;
      case 2: {
        if (tag == 18) {
         parse_seats:
          DO_(input->IncrementRecursionDepth());
         parse_loop_seats:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_seats()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_seats;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.ReconnectSyncCard)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.ReconnectSyncCard)
  return false;
#undef DO_
}

void ReconnectSyncCard::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.ReconnectSyncCard)
  // required int32 desk_tile_count = 1;
  if (has_desk_tile_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->desk_tile_count(), output);
  }

  // repeated .msg_maj.SeatInfo seats = 2;
  for (unsigned int i = 0, n = this->seats_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->seats(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.ReconnectSyncCard)
}

::google::protobuf::uint8* ReconnectSyncCard::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.ReconnectSyncCard)
  // required int32 desk_tile_count = 1;
  if (has_desk_tile_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->desk_tile_count(), target);
  }

  // repeated .msg_maj.SeatInfo seats = 2;
  for (unsigned int i = 0, n = this->seats_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->seats(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.ReconnectSyncCard)
  return target;
}

int ReconnectSyncCard::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.ReconnectSyncCard)
  int total_size = 0;

  // required int32 desk_tile_count = 1;
  if (has_desk_tile_count()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->desk_tile_count());
  }
  // repeated .msg_maj.SeatInfo seats = 2;
  total_size += 1 * this->seats_size();
  for (int i = 0; i < this->seats_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->seats(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReconnectSyncCard::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.ReconnectSyncCard)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ReconnectSyncCard* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ReconnectSyncCard>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.ReconnectSyncCard)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.ReconnectSyncCard)
    MergeFrom(*source);
  }
}

void ReconnectSyncCard::MergeFrom(const ReconnectSyncCard& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.ReconnectSyncCard)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  seats_.MergeFrom(from.seats_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_desk_tile_count()) {
      set_desk_tile_count(from.desk_tile_count());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ReconnectSyncCard::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.ReconnectSyncCard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReconnectSyncCard::CopyFrom(const ReconnectSyncCard& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.ReconnectSyncCard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReconnectSyncCard::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->seats())) return false;
  return true;
}

void ReconnectSyncCard::Swap(ReconnectSyncCard* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReconnectSyncCard::InternalSwap(ReconnectSyncCard* other) {
  std::swap(desk_tile_count_, other->desk_tile_count_);
  seats_.UnsafeArenaSwap(&other->seats_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReconnectSyncCard::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReconnectSyncCard_descriptor_;
  metadata.reflection = ReconnectSyncCard_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReconnectSyncCard

// required int32 desk_tile_count = 1;
bool ReconnectSyncCard::has_desk_tile_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ReconnectSyncCard::set_has_desk_tile_count() {
  _has_bits_[0] |= 0x00000001u;
}
void ReconnectSyncCard::clear_has_desk_tile_count() {
  _has_bits_[0] &= ~0x00000001u;
}
void ReconnectSyncCard::clear_desk_tile_count() {
  desk_tile_count_ = 0;
  clear_has_desk_tile_count();
}
 ::google::protobuf::int32 ReconnectSyncCard::desk_tile_count() const {
  // @@protoc_insertion_point(field_get:msg_maj.ReconnectSyncCard.desk_tile_count)
  return desk_tile_count_;
}
 void ReconnectSyncCard::set_desk_tile_count(::google::protobuf::int32 value) {
  set_has_desk_tile_count();
  desk_tile_count_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.ReconnectSyncCard.desk_tile_count)
}

// repeated .msg_maj.SeatInfo seats = 2;
int ReconnectSyncCard::seats_size() const {
  return seats_.size();
}
void ReconnectSyncCard::clear_seats() {
  seats_.Clear();
}
const ::msg_maj::SeatInfo& ReconnectSyncCard::seats(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.ReconnectSyncCard.seats)
  return seats_.Get(index);
}
::msg_maj::SeatInfo* ReconnectSyncCard::mutable_seats(int index) {
  // @@protoc_insertion_point(field_mutable:msg_maj.ReconnectSyncCard.seats)
  return seats_.Mutable(index);
}
::msg_maj::SeatInfo* ReconnectSyncCard::add_seats() {
  // @@protoc_insertion_point(field_add:msg_maj.ReconnectSyncCard.seats)
  return seats_.Add();
}
::google::protobuf::RepeatedPtrField< ::msg_maj::SeatInfo >*
ReconnectSyncCard::mutable_seats() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.ReconnectSyncCard.seats)
  return &seats_;
}
const ::google::protobuf::RepeatedPtrField< ::msg_maj::SeatInfo >&
ReconnectSyncCard::seats() const {
  // @@protoc_insertion_point(field_list:msg_maj.ReconnectSyncCard.seats)
  return seats_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReconnectOtherReadyReq::ReconnectOtherReadyReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.ReconnectOtherReadyReq)
}

void ReconnectOtherReadyReq::InitAsDefaultInstance() {
}

ReconnectOtherReadyReq::ReconnectOtherReadyReq(const ReconnectOtherReadyReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.ReconnectOtherReadyReq)
}

void ReconnectOtherReadyReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReconnectOtherReadyReq::~ReconnectOtherReadyReq() {
  // @@protoc_insertion_point(destructor:msg_maj.ReconnectOtherReadyReq)
  SharedDtor();
}

void ReconnectOtherReadyReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ReconnectOtherReadyReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReconnectOtherReadyReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReconnectOtherReadyReq_descriptor_;
}

const ReconnectOtherReadyReq& ReconnectOtherReadyReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmaj_2eproto();
  return *default_instance_;
}

ReconnectOtherReadyReq* ReconnectOtherReadyReq::default_instance_ = NULL;

ReconnectOtherReadyReq* ReconnectOtherReadyReq::New(::google::protobuf::Arena* arena) const {
  ReconnectOtherReadyReq* n = new ReconnectOtherReadyReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReconnectOtherReadyReq::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.ReconnectOtherReadyReq)
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ReconnectOtherReadyReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.ReconnectOtherReadyReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.ReconnectOtherReadyReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.ReconnectOtherReadyReq)
  return false;
#undef DO_
}

void ReconnectOtherReadyReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.ReconnectOtherReadyReq)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.ReconnectOtherReadyReq)
}

::google::protobuf::uint8* ReconnectOtherReadyReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.ReconnectOtherReadyReq)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.ReconnectOtherReadyReq)
  return target;
}

int ReconnectOtherReadyReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.ReconnectOtherReadyReq)
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReconnectOtherReadyReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.ReconnectOtherReadyReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ReconnectOtherReadyReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ReconnectOtherReadyReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.ReconnectOtherReadyReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.ReconnectOtherReadyReq)
    MergeFrom(*source);
  }
}

void ReconnectOtherReadyReq::MergeFrom(const ReconnectOtherReadyReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.ReconnectOtherReadyReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ReconnectOtherReadyReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.ReconnectOtherReadyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReconnectOtherReadyReq::CopyFrom(const ReconnectOtherReadyReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.ReconnectOtherReadyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReconnectOtherReadyReq::IsInitialized() const {

  return true;
}

void ReconnectOtherReadyReq::Swap(ReconnectOtherReadyReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReconnectOtherReadyReq::InternalSwap(ReconnectOtherReadyReq* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReconnectOtherReadyReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReconnectOtherReadyReq_descriptor_;
  metadata.reflection = ReconnectOtherReadyReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReconnectOtherReadyReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SyncPlayerStatus::kSeatFieldNumber;
const int SyncPlayerStatus::kPstatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SyncPlayerStatus::SyncPlayerStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.SyncPlayerStatus)
}

void SyncPlayerStatus::InitAsDefaultInstance() {
}

SyncPlayerStatus::SyncPlayerStatus(const SyncPlayerStatus& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.SyncPlayerStatus)
}

void SyncPlayerStatus::SharedCtor() {
  _cached_size_ = 0;
  seat_ = 0u;
  pstatus_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SyncPlayerStatus::~SyncPlayerStatus() {
  // @@protoc_insertion_point(destructor:msg_maj.SyncPlayerStatus)
  SharedDtor();
}

void SyncPlayerStatus::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SyncPlayerStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SyncPlayerStatus::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SyncPlayerStatus_descriptor_;
}

const SyncPlayerStatus& SyncPlayerStatus::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmaj_2eproto();
  return *default_instance_;
}

SyncPlayerStatus* SyncPlayerStatus::default_instance_ = NULL;

SyncPlayerStatus* SyncPlayerStatus::New(::google::protobuf::Arena* arena) const {
  SyncPlayerStatus* n = new SyncPlayerStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SyncPlayerStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.SyncPlayerStatus)
  if (_has_bits_[0 / 32] & 3u) {
    seat_ = 0u;
    pstatus_ = 1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SyncPlayerStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.SyncPlayerStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 seat = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seat_)));
          set_has_seat();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_pstatus;
        break;
      }

      // required .msg_maj.player_status pstatus = 2;
      case 2: {
        if (tag == 16) {
         parse_pstatus:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::msg_maj::player_status_IsValid(value)) {
            set_pstatus(static_cast< ::msg_maj::player_status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.SyncPlayerStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.SyncPlayerStatus)
  return false;
#undef DO_
}

void SyncPlayerStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.SyncPlayerStatus)
  // required uint32 seat = 1;
  if (has_seat()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->seat(), output);
  }

  // required .msg_maj.player_status pstatus = 2;
  if (has_pstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->pstatus(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.SyncPlayerStatus)
}

::google::protobuf::uint8* SyncPlayerStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.SyncPlayerStatus)
  // required uint32 seat = 1;
  if (has_seat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->seat(), target);
  }

  // required .msg_maj.player_status pstatus = 2;
  if (has_pstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->pstatus(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.SyncPlayerStatus)
  return target;
}

int SyncPlayerStatus::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:msg_maj.SyncPlayerStatus)
  int total_size = 0;

  if (has_seat()) {
    // required uint32 seat = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->seat());
  }

  if (has_pstatus()) {
    // required .msg_maj.player_status pstatus = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->pstatus());
  }

  return total_size;
}
int SyncPlayerStatus::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.SyncPlayerStatus)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint32 seat = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->seat());

    // required .msg_maj.player_status pstatus = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->pstatus());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncPlayerStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.SyncPlayerStatus)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SyncPlayerStatus* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SyncPlayerStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.SyncPlayerStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.SyncPlayerStatus)
    MergeFrom(*source);
  }
}

void SyncPlayerStatus::MergeFrom(const SyncPlayerStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.SyncPlayerStatus)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_seat()) {
      set_seat(from.seat());
    }
    if (from.has_pstatus()) {
      set_pstatus(from.pstatus());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SyncPlayerStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.SyncPlayerStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncPlayerStatus::CopyFrom(const SyncPlayerStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.SyncPlayerStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncPlayerStatus::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void SyncPlayerStatus::Swap(SyncPlayerStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SyncPlayerStatus::InternalSwap(SyncPlayerStatus* other) {
  std::swap(seat_, other->seat_);
  std::swap(pstatus_, other->pstatus_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SyncPlayerStatus::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SyncPlayerStatus_descriptor_;
  metadata.reflection = SyncPlayerStatus_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SyncPlayerStatus

// required uint32 seat = 1;
bool SyncPlayerStatus::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SyncPlayerStatus::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
void SyncPlayerStatus::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
void SyncPlayerStatus::clear_seat() {
  seat_ = 0u;
  clear_has_seat();
}
 ::google::protobuf::uint32 SyncPlayerStatus::seat() const {
  // @@protoc_insertion_point(field_get:msg_maj.SyncPlayerStatus.seat)
  return seat_;
}
 void SyncPlayerStatus::set_seat(::google::protobuf::uint32 value) {
  set_has_seat();
  seat_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.SyncPlayerStatus.seat)
}

// required .msg_maj.player_status pstatus = 2;
bool SyncPlayerStatus::has_pstatus() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SyncPlayerStatus::set_has_pstatus() {
  _has_bits_[0] |= 0x00000002u;
}
void SyncPlayerStatus::clear_has_pstatus() {
  _has_bits_[0] &= ~0x00000002u;
}
void SyncPlayerStatus::clear_pstatus() {
  pstatus_ = 1;
  clear_has_pstatus();
}
 ::msg_maj::player_status SyncPlayerStatus::pstatus() const {
  // @@protoc_insertion_point(field_get:msg_maj.SyncPlayerStatus.pstatus)
  return static_cast< ::msg_maj::player_status >(pstatus_);
}
 void SyncPlayerStatus::set_pstatus(::msg_maj::player_status value) {
  assert(::msg_maj::player_status_IsValid(value));
  set_has_pstatus();
  pstatus_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.SyncPlayerStatus.pstatus)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GpsSeatInfo::kSeatIdFieldNumber;
const int GpsSeatInfo::kLongitudeFieldNumber;
const int GpsSeatInfo::kLatitudeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GpsSeatInfo::GpsSeatInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.GpsSeatInfo)
}

void GpsSeatInfo::InitAsDefaultInstance() {
}

GpsSeatInfo::GpsSeatInfo(const GpsSeatInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.GpsSeatInfo)
}

void GpsSeatInfo::SharedCtor() {
  _cached_size_ = 0;
  seat_id_ = 0;
  longitude_ = 0;
  latitude_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GpsSeatInfo::~GpsSeatInfo() {
  // @@protoc_insertion_point(destructor:msg_maj.GpsSeatInfo)
  SharedDtor();
}

void GpsSeatInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GpsSeatInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GpsSeatInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GpsSeatInfo_descriptor_;
}

const GpsSeatInfo& GpsSeatInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmaj_2eproto();
  return *default_instance_;
}

GpsSeatInfo* GpsSeatInfo::default_instance_ = NULL;

GpsSeatInfo* GpsSeatInfo::New(::google::protobuf::Arena* arena) const {
  GpsSeatInfo* n = new GpsSeatInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GpsSeatInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.GpsSeatInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(GpsSeatInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<GpsSeatInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(longitude_, seat_id_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GpsSeatInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.GpsSeatInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 seat_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &seat_id_)));
          set_has_seat_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_longitude;
        break;
      }

      // required double longitude = 2;
      case 2: {
        if (tag == 17) {
         parse_longitude:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &longitude_)));
          set_has_longitude();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_latitude;
        break;
      }

      // required double latitude = 3;
      case 3: {
        if (tag == 25) {
         parse_latitude:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &latitude_)));
          set_has_latitude();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.GpsSeatInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.GpsSeatInfo)
  return false;
#undef DO_
}

void GpsSeatInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.GpsSeatInfo)
  // required int32 seat_id = 1;
  if (has_seat_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->seat_id(), output);
  }

  // required double longitude = 2;
  if (has_longitude()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->longitude(), output);
  }

  // required double latitude = 3;
  if (has_latitude()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->latitude(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.GpsSeatInfo)
}

::google::protobuf::uint8* GpsSeatInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.GpsSeatInfo)
  // required int32 seat_id = 1;
  if (has_seat_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->seat_id(), target);
  }

  // required double longitude = 2;
  if (has_longitude()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->longitude(), target);
  }

  // required double latitude = 3;
  if (has_latitude()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->latitude(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.GpsSeatInfo)
  return target;
}

int GpsSeatInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:msg_maj.GpsSeatInfo)
  int total_size = 0;

  if (has_seat_id()) {
    // required int32 seat_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->seat_id());
  }

  if (has_longitude()) {
    // required double longitude = 2;
    total_size += 1 + 8;
  }

  if (has_latitude()) {
    // required double latitude = 3;
    total_size += 1 + 8;
  }

  return total_size;
}
int GpsSeatInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.GpsSeatInfo)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 seat_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->seat_id());

    // required double longitude = 2;
    total_size += 1 + 8;

    // required double latitude = 3;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GpsSeatInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.GpsSeatInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GpsSeatInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GpsSeatInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.GpsSeatInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.GpsSeatInfo)
    MergeFrom(*source);
  }
}

void GpsSeatInfo::MergeFrom(const GpsSeatInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.GpsSeatInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_seat_id()) {
      set_seat_id(from.seat_id());
    }
    if (from.has_longitude()) {
      set_longitude(from.longitude());
    }
    if (from.has_latitude()) {
      set_latitude(from.latitude());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void GpsSeatInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.GpsSeatInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GpsSeatInfo::CopyFrom(const GpsSeatInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.GpsSeatInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GpsSeatInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void GpsSeatInfo::Swap(GpsSeatInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GpsSeatInfo::InternalSwap(GpsSeatInfo* other) {
  std::swap(seat_id_, other->seat_id_);
  std::swap(longitude_, other->longitude_);
  std::swap(latitude_, other->latitude_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GpsSeatInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GpsSeatInfo_descriptor_;
  metadata.reflection = GpsSeatInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GpsSeatInfo

// required int32 seat_id = 1;
bool GpsSeatInfo::has_seat_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GpsSeatInfo::set_has_seat_id() {
  _has_bits_[0] |= 0x00000001u;
}
void GpsSeatInfo::clear_has_seat_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void GpsSeatInfo::clear_seat_id() {
  seat_id_ = 0;
  clear_has_seat_id();
}
 ::google::protobuf::int32 GpsSeatInfo::seat_id() const {
  // @@protoc_insertion_point(field_get:msg_maj.GpsSeatInfo.seat_id)
  return seat_id_;
}
 void GpsSeatInfo::set_seat_id(::google::protobuf::int32 value) {
  set_has_seat_id();
  seat_id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.GpsSeatInfo.seat_id)
}

// required double longitude = 2;
bool GpsSeatInfo::has_longitude() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GpsSeatInfo::set_has_longitude() {
  _has_bits_[0] |= 0x00000002u;
}
void GpsSeatInfo::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000002u;
}
void GpsSeatInfo::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
 double GpsSeatInfo::longitude() const {
  // @@protoc_insertion_point(field_get:msg_maj.GpsSeatInfo.longitude)
  return longitude_;
}
 void GpsSeatInfo::set_longitude(double value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.GpsSeatInfo.longitude)
}

// required double latitude = 3;
bool GpsSeatInfo::has_latitude() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GpsSeatInfo::set_has_latitude() {
  _has_bits_[0] |= 0x00000004u;
}
void GpsSeatInfo::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000004u;
}
void GpsSeatInfo::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
 double GpsSeatInfo::latitude() const {
  // @@protoc_insertion_point(field_get:msg_maj.GpsSeatInfo.latitude)
  return latitude_;
}
 void GpsSeatInfo::set_latitude(double value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.GpsSeatInfo.latitude)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AskStartGame::kSameIpsFieldNumber;
const int AskStartGame::kTimerSecFieldNumber;
const int AskStartGame::kSeatGpsListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AskStartGame::AskStartGame()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.AskStartGame)
}

void AskStartGame::InitAsDefaultInstance() {
}

AskStartGame::AskStartGame(const AskStartGame& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.AskStartGame)
}

void AskStartGame::SharedCtor() {
  _cached_size_ = 0;
  timer_sec_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AskStartGame::~AskStartGame() {
  // @@protoc_insertion_point(destructor:msg_maj.AskStartGame)
  SharedDtor();
}

void AskStartGame::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AskStartGame::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AskStartGame::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AskStartGame_descriptor_;
}

const AskStartGame& AskStartGame::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmaj_2eproto();
  return *default_instance_;
}

AskStartGame* AskStartGame::default_instance_ = NULL;

AskStartGame* AskStartGame::New(::google::protobuf::Arena* arena) const {
  AskStartGame* n = new AskStartGame;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AskStartGame::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.AskStartGame)
  timer_sec_ = 0u;
  same_ips_.Clear();
  seat_gps_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool AskStartGame::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.AskStartGame)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .msg_maj.SameIpSeats same_ips = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_same_ips:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_same_ips()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_same_ips;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(16)) goto parse_timer_sec;
        break;
      }

      // optional uint32 timer_sec = 2;
      case 2: {
        if (tag == 16) {
         parse_timer_sec:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timer_sec_)));
          set_has_timer_sec();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_seat_gps_list;
        break;
      }

      // repeated .msg_maj.GpsSeatInfo seat_gps_list = 3;
      case 3: {
        if (tag == 26) {
         parse_seat_gps_list:
          DO_(input->IncrementRecursionDepth());
         parse_loop_seat_gps_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_seat_gps_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_seat_gps_list;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.AskStartGame)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.AskStartGame)
  return false;
#undef DO_
}

void AskStartGame::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.AskStartGame)
  // repeated .msg_maj.SameIpSeats same_ips = 1;
  for (unsigned int i = 0, n = this->same_ips_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->same_ips(i), output);
  }

  // optional uint32 timer_sec = 2;
  if (has_timer_sec()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->timer_sec(), output);
  }

  // repeated .msg_maj.GpsSeatInfo seat_gps_list = 3;
  for (unsigned int i = 0, n = this->seat_gps_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->seat_gps_list(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.AskStartGame)
}

::google::protobuf::uint8* AskStartGame::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.AskStartGame)
  // repeated .msg_maj.SameIpSeats same_ips = 1;
  for (unsigned int i = 0, n = this->same_ips_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->same_ips(i), false, target);
  }

  // optional uint32 timer_sec = 2;
  if (has_timer_sec()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->timer_sec(), target);
  }

  // repeated .msg_maj.GpsSeatInfo seat_gps_list = 3;
  for (unsigned int i = 0, n = this->seat_gps_list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->seat_gps_list(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.AskStartGame)
  return target;
}

int AskStartGame::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.AskStartGame)
  int total_size = 0;

  // optional uint32 timer_sec = 2;
  if (has_timer_sec()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->timer_sec());
  }

  // repeated .msg_maj.SameIpSeats same_ips = 1;
  total_size += 1 * this->same_ips_size();
  for (int i = 0; i < this->same_ips_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->same_ips(i));
  }

  // repeated .msg_maj.GpsSeatInfo seat_gps_list = 3;
  total_size += 1 * this->seat_gps_list_size();
  for (int i = 0; i < this->seat_gps_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->seat_gps_list(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AskStartGame::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.AskStartGame)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AskStartGame* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AskStartGame>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.AskStartGame)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.AskStartGame)
    MergeFrom(*source);
  }
}

void AskStartGame::MergeFrom(const AskStartGame& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.AskStartGame)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  same_ips_.MergeFrom(from.same_ips_);
  seat_gps_list_.MergeFrom(from.seat_gps_list_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_timer_sec()) {
      set_timer_sec(from.timer_sec());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void AskStartGame::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.AskStartGame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AskStartGame::CopyFrom(const AskStartGame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.AskStartGame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AskStartGame::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->seat_gps_list())) return false;
  return true;
}

void AskStartGame::Swap(AskStartGame* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AskStartGame::InternalSwap(AskStartGame* other) {
  same_ips_.UnsafeArenaSwap(&other->same_ips_);
  std::swap(timer_sec_, other->timer_sec_);
  seat_gps_list_.UnsafeArenaSwap(&other->seat_gps_list_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AskStartGame::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AskStartGame_descriptor_;
  metadata.reflection = AskStartGame_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AskStartGame

// repeated .msg_maj.SameIpSeats same_ips = 1;
int AskStartGame::same_ips_size() const {
  return same_ips_.size();
}
void AskStartGame::clear_same_ips() {
  same_ips_.Clear();
}
const ::msg_maj::SameIpSeats& AskStartGame::same_ips(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.AskStartGame.same_ips)
  return same_ips_.Get(index);
}
::msg_maj::SameIpSeats* AskStartGame::mutable_same_ips(int index) {
  // @@protoc_insertion_point(field_mutable:msg_maj.AskStartGame.same_ips)
  return same_ips_.Mutable(index);
}
::msg_maj::SameIpSeats* AskStartGame::add_same_ips() {
  // @@protoc_insertion_point(field_add:msg_maj.AskStartGame.same_ips)
  return same_ips_.Add();
}
::google::protobuf::RepeatedPtrField< ::msg_maj::SameIpSeats >*
AskStartGame::mutable_same_ips() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.AskStartGame.same_ips)
  return &same_ips_;
}
const ::google::protobuf::RepeatedPtrField< ::msg_maj::SameIpSeats >&
AskStartGame::same_ips() const {
  // @@protoc_insertion_point(field_list:msg_maj.AskStartGame.same_ips)
  return same_ips_;
}

// optional uint32 timer_sec = 2;
bool AskStartGame::has_timer_sec() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AskStartGame::set_has_timer_sec() {
  _has_bits_[0] |= 0x00000002u;
}
void AskStartGame::clear_has_timer_sec() {
  _has_bits_[0] &= ~0x00000002u;
}
void AskStartGame::clear_timer_sec() {
  timer_sec_ = 0u;
  clear_has_timer_sec();
}
 ::google::protobuf::uint32 AskStartGame::timer_sec() const {
  // @@protoc_insertion_point(field_get:msg_maj.AskStartGame.timer_sec)
  return timer_sec_;
}
 void AskStartGame::set_timer_sec(::google::protobuf::uint32 value) {
  set_has_timer_sec();
  timer_sec_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.AskStartGame.timer_sec)
}

// repeated .msg_maj.GpsSeatInfo seat_gps_list = 3;
int AskStartGame::seat_gps_list_size() const {
  return seat_gps_list_.size();
}
void AskStartGame::clear_seat_gps_list() {
  seat_gps_list_.Clear();
}
const ::msg_maj::GpsSeatInfo& AskStartGame::seat_gps_list(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.AskStartGame.seat_gps_list)
  return seat_gps_list_.Get(index);
}
::msg_maj::GpsSeatInfo* AskStartGame::mutable_seat_gps_list(int index) {
  // @@protoc_insertion_point(field_mutable:msg_maj.AskStartGame.seat_gps_list)
  return seat_gps_list_.Mutable(index);
}
::msg_maj::GpsSeatInfo* AskStartGame::add_seat_gps_list() {
  // @@protoc_insertion_point(field_add:msg_maj.AskStartGame.seat_gps_list)
  return seat_gps_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::msg_maj::GpsSeatInfo >*
AskStartGame::mutable_seat_gps_list() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.AskStartGame.seat_gps_list)
  return &seat_gps_list_;
}
const ::google::protobuf::RepeatedPtrField< ::msg_maj::GpsSeatInfo >&
AskStartGame::seat_gps_list() const {
  // @@protoc_insertion_point(field_list:msg_maj.AskStartGame.seat_gps_list)
  return seat_gps_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AcceptStartReq::kAcceptFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AcceptStartReq::AcceptStartReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.AcceptStartReq)
}

void AcceptStartReq::InitAsDefaultInstance() {
}

AcceptStartReq::AcceptStartReq(const AcceptStartReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.AcceptStartReq)
}

void AcceptStartReq::SharedCtor() {
  _cached_size_ = 0;
  accept_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AcceptStartReq::~AcceptStartReq() {
  // @@protoc_insertion_point(destructor:msg_maj.AcceptStartReq)
  SharedDtor();
}

void AcceptStartReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AcceptStartReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AcceptStartReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AcceptStartReq_descriptor_;
}

const AcceptStartReq& AcceptStartReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmaj_2eproto();
  return *default_instance_;
}

AcceptStartReq* AcceptStartReq::default_instance_ = NULL;

AcceptStartReq* AcceptStartReq::New(::google::protobuf::Arena* arena) const {
  AcceptStartReq* n = new AcceptStartReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AcceptStartReq::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.AcceptStartReq)
  accept_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool AcceptStartReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.AcceptStartReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool accept = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &accept_)));
          set_has_accept();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.AcceptStartReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.AcceptStartReq)
  return false;
#undef DO_
}

void AcceptStartReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.AcceptStartReq)
  // required bool accept = 1;
  if (has_accept()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->accept(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.AcceptStartReq)
}

::google::protobuf::uint8* AcceptStartReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.AcceptStartReq)
  // required bool accept = 1;
  if (has_accept()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->accept(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.AcceptStartReq)
  return target;
}

int AcceptStartReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.AcceptStartReq)
  int total_size = 0;

  // required bool accept = 1;
  if (has_accept()) {
    total_size += 1 + 1;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AcceptStartReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.AcceptStartReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AcceptStartReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AcceptStartReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.AcceptStartReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.AcceptStartReq)
    MergeFrom(*source);
  }
}

void AcceptStartReq::MergeFrom(const AcceptStartReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.AcceptStartReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_accept()) {
      set_accept(from.accept());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void AcceptStartReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.AcceptStartReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AcceptStartReq::CopyFrom(const AcceptStartReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.AcceptStartReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AcceptStartReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void AcceptStartReq::Swap(AcceptStartReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AcceptStartReq::InternalSwap(AcceptStartReq* other) {
  std::swap(accept_, other->accept_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AcceptStartReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AcceptStartReq_descriptor_;
  metadata.reflection = AcceptStartReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AcceptStartReq

// required bool accept = 1;
bool AcceptStartReq::has_accept() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AcceptStartReq::set_has_accept() {
  _has_bits_[0] |= 0x00000001u;
}
void AcceptStartReq::clear_has_accept() {
  _has_bits_[0] &= ~0x00000001u;
}
void AcceptStartReq::clear_accept() {
  accept_ = false;
  clear_has_accept();
}
 bool AcceptStartReq::accept() const {
  // @@protoc_insertion_point(field_get:msg_maj.AcceptStartReq.accept)
  return accept_;
}
 void AcceptStartReq::set_accept(bool value) {
  set_has_accept();
  accept_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.AcceptStartReq.accept)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AcceptStartNotify::kSeatFieldNumber;
const int AcceptStartNotify::kAcceptFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AcceptStartNotify::AcceptStartNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.AcceptStartNotify)
}

void AcceptStartNotify::InitAsDefaultInstance() {
}

AcceptStartNotify::AcceptStartNotify(const AcceptStartNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.AcceptStartNotify)
}

void AcceptStartNotify::SharedCtor() {
  _cached_size_ = 0;
  seat_ = 0u;
  accept_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AcceptStartNotify::~AcceptStartNotify() {
  // @@protoc_insertion_point(destructor:msg_maj.AcceptStartNotify)
  SharedDtor();
}

void AcceptStartNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AcceptStartNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AcceptStartNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AcceptStartNotify_descriptor_;
}

const AcceptStartNotify& AcceptStartNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmaj_2eproto();
  return *default_instance_;
}

AcceptStartNotify* AcceptStartNotify::default_instance_ = NULL;

AcceptStartNotify* AcceptStartNotify::New(::google::protobuf::Arena* arena) const {
  AcceptStartNotify* n = new AcceptStartNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AcceptStartNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.AcceptStartNotify)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(AcceptStartNotify, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<AcceptStartNotify*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(seat_, accept_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool AcceptStartNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.AcceptStartNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 seat = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seat_)));
          set_has_seat();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_accept;
        break;
      }

      // required bool accept = 2;
      case 2: {
        if (tag == 16) {
         parse_accept:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &accept_)));
          set_has_accept();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.AcceptStartNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.AcceptStartNotify)
  return false;
#undef DO_
}

void AcceptStartNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.AcceptStartNotify)
  // required uint32 seat = 1;
  if (has_seat()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->seat(), output);
  }

  // required bool accept = 2;
  if (has_accept()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->accept(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.AcceptStartNotify)
}

::google::protobuf::uint8* AcceptStartNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.AcceptStartNotify)
  // required uint32 seat = 1;
  if (has_seat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->seat(), target);
  }

  // required bool accept = 2;
  if (has_accept()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->accept(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.AcceptStartNotify)
  return target;
}

int AcceptStartNotify::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:msg_maj.AcceptStartNotify)
  int total_size = 0;

  if (has_seat()) {
    // required uint32 seat = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->seat());
  }

  if (has_accept()) {
    // required bool accept = 2;
    total_size += 1 + 1;
  }

  return total_size;
}
int AcceptStartNotify::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.AcceptStartNotify)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint32 seat = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->seat());

    // required bool accept = 2;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AcceptStartNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.AcceptStartNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AcceptStartNotify* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AcceptStartNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.AcceptStartNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.AcceptStartNotify)
    MergeFrom(*source);
  }
}

void AcceptStartNotify::MergeFrom(const AcceptStartNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.AcceptStartNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_seat()) {
      set_seat(from.seat());
    }
    if (from.has_accept()) {
      set_accept(from.accept());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void AcceptStartNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.AcceptStartNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AcceptStartNotify::CopyFrom(const AcceptStartNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.AcceptStartNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AcceptStartNotify::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void AcceptStartNotify::Swap(AcceptStartNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AcceptStartNotify::InternalSwap(AcceptStartNotify* other) {
  std::swap(seat_, other->seat_);
  std::swap(accept_, other->accept_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AcceptStartNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AcceptStartNotify_descriptor_;
  metadata.reflection = AcceptStartNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AcceptStartNotify

// required uint32 seat = 1;
bool AcceptStartNotify::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AcceptStartNotify::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
void AcceptStartNotify::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
void AcceptStartNotify::clear_seat() {
  seat_ = 0u;
  clear_has_seat();
}
 ::google::protobuf::uint32 AcceptStartNotify::seat() const {
  // @@protoc_insertion_point(field_get:msg_maj.AcceptStartNotify.seat)
  return seat_;
}
 void AcceptStartNotify::set_seat(::google::protobuf::uint32 value) {
  set_has_seat();
  seat_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.AcceptStartNotify.seat)
}

// required bool accept = 2;
bool AcceptStartNotify::has_accept() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AcceptStartNotify::set_has_accept() {
  _has_bits_[0] |= 0x00000002u;
}
void AcceptStartNotify::clear_has_accept() {
  _has_bits_[0] &= ~0x00000002u;
}
void AcceptStartNotify::clear_accept() {
  accept_ = false;
  clear_has_accept();
}
 bool AcceptStartNotify::accept() const {
  // @@protoc_insertion_point(field_get:msg_maj.AcceptStartNotify.accept)
  return accept_;
}
 void AcceptStartNotify::set_accept(bool value) {
  set_has_accept();
  accept_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.AcceptStartNotify.accept)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PrepareRoundReq::PrepareRoundReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.PrepareRoundReq)
}

void PrepareRoundReq::InitAsDefaultInstance() {
}

PrepareRoundReq::PrepareRoundReq(const PrepareRoundReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.PrepareRoundReq)
}

void PrepareRoundReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PrepareRoundReq::~PrepareRoundReq() {
  // @@protoc_insertion_point(destructor:msg_maj.PrepareRoundReq)
  SharedDtor();
}

void PrepareRoundReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PrepareRoundReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PrepareRoundReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PrepareRoundReq_descriptor_;
}

const PrepareRoundReq& PrepareRoundReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmaj_2eproto();
  return *default_instance_;
}

PrepareRoundReq* PrepareRoundReq::default_instance_ = NULL;

PrepareRoundReq* PrepareRoundReq::New(::google::protobuf::Arena* arena) const {
  PrepareRoundReq* n = new PrepareRoundReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PrepareRoundReq::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.PrepareRoundReq)
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PrepareRoundReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.PrepareRoundReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.PrepareRoundReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.PrepareRoundReq)
  return false;
#undef DO_
}

void PrepareRoundReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.PrepareRoundReq)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.PrepareRoundReq)
}

::google::protobuf::uint8* PrepareRoundReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.PrepareRoundReq)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.PrepareRoundReq)
  return target;
}

int PrepareRoundReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.PrepareRoundReq)
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PrepareRoundReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.PrepareRoundReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PrepareRoundReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PrepareRoundReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.PrepareRoundReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.PrepareRoundReq)
    MergeFrom(*source);
  }
}

void PrepareRoundReq::MergeFrom(const PrepareRoundReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.PrepareRoundReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PrepareRoundReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.PrepareRoundReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrepareRoundReq::CopyFrom(const PrepareRoundReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.PrepareRoundReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrepareRoundReq::IsInitialized() const {

  return true;
}

void PrepareRoundReq::Swap(PrepareRoundReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PrepareRoundReq::InternalSwap(PrepareRoundReq* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PrepareRoundReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PrepareRoundReq_descriptor_;
  metadata.reflection = PrepareRoundReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PrepareRoundReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PrepareRoundNotify::kSeatFieldNumber;
const int PrepareRoundNotify::kPrepareFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PrepareRoundNotify::PrepareRoundNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.PrepareRoundNotify)
}

void PrepareRoundNotify::InitAsDefaultInstance() {
}

PrepareRoundNotify::PrepareRoundNotify(const PrepareRoundNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.PrepareRoundNotify)
}

void PrepareRoundNotify::SharedCtor() {
  _cached_size_ = 0;
  seat_ = 0u;
  prepare_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PrepareRoundNotify::~PrepareRoundNotify() {
  // @@protoc_insertion_point(destructor:msg_maj.PrepareRoundNotify)
  SharedDtor();
}

void PrepareRoundNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PrepareRoundNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PrepareRoundNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PrepareRoundNotify_descriptor_;
}

const PrepareRoundNotify& PrepareRoundNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmaj_2eproto();
  return *default_instance_;
}

PrepareRoundNotify* PrepareRoundNotify::default_instance_ = NULL;

PrepareRoundNotify* PrepareRoundNotify::New(::google::protobuf::Arena* arena) const {
  PrepareRoundNotify* n = new PrepareRoundNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PrepareRoundNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.PrepareRoundNotify)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PrepareRoundNotify, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PrepareRoundNotify*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(seat_, prepare_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PrepareRoundNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.PrepareRoundNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 seat = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seat_)));
          set_has_seat();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_prepare;
        break;
      }

      // required bool prepare = 2;
      case 2: {
        if (tag == 16) {
         parse_prepare:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &prepare_)));
          set_has_prepare();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.PrepareRoundNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.PrepareRoundNotify)
  return false;
#undef DO_
}

void PrepareRoundNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.PrepareRoundNotify)
  // required uint32 seat = 1;
  if (has_seat()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->seat(), output);
  }

  // required bool prepare = 2;
  if (has_prepare()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->prepare(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.PrepareRoundNotify)
}

::google::protobuf::uint8* PrepareRoundNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.PrepareRoundNotify)
  // required uint32 seat = 1;
  if (has_seat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->seat(), target);
  }

  // required bool prepare = 2;
  if (has_prepare()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->prepare(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.PrepareRoundNotify)
  return target;
}

int PrepareRoundNotify::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:msg_maj.PrepareRoundNotify)
  int total_size = 0;

  if (has_seat()) {
    // required uint32 seat = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->seat());
  }

  if (has_prepare()) {
    // required bool prepare = 2;
    total_size += 1 + 1;
  }

  return total_size;
}
int PrepareRoundNotify::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.PrepareRoundNotify)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint32 seat = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->seat());

    // required bool prepare = 2;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PrepareRoundNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.PrepareRoundNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PrepareRoundNotify* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PrepareRoundNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.PrepareRoundNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.PrepareRoundNotify)
    MergeFrom(*source);
  }
}

void PrepareRoundNotify::MergeFrom(const PrepareRoundNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.PrepareRoundNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_seat()) {
      set_seat(from.seat());
    }
    if (from.has_prepare()) {
      set_prepare(from.prepare());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PrepareRoundNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.PrepareRoundNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrepareRoundNotify::CopyFrom(const PrepareRoundNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.PrepareRoundNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrepareRoundNotify::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void PrepareRoundNotify::Swap(PrepareRoundNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PrepareRoundNotify::InternalSwap(PrepareRoundNotify* other) {
  std::swap(seat_, other->seat_);
  std::swap(prepare_, other->prepare_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PrepareRoundNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PrepareRoundNotify_descriptor_;
  metadata.reflection = PrepareRoundNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PrepareRoundNotify

// required uint32 seat = 1;
bool PrepareRoundNotify::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PrepareRoundNotify::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
void PrepareRoundNotify::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
void PrepareRoundNotify::clear_seat() {
  seat_ = 0u;
  clear_has_seat();
}
 ::google::protobuf::uint32 PrepareRoundNotify::seat() const {
  // @@protoc_insertion_point(field_get:msg_maj.PrepareRoundNotify.seat)
  return seat_;
}
 void PrepareRoundNotify::set_seat(::google::protobuf::uint32 value) {
  set_has_seat();
  seat_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.PrepareRoundNotify.seat)
}

// required bool prepare = 2;
bool PrepareRoundNotify::has_prepare() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PrepareRoundNotify::set_has_prepare() {
  _has_bits_[0] |= 0x00000002u;
}
void PrepareRoundNotify::clear_has_prepare() {
  _has_bits_[0] &= ~0x00000002u;
}
void PrepareRoundNotify::clear_prepare() {
  prepare_ = false;
  clear_has_prepare();
}
 bool PrepareRoundNotify::prepare() const {
  // @@protoc_insertion_point(field_get:msg_maj.PrepareRoundNotify.prepare)
  return prepare_;
}
 void PrepareRoundNotify::set_prepare(bool value) {
  set_has_prepare();
  prepare_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.PrepareRoundNotify.prepare)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TotalResultSeat::kSeatFieldNumber;
const int TotalResultSeat::kTotalScoreFieldNumber;
const int TotalResultSeat::kBigWinFieldNumber;
const int TotalResultSeat::kZimoCntFieldNumber;
const int TotalResultSeat::kGhostZimoCntFieldNumber;
const int TotalResultSeat::kDianpaoCntFieldNumber;
const int TotalResultSeat::kAngangCntFieldNumber;
const int TotalResultSeat::kMinggangCntFieldNumber;
const int TotalResultSeat::kGuoshougangCntFieldNumber;
const int TotalResultSeat::kTotalGangCntFieldNumber;
const int TotalResultSeat::kFanggangTimesFieldNumber;
const int TotalResultSeat::kHitMaCntFieldNumber;
const int TotalResultSeat::kHuTotalCntFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TotalResultSeat::TotalResultSeat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.TotalResultSeat)
}

void TotalResultSeat::InitAsDefaultInstance() {
}

TotalResultSeat::TotalResultSeat(const TotalResultSeat& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.TotalResultSeat)
}

void TotalResultSeat::SharedCtor() {
  _cached_size_ = 0;
  seat_ = 0u;
  total_score_ = 0;
  big_win_ = false;
  zimo_cnt_ = 0u;
  ghost_zimo_cnt_ = 0u;
  dianpao_cnt_ = 0u;
  angang_cnt_ = 0u;
  minggang_cnt_ = 0u;
  guoshougang_cnt_ = 0u;
  total_gang_cnt_ = 0u;
  fanggang_times_ = 0u;
  hit_ma_cnt_ = 0u;
  hu_total_cnt_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TotalResultSeat::~TotalResultSeat() {
  // @@protoc_insertion_point(destructor:msg_maj.TotalResultSeat)
  SharedDtor();
}

void TotalResultSeat::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TotalResultSeat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TotalResultSeat::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TotalResultSeat_descriptor_;
}

const TotalResultSeat& TotalResultSeat::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmaj_2eproto();
  return *default_instance_;
}

TotalResultSeat* TotalResultSeat::default_instance_ = NULL;

TotalResultSeat* TotalResultSeat::New(::google::protobuf::Arena* arena) const {
  TotalResultSeat* n = new TotalResultSeat;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TotalResultSeat::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.TotalResultSeat)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(TotalResultSeat, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TotalResultSeat*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(seat_, minggang_cnt_);
  }
  if (_has_bits_[8 / 32] & 7936u) {
    ZR_(guoshougang_cnt_, hu_total_cnt_);
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TotalResultSeat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.TotalResultSeat)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 seat = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seat_)));
          set_has_seat();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_total_score;
        break;
      }

      // required int32 total_score = 2;
      case 2: {
        if (tag == 16) {
         parse_total_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_score_)));
          set_has_total_score();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_big_win;
        break;
      }

      // optional bool big_win = 3;
      case 3: {
        if (tag == 24) {
         parse_big_win:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &big_win_)));
          set_has_big_win();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_zimo_cnt;
        break;
      }

      // optional uint32 zimo_cnt = 4;
      case 4: {
        if (tag == 32) {
         parse_zimo_cnt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &zimo_cnt_)));
          set_has_zimo_cnt();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_ghost_zimo_cnt;
        break;
      }

      // optional uint32 ghost_zimo_cnt = 5;
      case 5: {
        if (tag == 40) {
         parse_ghost_zimo_cnt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ghost_zimo_cnt_)));
          set_has_ghost_zimo_cnt();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_dianpao_cnt;
        break;
      }

      // optional uint32 dianpao_cnt = 6;
      case 6: {
        if (tag == 48) {
         parse_dianpao_cnt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dianpao_cnt_)));
          set_has_dianpao_cnt();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_angang_cnt;
        break;
      }

      // optional uint32 angang_cnt = 7;
      case 7: {
        if (tag == 56) {
         parse_angang_cnt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &angang_cnt_)));
          set_has_angang_cnt();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_minggang_cnt;
        break;
      }

      // optional uint32 minggang_cnt = 8;
      case 8: {
        if (tag == 64) {
         parse_minggang_cnt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &minggang_cnt_)));
          set_has_minggang_cnt();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_guoshougang_cnt;
        break;
      }

      // optional uint32 guoshougang_cnt = 9;
      case 9: {
        if (tag == 72) {
         parse_guoshougang_cnt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &guoshougang_cnt_)));
          set_has_guoshougang_cnt();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_total_gang_cnt;
        break;
      }

      // optional uint32 total_gang_cnt = 10;
      case 10: {
        if (tag == 80) {
         parse_total_gang_cnt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_gang_cnt_)));
          set_has_total_gang_cnt();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_fanggang_times;
        break;
      }

      // optional uint32 fanggang_times = 11;
      case 11: {
        if (tag == 88) {
         parse_fanggang_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fanggang_times_)));
          set_has_fanggang_times();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_hit_ma_cnt;
        break;
      }

      // optional uint32 hit_ma_cnt = 12;
      case 12: {
        if (tag == 96) {
         parse_hit_ma_cnt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hit_ma_cnt_)));
          set_has_hit_ma_cnt();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_hu_total_cnt;
        break;
      }

      // optional uint32 hu_total_cnt = 13;
      case 13: {
        if (tag == 104) {
         parse_hu_total_cnt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hu_total_cnt_)));
          set_has_hu_total_cnt();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.TotalResultSeat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.TotalResultSeat)
  return false;
#undef DO_
}

void TotalResultSeat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.TotalResultSeat)
  // required uint32 seat = 1;
  if (has_seat()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->seat(), output);
  }

  // required int32 total_score = 2;
  if (has_total_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->total_score(), output);
  }

  // optional bool big_win = 3;
  if (has_big_win()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->big_win(), output);
  }

  // optional uint32 zimo_cnt = 4;
  if (has_zimo_cnt()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->zimo_cnt(), output);
  }

  // optional uint32 ghost_zimo_cnt = 5;
  if (has_ghost_zimo_cnt()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->ghost_zimo_cnt(), output);
  }

  // optional uint32 dianpao_cnt = 6;
  if (has_dianpao_cnt()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->dianpao_cnt(), output);
  }

  // optional uint32 angang_cnt = 7;
  if (has_angang_cnt()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->angang_cnt(), output);
  }

  // optional uint32 minggang_cnt = 8;
  if (has_minggang_cnt()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->minggang_cnt(), output);
  }

  // optional uint32 guoshougang_cnt = 9;
  if (has_guoshougang_cnt()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->guoshougang_cnt(), output);
  }

  // optional uint32 total_gang_cnt = 10;
  if (has_total_gang_cnt()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->total_gang_cnt(), output);
  }

  // optional uint32 fanggang_times = 11;
  if (has_fanggang_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->fanggang_times(), output);
  }

  // optional uint32 hit_ma_cnt = 12;
  if (has_hit_ma_cnt()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->hit_ma_cnt(), output);
  }

  // optional uint32 hu_total_cnt = 13;
  if (has_hu_total_cnt()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->hu_total_cnt(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.TotalResultSeat)
}

::google::protobuf::uint8* TotalResultSeat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.TotalResultSeat)
  // required uint32 seat = 1;
  if (has_seat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->seat(), target);
  }

  // required int32 total_score = 2;
  if (has_total_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->total_score(), target);
  }

  // optional bool big_win = 3;
  if (has_big_win()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->big_win(), target);
  }

  // optional uint32 zimo_cnt = 4;
  if (has_zimo_cnt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->zimo_cnt(), target);
  }

  // optional uint32 ghost_zimo_cnt = 5;
  if (has_ghost_zimo_cnt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->ghost_zimo_cnt(), target);
  }

  // optional uint32 dianpao_cnt = 6;
  if (has_dianpao_cnt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->dianpao_cnt(), target);
  }

  // optional uint32 angang_cnt = 7;
  if (has_angang_cnt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->angang_cnt(), target);
  }

  // optional uint32 minggang_cnt = 8;
  if (has_minggang_cnt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->minggang_cnt(), target);
  }

  // optional uint32 guoshougang_cnt = 9;
  if (has_guoshougang_cnt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->guoshougang_cnt(), target);
  }

  // optional uint32 total_gang_cnt = 10;
  if (has_total_gang_cnt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->total_gang_cnt(), target);
  }

  // optional uint32 fanggang_times = 11;
  if (has_fanggang_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->fanggang_times(), target);
  }

  // optional uint32 hit_ma_cnt = 12;
  if (has_hit_ma_cnt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->hit_ma_cnt(), target);
  }

  // optional uint32 hu_total_cnt = 13;
  if (has_hu_total_cnt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->hu_total_cnt(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.TotalResultSeat)
  return target;
}

int TotalResultSeat::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:msg_maj.TotalResultSeat)
  int total_size = 0;

  if (has_seat()) {
    // required uint32 seat = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->seat());
  }

  if (has_total_score()) {
    // required int32 total_score = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->total_score());
  }

  return total_size;
}
int TotalResultSeat::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.TotalResultSeat)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint32 seat = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->seat());

    // required int32 total_score = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->total_score());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[2 / 32] & 252u) {
    // optional bool big_win = 3;
    if (has_big_win()) {
      total_size += 1 + 1;
    }

    // optional uint32 zimo_cnt = 4;
    if (has_zimo_cnt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->zimo_cnt());
    }

    // optional uint32 ghost_zimo_cnt = 5;
    if (has_ghost_zimo_cnt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ghost_zimo_cnt());
    }

    // optional uint32 dianpao_cnt = 6;
    if (has_dianpao_cnt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->dianpao_cnt());
    }

    // optional uint32 angang_cnt = 7;
    if (has_angang_cnt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->angang_cnt());
    }

    // optional uint32 minggang_cnt = 8;
    if (has_minggang_cnt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->minggang_cnt());
    }

  }
  if (_has_bits_[8 / 32] & 7936u) {
    // optional uint32 guoshougang_cnt = 9;
    if (has_guoshougang_cnt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->guoshougang_cnt());
    }

    // optional uint32 total_gang_cnt = 10;
    if (has_total_gang_cnt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->total_gang_cnt());
    }

    // optional uint32 fanggang_times = 11;
    if (has_fanggang_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->fanggang_times());
    }

    // optional uint32 hit_ma_cnt = 12;
    if (has_hit_ma_cnt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hit_ma_cnt());
    }

    // optional uint32 hu_total_cnt = 13;
    if (has_hu_total_cnt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hu_total_cnt());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TotalResultSeat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.TotalResultSeat)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const TotalResultSeat* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TotalResultSeat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.TotalResultSeat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.TotalResultSeat)
    MergeFrom(*source);
  }
}

void TotalResultSeat::MergeFrom(const TotalResultSeat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.TotalResultSeat)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_seat()) {
      set_seat(from.seat());
    }
    if (from.has_total_score()) {
      set_total_score(from.total_score());
    }
    if (from.has_big_win()) {
      set_big_win(from.big_win());
    }
    if (from.has_zimo_cnt()) {
      set_zimo_cnt(from.zimo_cnt());
    }
    if (from.has_ghost_zimo_cnt()) {
      set_ghost_zimo_cnt(from.ghost_zimo_cnt());
    }
    if (from.has_dianpao_cnt()) {
      set_dianpao_cnt(from.dianpao_cnt());
    }
    if (from.has_angang_cnt()) {
      set_angang_cnt(from.angang_cnt());
    }
    if (from.has_minggang_cnt()) {
      set_minggang_cnt(from.minggang_cnt());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_guoshougang_cnt()) {
      set_guoshougang_cnt(from.guoshougang_cnt());
    }
    if (from.has_total_gang_cnt()) {
      set_total_gang_cnt(from.total_gang_cnt());
    }
    if (from.has_fanggang_times()) {
      set_fanggang_times(from.fanggang_times());
    }
    if (from.has_hit_ma_cnt()) {
      set_hit_ma_cnt(from.hit_ma_cnt());
    }
    if (from.has_hu_total_cnt()) {
      set_hu_total_cnt(from.hu_total_cnt());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void TotalResultSeat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.TotalResultSeat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TotalResultSeat::CopyFrom(const TotalResultSeat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.TotalResultSeat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TotalResultSeat::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void TotalResultSeat::Swap(TotalResultSeat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TotalResultSeat::InternalSwap(TotalResultSeat* other) {
  std::swap(seat_, other->seat_);
  std::swap(total_score_, other->total_score_);
  std::swap(big_win_, other->big_win_);
  std::swap(zimo_cnt_, other->zimo_cnt_);
  std::swap(ghost_zimo_cnt_, other->ghost_zimo_cnt_);
  std::swap(dianpao_cnt_, other->dianpao_cnt_);
  std::swap(angang_cnt_, other->angang_cnt_);
  std::swap(minggang_cnt_, other->minggang_cnt_);
  std::swap(guoshougang_cnt_, other->guoshougang_cnt_);
  std::swap(total_gang_cnt_, other->total_gang_cnt_);
  std::swap(fanggang_times_, other->fanggang_times_);
  std::swap(hit_ma_cnt_, other->hit_ma_cnt_);
  std::swap(hu_total_cnt_, other->hu_total_cnt_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TotalResultSeat::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TotalResultSeat_descriptor_;
  metadata.reflection = TotalResultSeat_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TotalResultSeat

// required uint32 seat = 1;
bool TotalResultSeat::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TotalResultSeat::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
void TotalResultSeat::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
void TotalResultSeat::clear_seat() {
  seat_ = 0u;
  clear_has_seat();
}
 ::google::protobuf::uint32 TotalResultSeat::seat() const {
  // @@protoc_insertion_point(field_get:msg_maj.TotalResultSeat.seat)
  return seat_;
}
 void TotalResultSeat::set_seat(::google::protobuf::uint32 value) {
  set_has_seat();
  seat_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.TotalResultSeat.seat)
}

// required int32 total_score = 2;
bool TotalResultSeat::has_total_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TotalResultSeat::set_has_total_score() {
  _has_bits_[0] |= 0x00000002u;
}
void TotalResultSeat::clear_has_total_score() {
  _has_bits_[0] &= ~0x00000002u;
}
void TotalResultSeat::clear_total_score() {
  total_score_ = 0;
  clear_has_total_score();
}
 ::google::protobuf::int32 TotalResultSeat::total_score() const {
  // @@protoc_insertion_point(field_get:msg_maj.TotalResultSeat.total_score)
  return total_score_;
}
 void TotalResultSeat::set_total_score(::google::protobuf::int32 value) {
  set_has_total_score();
  total_score_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.TotalResultSeat.total_score)
}

// optional bool big_win = 3;
bool TotalResultSeat::has_big_win() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void TotalResultSeat::set_has_big_win() {
  _has_bits_[0] |= 0x00000004u;
}
void TotalResultSeat::clear_has_big_win() {
  _has_bits_[0] &= ~0x00000004u;
}
void TotalResultSeat::clear_big_win() {
  big_win_ = false;
  clear_has_big_win();
}
 bool TotalResultSeat::big_win() const {
  // @@protoc_insertion_point(field_get:msg_maj.TotalResultSeat.big_win)
  return big_win_;
}
 void TotalResultSeat::set_big_win(bool value) {
  set_has_big_win();
  big_win_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.TotalResultSeat.big_win)
}

// optional uint32 zimo_cnt = 4;
bool TotalResultSeat::has_zimo_cnt() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void TotalResultSeat::set_has_zimo_cnt() {
  _has_bits_[0] |= 0x00000008u;
}
void TotalResultSeat::clear_has_zimo_cnt() {
  _has_bits_[0] &= ~0x00000008u;
}
void TotalResultSeat::clear_zimo_cnt() {
  zimo_cnt_ = 0u;
  clear_has_zimo_cnt();
}
 ::google::protobuf::uint32 TotalResultSeat::zimo_cnt() const {
  // @@protoc_insertion_point(field_get:msg_maj.TotalResultSeat.zimo_cnt)
  return zimo_cnt_;
}
 void TotalResultSeat::set_zimo_cnt(::google::protobuf::uint32 value) {
  set_has_zimo_cnt();
  zimo_cnt_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.TotalResultSeat.zimo_cnt)
}

// optional uint32 ghost_zimo_cnt = 5;
bool TotalResultSeat::has_ghost_zimo_cnt() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void TotalResultSeat::set_has_ghost_zimo_cnt() {
  _has_bits_[0] |= 0x00000010u;
}
void TotalResultSeat::clear_has_ghost_zimo_cnt() {
  _has_bits_[0] &= ~0x00000010u;
}
void TotalResultSeat::clear_ghost_zimo_cnt() {
  ghost_zimo_cnt_ = 0u;
  clear_has_ghost_zimo_cnt();
}
 ::google::protobuf::uint32 TotalResultSeat::ghost_zimo_cnt() const {
  // @@protoc_insertion_point(field_get:msg_maj.TotalResultSeat.ghost_zimo_cnt)
  return ghost_zimo_cnt_;
}
 void TotalResultSeat::set_ghost_zimo_cnt(::google::protobuf::uint32 value) {
  set_has_ghost_zimo_cnt();
  ghost_zimo_cnt_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.TotalResultSeat.ghost_zimo_cnt)
}

// optional uint32 dianpao_cnt = 6;
bool TotalResultSeat::has_dianpao_cnt() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void TotalResultSeat::set_has_dianpao_cnt() {
  _has_bits_[0] |= 0x00000020u;
}
void TotalResultSeat::clear_has_dianpao_cnt() {
  _has_bits_[0] &= ~0x00000020u;
}
void TotalResultSeat::clear_dianpao_cnt() {
  dianpao_cnt_ = 0u;
  clear_has_dianpao_cnt();
}
 ::google::protobuf::uint32 TotalResultSeat::dianpao_cnt() const {
  // @@protoc_insertion_point(field_get:msg_maj.TotalResultSeat.dianpao_cnt)
  return dianpao_cnt_;
}
 void TotalResultSeat::set_dianpao_cnt(::google::protobuf::uint32 value) {
  set_has_dianpao_cnt();
  dianpao_cnt_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.TotalResultSeat.dianpao_cnt)
}

// optional uint32 angang_cnt = 7;
bool TotalResultSeat::has_angang_cnt() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void TotalResultSeat::set_has_angang_cnt() {
  _has_bits_[0] |= 0x00000040u;
}
void TotalResultSeat::clear_has_angang_cnt() {
  _has_bits_[0] &= ~0x00000040u;
}
void TotalResultSeat::clear_angang_cnt() {
  angang_cnt_ = 0u;
  clear_has_angang_cnt();
}
 ::google::protobuf::uint32 TotalResultSeat::angang_cnt() const {
  // @@protoc_insertion_point(field_get:msg_maj.TotalResultSeat.angang_cnt)
  return angang_cnt_;
}
 void TotalResultSeat::set_angang_cnt(::google::protobuf::uint32 value) {
  set_has_angang_cnt();
  angang_cnt_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.TotalResultSeat.angang_cnt)
}

// optional uint32 minggang_cnt = 8;
bool TotalResultSeat::has_minggang_cnt() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void TotalResultSeat::set_has_minggang_cnt() {
  _has_bits_[0] |= 0x00000080u;
}
void TotalResultSeat::clear_has_minggang_cnt() {
  _has_bits_[0] &= ~0x00000080u;
}
void TotalResultSeat::clear_minggang_cnt() {
  minggang_cnt_ = 0u;
  clear_has_minggang_cnt();
}
 ::google::protobuf::uint32 TotalResultSeat::minggang_cnt() const {
  // @@protoc_insertion_point(field_get:msg_maj.TotalResultSeat.minggang_cnt)
  return minggang_cnt_;
}
 void TotalResultSeat::set_minggang_cnt(::google::protobuf::uint32 value) {
  set_has_minggang_cnt();
  minggang_cnt_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.TotalResultSeat.minggang_cnt)
}

// optional uint32 guoshougang_cnt = 9;
bool TotalResultSeat::has_guoshougang_cnt() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void TotalResultSeat::set_has_guoshougang_cnt() {
  _has_bits_[0] |= 0x00000100u;
}
void TotalResultSeat::clear_has_guoshougang_cnt() {
  _has_bits_[0] &= ~0x00000100u;
}
void TotalResultSeat::clear_guoshougang_cnt() {
  guoshougang_cnt_ = 0u;
  clear_has_guoshougang_cnt();
}
 ::google::protobuf::uint32 TotalResultSeat::guoshougang_cnt() const {
  // @@protoc_insertion_point(field_get:msg_maj.TotalResultSeat.guoshougang_cnt)
  return guoshougang_cnt_;
}
 void TotalResultSeat::set_guoshougang_cnt(::google::protobuf::uint32 value) {
  set_has_guoshougang_cnt();
  guoshougang_cnt_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.TotalResultSeat.guoshougang_cnt)
}

// optional uint32 total_gang_cnt = 10;
bool TotalResultSeat::has_total_gang_cnt() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void TotalResultSeat::set_has_total_gang_cnt() {
  _has_bits_[0] |= 0x00000200u;
}
void TotalResultSeat::clear_has_total_gang_cnt() {
  _has_bits_[0] &= ~0x00000200u;
}
void TotalResultSeat::clear_total_gang_cnt() {
  total_gang_cnt_ = 0u;
  clear_has_total_gang_cnt();
}
 ::google::protobuf::uint32 TotalResultSeat::total_gang_cnt() const {
  // @@protoc_insertion_point(field_get:msg_maj.TotalResultSeat.total_gang_cnt)
  return total_gang_cnt_;
}
 void TotalResultSeat::set_total_gang_cnt(::google::protobuf::uint32 value) {
  set_has_total_gang_cnt();
  total_gang_cnt_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.TotalResultSeat.total_gang_cnt)
}

// optional uint32 fanggang_times = 11;
bool TotalResultSeat::has_fanggang_times() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void TotalResultSeat::set_has_fanggang_times() {
  _has_bits_[0] |= 0x00000400u;
}
void TotalResultSeat::clear_has_fanggang_times() {
  _has_bits_[0] &= ~0x00000400u;
}
void TotalResultSeat::clear_fanggang_times() {
  fanggang_times_ = 0u;
  clear_has_fanggang_times();
}
 ::google::protobuf::uint32 TotalResultSeat::fanggang_times() const {
  // @@protoc_insertion_point(field_get:msg_maj.TotalResultSeat.fanggang_times)
  return fanggang_times_;
}
 void TotalResultSeat::set_fanggang_times(::google::protobuf::uint32 value) {
  set_has_fanggang_times();
  fanggang_times_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.TotalResultSeat.fanggang_times)
}

// optional uint32 hit_ma_cnt = 12;
bool TotalResultSeat::has_hit_ma_cnt() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void TotalResultSeat::set_has_hit_ma_cnt() {
  _has_bits_[0] |= 0x00000800u;
}
void TotalResultSeat::clear_has_hit_ma_cnt() {
  _has_bits_[0] &= ~0x00000800u;
}
void TotalResultSeat::clear_hit_ma_cnt() {
  hit_ma_cnt_ = 0u;
  clear_has_hit_ma_cnt();
}
 ::google::protobuf::uint32 TotalResultSeat::hit_ma_cnt() const {
  // @@protoc_insertion_point(field_get:msg_maj.TotalResultSeat.hit_ma_cnt)
  return hit_ma_cnt_;
}
 void TotalResultSeat::set_hit_ma_cnt(::google::protobuf::uint32 value) {
  set_has_hit_ma_cnt();
  hit_ma_cnt_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.TotalResultSeat.hit_ma_cnt)
}

// optional uint32 hu_total_cnt = 13;
bool TotalResultSeat::has_hu_total_cnt() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void TotalResultSeat::set_has_hu_total_cnt() {
  _has_bits_[0] |= 0x00001000u;
}
void TotalResultSeat::clear_has_hu_total_cnt() {
  _has_bits_[0] &= ~0x00001000u;
}
void TotalResultSeat::clear_hu_total_cnt() {
  hu_total_cnt_ = 0u;
  clear_has_hu_total_cnt();
}
 ::google::protobuf::uint32 TotalResultSeat::hu_total_cnt() const {
  // @@protoc_insertion_point(field_get:msg_maj.TotalResultSeat.hu_total_cnt)
  return hu_total_cnt_;
}
 void TotalResultSeat::set_hu_total_cnt(::google::protobuf::uint32 value) {
  set_has_hu_total_cnt();
  hu_total_cnt_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.TotalResultSeat.hu_total_cnt)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SeatInfo::kSeatFieldNumber;
const int SeatInfo::kHandTilesFieldNumber;
const int SeatInfo::kOpenTilesFieldNumber;
const int SeatInfo::kDiscardTilesFieldNumber;
const int SeatInfo::kHuTilesFieldNumber;
const int SeatInfo::kPstatusFieldNumber;
const int SeatInfo::kScoreFieldNumber;
const int SeatInfo::kDingqueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SeatInfo::SeatInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.SeatInfo)
}

void SeatInfo::InitAsDefaultInstance() {
}

SeatInfo::SeatInfo(const SeatInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.SeatInfo)
}

void SeatInfo::SharedCtor() {
  _cached_size_ = 0;
  seat_ = 0u;
  pstatus_ = 1;
  score_ = 0;
  dingque_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SeatInfo::~SeatInfo() {
  // @@protoc_insertion_point(destructor:msg_maj.SeatInfo)
  SharedDtor();
}

void SeatInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SeatInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SeatInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SeatInfo_descriptor_;
}

const SeatInfo& SeatInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmaj_2eproto();
  return *default_instance_;
}

SeatInfo* SeatInfo::default_instance_ = NULL;

SeatInfo* SeatInfo::New(::google::protobuf::Arena* arena) const {
  SeatInfo* n = new SeatInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SeatInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.SeatInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(SeatInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SeatInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 225u) {
    ZR_(score_, dingque_);
    seat_ = 0u;
    pstatus_ = 1;
  }

#undef ZR_HELPER_
#undef ZR_

  hand_tiles_.Clear();
  open_tiles_.Clear();
  discard_tiles_.Clear();
  hu_tiles_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SeatInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.SeatInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 seat = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seat_)));
          set_has_seat();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_hand_tiles;
        break;
      }

      // repeated uint32 hand_tiles = 2;
      case 2: {
        if (tag == 16) {
         parse_hand_tiles:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_hand_tiles())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_hand_tiles())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_hand_tiles;
        if (input->ExpectTag(26)) goto parse_open_tiles;
        break;
      }

      // repeated .msg_maj.OpenTile open_tiles = 3;
      case 3: {
        if (tag == 26) {
         parse_open_tiles:
          DO_(input->IncrementRecursionDepth());
         parse_loop_open_tiles:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_open_tiles()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_open_tiles;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(32)) goto parse_discard_tiles;
        break;
      }

      // repeated uint32 discard_tiles = 4;
      case 4: {
        if (tag == 32) {
         parse_discard_tiles:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 32, input, this->mutable_discard_tiles())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_discard_tiles())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_discard_tiles;
        if (input->ExpectTag(40)) goto parse_hu_tiles;
        break;
      }

      // repeated uint32 hu_tiles = 5;
      case 5: {
        if (tag == 40) {
         parse_hu_tiles:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 40, input, this->mutable_hu_tiles())));
        } else if (tag == 42) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_hu_tiles())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_hu_tiles;
        if (input->ExpectTag(48)) goto parse_pstatus;
        break;
      }

      // required .msg_maj.player_status pstatus = 6;
      case 6: {
        if (tag == 48) {
         parse_pstatus:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::msg_maj::player_status_IsValid(value)) {
            set_pstatus(static_cast< ::msg_maj::player_status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(6, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_score;
        break;
      }

      // required int32 score = 7;
      case 7: {
        if (tag == 56) {
         parse_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &score_)));
          set_has_score();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_dingque;
        break;
      }

      // optional int32 dingque = 8;
      case 8: {
        if (tag == 64) {
         parse_dingque:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dingque_)));
          set_has_dingque();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.SeatInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.SeatInfo)
  return false;
#undef DO_
}

void SeatInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.SeatInfo)
  // required uint32 seat = 1;
  if (has_seat()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->seat(), output);
  }

  // repeated uint32 hand_tiles = 2;
  for (int i = 0; i < this->hand_tiles_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->hand_tiles(i), output);
  }

  // repeated .msg_maj.OpenTile open_tiles = 3;
  for (unsigned int i = 0, n = this->open_tiles_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->open_tiles(i), output);
  }

  // repeated uint32 discard_tiles = 4;
  for (int i = 0; i < this->discard_tiles_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      4, this->discard_tiles(i), output);
  }

  // repeated uint32 hu_tiles = 5;
  for (int i = 0; i < this->hu_tiles_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      5, this->hu_tiles(i), output);
  }

  // required .msg_maj.player_status pstatus = 6;
  if (has_pstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->pstatus(), output);
  }

  // required int32 score = 7;
  if (has_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->score(), output);
  }

  // optional int32 dingque = 8;
  if (has_dingque()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->dingque(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.SeatInfo)
}

::google::protobuf::uint8* SeatInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.SeatInfo)
  // required uint32 seat = 1;
  if (has_seat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->seat(), target);
  }

  // repeated uint32 hand_tiles = 2;
  for (int i = 0; i < this->hand_tiles_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->hand_tiles(i), target);
  }

  // repeated .msg_maj.OpenTile open_tiles = 3;
  for (unsigned int i = 0, n = this->open_tiles_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->open_tiles(i), false, target);
  }

  // repeated uint32 discard_tiles = 4;
  for (int i = 0; i < this->discard_tiles_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(4, this->discard_tiles(i), target);
  }

  // repeated uint32 hu_tiles = 5;
  for (int i = 0; i < this->hu_tiles_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(5, this->hu_tiles(i), target);
  }

  // required .msg_maj.player_status pstatus = 6;
  if (has_pstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->pstatus(), target);
  }

  // required int32 score = 7;
  if (has_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->score(), target);
  }

  // optional int32 dingque = 8;
  if (has_dingque()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->dingque(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.SeatInfo)
  return target;
}

int SeatInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:msg_maj.SeatInfo)
  int total_size = 0;

  if (has_seat()) {
    // required uint32 seat = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->seat());
  }

  if (has_pstatus()) {
    // required .msg_maj.player_status pstatus = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->pstatus());
  }

  if (has_score()) {
    // required int32 score = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->score());
  }

  return total_size;
}
int SeatInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.SeatInfo)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000061) ^ 0x00000061) == 0) {  // All required fields are present.
    // required uint32 seat = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->seat());

    // required .msg_maj.player_status pstatus = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->pstatus());

    // required int32 score = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->score());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional int32 dingque = 8;
  if (has_dingque()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dingque());
  }

  // repeated uint32 hand_tiles = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->hand_tiles_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->hand_tiles(i));
    }
    total_size += 1 * this->hand_tiles_size() + data_size;
  }

  // repeated .msg_maj.OpenTile open_tiles = 3;
  total_size += 1 * this->open_tiles_size();
  for (int i = 0; i < this->open_tiles_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->open_tiles(i));
  }

  // repeated uint32 discard_tiles = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->discard_tiles_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->discard_tiles(i));
    }
    total_size += 1 * this->discard_tiles_size() + data_size;
  }

  // repeated uint32 hu_tiles = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->hu_tiles_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->hu_tiles(i));
    }
    total_size += 1 * this->hu_tiles_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SeatInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.SeatInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SeatInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SeatInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.SeatInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.SeatInfo)
    MergeFrom(*source);
  }
}

void SeatInfo::MergeFrom(const SeatInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.SeatInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  hand_tiles_.MergeFrom(from.hand_tiles_);
  open_tiles_.MergeFrom(from.open_tiles_);
  discard_tiles_.MergeFrom(from.discard_tiles_);
  hu_tiles_.MergeFrom(from.hu_tiles_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_seat()) {
      set_seat(from.seat());
    }
    if (from.has_pstatus()) {
      set_pstatus(from.pstatus());
    }
    if (from.has_score()) {
      set_score(from.score());
    }
    if (from.has_dingque()) {
      set_dingque(from.dingque());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SeatInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.SeatInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SeatInfo::CopyFrom(const SeatInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.SeatInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SeatInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000061) != 0x00000061) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->open_tiles())) return false;
  return true;
}

void SeatInfo::Swap(SeatInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SeatInfo::InternalSwap(SeatInfo* other) {
  std::swap(seat_, other->seat_);
  hand_tiles_.UnsafeArenaSwap(&other->hand_tiles_);
  open_tiles_.UnsafeArenaSwap(&other->open_tiles_);
  discard_tiles_.UnsafeArenaSwap(&other->discard_tiles_);
  hu_tiles_.UnsafeArenaSwap(&other->hu_tiles_);
  std::swap(pstatus_, other->pstatus_);
  std::swap(score_, other->score_);
  std::swap(dingque_, other->dingque_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SeatInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SeatInfo_descriptor_;
  metadata.reflection = SeatInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SeatInfo

// required uint32 seat = 1;
bool SeatInfo::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SeatInfo::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
void SeatInfo::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
void SeatInfo::clear_seat() {
  seat_ = 0u;
  clear_has_seat();
}
 ::google::protobuf::uint32 SeatInfo::seat() const {
  // @@protoc_insertion_point(field_get:msg_maj.SeatInfo.seat)
  return seat_;
}
 void SeatInfo::set_seat(::google::protobuf::uint32 value) {
  set_has_seat();
  seat_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.SeatInfo.seat)
}

// repeated uint32 hand_tiles = 2;
int SeatInfo::hand_tiles_size() const {
  return hand_tiles_.size();
}
void SeatInfo::clear_hand_tiles() {
  hand_tiles_.Clear();
}
 ::google::protobuf::uint32 SeatInfo::hand_tiles(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.SeatInfo.hand_tiles)
  return hand_tiles_.Get(index);
}
 void SeatInfo::set_hand_tiles(int index, ::google::protobuf::uint32 value) {
  hand_tiles_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg_maj.SeatInfo.hand_tiles)
}
 void SeatInfo::add_hand_tiles(::google::protobuf::uint32 value) {
  hand_tiles_.Add(value);
  // @@protoc_insertion_point(field_add:msg_maj.SeatInfo.hand_tiles)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SeatInfo::hand_tiles() const {
  // @@protoc_insertion_point(field_list:msg_maj.SeatInfo.hand_tiles)
  return hand_tiles_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SeatInfo::mutable_hand_tiles() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.SeatInfo.hand_tiles)
  return &hand_tiles_;
}

// repeated .msg_maj.OpenTile open_tiles = 3;
int SeatInfo::open_tiles_size() const {
  return open_tiles_.size();
}
void SeatInfo::clear_open_tiles() {
  open_tiles_.Clear();
}
const ::msg_maj::OpenTile& SeatInfo::open_tiles(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.SeatInfo.open_tiles)
  return open_tiles_.Get(index);
}
::msg_maj::OpenTile* SeatInfo::mutable_open_tiles(int index) {
  // @@protoc_insertion_point(field_mutable:msg_maj.SeatInfo.open_tiles)
  return open_tiles_.Mutable(index);
}
::msg_maj::OpenTile* SeatInfo::add_open_tiles() {
  // @@protoc_insertion_point(field_add:msg_maj.SeatInfo.open_tiles)
  return open_tiles_.Add();
}
::google::protobuf::RepeatedPtrField< ::msg_maj::OpenTile >*
SeatInfo::mutable_open_tiles() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.SeatInfo.open_tiles)
  return &open_tiles_;
}
const ::google::protobuf::RepeatedPtrField< ::msg_maj::OpenTile >&
SeatInfo::open_tiles() const {
  // @@protoc_insertion_point(field_list:msg_maj.SeatInfo.open_tiles)
  return open_tiles_;
}

// repeated uint32 discard_tiles = 4;
int SeatInfo::discard_tiles_size() const {
  return discard_tiles_.size();
}
void SeatInfo::clear_discard_tiles() {
  discard_tiles_.Clear();
}
 ::google::protobuf::uint32 SeatInfo::discard_tiles(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.SeatInfo.discard_tiles)
  return discard_tiles_.Get(index);
}
 void SeatInfo::set_discard_tiles(int index, ::google::protobuf::uint32 value) {
  discard_tiles_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg_maj.SeatInfo.discard_tiles)
}
 void SeatInfo::add_discard_tiles(::google::protobuf::uint32 value) {
  discard_tiles_.Add(value);
  // @@protoc_insertion_point(field_add:msg_maj.SeatInfo.discard_tiles)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SeatInfo::discard_tiles() const {
  // @@protoc_insertion_point(field_list:msg_maj.SeatInfo.discard_tiles)
  return discard_tiles_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SeatInfo::mutable_discard_tiles() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.SeatInfo.discard_tiles)
  return &discard_tiles_;
}

// repeated uint32 hu_tiles = 5;
int SeatInfo::hu_tiles_size() const {
  return hu_tiles_.size();
}
void SeatInfo::clear_hu_tiles() {
  hu_tiles_.Clear();
}
 ::google::protobuf::uint32 SeatInfo::hu_tiles(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.SeatInfo.hu_tiles)
  return hu_tiles_.Get(index);
}
 void SeatInfo::set_hu_tiles(int index, ::google::protobuf::uint32 value) {
  hu_tiles_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg_maj.SeatInfo.hu_tiles)
}
 void SeatInfo::add_hu_tiles(::google::protobuf::uint32 value) {
  hu_tiles_.Add(value);
  // @@protoc_insertion_point(field_add:msg_maj.SeatInfo.hu_tiles)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SeatInfo::hu_tiles() const {
  // @@protoc_insertion_point(field_list:msg_maj.SeatInfo.hu_tiles)
  return hu_tiles_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SeatInfo::mutable_hu_tiles() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.SeatInfo.hu_tiles)
  return &hu_tiles_;
}

// required .msg_maj.player_status pstatus = 6;
bool SeatInfo::has_pstatus() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void SeatInfo::set_has_pstatus() {
  _has_bits_[0] |= 0x00000020u;
}
void SeatInfo::clear_has_pstatus() {
  _has_bits_[0] &= ~0x00000020u;
}
void SeatInfo::clear_pstatus() {
  pstatus_ = 1;
  clear_has_pstatus();
}
 ::msg_maj::player_status SeatInfo::pstatus() const {
  // @@protoc_insertion_point(field_get:msg_maj.SeatInfo.pstatus)
  return static_cast< ::msg_maj::player_status >(pstatus_);
}
 void SeatInfo::set_pstatus(::msg_maj::player_status value) {
  assert(::msg_maj::player_status_IsValid(value));
  set_has_pstatus();
  pstatus_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.SeatInfo.pstatus)
}

// required int32 score = 7;
bool SeatInfo::has_score() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void SeatInfo::set_has_score() {
  _has_bits_[0] |= 0x00000040u;
}
void SeatInfo::clear_has_score() {
  _has_bits_[0] &= ~0x00000040u;
}
void SeatInfo::clear_score() {
  score_ = 0;
  clear_has_score();
}
 ::google::protobuf::int32 SeatInfo::score() const {
  // @@protoc_insertion_point(field_get:msg_maj.SeatInfo.score)
  return score_;
}
 void SeatInfo::set_score(::google::protobuf::int32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.SeatInfo.score)
}

// optional int32 dingque = 8;
bool SeatInfo::has_dingque() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void SeatInfo::set_has_dingque() {
  _has_bits_[0] |= 0x00000080u;
}
void SeatInfo::clear_has_dingque() {
  _has_bits_[0] &= ~0x00000080u;
}
void SeatInfo::clear_dingque() {
  dingque_ = 0;
  clear_has_dingque();
}
 ::google::protobuf::int32 SeatInfo::dingque() const {
  // @@protoc_insertion_point(field_get:msg_maj.SeatInfo.dingque)
  return dingque_;
}
 void SeatInfo::set_dingque(::google::protobuf::int32 value) {
  set_has_dingque();
  dingque_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.SeatInfo.dingque)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameResultSeat::kSeatFieldNumber;
const int GameResultSeat::kTotalScoreFieldNumber;
const int GameResultSeat::kHandTilesFieldNumber;
const int GameResultSeat::kOpenTilesFieldNumber;
const int GameResultSeat::kAnGangFieldNumber;
const int GameResultSeat::kMingGangFieldNumber;
const int GameResultSeat::kGuoShouGangFieldNumber;
const int GameResultSeat::kHuInfoFieldNumber;
const int GameResultSeat::kHuTileFieldNumber;
const int GameResultSeat::kDingqueFieldNumber;
const int GameResultSeat::kScoreDetailFieldNumber;
const int GameResultSeat::kGameTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameResultSeat::GameResultSeat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.GameResultSeat)
}

void GameResultSeat::InitAsDefaultInstance() {
  hu_info_ = const_cast< ::msg_maj::HuInfo*>(&::msg_maj::HuInfo::default_instance());
}

GameResultSeat::GameResultSeat(const GameResultSeat& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.GameResultSeat)
}

void GameResultSeat::SharedCtor() {
  _cached_size_ = 0;
  seat_ = 0u;
  total_score_ = 0;
  an_gang_ = 0u;
  ming_gang_ = 0u;
  guo_shou_gang_ = 0u;
  hu_info_ = NULL;
  hu_tile_ = 0u;
  dingque_ = 0u;
  game_type_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GameResultSeat::~GameResultSeat() {
  // @@protoc_insertion_point(destructor:msg_maj.GameResultSeat)
  SharedDtor();
}

void GameResultSeat::SharedDtor() {
  if (this != default_instance_) {
    delete hu_info_;
  }
}

void GameResultSeat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GameResultSeat::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GameResultSeat_descriptor_;
}

const GameResultSeat& GameResultSeat::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmaj_2eproto();
  return *default_instance_;
}

GameResultSeat* GameResultSeat::default_instance_ = NULL;

GameResultSeat* GameResultSeat::New(::google::protobuf::Arena* arena) const {
  GameResultSeat* n = new GameResultSeat;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GameResultSeat::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.GameResultSeat)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(GameResultSeat, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<GameResultSeat*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 243u) {
    ZR_(seat_, total_score_);
    ZR_(an_gang_, ming_gang_);
    guo_shou_gang_ = 0u;
    if (has_hu_info()) {
      if (hu_info_ != NULL) hu_info_->::msg_maj::HuInfo::Clear();
    }
  }
  if (_has_bits_[8 / 32] & 2816u) {
    ZR_(dingque_, game_type_);
    hu_tile_ = 0u;
  }

#undef ZR_HELPER_
#undef ZR_

  hand_tiles_.Clear();
  open_tiles_.Clear();
  score_detail_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GameResultSeat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.GameResultSeat)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 seat = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seat_)));
          set_has_seat();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_total_score;
        break;
      }

      // required int32 total_score = 2;
      case 2: {
        if (tag == 16) {
         parse_total_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_score_)));
          set_has_total_score();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_hand_tiles;
        break;
      }

      // repeated uint32 hand_tiles = 3;
      case 3: {
        if (tag == 24) {
         parse_hand_tiles:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24, input, this->mutable_hand_tiles())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_hand_tiles())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_hand_tiles;
        if (input->ExpectTag(34)) goto parse_open_tiles;
        break;
      }

      // repeated .msg_maj.OpenTile open_tiles = 4;
      case 4: {
        if (tag == 34) {
         parse_open_tiles:
          DO_(input->IncrementRecursionDepth());
         parse_loop_open_tiles:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_open_tiles()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_open_tiles;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(40)) goto parse_an_gang;
        break;
      }

      // optional uint32 an_gang = 5;
      case 5: {
        if (tag == 40) {
         parse_an_gang:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &an_gang_)));
          set_has_an_gang();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_ming_gang;
        break;
      }

      // optional uint32 ming_gang = 6;
      case 6: {
        if (tag == 48) {
         parse_ming_gang:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ming_gang_)));
          set_has_ming_gang();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_guo_shou_gang;
        break;
      }

      // optional uint32 guo_shou_gang = 7;
      case 7: {
        if (tag == 56) {
         parse_guo_shou_gang:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &guo_shou_gang_)));
          set_has_guo_shou_gang();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_hu_info;
        break;
      }

      // optional .msg_maj.HuInfo hu_info = 8;
      case 8: {
        if (tag == 66) {
         parse_hu_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hu_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_hu_tile;
        break;
      }

      // optional uint32 hu_tile = 9;
      case 9: {
        if (tag == 72) {
         parse_hu_tile:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hu_tile_)));
          set_has_hu_tile();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_dingque;
        break;
      }

      // optional uint32 dingque = 10;
      case 10: {
        if (tag == 80) {
         parse_dingque:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dingque_)));
          set_has_dingque();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_score_detail;
        break;
      }

      // repeated .msg_maj.ScoreDetail score_detail = 11;
      case 11: {
        if (tag == 90) {
         parse_score_detail:
          DO_(input->IncrementRecursionDepth());
         parse_loop_score_detail:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_score_detail()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_loop_score_detail;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(96)) goto parse_game_type;
        break;
      }

      // optional uint32 game_type = 12;
      case 12: {
        if (tag == 96) {
         parse_game_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &game_type_)));
          set_has_game_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.GameResultSeat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.GameResultSeat)
  return false;
#undef DO_
}

void GameResultSeat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.GameResultSeat)
  // required uint32 seat = 1;
  if (has_seat()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->seat(), output);
  }

  // required int32 total_score = 2;
  if (has_total_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->total_score(), output);
  }

  // repeated uint32 hand_tiles = 3;
  for (int i = 0; i < this->hand_tiles_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->hand_tiles(i), output);
  }

  // repeated .msg_maj.OpenTile open_tiles = 4;
  for (unsigned int i = 0, n = this->open_tiles_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->open_tiles(i), output);
  }

  // optional uint32 an_gang = 5;
  if (has_an_gang()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->an_gang(), output);
  }

  // optional uint32 ming_gang = 6;
  if (has_ming_gang()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->ming_gang(), output);
  }

  // optional uint32 guo_shou_gang = 7;
  if (has_guo_shou_gang()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->guo_shou_gang(), output);
  }

  // optional .msg_maj.HuInfo hu_info = 8;
  if (has_hu_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->hu_info_, output);
  }

  // optional uint32 hu_tile = 9;
  if (has_hu_tile()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->hu_tile(), output);
  }

  // optional uint32 dingque = 10;
  if (has_dingque()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->dingque(), output);
  }

  // repeated .msg_maj.ScoreDetail score_detail = 11;
  for (unsigned int i = 0, n = this->score_detail_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->score_detail(i), output);
  }

  // optional uint32 game_type = 12;
  if (has_game_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->game_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.GameResultSeat)
}

::google::protobuf::uint8* GameResultSeat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.GameResultSeat)
  // required uint32 seat = 1;
  if (has_seat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->seat(), target);
  }

  // required int32 total_score = 2;
  if (has_total_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->total_score(), target);
  }

  // repeated uint32 hand_tiles = 3;
  for (int i = 0; i < this->hand_tiles_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(3, this->hand_tiles(i), target);
  }

  // repeated .msg_maj.OpenTile open_tiles = 4;
  for (unsigned int i = 0, n = this->open_tiles_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->open_tiles(i), false, target);
  }

  // optional uint32 an_gang = 5;
  if (has_an_gang()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->an_gang(), target);
  }

  // optional uint32 ming_gang = 6;
  if (has_ming_gang()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->ming_gang(), target);
  }

  // optional uint32 guo_shou_gang = 7;
  if (has_guo_shou_gang()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->guo_shou_gang(), target);
  }

  // optional .msg_maj.HuInfo hu_info = 8;
  if (has_hu_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->hu_info_, false, target);
  }

  // optional uint32 hu_tile = 9;
  if (has_hu_tile()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->hu_tile(), target);
  }

  // optional uint32 dingque = 10;
  if (has_dingque()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->dingque(), target);
  }

  // repeated .msg_maj.ScoreDetail score_detail = 11;
  for (unsigned int i = 0, n = this->score_detail_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, this->score_detail(i), false, target);
  }

  // optional uint32 game_type = 12;
  if (has_game_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->game_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.GameResultSeat)
  return target;
}

int GameResultSeat::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:msg_maj.GameResultSeat)
  int total_size = 0;

  if (has_seat()) {
    // required uint32 seat = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->seat());
  }

  if (has_total_score()) {
    // required int32 total_score = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->total_score());
  }

  return total_size;
}
int GameResultSeat::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.GameResultSeat)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint32 seat = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->seat());

    // required int32 total_score = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->total_score());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[4 / 32] & 240u) {
    // optional uint32 an_gang = 5;
    if (has_an_gang()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->an_gang());
    }

    // optional uint32 ming_gang = 6;
    if (has_ming_gang()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ming_gang());
    }

    // optional uint32 guo_shou_gang = 7;
    if (has_guo_shou_gang()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->guo_shou_gang());
    }

    // optional .msg_maj.HuInfo hu_info = 8;
    if (has_hu_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->hu_info_);
    }

  }
  if (_has_bits_[8 / 32] & 2816u) {
    // optional uint32 hu_tile = 9;
    if (has_hu_tile()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hu_tile());
    }

    // optional uint32 dingque = 10;
    if (has_dingque()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->dingque());
    }

    // optional uint32 game_type = 12;
    if (has_game_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->game_type());
    }

  }
  // repeated uint32 hand_tiles = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->hand_tiles_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->hand_tiles(i));
    }
    total_size += 1 * this->hand_tiles_size() + data_size;
  }

  // repeated .msg_maj.OpenTile open_tiles = 4;
  total_size += 1 * this->open_tiles_size();
  for (int i = 0; i < this->open_tiles_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->open_tiles(i));
  }

  // repeated .msg_maj.ScoreDetail score_detail = 11;
  total_size += 1 * this->score_detail_size();
  for (int i = 0; i < this->score_detail_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->score_detail(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GameResultSeat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.GameResultSeat)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GameResultSeat* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GameResultSeat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.GameResultSeat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.GameResultSeat)
    MergeFrom(*source);
  }
}

void GameResultSeat::MergeFrom(const GameResultSeat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.GameResultSeat)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  hand_tiles_.MergeFrom(from.hand_tiles_);
  open_tiles_.MergeFrom(from.open_tiles_);
  score_detail_.MergeFrom(from.score_detail_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_seat()) {
      set_seat(from.seat());
    }
    if (from.has_total_score()) {
      set_total_score(from.total_score());
    }
    if (from.has_an_gang()) {
      set_an_gang(from.an_gang());
    }
    if (from.has_ming_gang()) {
      set_ming_gang(from.ming_gang());
    }
    if (from.has_guo_shou_gang()) {
      set_guo_shou_gang(from.guo_shou_gang());
    }
    if (from.has_hu_info()) {
      mutable_hu_info()->::msg_maj::HuInfo::MergeFrom(from.hu_info());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_hu_tile()) {
      set_hu_tile(from.hu_tile());
    }
    if (from.has_dingque()) {
      set_dingque(from.dingque());
    }
    if (from.has_game_type()) {
      set_game_type(from.game_type());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void GameResultSeat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.GameResultSeat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameResultSeat::CopyFrom(const GameResultSeat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.GameResultSeat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameResultSeat::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->open_tiles())) return false;
  if (has_hu_info()) {
    if (!this->hu_info_->IsInitialized()) return false;
  }
  return true;
}

void GameResultSeat::Swap(GameResultSeat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameResultSeat::InternalSwap(GameResultSeat* other) {
  std::swap(seat_, other->seat_);
  std::swap(total_score_, other->total_score_);
  hand_tiles_.UnsafeArenaSwap(&other->hand_tiles_);
  open_tiles_.UnsafeArenaSwap(&other->open_tiles_);
  std::swap(an_gang_, other->an_gang_);
  std::swap(ming_gang_, other->ming_gang_);
  std::swap(guo_shou_gang_, other->guo_shou_gang_);
  std::swap(hu_info_, other->hu_info_);
  std::swap(hu_tile_, other->hu_tile_);
  std::swap(dingque_, other->dingque_);
  score_detail_.UnsafeArenaSwap(&other->score_detail_);
  std::swap(game_type_, other->game_type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GameResultSeat::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GameResultSeat_descriptor_;
  metadata.reflection = GameResultSeat_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GameResultSeat

// required uint32 seat = 1;
bool GameResultSeat::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GameResultSeat::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
void GameResultSeat::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
void GameResultSeat::clear_seat() {
  seat_ = 0u;
  clear_has_seat();
}
 ::google::protobuf::uint32 GameResultSeat::seat() const {
  // @@protoc_insertion_point(field_get:msg_maj.GameResultSeat.seat)
  return seat_;
}
 void GameResultSeat::set_seat(::google::protobuf::uint32 value) {
  set_has_seat();
  seat_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.GameResultSeat.seat)
}

// required int32 total_score = 2;
bool GameResultSeat::has_total_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GameResultSeat::set_has_total_score() {
  _has_bits_[0] |= 0x00000002u;
}
void GameResultSeat::clear_has_total_score() {
  _has_bits_[0] &= ~0x00000002u;
}
void GameResultSeat::clear_total_score() {
  total_score_ = 0;
  clear_has_total_score();
}
 ::google::protobuf::int32 GameResultSeat::total_score() const {
  // @@protoc_insertion_point(field_get:msg_maj.GameResultSeat.total_score)
  return total_score_;
}
 void GameResultSeat::set_total_score(::google::protobuf::int32 value) {
  set_has_total_score();
  total_score_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.GameResultSeat.total_score)
}

// repeated uint32 hand_tiles = 3;
int GameResultSeat::hand_tiles_size() const {
  return hand_tiles_.size();
}
void GameResultSeat::clear_hand_tiles() {
  hand_tiles_.Clear();
}
 ::google::protobuf::uint32 GameResultSeat::hand_tiles(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.GameResultSeat.hand_tiles)
  return hand_tiles_.Get(index);
}
 void GameResultSeat::set_hand_tiles(int index, ::google::protobuf::uint32 value) {
  hand_tiles_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg_maj.GameResultSeat.hand_tiles)
}
 void GameResultSeat::add_hand_tiles(::google::protobuf::uint32 value) {
  hand_tiles_.Add(value);
  // @@protoc_insertion_point(field_add:msg_maj.GameResultSeat.hand_tiles)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GameResultSeat::hand_tiles() const {
  // @@protoc_insertion_point(field_list:msg_maj.GameResultSeat.hand_tiles)
  return hand_tiles_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GameResultSeat::mutable_hand_tiles() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.GameResultSeat.hand_tiles)
  return &hand_tiles_;
}

// repeated .msg_maj.OpenTile open_tiles = 4;
int GameResultSeat::open_tiles_size() const {
  return open_tiles_.size();
}
void GameResultSeat::clear_open_tiles() {
  open_tiles_.Clear();
}
const ::msg_maj::OpenTile& GameResultSeat::open_tiles(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.GameResultSeat.open_tiles)
  return open_tiles_.Get(index);
}
::msg_maj::OpenTile* GameResultSeat::mutable_open_tiles(int index) {
  // @@protoc_insertion_point(field_mutable:msg_maj.GameResultSeat.open_tiles)
  return open_tiles_.Mutable(index);
}
::msg_maj::OpenTile* GameResultSeat::add_open_tiles() {
  // @@protoc_insertion_point(field_add:msg_maj.GameResultSeat.open_tiles)
  return open_tiles_.Add();
}
::google::protobuf::RepeatedPtrField< ::msg_maj::OpenTile >*
GameResultSeat::mutable_open_tiles() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.GameResultSeat.open_tiles)
  return &open_tiles_;
}
const ::google::protobuf::RepeatedPtrField< ::msg_maj::OpenTile >&
GameResultSeat::open_tiles() const {
  // @@protoc_insertion_point(field_list:msg_maj.GameResultSeat.open_tiles)
  return open_tiles_;
}

// optional uint32 an_gang = 5;
bool GameResultSeat::has_an_gang() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void GameResultSeat::set_has_an_gang() {
  _has_bits_[0] |= 0x00000010u;
}
void GameResultSeat::clear_has_an_gang() {
  _has_bits_[0] &= ~0x00000010u;
}
void GameResultSeat::clear_an_gang() {
  an_gang_ = 0u;
  clear_has_an_gang();
}
 ::google::protobuf::uint32 GameResultSeat::an_gang() const {
  // @@protoc_insertion_point(field_get:msg_maj.GameResultSeat.an_gang)
  return an_gang_;
}
 void GameResultSeat::set_an_gang(::google::protobuf::uint32 value) {
  set_has_an_gang();
  an_gang_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.GameResultSeat.an_gang)
}

// optional uint32 ming_gang = 6;
bool GameResultSeat::has_ming_gang() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void GameResultSeat::set_has_ming_gang() {
  _has_bits_[0] |= 0x00000020u;
}
void GameResultSeat::clear_has_ming_gang() {
  _has_bits_[0] &= ~0x00000020u;
}
void GameResultSeat::clear_ming_gang() {
  ming_gang_ = 0u;
  clear_has_ming_gang();
}
 ::google::protobuf::uint32 GameResultSeat::ming_gang() const {
  // @@protoc_insertion_point(field_get:msg_maj.GameResultSeat.ming_gang)
  return ming_gang_;
}
 void GameResultSeat::set_ming_gang(::google::protobuf::uint32 value) {
  set_has_ming_gang();
  ming_gang_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.GameResultSeat.ming_gang)
}

// optional uint32 guo_shou_gang = 7;
bool GameResultSeat::has_guo_shou_gang() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void GameResultSeat::set_has_guo_shou_gang() {
  _has_bits_[0] |= 0x00000040u;
}
void GameResultSeat::clear_has_guo_shou_gang() {
  _has_bits_[0] &= ~0x00000040u;
}
void GameResultSeat::clear_guo_shou_gang() {
  guo_shou_gang_ = 0u;
  clear_has_guo_shou_gang();
}
 ::google::protobuf::uint32 GameResultSeat::guo_shou_gang() const {
  // @@protoc_insertion_point(field_get:msg_maj.GameResultSeat.guo_shou_gang)
  return guo_shou_gang_;
}
 void GameResultSeat::set_guo_shou_gang(::google::protobuf::uint32 value) {
  set_has_guo_shou_gang();
  guo_shou_gang_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.GameResultSeat.guo_shou_gang)
}

// optional .msg_maj.HuInfo hu_info = 8;
bool GameResultSeat::has_hu_info() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void GameResultSeat::set_has_hu_info() {
  _has_bits_[0] |= 0x00000080u;
}
void GameResultSeat::clear_has_hu_info() {
  _has_bits_[0] &= ~0x00000080u;
}
void GameResultSeat::clear_hu_info() {
  if (hu_info_ != NULL) hu_info_->::msg_maj::HuInfo::Clear();
  clear_has_hu_info();
}
const ::msg_maj::HuInfo& GameResultSeat::hu_info() const {
  // @@protoc_insertion_point(field_get:msg_maj.GameResultSeat.hu_info)
  return hu_info_ != NULL ? *hu_info_ : *default_instance_->hu_info_;
}
::msg_maj::HuInfo* GameResultSeat::mutable_hu_info() {
  set_has_hu_info();
  if (hu_info_ == NULL) {
    hu_info_ = new ::msg_maj::HuInfo;
  }
  // @@protoc_insertion_point(field_mutable:msg_maj.GameResultSeat.hu_info)
  return hu_info_;
}
::msg_maj::HuInfo* GameResultSeat::release_hu_info() {
  // @@protoc_insertion_point(field_release:msg_maj.GameResultSeat.hu_info)
  clear_has_hu_info();
  ::msg_maj::HuInfo* temp = hu_info_;
  hu_info_ = NULL;
  return temp;
}
void GameResultSeat::set_allocated_hu_info(::msg_maj::HuInfo* hu_info) {
  delete hu_info_;
  hu_info_ = hu_info;
  if (hu_info) {
    set_has_hu_info();
  } else {
    clear_has_hu_info();
  }
  // @@protoc_insertion_point(field_set_allocated:msg_maj.GameResultSeat.hu_info)
}

// optional uint32 hu_tile = 9;
bool GameResultSeat::has_hu_tile() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void GameResultSeat::set_has_hu_tile() {
  _has_bits_[0] |= 0x00000100u;
}
void GameResultSeat::clear_has_hu_tile() {
  _has_bits_[0] &= ~0x00000100u;
}
void GameResultSeat::clear_hu_tile() {
  hu_tile_ = 0u;
  clear_has_hu_tile();
}
 ::google::protobuf::uint32 GameResultSeat::hu_tile() const {
  // @@protoc_insertion_point(field_get:msg_maj.GameResultSeat.hu_tile)
  return hu_tile_;
}
 void GameResultSeat::set_hu_tile(::google::protobuf::uint32 value) {
  set_has_hu_tile();
  hu_tile_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.GameResultSeat.hu_tile)
}

// optional uint32 dingque = 10;
bool GameResultSeat::has_dingque() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void GameResultSeat::set_has_dingque() {
  _has_bits_[0] |= 0x00000200u;
}
void GameResultSeat::clear_has_dingque() {
  _has_bits_[0] &= ~0x00000200u;
}
void GameResultSeat::clear_dingque() {
  dingque_ = 0u;
  clear_has_dingque();
}
 ::google::protobuf::uint32 GameResultSeat::dingque() const {
  // @@protoc_insertion_point(field_get:msg_maj.GameResultSeat.dingque)
  return dingque_;
}
 void GameResultSeat::set_dingque(::google::protobuf::uint32 value) {
  set_has_dingque();
  dingque_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.GameResultSeat.dingque)
}

// repeated .msg_maj.ScoreDetail score_detail = 11;
int GameResultSeat::score_detail_size() const {
  return score_detail_.size();
}
void GameResultSeat::clear_score_detail() {
  score_detail_.Clear();
}
const ::msg_maj::ScoreDetail& GameResultSeat::score_detail(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.GameResultSeat.score_detail)
  return score_detail_.Get(index);
}
::msg_maj::ScoreDetail* GameResultSeat::mutable_score_detail(int index) {
  // @@protoc_insertion_point(field_mutable:msg_maj.GameResultSeat.score_detail)
  return score_detail_.Mutable(index);
}
::msg_maj::ScoreDetail* GameResultSeat::add_score_detail() {
  // @@protoc_insertion_point(field_add:msg_maj.GameResultSeat.score_detail)
  return score_detail_.Add();
}
::google::protobuf::RepeatedPtrField< ::msg_maj::ScoreDetail >*
GameResultSeat::mutable_score_detail() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.GameResultSeat.score_detail)
  return &score_detail_;
}
const ::google::protobuf::RepeatedPtrField< ::msg_maj::ScoreDetail >&
GameResultSeat::score_detail() const {
  // @@protoc_insertion_point(field_list:msg_maj.GameResultSeat.score_detail)
  return score_detail_;
}

// optional uint32 game_type = 12;
bool GameResultSeat::has_game_type() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void GameResultSeat::set_has_game_type() {
  _has_bits_[0] |= 0x00000800u;
}
void GameResultSeat::clear_has_game_type() {
  _has_bits_[0] &= ~0x00000800u;
}
void GameResultSeat::clear_game_type() {
  game_type_ = 0u;
  clear_has_game_type();
}
 ::google::protobuf::uint32 GameResultSeat::game_type() const {
  // @@protoc_insertion_point(field_get:msg_maj.GameResultSeat.game_type)
  return game_type_;
}
 void GameResultSeat::set_game_type(::google::protobuf::uint32 value) {
  set_has_game_type();
  game_type_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.GameResultSeat.game_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HuDetail::kMySeatFieldNumber;
const int HuDetail::kHuSeatFieldNumber;
const int HuDetail::kDoedSeatFieldNumber;
const int HuDetail::kScoreFieldNumber;
const int HuDetail::kHuwayFieldNumber;
const int HuDetail::kHutypeFieldNumber;
const int HuDetail::kHumultiFieldNumber;
const int HuDetail::kHuTileFieldNumber;
const int HuDetail::kItem1FieldNumber;
const int HuDetail::kItem2FieldNumber;
const int HuDetail::kItem3FieldNumber;
const int HuDetail::kItem4FieldNumber;
const int HuDetail::kItem5FieldNumber;
const int HuDetail::kItem6FieldNumber;
const int HuDetail::kItem7FieldNumber;
const int HuDetail::kItem8FieldNumber;
const int HuDetail::kItem9FieldNumber;
const int HuDetail::kItem10FieldNumber;
const int HuDetail::kItem11FieldNumber;
const int HuDetail::kDoedmultiseatFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HuDetail::HuDetail()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.HuDetail)
}

void HuDetail::InitAsDefaultInstance() {
}

HuDetail::HuDetail(const HuDetail& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.HuDetail)
}

void HuDetail::SharedCtor() {
  _cached_size_ = 0;
  myseat_ = 0;
  huseat_ = 0;
  doedseat_ = 0;
  score_ = 0;
  huway_ = 0;
  hutype_ = 0;
  humulti_ = 0;
  hutile_ = 0u;
  item1_ = 0;
  item2_ = 0;
  item3_ = 0;
  item4_ = 0;
  item5_ = 0;
  item6_ = 0;
  item7_ = 0;
  item8_ = 0;
  item9_ = 0;
  item10_ = 0;
  item11_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HuDetail::~HuDetail() {
  // @@protoc_insertion_point(destructor:msg_maj.HuDetail)
  SharedDtor();
}

void HuDetail::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HuDetail::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HuDetail::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HuDetail_descriptor_;
}

const HuDetail& HuDetail::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmaj_2eproto();
  return *default_instance_;
}

HuDetail* HuDetail::default_instance_ = NULL;

HuDetail* HuDetail::New(::google::protobuf::Arena* arena) const {
  HuDetail* n = new HuDetail;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HuDetail::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.HuDetail)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(HuDetail, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<HuDetail*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(myseat_, hutile_);
  }
  if (_has_bits_[8 / 32] & 65280u) {
    ZR_(item1_, item8_);
  }
  if (_has_bits_[16 / 32] & 458752u) {
    ZR_(item9_, item10_);
    item11_ = 0;
  }

#undef ZR_HELPER_
#undef ZR_

  doedmultiseat_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool HuDetail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.HuDetail)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 mySeat = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &myseat_)));
          set_has_myseat();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_huSeat;
        break;
      }

      // optional int32 huSeat = 2;
      case 2: {
        if (tag == 16) {
         parse_huSeat:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &huseat_)));
          set_has_huseat();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_doedSeat;
        break;
      }

      // optional int32 doedSeat = 3;
      case 3: {
        if (tag == 24) {
         parse_doedSeat:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &doedseat_)));
          set_has_doedseat();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_score;
        break;
      }

      // optional int32 score = 4;
      case 4: {
        if (tag == 32) {
         parse_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &score_)));
          set_has_score();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_huway;
        break;
      }

      // optional int32 huway = 5;
      case 5: {
        if (tag == 40) {
         parse_huway:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &huway_)));
          set_has_huway();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_hutype;
        break;
      }

      // optional int32 hutype = 6;
      case 6: {
        if (tag == 48) {
         parse_hutype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hutype_)));
          set_has_hutype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_humulti;
        break;
      }

      // optional int32 humulti = 7;
      case 7: {
        if (tag == 56) {
         parse_humulti:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &humulti_)));
          set_has_humulti();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_huTile;
        break;
      }

      // optional uint32 huTile = 8;
      case 8: {
        if (tag == 64) {
         parse_huTile:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hutile_)));
          set_has_hutile();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_item1;
        break;
      }

      // optional int32 item1 = 9;
      case 9: {
        if (tag == 72) {
         parse_item1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item1_)));
          set_has_item1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_item2;
        break;
      }

      // optional int32 item2 = 10;
      case 10: {
        if (tag == 80) {
         parse_item2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item2_)));
          set_has_item2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_item3;
        break;
      }

      // optional int32 item3 = 11;
      case 11: {
        if (tag == 88) {
         parse_item3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item3_)));
          set_has_item3();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_item4;
        break;
      }

      // optional int32 item4 = 12;
      case 12: {
        if (tag == 96) {
         parse_item4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item4_)));
          set_has_item4();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_item5;
        break;
      }

      // optional int32 item5 = 13;
      case 13: {
        if (tag == 104) {
         parse_item5:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item5_)));
          set_has_item5();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_item6;
        break;
      }

      // optional int32 item6 = 14;
      case 14: {
        if (tag == 112) {
         parse_item6:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item6_)));
          set_has_item6();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_item7;
        break;
      }

      // optional int32 item7 = 15;
      case 15: {
        if (tag == 120) {
         parse_item7:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item7_)));
          set_has_item7();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_item8;
        break;
      }

      // optional int32 item8 = 16;
      case 16: {
        if (tag == 128) {
         parse_item8:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item8_)));
          set_has_item8();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_item9;
        break;
      }

      // optional int32 item9 = 17;
      case 17: {
        if (tag == 136) {
         parse_item9:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item9_)));
          set_has_item9();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(144)) goto parse_item10;
        break;
      }

      // optional int32 item10 = 18;
      case 18: {
        if (tag == 144) {
         parse_item10:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item10_)));
          set_has_item10();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(152)) goto parse_item11;
        break;
      }

      // optional int32 item11 = 19;
      case 19: {
        if (tag == 152) {
         parse_item11:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item11_)));
          set_has_item11();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(160)) goto parse_doedmultiseat;
        break;
      }

      // repeated int32 doedmultiseat = 20;
      case 20: {
        if (tag == 160) {
         parse_doedmultiseat:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 160, input, this->mutable_doedmultiseat())));
        } else if (tag == 162) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_doedmultiseat())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(160)) goto parse_doedmultiseat;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.HuDetail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.HuDetail)
  return false;
#undef DO_
}

void HuDetail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.HuDetail)
  // optional int32 mySeat = 1;
  if (has_myseat()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->myseat(), output);
  }

  // optional int32 huSeat = 2;
  if (has_huseat()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->huseat(), output);
  }

  // optional int32 doedSeat = 3;
  if (has_doedseat()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->doedseat(), output);
  }

  // optional int32 score = 4;
  if (has_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->score(), output);
  }

  // optional int32 huway = 5;
  if (has_huway()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->huway(), output);
  }

  // optional int32 hutype = 6;
  if (has_hutype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->hutype(), output);
  }

  // optional int32 humulti = 7;
  if (has_humulti()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->humulti(), output);
  }

  // optional uint32 huTile = 8;
  if (has_hutile()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->hutile(), output);
  }

  // optional int32 item1 = 9;
  if (has_item1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->item1(), output);
  }

  // optional int32 item2 = 10;
  if (has_item2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->item2(), output);
  }

  // optional int32 item3 = 11;
  if (has_item3()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->item3(), output);
  }

  // optional int32 item4 = 12;
  if (has_item4()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->item4(), output);
  }

  // optional int32 item5 = 13;
  if (has_item5()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->item5(), output);
  }

  // optional int32 item6 = 14;
  if (has_item6()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->item6(), output);
  }

  // optional int32 item7 = 15;
  if (has_item7()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->item7(), output);
  }

  // optional int32 item8 = 16;
  if (has_item8()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->item8(), output);
  }

  // optional int32 item9 = 17;
  if (has_item9()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->item9(), output);
  }

  // optional int32 item10 = 18;
  if (has_item10()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->item10(), output);
  }

  // optional int32 item11 = 19;
  if (has_item11()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->item11(), output);
  }

  // repeated int32 doedmultiseat = 20;
  for (int i = 0; i < this->doedmultiseat_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      20, this->doedmultiseat(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.HuDetail)
}

::google::protobuf::uint8* HuDetail::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.HuDetail)
  // optional int32 mySeat = 1;
  if (has_myseat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->myseat(), target);
  }

  // optional int32 huSeat = 2;
  if (has_huseat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->huseat(), target);
  }

  // optional int32 doedSeat = 3;
  if (has_doedseat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->doedseat(), target);
  }

  // optional int32 score = 4;
  if (has_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->score(), target);
  }

  // optional int32 huway = 5;
  if (has_huway()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->huway(), target);
  }

  // optional int32 hutype = 6;
  if (has_hutype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->hutype(), target);
  }

  // optional int32 humulti = 7;
  if (has_humulti()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->humulti(), target);
  }

  // optional uint32 huTile = 8;
  if (has_hutile()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->hutile(), target);
  }

  // optional int32 item1 = 9;
  if (has_item1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->item1(), target);
  }

  // optional int32 item2 = 10;
  if (has_item2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->item2(), target);
  }

  // optional int32 item3 = 11;
  if (has_item3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->item3(), target);
  }

  // optional int32 item4 = 12;
  if (has_item4()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->item4(), target);
  }

  // optional int32 item5 = 13;
  if (has_item5()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->item5(), target);
  }

  // optional int32 item6 = 14;
  if (has_item6()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->item6(), target);
  }

  // optional int32 item7 = 15;
  if (has_item7()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->item7(), target);
  }

  // optional int32 item8 = 16;
  if (has_item8()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->item8(), target);
  }

  // optional int32 item9 = 17;
  if (has_item9()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->item9(), target);
  }

  // optional int32 item10 = 18;
  if (has_item10()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->item10(), target);
  }

  // optional int32 item11 = 19;
  if (has_item11()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(19, this->item11(), target);
  }

  // repeated int32 doedmultiseat = 20;
  for (int i = 0; i < this->doedmultiseat_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(20, this->doedmultiseat(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.HuDetail)
  return target;
}

int HuDetail::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.HuDetail)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional int32 mySeat = 1;
    if (has_myseat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->myseat());
    }

    // optional int32 huSeat = 2;
    if (has_huseat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->huseat());
    }

    // optional int32 doedSeat = 3;
    if (has_doedseat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->doedseat());
    }

    // optional int32 score = 4;
    if (has_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->score());
    }

    // optional int32 huway = 5;
    if (has_huway()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->huway());
    }

    // optional int32 hutype = 6;
    if (has_hutype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hutype());
    }

    // optional int32 humulti = 7;
    if (has_humulti()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->humulti());
    }

    // optional uint32 huTile = 8;
    if (has_hutile()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hutile());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional int32 item1 = 9;
    if (has_item1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item1());
    }

    // optional int32 item2 = 10;
    if (has_item2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item2());
    }

    // optional int32 item3 = 11;
    if (has_item3()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item3());
    }

    // optional int32 item4 = 12;
    if (has_item4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item4());
    }

    // optional int32 item5 = 13;
    if (has_item5()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item5());
    }

    // optional int32 item6 = 14;
    if (has_item6()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item6());
    }

    // optional int32 item7 = 15;
    if (has_item7()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item7());
    }

    // optional int32 item8 = 16;
    if (has_item8()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item8());
    }

  }
  if (_has_bits_[16 / 32] & 458752u) {
    // optional int32 item9 = 17;
    if (has_item9()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item9());
    }

    // optional int32 item10 = 18;
    if (has_item10()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item10());
    }

    // optional int32 item11 = 19;
    if (has_item11()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item11());
    }

  }
  // repeated int32 doedmultiseat = 20;
  {
    int data_size = 0;
    for (int i = 0; i < this->doedmultiseat_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->doedmultiseat(i));
    }
    total_size += 2 * this->doedmultiseat_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HuDetail::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.HuDetail)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const HuDetail* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const HuDetail>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.HuDetail)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.HuDetail)
    MergeFrom(*source);
  }
}

void HuDetail::MergeFrom(const HuDetail& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.HuDetail)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  doedmultiseat_.MergeFrom(from.doedmultiseat_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_myseat()) {
      set_myseat(from.myseat());
    }
    if (from.has_huseat()) {
      set_huseat(from.huseat());
    }
    if (from.has_doedseat()) {
      set_doedseat(from.doedseat());
    }
    if (from.has_score()) {
      set_score(from.score());
    }
    if (from.has_huway()) {
      set_huway(from.huway());
    }
    if (from.has_hutype()) {
      set_hutype(from.hutype());
    }
    if (from.has_humulti()) {
      set_humulti(from.humulti());
    }
    if (from.has_hutile()) {
      set_hutile(from.hutile());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_item1()) {
      set_item1(from.item1());
    }
    if (from.has_item2()) {
      set_item2(from.item2());
    }
    if (from.has_item3()) {
      set_item3(from.item3());
    }
    if (from.has_item4()) {
      set_item4(from.item4());
    }
    if (from.has_item5()) {
      set_item5(from.item5());
    }
    if (from.has_item6()) {
      set_item6(from.item6());
    }
    if (from.has_item7()) {
      set_item7(from.item7());
    }
    if (from.has_item8()) {
      set_item8(from.item8());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_item9()) {
      set_item9(from.item9());
    }
    if (from.has_item10()) {
      set_item10(from.item10());
    }
    if (from.has_item11()) {
      set_item11(from.item11());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void HuDetail::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.HuDetail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HuDetail::CopyFrom(const HuDetail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.HuDetail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HuDetail::IsInitialized() const {

  return true;
}

void HuDetail::Swap(HuDetail* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HuDetail::InternalSwap(HuDetail* other) {
  std::swap(myseat_, other->myseat_);
  std::swap(huseat_, other->huseat_);
  std::swap(doedseat_, other->doedseat_);
  std::swap(score_, other->score_);
  std::swap(huway_, other->huway_);
  std::swap(hutype_, other->hutype_);
  std::swap(humulti_, other->humulti_);
  std::swap(hutile_, other->hutile_);
  std::swap(item1_, other->item1_);
  std::swap(item2_, other->item2_);
  std::swap(item3_, other->item3_);
  std::swap(item4_, other->item4_);
  std::swap(item5_, other->item5_);
  std::swap(item6_, other->item6_);
  std::swap(item7_, other->item7_);
  std::swap(item8_, other->item8_);
  std::swap(item9_, other->item9_);
  std::swap(item10_, other->item10_);
  std::swap(item11_, other->item11_);
  doedmultiseat_.UnsafeArenaSwap(&other->doedmultiseat_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HuDetail::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HuDetail_descriptor_;
  metadata.reflection = HuDetail_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HuDetail

// optional int32 mySeat = 1;
bool HuDetail::has_myseat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void HuDetail::set_has_myseat() {
  _has_bits_[0] |= 0x00000001u;
}
void HuDetail::clear_has_myseat() {
  _has_bits_[0] &= ~0x00000001u;
}
void HuDetail::clear_myseat() {
  myseat_ = 0;
  clear_has_myseat();
}
 ::google::protobuf::int32 HuDetail::myseat() const {
  // @@protoc_insertion_point(field_get:msg_maj.HuDetail.mySeat)
  return myseat_;
}
 void HuDetail::set_myseat(::google::protobuf::int32 value) {
  set_has_myseat();
  myseat_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.HuDetail.mySeat)
}

// optional int32 huSeat = 2;
bool HuDetail::has_huseat() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void HuDetail::set_has_huseat() {
  _has_bits_[0] |= 0x00000002u;
}
void HuDetail::clear_has_huseat() {
  _has_bits_[0] &= ~0x00000002u;
}
void HuDetail::clear_huseat() {
  huseat_ = 0;
  clear_has_huseat();
}
 ::google::protobuf::int32 HuDetail::huseat() const {
  // @@protoc_insertion_point(field_get:msg_maj.HuDetail.huSeat)
  return huseat_;
}
 void HuDetail::set_huseat(::google::protobuf::int32 value) {
  set_has_huseat();
  huseat_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.HuDetail.huSeat)
}

// optional int32 doedSeat = 3;
bool HuDetail::has_doedseat() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void HuDetail::set_has_doedseat() {
  _has_bits_[0] |= 0x00000004u;
}
void HuDetail::clear_has_doedseat() {
  _has_bits_[0] &= ~0x00000004u;
}
void HuDetail::clear_doedseat() {
  doedseat_ = 0;
  clear_has_doedseat();
}
 ::google::protobuf::int32 HuDetail::doedseat() const {
  // @@protoc_insertion_point(field_get:msg_maj.HuDetail.doedSeat)
  return doedseat_;
}
 void HuDetail::set_doedseat(::google::protobuf::int32 value) {
  set_has_doedseat();
  doedseat_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.HuDetail.doedSeat)
}

// optional int32 score = 4;
bool HuDetail::has_score() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void HuDetail::set_has_score() {
  _has_bits_[0] |= 0x00000008u;
}
void HuDetail::clear_has_score() {
  _has_bits_[0] &= ~0x00000008u;
}
void HuDetail::clear_score() {
  score_ = 0;
  clear_has_score();
}
 ::google::protobuf::int32 HuDetail::score() const {
  // @@protoc_insertion_point(field_get:msg_maj.HuDetail.score)
  return score_;
}
 void HuDetail::set_score(::google::protobuf::int32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.HuDetail.score)
}

// optional int32 huway = 5;
bool HuDetail::has_huway() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void HuDetail::set_has_huway() {
  _has_bits_[0] |= 0x00000010u;
}
void HuDetail::clear_has_huway() {
  _has_bits_[0] &= ~0x00000010u;
}
void HuDetail::clear_huway() {
  huway_ = 0;
  clear_has_huway();
}
 ::google::protobuf::int32 HuDetail::huway() const {
  // @@protoc_insertion_point(field_get:msg_maj.HuDetail.huway)
  return huway_;
}
 void HuDetail::set_huway(::google::protobuf::int32 value) {
  set_has_huway();
  huway_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.HuDetail.huway)
}

// optional int32 hutype = 6;
bool HuDetail::has_hutype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void HuDetail::set_has_hutype() {
  _has_bits_[0] |= 0x00000020u;
}
void HuDetail::clear_has_hutype() {
  _has_bits_[0] &= ~0x00000020u;
}
void HuDetail::clear_hutype() {
  hutype_ = 0;
  clear_has_hutype();
}
 ::google::protobuf::int32 HuDetail::hutype() const {
  // @@protoc_insertion_point(field_get:msg_maj.HuDetail.hutype)
  return hutype_;
}
 void HuDetail::set_hutype(::google::protobuf::int32 value) {
  set_has_hutype();
  hutype_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.HuDetail.hutype)
}

// optional int32 humulti = 7;
bool HuDetail::has_humulti() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void HuDetail::set_has_humulti() {
  _has_bits_[0] |= 0x00000040u;
}
void HuDetail::clear_has_humulti() {
  _has_bits_[0] &= ~0x00000040u;
}
void HuDetail::clear_humulti() {
  humulti_ = 0;
  clear_has_humulti();
}
 ::google::protobuf::int32 HuDetail::humulti() const {
  // @@protoc_insertion_point(field_get:msg_maj.HuDetail.humulti)
  return humulti_;
}
 void HuDetail::set_humulti(::google::protobuf::int32 value) {
  set_has_humulti();
  humulti_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.HuDetail.humulti)
}

// optional uint32 huTile = 8;
bool HuDetail::has_hutile() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void HuDetail::set_has_hutile() {
  _has_bits_[0] |= 0x00000080u;
}
void HuDetail::clear_has_hutile() {
  _has_bits_[0] &= ~0x00000080u;
}
void HuDetail::clear_hutile() {
  hutile_ = 0u;
  clear_has_hutile();
}
 ::google::protobuf::uint32 HuDetail::hutile() const {
  // @@protoc_insertion_point(field_get:msg_maj.HuDetail.huTile)
  return hutile_;
}
 void HuDetail::set_hutile(::google::protobuf::uint32 value) {
  set_has_hutile();
  hutile_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.HuDetail.huTile)
}

// optional int32 item1 = 9;
bool HuDetail::has_item1() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void HuDetail::set_has_item1() {
  _has_bits_[0] |= 0x00000100u;
}
void HuDetail::clear_has_item1() {
  _has_bits_[0] &= ~0x00000100u;
}
void HuDetail::clear_item1() {
  item1_ = 0;
  clear_has_item1();
}
 ::google::protobuf::int32 HuDetail::item1() const {
  // @@protoc_insertion_point(field_get:msg_maj.HuDetail.item1)
  return item1_;
}
 void HuDetail::set_item1(::google::protobuf::int32 value) {
  set_has_item1();
  item1_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.HuDetail.item1)
}

// optional int32 item2 = 10;
bool HuDetail::has_item2() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void HuDetail::set_has_item2() {
  _has_bits_[0] |= 0x00000200u;
}
void HuDetail::clear_has_item2() {
  _has_bits_[0] &= ~0x00000200u;
}
void HuDetail::clear_item2() {
  item2_ = 0;
  clear_has_item2();
}
 ::google::protobuf::int32 HuDetail::item2() const {
  // @@protoc_insertion_point(field_get:msg_maj.HuDetail.item2)
  return item2_;
}
 void HuDetail::set_item2(::google::protobuf::int32 value) {
  set_has_item2();
  item2_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.HuDetail.item2)
}

// optional int32 item3 = 11;
bool HuDetail::has_item3() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void HuDetail::set_has_item3() {
  _has_bits_[0] |= 0x00000400u;
}
void HuDetail::clear_has_item3() {
  _has_bits_[0] &= ~0x00000400u;
}
void HuDetail::clear_item3() {
  item3_ = 0;
  clear_has_item3();
}
 ::google::protobuf::int32 HuDetail::item3() const {
  // @@protoc_insertion_point(field_get:msg_maj.HuDetail.item3)
  return item3_;
}
 void HuDetail::set_item3(::google::protobuf::int32 value) {
  set_has_item3();
  item3_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.HuDetail.item3)
}

// optional int32 item4 = 12;
bool HuDetail::has_item4() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void HuDetail::set_has_item4() {
  _has_bits_[0] |= 0x00000800u;
}
void HuDetail::clear_has_item4() {
  _has_bits_[0] &= ~0x00000800u;
}
void HuDetail::clear_item4() {
  item4_ = 0;
  clear_has_item4();
}
 ::google::protobuf::int32 HuDetail::item4() const {
  // @@protoc_insertion_point(field_get:msg_maj.HuDetail.item4)
  return item4_;
}
 void HuDetail::set_item4(::google::protobuf::int32 value) {
  set_has_item4();
  item4_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.HuDetail.item4)
}

// optional int32 item5 = 13;
bool HuDetail::has_item5() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void HuDetail::set_has_item5() {
  _has_bits_[0] |= 0x00001000u;
}
void HuDetail::clear_has_item5() {
  _has_bits_[0] &= ~0x00001000u;
}
void HuDetail::clear_item5() {
  item5_ = 0;
  clear_has_item5();
}
 ::google::protobuf::int32 HuDetail::item5() const {
  // @@protoc_insertion_point(field_get:msg_maj.HuDetail.item5)
  return item5_;
}
 void HuDetail::set_item5(::google::protobuf::int32 value) {
  set_has_item5();
  item5_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.HuDetail.item5)
}

// optional int32 item6 = 14;
bool HuDetail::has_item6() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void HuDetail::set_has_item6() {
  _has_bits_[0] |= 0x00002000u;
}
void HuDetail::clear_has_item6() {
  _has_bits_[0] &= ~0x00002000u;
}
void HuDetail::clear_item6() {
  item6_ = 0;
  clear_has_item6();
}
 ::google::protobuf::int32 HuDetail::item6() const {
  // @@protoc_insertion_point(field_get:msg_maj.HuDetail.item6)
  return item6_;
}
 void HuDetail::set_item6(::google::protobuf::int32 value) {
  set_has_item6();
  item6_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.HuDetail.item6)
}

// optional int32 item7 = 15;
bool HuDetail::has_item7() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void HuDetail::set_has_item7() {
  _has_bits_[0] |= 0x00004000u;
}
void HuDetail::clear_has_item7() {
  _has_bits_[0] &= ~0x00004000u;
}
void HuDetail::clear_item7() {
  item7_ = 0;
  clear_has_item7();
}
 ::google::protobuf::int32 HuDetail::item7() const {
  // @@protoc_insertion_point(field_get:msg_maj.HuDetail.item7)
  return item7_;
}
 void HuDetail::set_item7(::google::protobuf::int32 value) {
  set_has_item7();
  item7_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.HuDetail.item7)
}

// optional int32 item8 = 16;
bool HuDetail::has_item8() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void HuDetail::set_has_item8() {
  _has_bits_[0] |= 0x00008000u;
}
void HuDetail::clear_has_item8() {
  _has_bits_[0] &= ~0x00008000u;
}
void HuDetail::clear_item8() {
  item8_ = 0;
  clear_has_item8();
}
 ::google::protobuf::int32 HuDetail::item8() const {
  // @@protoc_insertion_point(field_get:msg_maj.HuDetail.item8)
  return item8_;
}
 void HuDetail::set_item8(::google::protobuf::int32 value) {
  set_has_item8();
  item8_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.HuDetail.item8)
}

// optional int32 item9 = 17;
bool HuDetail::has_item9() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void HuDetail::set_has_item9() {
  _has_bits_[0] |= 0x00010000u;
}
void HuDetail::clear_has_item9() {
  _has_bits_[0] &= ~0x00010000u;
}
void HuDetail::clear_item9() {
  item9_ = 0;
  clear_has_item9();
}
 ::google::protobuf::int32 HuDetail::item9() const {
  // @@protoc_insertion_point(field_get:msg_maj.HuDetail.item9)
  return item9_;
}
 void HuDetail::set_item9(::google::protobuf::int32 value) {
  set_has_item9();
  item9_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.HuDetail.item9)
}

// optional int32 item10 = 18;
bool HuDetail::has_item10() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void HuDetail::set_has_item10() {
  _has_bits_[0] |= 0x00020000u;
}
void HuDetail::clear_has_item10() {
  _has_bits_[0] &= ~0x00020000u;
}
void HuDetail::clear_item10() {
  item10_ = 0;
  clear_has_item10();
}
 ::google::protobuf::int32 HuDetail::item10() const {
  // @@protoc_insertion_point(field_get:msg_maj.HuDetail.item10)
  return item10_;
}
 void HuDetail::set_item10(::google::protobuf::int32 value) {
  set_has_item10();
  item10_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.HuDetail.item10)
}

// optional int32 item11 = 19;
bool HuDetail::has_item11() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
void HuDetail::set_has_item11() {
  _has_bits_[0] |= 0x00040000u;
}
void HuDetail::clear_has_item11() {
  _has_bits_[0] &= ~0x00040000u;
}
void HuDetail::clear_item11() {
  item11_ = 0;
  clear_has_item11();
}
 ::google::protobuf::int32 HuDetail::item11() const {
  // @@protoc_insertion_point(field_get:msg_maj.HuDetail.item11)
  return item11_;
}
 void HuDetail::set_item11(::google::protobuf::int32 value) {
  set_has_item11();
  item11_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.HuDetail.item11)
}

// repeated int32 doedmultiseat = 20;
int HuDetail::doedmultiseat_size() const {
  return doedmultiseat_.size();
}
void HuDetail::clear_doedmultiseat() {
  doedmultiseat_.Clear();
}
 ::google::protobuf::int32 HuDetail::doedmultiseat(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.HuDetail.doedmultiseat)
  return doedmultiseat_.Get(index);
}
 void HuDetail::set_doedmultiseat(int index, ::google::protobuf::int32 value) {
  doedmultiseat_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg_maj.HuDetail.doedmultiseat)
}
 void HuDetail::add_doedmultiseat(::google::protobuf::int32 value) {
  doedmultiseat_.Add(value);
  // @@protoc_insertion_point(field_add:msg_maj.HuDetail.doedmultiseat)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
HuDetail::doedmultiseat() const {
  // @@protoc_insertion_point(field_list:msg_maj.HuDetail.doedmultiseat)
  return doedmultiseat_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
HuDetail::mutable_doedmultiseat() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.HuDetail.doedmultiseat)
  return &doedmultiseat_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FengYuDetail::kMySeatFieldNumber;
const int FengYuDetail::kHuSeatFieldNumber;
const int FengYuDetail::kDoedSeatFieldNumber;
const int FengYuDetail::kScoreFieldNumber;
const int FengYuDetail::kFengYuTypeFieldNumber;
const int FengYuDetail::kDoedmultiseatFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FengYuDetail::FengYuDetail()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.FengYuDetail)
}

void FengYuDetail::InitAsDefaultInstance() {
}

FengYuDetail::FengYuDetail(const FengYuDetail& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.FengYuDetail)
}

void FengYuDetail::SharedCtor() {
  _cached_size_ = 0;
  myseat_ = 0;
  huseat_ = 0;
  doedseat_ = 0;
  score_ = 0;
  fengyutype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FengYuDetail::~FengYuDetail() {
  // @@protoc_insertion_point(destructor:msg_maj.FengYuDetail)
  SharedDtor();
}

void FengYuDetail::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FengYuDetail::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FengYuDetail::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FengYuDetail_descriptor_;
}

const FengYuDetail& FengYuDetail::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmaj_2eproto();
  return *default_instance_;
}

FengYuDetail* FengYuDetail::default_instance_ = NULL;

FengYuDetail* FengYuDetail::New(::google::protobuf::Arena* arena) const {
  FengYuDetail* n = new FengYuDetail;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FengYuDetail::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.FengYuDetail)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(FengYuDetail, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<FengYuDetail*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31u) {
    ZR_(myseat_, score_);
    fengyutype_ = 0;
  }

#undef ZR_HELPER_
#undef ZR_

  doedmultiseat_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool FengYuDetail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.FengYuDetail)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 mySeat = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &myseat_)));
          set_has_myseat();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_huSeat;
        break;
      }

      // optional int32 huSeat = 2;
      case 2: {
        if (tag == 16) {
         parse_huSeat:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &huseat_)));
          set_has_huseat();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_doedSeat;
        break;
      }

      // optional int32 doedSeat = 3;
      case 3: {
        if (tag == 24) {
         parse_doedSeat:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &doedseat_)));
          set_has_doedseat();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_score;
        break;
      }

      // optional int32 score = 4;
      case 4: {
        if (tag == 32) {
         parse_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &score_)));
          set_has_score();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_fengYuType;
        break;
      }

      // optional int32 fengYuType = 5;
      case 5: {
        if (tag == 40) {
         parse_fengYuType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fengyutype_)));
          set_has_fengyutype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_doedmultiseat;
        break;
      }

      // repeated int32 doedmultiseat = 6;
      case 6: {
        if (tag == 48) {
         parse_doedmultiseat:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 48, input, this->mutable_doedmultiseat())));
        } else if (tag == 50) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_doedmultiseat())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_doedmultiseat;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.FengYuDetail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.FengYuDetail)
  return false;
#undef DO_
}

void FengYuDetail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.FengYuDetail)
  // optional int32 mySeat = 1;
  if (has_myseat()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->myseat(), output);
  }

  // optional int32 huSeat = 2;
  if (has_huseat()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->huseat(), output);
  }

  // optional int32 doedSeat = 3;
  if (has_doedseat()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->doedseat(), output);
  }

  // optional int32 score = 4;
  if (has_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->score(), output);
  }

  // optional int32 fengYuType = 5;
  if (has_fengyutype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->fengyutype(), output);
  }

  // repeated int32 doedmultiseat = 6;
  for (int i = 0; i < this->doedmultiseat_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      6, this->doedmultiseat(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.FengYuDetail)
}

::google::protobuf::uint8* FengYuDetail::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.FengYuDetail)
  // optional int32 mySeat = 1;
  if (has_myseat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->myseat(), target);
  }

  // optional int32 huSeat = 2;
  if (has_huseat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->huseat(), target);
  }

  // optional int32 doedSeat = 3;
  if (has_doedseat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->doedseat(), target);
  }

  // optional int32 score = 4;
  if (has_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->score(), target);
  }

  // optional int32 fengYuType = 5;
  if (has_fengyutype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->fengyutype(), target);
  }

  // repeated int32 doedmultiseat = 6;
  for (int i = 0; i < this->doedmultiseat_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(6, this->doedmultiseat(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.FengYuDetail)
  return target;
}

int FengYuDetail::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.FengYuDetail)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 31u) {
    // optional int32 mySeat = 1;
    if (has_myseat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->myseat());
    }

    // optional int32 huSeat = 2;
    if (has_huseat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->huseat());
    }

    // optional int32 doedSeat = 3;
    if (has_doedseat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->doedseat());
    }

    // optional int32 score = 4;
    if (has_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->score());
    }

    // optional int32 fengYuType = 5;
    if (has_fengyutype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fengyutype());
    }

  }
  // repeated int32 doedmultiseat = 6;
  {
    int data_size = 0;
    for (int i = 0; i < this->doedmultiseat_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->doedmultiseat(i));
    }
    total_size += 1 * this->doedmultiseat_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FengYuDetail::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.FengYuDetail)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const FengYuDetail* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const FengYuDetail>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.FengYuDetail)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.FengYuDetail)
    MergeFrom(*source);
  }
}

void FengYuDetail::MergeFrom(const FengYuDetail& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.FengYuDetail)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  doedmultiseat_.MergeFrom(from.doedmultiseat_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_myseat()) {
      set_myseat(from.myseat());
    }
    if (from.has_huseat()) {
      set_huseat(from.huseat());
    }
    if (from.has_doedseat()) {
      set_doedseat(from.doedseat());
    }
    if (from.has_score()) {
      set_score(from.score());
    }
    if (from.has_fengyutype()) {
      set_fengyutype(from.fengyutype());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void FengYuDetail::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.FengYuDetail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FengYuDetail::CopyFrom(const FengYuDetail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.FengYuDetail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FengYuDetail::IsInitialized() const {

  return true;
}

void FengYuDetail::Swap(FengYuDetail* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FengYuDetail::InternalSwap(FengYuDetail* other) {
  std::swap(myseat_, other->myseat_);
  std::swap(huseat_, other->huseat_);
  std::swap(doedseat_, other->doedseat_);
  std::swap(score_, other->score_);
  std::swap(fengyutype_, other->fengyutype_);
  doedmultiseat_.UnsafeArenaSwap(&other->doedmultiseat_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FengYuDetail::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FengYuDetail_descriptor_;
  metadata.reflection = FengYuDetail_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FengYuDetail

// optional int32 mySeat = 1;
bool FengYuDetail::has_myseat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void FengYuDetail::set_has_myseat() {
  _has_bits_[0] |= 0x00000001u;
}
void FengYuDetail::clear_has_myseat() {
  _has_bits_[0] &= ~0x00000001u;
}
void FengYuDetail::clear_myseat() {
  myseat_ = 0;
  clear_has_myseat();
}
 ::google::protobuf::int32 FengYuDetail::myseat() const {
  // @@protoc_insertion_point(field_get:msg_maj.FengYuDetail.mySeat)
  return myseat_;
}
 void FengYuDetail::set_myseat(::google::protobuf::int32 value) {
  set_has_myseat();
  myseat_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.FengYuDetail.mySeat)
}

// optional int32 huSeat = 2;
bool FengYuDetail::has_huseat() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void FengYuDetail::set_has_huseat() {
  _has_bits_[0] |= 0x00000002u;
}
void FengYuDetail::clear_has_huseat() {
  _has_bits_[0] &= ~0x00000002u;
}
void FengYuDetail::clear_huseat() {
  huseat_ = 0;
  clear_has_huseat();
}
 ::google::protobuf::int32 FengYuDetail::huseat() const {
  // @@protoc_insertion_point(field_get:msg_maj.FengYuDetail.huSeat)
  return huseat_;
}
 void FengYuDetail::set_huseat(::google::protobuf::int32 value) {
  set_has_huseat();
  huseat_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.FengYuDetail.huSeat)
}

// optional int32 doedSeat = 3;
bool FengYuDetail::has_doedseat() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void FengYuDetail::set_has_doedseat() {
  _has_bits_[0] |= 0x00000004u;
}
void FengYuDetail::clear_has_doedseat() {
  _has_bits_[0] &= ~0x00000004u;
}
void FengYuDetail::clear_doedseat() {
  doedseat_ = 0;
  clear_has_doedseat();
}
 ::google::protobuf::int32 FengYuDetail::doedseat() const {
  // @@protoc_insertion_point(field_get:msg_maj.FengYuDetail.doedSeat)
  return doedseat_;
}
 void FengYuDetail::set_doedseat(::google::protobuf::int32 value) {
  set_has_doedseat();
  doedseat_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.FengYuDetail.doedSeat)
}

// optional int32 score = 4;
bool FengYuDetail::has_score() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void FengYuDetail::set_has_score() {
  _has_bits_[0] |= 0x00000008u;
}
void FengYuDetail::clear_has_score() {
  _has_bits_[0] &= ~0x00000008u;
}
void FengYuDetail::clear_score() {
  score_ = 0;
  clear_has_score();
}
 ::google::protobuf::int32 FengYuDetail::score() const {
  // @@protoc_insertion_point(field_get:msg_maj.FengYuDetail.score)
  return score_;
}
 void FengYuDetail::set_score(::google::protobuf::int32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.FengYuDetail.score)
}

// optional int32 fengYuType = 5;
bool FengYuDetail::has_fengyutype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void FengYuDetail::set_has_fengyutype() {
  _has_bits_[0] |= 0x00000010u;
}
void FengYuDetail::clear_has_fengyutype() {
  _has_bits_[0] &= ~0x00000010u;
}
void FengYuDetail::clear_fengyutype() {
  fengyutype_ = 0;
  clear_has_fengyutype();
}
 ::google::protobuf::int32 FengYuDetail::fengyutype() const {
  // @@protoc_insertion_point(field_get:msg_maj.FengYuDetail.fengYuType)
  return fengyutype_;
}
 void FengYuDetail::set_fengyutype(::google::protobuf::int32 value) {
  set_has_fengyutype();
  fengyutype_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.FengYuDetail.fengYuType)
}

// repeated int32 doedmultiseat = 6;
int FengYuDetail::doedmultiseat_size() const {
  return doedmultiseat_.size();
}
void FengYuDetail::clear_doedmultiseat() {
  doedmultiseat_.Clear();
}
 ::google::protobuf::int32 FengYuDetail::doedmultiseat(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.FengYuDetail.doedmultiseat)
  return doedmultiseat_.Get(index);
}
 void FengYuDetail::set_doedmultiseat(int index, ::google::protobuf::int32 value) {
  doedmultiseat_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg_maj.FengYuDetail.doedmultiseat)
}
 void FengYuDetail::add_doedmultiseat(::google::protobuf::int32 value) {
  doedmultiseat_.Add(value);
  // @@protoc_insertion_point(field_add:msg_maj.FengYuDetail.doedmultiseat)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
FengYuDetail::doedmultiseat() const {
  // @@protoc_insertion_point(field_list:msg_maj.FengYuDetail.doedmultiseat)
  return doedmultiseat_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
FengYuDetail::mutable_doedmultiseat() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.FengYuDetail.doedmultiseat)
  return &doedmultiseat_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HuaZhuDetail::kMySeatFieldNumber;
const int HuaZhuDetail::kHuSeatFieldNumber;
const int HuaZhuDetail::kDoedSeatFieldNumber;
const int HuaZhuDetail::kScoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HuaZhuDetail::HuaZhuDetail()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.HuaZhuDetail)
}

void HuaZhuDetail::InitAsDefaultInstance() {
}

HuaZhuDetail::HuaZhuDetail(const HuaZhuDetail& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.HuaZhuDetail)
}

void HuaZhuDetail::SharedCtor() {
  _cached_size_ = 0;
  myseat_ = 0;
  huseat_ = 0;
  doedseat_ = 0;
  score_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HuaZhuDetail::~HuaZhuDetail() {
  // @@protoc_insertion_point(destructor:msg_maj.HuaZhuDetail)
  SharedDtor();
}

void HuaZhuDetail::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HuaZhuDetail::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HuaZhuDetail::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HuaZhuDetail_descriptor_;
}

const HuaZhuDetail& HuaZhuDetail::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmaj_2eproto();
  return *default_instance_;
}

HuaZhuDetail* HuaZhuDetail::default_instance_ = NULL;

HuaZhuDetail* HuaZhuDetail::New(::google::protobuf::Arena* arena) const {
  HuaZhuDetail* n = new HuaZhuDetail;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HuaZhuDetail::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.HuaZhuDetail)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(HuaZhuDetail, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<HuaZhuDetail*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(myseat_, score_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool HuaZhuDetail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.HuaZhuDetail)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 mySeat = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &myseat_)));
          set_has_myseat();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_huSeat;
        break;
      }

      // optional int32 huSeat = 2;
      case 2: {
        if (tag == 16) {
         parse_huSeat:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &huseat_)));
          set_has_huseat();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_doedSeat;
        break;
      }

      // optional int32 doedSeat = 3;
      case 3: {
        if (tag == 24) {
         parse_doedSeat:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &doedseat_)));
          set_has_doedseat();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_score;
        break;
      }

      // optional int32 score = 4;
      case 4: {
        if (tag == 32) {
         parse_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &score_)));
          set_has_score();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.HuaZhuDetail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.HuaZhuDetail)
  return false;
#undef DO_
}

void HuaZhuDetail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.HuaZhuDetail)
  // optional int32 mySeat = 1;
  if (has_myseat()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->myseat(), output);
  }

  // optional int32 huSeat = 2;
  if (has_huseat()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->huseat(), output);
  }

  // optional int32 doedSeat = 3;
  if (has_doedseat()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->doedseat(), output);
  }

  // optional int32 score = 4;
  if (has_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->score(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.HuaZhuDetail)
}

::google::protobuf::uint8* HuaZhuDetail::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.HuaZhuDetail)
  // optional int32 mySeat = 1;
  if (has_myseat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->myseat(), target);
  }

  // optional int32 huSeat = 2;
  if (has_huseat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->huseat(), target);
  }

  // optional int32 doedSeat = 3;
  if (has_doedseat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->doedseat(), target);
  }

  // optional int32 score = 4;
  if (has_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->score(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.HuaZhuDetail)
  return target;
}

int HuaZhuDetail::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.HuaZhuDetail)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 15u) {
    // optional int32 mySeat = 1;
    if (has_myseat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->myseat());
    }

    // optional int32 huSeat = 2;
    if (has_huseat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->huseat());
    }

    // optional int32 doedSeat = 3;
    if (has_doedseat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->doedseat());
    }

    // optional int32 score = 4;
    if (has_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->score());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HuaZhuDetail::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.HuaZhuDetail)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const HuaZhuDetail* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const HuaZhuDetail>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.HuaZhuDetail)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.HuaZhuDetail)
    MergeFrom(*source);
  }
}

void HuaZhuDetail::MergeFrom(const HuaZhuDetail& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.HuaZhuDetail)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_myseat()) {
      set_myseat(from.myseat());
    }
    if (from.has_huseat()) {
      set_huseat(from.huseat());
    }
    if (from.has_doedseat()) {
      set_doedseat(from.doedseat());
    }
    if (from.has_score()) {
      set_score(from.score());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void HuaZhuDetail::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.HuaZhuDetail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HuaZhuDetail::CopyFrom(const HuaZhuDetail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.HuaZhuDetail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HuaZhuDetail::IsInitialized() const {

  return true;
}

void HuaZhuDetail::Swap(HuaZhuDetail* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HuaZhuDetail::InternalSwap(HuaZhuDetail* other) {
  std::swap(myseat_, other->myseat_);
  std::swap(huseat_, other->huseat_);
  std::swap(doedseat_, other->doedseat_);
  std::swap(score_, other->score_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HuaZhuDetail::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HuaZhuDetail_descriptor_;
  metadata.reflection = HuaZhuDetail_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HuaZhuDetail

// optional int32 mySeat = 1;
bool HuaZhuDetail::has_myseat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void HuaZhuDetail::set_has_myseat() {
  _has_bits_[0] |= 0x00000001u;
}
void HuaZhuDetail::clear_has_myseat() {
  _has_bits_[0] &= ~0x00000001u;
}
void HuaZhuDetail::clear_myseat() {
  myseat_ = 0;
  clear_has_myseat();
}
 ::google::protobuf::int32 HuaZhuDetail::myseat() const {
  // @@protoc_insertion_point(field_get:msg_maj.HuaZhuDetail.mySeat)
  return myseat_;
}
 void HuaZhuDetail::set_myseat(::google::protobuf::int32 value) {
  set_has_myseat();
  myseat_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.HuaZhuDetail.mySeat)
}

// optional int32 huSeat = 2;
bool HuaZhuDetail::has_huseat() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void HuaZhuDetail::set_has_huseat() {
  _has_bits_[0] |= 0x00000002u;
}
void HuaZhuDetail::clear_has_huseat() {
  _has_bits_[0] &= ~0x00000002u;
}
void HuaZhuDetail::clear_huseat() {
  huseat_ = 0;
  clear_has_huseat();
}
 ::google::protobuf::int32 HuaZhuDetail::huseat() const {
  // @@protoc_insertion_point(field_get:msg_maj.HuaZhuDetail.huSeat)
  return huseat_;
}
 void HuaZhuDetail::set_huseat(::google::protobuf::int32 value) {
  set_has_huseat();
  huseat_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.HuaZhuDetail.huSeat)
}

// optional int32 doedSeat = 3;
bool HuaZhuDetail::has_doedseat() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void HuaZhuDetail::set_has_doedseat() {
  _has_bits_[0] |= 0x00000004u;
}
void HuaZhuDetail::clear_has_doedseat() {
  _has_bits_[0] &= ~0x00000004u;
}
void HuaZhuDetail::clear_doedseat() {
  doedseat_ = 0;
  clear_has_doedseat();
}
 ::google::protobuf::int32 HuaZhuDetail::doedseat() const {
  // @@protoc_insertion_point(field_get:msg_maj.HuaZhuDetail.doedSeat)
  return doedseat_;
}
 void HuaZhuDetail::set_doedseat(::google::protobuf::int32 value) {
  set_has_doedseat();
  doedseat_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.HuaZhuDetail.doedSeat)
}

// optional int32 score = 4;
bool HuaZhuDetail::has_score() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void HuaZhuDetail::set_has_score() {
  _has_bits_[0] |= 0x00000008u;
}
void HuaZhuDetail::clear_has_score() {
  _has_bits_[0] &= ~0x00000008u;
}
void HuaZhuDetail::clear_score() {
  score_ = 0;
  clear_has_score();
}
 ::google::protobuf::int32 HuaZhuDetail::score() const {
  // @@protoc_insertion_point(field_get:msg_maj.HuaZhuDetail.score)
  return score_;
}
 void HuaZhuDetail::set_score(::google::protobuf::int32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.HuaZhuDetail.score)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DaJiaoDetail::kMySeatFieldNumber;
const int DaJiaoDetail::kHuSeatFieldNumber;
const int DaJiaoDetail::kDoedSeatFieldNumber;
const int DaJiaoDetail::kScoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DaJiaoDetail::DaJiaoDetail()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.DaJiaoDetail)
}

void DaJiaoDetail::InitAsDefaultInstance() {
}

DaJiaoDetail::DaJiaoDetail(const DaJiaoDetail& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.DaJiaoDetail)
}

void DaJiaoDetail::SharedCtor() {
  _cached_size_ = 0;
  myseat_ = 0;
  huseat_ = 0;
  doedseat_ = 0;
  score_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DaJiaoDetail::~DaJiaoDetail() {
  // @@protoc_insertion_point(destructor:msg_maj.DaJiaoDetail)
  SharedDtor();
}

void DaJiaoDetail::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DaJiaoDetail::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DaJiaoDetail::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DaJiaoDetail_descriptor_;
}

const DaJiaoDetail& DaJiaoDetail::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmaj_2eproto();
  return *default_instance_;
}

DaJiaoDetail* DaJiaoDetail::default_instance_ = NULL;

DaJiaoDetail* DaJiaoDetail::New(::google::protobuf::Arena* arena) const {
  DaJiaoDetail* n = new DaJiaoDetail;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DaJiaoDetail::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.DaJiaoDetail)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(DaJiaoDetail, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<DaJiaoDetail*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(myseat_, score_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DaJiaoDetail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.DaJiaoDetail)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 mySeat = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &myseat_)));
          set_has_myseat();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_huSeat;
        break;
      }

      // optional int32 huSeat = 2;
      case 2: {
        if (tag == 16) {
         parse_huSeat:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &huseat_)));
          set_has_huseat();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_doedSeat;
        break;
      }

      // optional int32 doedSeat = 3;
      case 3: {
        if (tag == 24) {
         parse_doedSeat:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &doedseat_)));
          set_has_doedseat();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_score;
        break;
      }

      // optional int32 score = 4;
      case 4: {
        if (tag == 32) {
         parse_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &score_)));
          set_has_score();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.DaJiaoDetail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.DaJiaoDetail)
  return false;
#undef DO_
}

void DaJiaoDetail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.DaJiaoDetail)
  // optional int32 mySeat = 1;
  if (has_myseat()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->myseat(), output);
  }

  // optional int32 huSeat = 2;
  if (has_huseat()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->huseat(), output);
  }

  // optional int32 doedSeat = 3;
  if (has_doedseat()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->doedseat(), output);
  }

  // optional int32 score = 4;
  if (has_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->score(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.DaJiaoDetail)
}

::google::protobuf::uint8* DaJiaoDetail::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.DaJiaoDetail)
  // optional int32 mySeat = 1;
  if (has_myseat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->myseat(), target);
  }

  // optional int32 huSeat = 2;
  if (has_huseat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->huseat(), target);
  }

  // optional int32 doedSeat = 3;
  if (has_doedseat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->doedseat(), target);
  }

  // optional int32 score = 4;
  if (has_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->score(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.DaJiaoDetail)
  return target;
}

int DaJiaoDetail::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.DaJiaoDetail)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 15u) {
    // optional int32 mySeat = 1;
    if (has_myseat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->myseat());
    }

    // optional int32 huSeat = 2;
    if (has_huseat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->huseat());
    }

    // optional int32 doedSeat = 3;
    if (has_doedseat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->doedseat());
    }

    // optional int32 score = 4;
    if (has_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->score());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DaJiaoDetail::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.DaJiaoDetail)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DaJiaoDetail* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DaJiaoDetail>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.DaJiaoDetail)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.DaJiaoDetail)
    MergeFrom(*source);
  }
}

void DaJiaoDetail::MergeFrom(const DaJiaoDetail& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.DaJiaoDetail)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_myseat()) {
      set_myseat(from.myseat());
    }
    if (from.has_huseat()) {
      set_huseat(from.huseat());
    }
    if (from.has_doedseat()) {
      set_doedseat(from.doedseat());
    }
    if (from.has_score()) {
      set_score(from.score());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void DaJiaoDetail::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.DaJiaoDetail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DaJiaoDetail::CopyFrom(const DaJiaoDetail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.DaJiaoDetail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DaJiaoDetail::IsInitialized() const {

  return true;
}

void DaJiaoDetail::Swap(DaJiaoDetail* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DaJiaoDetail::InternalSwap(DaJiaoDetail* other) {
  std::swap(myseat_, other->myseat_);
  std::swap(huseat_, other->huseat_);
  std::swap(doedseat_, other->doedseat_);
  std::swap(score_, other->score_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DaJiaoDetail::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DaJiaoDetail_descriptor_;
  metadata.reflection = DaJiaoDetail_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DaJiaoDetail

// optional int32 mySeat = 1;
bool DaJiaoDetail::has_myseat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DaJiaoDetail::set_has_myseat() {
  _has_bits_[0] |= 0x00000001u;
}
void DaJiaoDetail::clear_has_myseat() {
  _has_bits_[0] &= ~0x00000001u;
}
void DaJiaoDetail::clear_myseat() {
  myseat_ = 0;
  clear_has_myseat();
}
 ::google::protobuf::int32 DaJiaoDetail::myseat() const {
  // @@protoc_insertion_point(field_get:msg_maj.DaJiaoDetail.mySeat)
  return myseat_;
}
 void DaJiaoDetail::set_myseat(::google::protobuf::int32 value) {
  set_has_myseat();
  myseat_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.DaJiaoDetail.mySeat)
}

// optional int32 huSeat = 2;
bool DaJiaoDetail::has_huseat() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DaJiaoDetail::set_has_huseat() {
  _has_bits_[0] |= 0x00000002u;
}
void DaJiaoDetail::clear_has_huseat() {
  _has_bits_[0] &= ~0x00000002u;
}
void DaJiaoDetail::clear_huseat() {
  huseat_ = 0;
  clear_has_huseat();
}
 ::google::protobuf::int32 DaJiaoDetail::huseat() const {
  // @@protoc_insertion_point(field_get:msg_maj.DaJiaoDetail.huSeat)
  return huseat_;
}
 void DaJiaoDetail::set_huseat(::google::protobuf::int32 value) {
  set_has_huseat();
  huseat_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.DaJiaoDetail.huSeat)
}

// optional int32 doedSeat = 3;
bool DaJiaoDetail::has_doedseat() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void DaJiaoDetail::set_has_doedseat() {
  _has_bits_[0] |= 0x00000004u;
}
void DaJiaoDetail::clear_has_doedseat() {
  _has_bits_[0] &= ~0x00000004u;
}
void DaJiaoDetail::clear_doedseat() {
  doedseat_ = 0;
  clear_has_doedseat();
}
 ::google::protobuf::int32 DaJiaoDetail::doedseat() const {
  // @@protoc_insertion_point(field_get:msg_maj.DaJiaoDetail.doedSeat)
  return doedseat_;
}
 void DaJiaoDetail::set_doedseat(::google::protobuf::int32 value) {
  set_has_doedseat();
  doedseat_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.DaJiaoDetail.doedSeat)
}

// optional int32 score = 4;
bool DaJiaoDetail::has_score() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void DaJiaoDetail::set_has_score() {
  _has_bits_[0] |= 0x00000008u;
}
void DaJiaoDetail::clear_has_score() {
  _has_bits_[0] &= ~0x00000008u;
}
void DaJiaoDetail::clear_score() {
  score_ = 0;
  clear_has_score();
}
 ::google::protobuf::int32 DaJiaoDetail::score() const {
  // @@protoc_insertion_point(field_get:msg_maj.DaJiaoDetail.score)
  return score_;
}
 void DaJiaoDetail::set_score(::google::protobuf::int32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.DaJiaoDetail.score)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScoreDetail::kTypeFieldNumber;
const int ScoreDetail::kHuFieldNumber;
const int ScoreDetail::kFengyuFieldNumber;
const int ScoreDetail::kHuazhuFieldNumber;
const int ScoreDetail::kDajiaoFieldNumber;
const int ScoreDetail::kBacktaxFieldNumber;
const int ScoreDetail::kHujzyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScoreDetail::ScoreDetail()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.ScoreDetail)
}

void ScoreDetail::InitAsDefaultInstance() {
  hu_ = const_cast< ::msg_maj::HuDetail*>(&::msg_maj::HuDetail::default_instance());
  fengyu_ = const_cast< ::msg_maj::FengYuDetail*>(&::msg_maj::FengYuDetail::default_instance());
  huazhu_ = const_cast< ::msg_maj::HuaZhuDetail*>(&::msg_maj::HuaZhuDetail::default_instance());
  dajiao_ = const_cast< ::msg_maj::DaJiaoDetail*>(&::msg_maj::DaJiaoDetail::default_instance());
}

ScoreDetail::ScoreDetail(const ScoreDetail& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.ScoreDetail)
}

void ScoreDetail::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  hu_ = NULL;
  fengyu_ = NULL;
  huazhu_ = NULL;
  dajiao_ = NULL;
  backtax_ = 0;
  hujzy_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ScoreDetail::~ScoreDetail() {
  // @@protoc_insertion_point(destructor:msg_maj.ScoreDetail)
  SharedDtor();
}

void ScoreDetail::SharedDtor() {
  if (this != default_instance_) {
    delete hu_;
    delete fengyu_;
    delete huazhu_;
    delete dajiao_;
  }
}

void ScoreDetail::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ScoreDetail::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ScoreDetail_descriptor_;
}

const ScoreDetail& ScoreDetail::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmaj_2eproto();
  return *default_instance_;
}

ScoreDetail* ScoreDetail::default_instance_ = NULL;

ScoreDetail* ScoreDetail::New(::google::protobuf::Arena* arena) const {
  ScoreDetail* n = new ScoreDetail;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ScoreDetail::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.ScoreDetail)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ScoreDetail, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ScoreDetail*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 127u) {
    ZR_(type_, backtax_);
    if (has_hu()) {
      if (hu_ != NULL) hu_->::msg_maj::HuDetail::Clear();
    }
    if (has_fengyu()) {
      if (fengyu_ != NULL) fengyu_->::msg_maj::FengYuDetail::Clear();
    }
    if (has_huazhu()) {
      if (huazhu_ != NULL) huazhu_->::msg_maj::HuaZhuDetail::Clear();
    }
    if (has_dajiao()) {
      if (dajiao_ != NULL) dajiao_->::msg_maj::DaJiaoDetail::Clear();
    }
    hujzy_ = 0;
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ScoreDetail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.ScoreDetail)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_hu;
        break;
      }

      // optional .msg_maj.HuDetail hu = 2;
      case 2: {
        if (tag == 18) {
         parse_hu:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hu()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_fengyu;
        break;
      }

      // optional .msg_maj.FengYuDetail fengyu = 3;
      case 3: {
        if (tag == 26) {
         parse_fengyu:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_fengyu()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_huazhu;
        break;
      }

      // optional .msg_maj.HuaZhuDetail huazhu = 4;
      case 4: {
        if (tag == 34) {
         parse_huazhu:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_huazhu()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_dajiao;
        break;
      }

      // optional .msg_maj.DaJiaoDetail dajiao = 5;
      case 5: {
        if (tag == 42) {
         parse_dajiao:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dajiao()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_backtax;
        break;
      }

      // optional int32 backtax = 6;
      case 6: {
        if (tag == 48) {
         parse_backtax:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &backtax_)));
          set_has_backtax();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_hujzy;
        break;
      }

      // optional int32 hujzy = 7;
      case 7: {
        if (tag == 56) {
         parse_hujzy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hujzy_)));
          set_has_hujzy();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.ScoreDetail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.ScoreDetail)
  return false;
#undef DO_
}

void ScoreDetail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.ScoreDetail)
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // optional .msg_maj.HuDetail hu = 2;
  if (has_hu()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->hu_, output);
  }

  // optional .msg_maj.FengYuDetail fengyu = 3;
  if (has_fengyu()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->fengyu_, output);
  }

  // optional .msg_maj.HuaZhuDetail huazhu = 4;
  if (has_huazhu()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->huazhu_, output);
  }

  // optional .msg_maj.DaJiaoDetail dajiao = 5;
  if (has_dajiao()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->dajiao_, output);
  }

  // optional int32 backtax = 6;
  if (has_backtax()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->backtax(), output);
  }

  // optional int32 hujzy = 7;
  if (has_hujzy()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->hujzy(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.ScoreDetail)
}

::google::protobuf::uint8* ScoreDetail::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.ScoreDetail)
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // optional .msg_maj.HuDetail hu = 2;
  if (has_hu()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->hu_, false, target);
  }

  // optional .msg_maj.FengYuDetail fengyu = 3;
  if (has_fengyu()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->fengyu_, false, target);
  }

  // optional .msg_maj.HuaZhuDetail huazhu = 4;
  if (has_huazhu()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->huazhu_, false, target);
  }

  // optional .msg_maj.DaJiaoDetail dajiao = 5;
  if (has_dajiao()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->dajiao_, false, target);
  }

  // optional int32 backtax = 6;
  if (has_backtax()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->backtax(), target);
  }

  // optional int32 hujzy = 7;
  if (has_hujzy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->hujzy(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.ScoreDetail)
  return target;
}

int ScoreDetail::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.ScoreDetail)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 127u) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional .msg_maj.HuDetail hu = 2;
    if (has_hu()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->hu_);
    }

    // optional .msg_maj.FengYuDetail fengyu = 3;
    if (has_fengyu()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->fengyu_);
    }

    // optional .msg_maj.HuaZhuDetail huazhu = 4;
    if (has_huazhu()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->huazhu_);
    }

    // optional .msg_maj.DaJiaoDetail dajiao = 5;
    if (has_dajiao()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->dajiao_);
    }

    // optional int32 backtax = 6;
    if (has_backtax()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->backtax());
    }

    // optional int32 hujzy = 7;
    if (has_hujzy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hujzy());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ScoreDetail::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.ScoreDetail)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ScoreDetail* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ScoreDetail>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.ScoreDetail)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.ScoreDetail)
    MergeFrom(*source);
  }
}

void ScoreDetail::MergeFrom(const ScoreDetail& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.ScoreDetail)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_hu()) {
      mutable_hu()->::msg_maj::HuDetail::MergeFrom(from.hu());
    }
    if (from.has_fengyu()) {
      mutable_fengyu()->::msg_maj::FengYuDetail::MergeFrom(from.fengyu());
    }
    if (from.has_huazhu()) {
      mutable_huazhu()->::msg_maj::HuaZhuDetail::MergeFrom(from.huazhu());
    }
    if (from.has_dajiao()) {
      mutable_dajiao()->::msg_maj::DaJiaoDetail::MergeFrom(from.dajiao());
    }
    if (from.has_backtax()) {
      set_backtax(from.backtax());
    }
    if (from.has_hujzy()) {
      set_hujzy(from.hujzy());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ScoreDetail::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.ScoreDetail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScoreDetail::CopyFrom(const ScoreDetail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.ScoreDetail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScoreDetail::IsInitialized() const {

  return true;
}

void ScoreDetail::Swap(ScoreDetail* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScoreDetail::InternalSwap(ScoreDetail* other) {
  std::swap(type_, other->type_);
  std::swap(hu_, other->hu_);
  std::swap(fengyu_, other->fengyu_);
  std::swap(huazhu_, other->huazhu_);
  std::swap(dajiao_, other->dajiao_);
  std::swap(backtax_, other->backtax_);
  std::swap(hujzy_, other->hujzy_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ScoreDetail::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ScoreDetail_descriptor_;
  metadata.reflection = ScoreDetail_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ScoreDetail

// optional int32 type = 1;
bool ScoreDetail::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ScoreDetail::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
void ScoreDetail::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void ScoreDetail::clear_type() {
  type_ = 0;
  clear_has_type();
}
 ::google::protobuf::int32 ScoreDetail::type() const {
  // @@protoc_insertion_point(field_get:msg_maj.ScoreDetail.type)
  return type_;
}
 void ScoreDetail::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.ScoreDetail.type)
}

// optional .msg_maj.HuDetail hu = 2;
bool ScoreDetail::has_hu() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ScoreDetail::set_has_hu() {
  _has_bits_[0] |= 0x00000002u;
}
void ScoreDetail::clear_has_hu() {
  _has_bits_[0] &= ~0x00000002u;
}
void ScoreDetail::clear_hu() {
  if (hu_ != NULL) hu_->::msg_maj::HuDetail::Clear();
  clear_has_hu();
}
const ::msg_maj::HuDetail& ScoreDetail::hu() const {
  // @@protoc_insertion_point(field_get:msg_maj.ScoreDetail.hu)
  return hu_ != NULL ? *hu_ : *default_instance_->hu_;
}
::msg_maj::HuDetail* ScoreDetail::mutable_hu() {
  set_has_hu();
  if (hu_ == NULL) {
    hu_ = new ::msg_maj::HuDetail;
  }
  // @@protoc_insertion_point(field_mutable:msg_maj.ScoreDetail.hu)
  return hu_;
}
::msg_maj::HuDetail* ScoreDetail::release_hu() {
  // @@protoc_insertion_point(field_release:msg_maj.ScoreDetail.hu)
  clear_has_hu();
  ::msg_maj::HuDetail* temp = hu_;
  hu_ = NULL;
  return temp;
}
void ScoreDetail::set_allocated_hu(::msg_maj::HuDetail* hu) {
  delete hu_;
  hu_ = hu;
  if (hu) {
    set_has_hu();
  } else {
    clear_has_hu();
  }
  // @@protoc_insertion_point(field_set_allocated:msg_maj.ScoreDetail.hu)
}

// optional .msg_maj.FengYuDetail fengyu = 3;
bool ScoreDetail::has_fengyu() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ScoreDetail::set_has_fengyu() {
  _has_bits_[0] |= 0x00000004u;
}
void ScoreDetail::clear_has_fengyu() {
  _has_bits_[0] &= ~0x00000004u;
}
void ScoreDetail::clear_fengyu() {
  if (fengyu_ != NULL) fengyu_->::msg_maj::FengYuDetail::Clear();
  clear_has_fengyu();
}
const ::msg_maj::FengYuDetail& ScoreDetail::fengyu() const {
  // @@protoc_insertion_point(field_get:msg_maj.ScoreDetail.fengyu)
  return fengyu_ != NULL ? *fengyu_ : *default_instance_->fengyu_;
}
::msg_maj::FengYuDetail* ScoreDetail::mutable_fengyu() {
  set_has_fengyu();
  if (fengyu_ == NULL) {
    fengyu_ = new ::msg_maj::FengYuDetail;
  }
  // @@protoc_insertion_point(field_mutable:msg_maj.ScoreDetail.fengyu)
  return fengyu_;
}
::msg_maj::FengYuDetail* ScoreDetail::release_fengyu() {
  // @@protoc_insertion_point(field_release:msg_maj.ScoreDetail.fengyu)
  clear_has_fengyu();
  ::msg_maj::FengYuDetail* temp = fengyu_;
  fengyu_ = NULL;
  return temp;
}
void ScoreDetail::set_allocated_fengyu(::msg_maj::FengYuDetail* fengyu) {
  delete fengyu_;
  fengyu_ = fengyu;
  if (fengyu) {
    set_has_fengyu();
  } else {
    clear_has_fengyu();
  }
  // @@protoc_insertion_point(field_set_allocated:msg_maj.ScoreDetail.fengyu)
}

// optional .msg_maj.HuaZhuDetail huazhu = 4;
bool ScoreDetail::has_huazhu() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ScoreDetail::set_has_huazhu() {
  _has_bits_[0] |= 0x00000008u;
}
void ScoreDetail::clear_has_huazhu() {
  _has_bits_[0] &= ~0x00000008u;
}
void ScoreDetail::clear_huazhu() {
  if (huazhu_ != NULL) huazhu_->::msg_maj::HuaZhuDetail::Clear();
  clear_has_huazhu();
}
const ::msg_maj::HuaZhuDetail& ScoreDetail::huazhu() const {
  // @@protoc_insertion_point(field_get:msg_maj.ScoreDetail.huazhu)
  return huazhu_ != NULL ? *huazhu_ : *default_instance_->huazhu_;
}
::msg_maj::HuaZhuDetail* ScoreDetail::mutable_huazhu() {
  set_has_huazhu();
  if (huazhu_ == NULL) {
    huazhu_ = new ::msg_maj::HuaZhuDetail;
  }
  // @@protoc_insertion_point(field_mutable:msg_maj.ScoreDetail.huazhu)
  return huazhu_;
}
::msg_maj::HuaZhuDetail* ScoreDetail::release_huazhu() {
  // @@protoc_insertion_point(field_release:msg_maj.ScoreDetail.huazhu)
  clear_has_huazhu();
  ::msg_maj::HuaZhuDetail* temp = huazhu_;
  huazhu_ = NULL;
  return temp;
}
void ScoreDetail::set_allocated_huazhu(::msg_maj::HuaZhuDetail* huazhu) {
  delete huazhu_;
  huazhu_ = huazhu;
  if (huazhu) {
    set_has_huazhu();
  } else {
    clear_has_huazhu();
  }
  // @@protoc_insertion_point(field_set_allocated:msg_maj.ScoreDetail.huazhu)
}

// optional .msg_maj.DaJiaoDetail dajiao = 5;
bool ScoreDetail::has_dajiao() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ScoreDetail::set_has_dajiao() {
  _has_bits_[0] |= 0x00000010u;
}
void ScoreDetail::clear_has_dajiao() {
  _has_bits_[0] &= ~0x00000010u;
}
void ScoreDetail::clear_dajiao() {
  if (dajiao_ != NULL) dajiao_->::msg_maj::DaJiaoDetail::Clear();
  clear_has_dajiao();
}
const ::msg_maj::DaJiaoDetail& ScoreDetail::dajiao() const {
  // @@protoc_insertion_point(field_get:msg_maj.ScoreDetail.dajiao)
  return dajiao_ != NULL ? *dajiao_ : *default_instance_->dajiao_;
}
::msg_maj::DaJiaoDetail* ScoreDetail::mutable_dajiao() {
  set_has_dajiao();
  if (dajiao_ == NULL) {
    dajiao_ = new ::msg_maj::DaJiaoDetail;
  }
  // @@protoc_insertion_point(field_mutable:msg_maj.ScoreDetail.dajiao)
  return dajiao_;
}
::msg_maj::DaJiaoDetail* ScoreDetail::release_dajiao() {
  // @@protoc_insertion_point(field_release:msg_maj.ScoreDetail.dajiao)
  clear_has_dajiao();
  ::msg_maj::DaJiaoDetail* temp = dajiao_;
  dajiao_ = NULL;
  return temp;
}
void ScoreDetail::set_allocated_dajiao(::msg_maj::DaJiaoDetail* dajiao) {
  delete dajiao_;
  dajiao_ = dajiao;
  if (dajiao) {
    set_has_dajiao();
  } else {
    clear_has_dajiao();
  }
  // @@protoc_insertion_point(field_set_allocated:msg_maj.ScoreDetail.dajiao)
}

// optional int32 backtax = 6;
bool ScoreDetail::has_backtax() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ScoreDetail::set_has_backtax() {
  _has_bits_[0] |= 0x00000020u;
}
void ScoreDetail::clear_has_backtax() {
  _has_bits_[0] &= ~0x00000020u;
}
void ScoreDetail::clear_backtax() {
  backtax_ = 0;
  clear_has_backtax();
}
 ::google::protobuf::int32 ScoreDetail::backtax() const {
  // @@protoc_insertion_point(field_get:msg_maj.ScoreDetail.backtax)
  return backtax_;
}
 void ScoreDetail::set_backtax(::google::protobuf::int32 value) {
  set_has_backtax();
  backtax_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.ScoreDetail.backtax)
}

// optional int32 hujzy = 7;
bool ScoreDetail::has_hujzy() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void ScoreDetail::set_has_hujzy() {
  _has_bits_[0] |= 0x00000040u;
}
void ScoreDetail::clear_has_hujzy() {
  _has_bits_[0] &= ~0x00000040u;
}
void ScoreDetail::clear_hujzy() {
  hujzy_ = 0;
  clear_has_hujzy();
}
 ::google::protobuf::int32 ScoreDetail::hujzy() const {
  // @@protoc_insertion_point(field_get:msg_maj.ScoreDetail.hujzy)
  return hujzy_;
}
 void ScoreDetail::set_hujzy(::google::protobuf::int32 value) {
  set_has_hujzy();
  hujzy_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.ScoreDetail.hujzy)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpenTile::kTypeFieldNumber;
const int OpenTile::kTileListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpenTile::OpenTile()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.OpenTile)
}

void OpenTile::InitAsDefaultInstance() {
}

OpenTile::OpenTile(const OpenTile& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.OpenTile)
}

void OpenTile::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

OpenTile::~OpenTile() {
  // @@protoc_insertion_point(destructor:msg_maj.OpenTile)
  SharedDtor();
}

void OpenTile::SharedDtor() {
  if (this != default_instance_) {
  }
}

void OpenTile::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpenTile::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OpenTile_descriptor_;
}

const OpenTile& OpenTile::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmaj_2eproto();
  return *default_instance_;
}

OpenTile* OpenTile::default_instance_ = NULL;

OpenTile* OpenTile::New(::google::protobuf::Arena* arena) const {
  OpenTile* n = new OpenTile;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OpenTile::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.OpenTile)
  type_ = 0;
  tile_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool OpenTile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.OpenTile)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .msg_maj.event_type type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::msg_maj::event_type_IsValid(value)) {
            set_type(static_cast< ::msg_maj::event_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_tile_list;
        break;
      }

      // repeated uint32 tile_list = 2;
      case 2: {
        if (tag == 16) {
         parse_tile_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_tile_list())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_tile_list())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_tile_list;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.OpenTile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.OpenTile)
  return false;
#undef DO_
}

void OpenTile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.OpenTile)
  // required .msg_maj.event_type type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // repeated uint32 tile_list = 2;
  for (int i = 0; i < this->tile_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->tile_list(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.OpenTile)
}

::google::protobuf::uint8* OpenTile::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.OpenTile)
  // required .msg_maj.event_type type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // repeated uint32 tile_list = 2;
  for (int i = 0; i < this->tile_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->tile_list(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.OpenTile)
  return target;
}

int OpenTile::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.OpenTile)
  int total_size = 0;

  // required .msg_maj.event_type type = 1;
  if (has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }
  // repeated uint32 tile_list = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->tile_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->tile_list(i));
    }
    total_size += 1 * this->tile_list_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpenTile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.OpenTile)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const OpenTile* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const OpenTile>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.OpenTile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.OpenTile)
    MergeFrom(*source);
  }
}

void OpenTile::MergeFrom(const OpenTile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.OpenTile)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  tile_list_.MergeFrom(from.tile_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void OpenTile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.OpenTile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpenTile::CopyFrom(const OpenTile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.OpenTile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpenTile::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void OpenTile::Swap(OpenTile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpenTile::InternalSwap(OpenTile* other) {
  std::swap(type_, other->type_);
  tile_list_.UnsafeArenaSwap(&other->tile_list_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OpenTile::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OpenTile_descriptor_;
  metadata.reflection = OpenTile_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OpenTile

// required .msg_maj.event_type type = 1;
bool OpenTile::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void OpenTile::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
void OpenTile::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void OpenTile::clear_type() {
  type_ = 0;
  clear_has_type();
}
 ::msg_maj::event_type OpenTile::type() const {
  // @@protoc_insertion_point(field_get:msg_maj.OpenTile.type)
  return static_cast< ::msg_maj::event_type >(type_);
}
 void OpenTile::set_type(::msg_maj::event_type value) {
  assert(::msg_maj::event_type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.OpenTile.type)
}

// repeated uint32 tile_list = 2;
int OpenTile::tile_list_size() const {
  return tile_list_.size();
}
void OpenTile::clear_tile_list() {
  tile_list_.Clear();
}
 ::google::protobuf::uint32 OpenTile::tile_list(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.OpenTile.tile_list)
  return tile_list_.Get(index);
}
 void OpenTile::set_tile_list(int index, ::google::protobuf::uint32 value) {
  tile_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg_maj.OpenTile.tile_list)
}
 void OpenTile::add_tile_list(::google::protobuf::uint32 value) {
  tile_list_.Add(value);
  // @@protoc_insertion_point(field_add:msg_maj.OpenTile.tile_list)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
OpenTile::tile_list() const {
  // @@protoc_insertion_point(field_list:msg_maj.OpenTile.tile_list)
  return tile_list_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
OpenTile::mutable_tile_list() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.OpenTile.tile_list)
  return &tile_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YlHuInfo::kHuwayFieldNumber;
const int YlHuInfo::kHuTypeFieldNumber;
const int YlHuInfo::kMaPaiAllFieldNumber;
const int YlHuInfo::kMaPaiHitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YlHuInfo::YlHuInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.YlHuInfo)
}

void YlHuInfo::InitAsDefaultInstance() {
}

YlHuInfo::YlHuInfo(const YlHuInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.YlHuInfo)
}

void YlHuInfo::SharedCtor() {
  _cached_size_ = 0;
  huway_ = 0;
  hutype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

YlHuInfo::~YlHuInfo() {
  // @@protoc_insertion_point(destructor:msg_maj.YlHuInfo)
  SharedDtor();
}

void YlHuInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void YlHuInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YlHuInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return YlHuInfo_descriptor_;
}

const YlHuInfo& YlHuInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmaj_2eproto();
  return *default_instance_;
}

YlHuInfo* YlHuInfo::default_instance_ = NULL;

YlHuInfo* YlHuInfo::New(::google::protobuf::Arena* arena) const {
  YlHuInfo* n = new YlHuInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YlHuInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.YlHuInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(YlHuInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<YlHuInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(huway_, hutype_);

#undef ZR_HELPER_
#undef ZR_

  ma_pai_all_.Clear();
  ma_pai_hit_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool YlHuInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.YlHuInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .msg_maj.hu_way huway = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::msg_maj::hu_way_IsValid(value)) {
            set_huway(static_cast< ::msg_maj::hu_way >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_huType;
        break;
      }

      // required .msg_maj.hu_type huType = 2;
      case 2: {
        if (tag == 16) {
         parse_huType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::msg_maj::hu_type_IsValid(value)) {
            set_hutype(static_cast< ::msg_maj::hu_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ma_pai_all;
        break;
      }

      // repeated uint32 ma_pai_all = 3;
      case 3: {
        if (tag == 24) {
         parse_ma_pai_all:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24, input, this->mutable_ma_pai_all())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_ma_pai_all())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ma_pai_all;
        if (input->ExpectTag(32)) goto parse_ma_pai_hit;
        break;
      }

      // repeated uint32 ma_pai_hit = 4;
      case 4: {
        if (tag == 32) {
         parse_ma_pai_hit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 32, input, this->mutable_ma_pai_hit())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_ma_pai_hit())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_ma_pai_hit;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.YlHuInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.YlHuInfo)
  return false;
#undef DO_
}

void YlHuInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.YlHuInfo)
  // required .msg_maj.hu_way huway = 1;
  if (has_huway()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->huway(), output);
  }

  // required .msg_maj.hu_type huType = 2;
  if (has_hutype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->hutype(), output);
  }

  // repeated uint32 ma_pai_all = 3;
  for (int i = 0; i < this->ma_pai_all_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->ma_pai_all(i), output);
  }

  // repeated uint32 ma_pai_hit = 4;
  for (int i = 0; i < this->ma_pai_hit_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      4, this->ma_pai_hit(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.YlHuInfo)
}

::google::protobuf::uint8* YlHuInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.YlHuInfo)
  // required .msg_maj.hu_way huway = 1;
  if (has_huway()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->huway(), target);
  }

  // required .msg_maj.hu_type huType = 2;
  if (has_hutype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->hutype(), target);
  }

  // repeated uint32 ma_pai_all = 3;
  for (int i = 0; i < this->ma_pai_all_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(3, this->ma_pai_all(i), target);
  }

  // repeated uint32 ma_pai_hit = 4;
  for (int i = 0; i < this->ma_pai_hit_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(4, this->ma_pai_hit(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.YlHuInfo)
  return target;
}

int YlHuInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:msg_maj.YlHuInfo)
  int total_size = 0;

  if (has_huway()) {
    // required .msg_maj.hu_way huway = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->huway());
  }

  if (has_hutype()) {
    // required .msg_maj.hu_type huType = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->hutype());
  }

  return total_size;
}
int YlHuInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.YlHuInfo)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .msg_maj.hu_way huway = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->huway());

    // required .msg_maj.hu_type huType = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->hutype());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated uint32 ma_pai_all = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->ma_pai_all_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->ma_pai_all(i));
    }
    total_size += 1 * this->ma_pai_all_size() + data_size;
  }

  // repeated uint32 ma_pai_hit = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->ma_pai_hit_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->ma_pai_hit(i));
    }
    total_size += 1 * this->ma_pai_hit_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YlHuInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.YlHuInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const YlHuInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const YlHuInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.YlHuInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.YlHuInfo)
    MergeFrom(*source);
  }
}

void YlHuInfo::MergeFrom(const YlHuInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.YlHuInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  ma_pai_all_.MergeFrom(from.ma_pai_all_);
  ma_pai_hit_.MergeFrom(from.ma_pai_hit_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_huway()) {
      set_huway(from.huway());
    }
    if (from.has_hutype()) {
      set_hutype(from.hutype());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void YlHuInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.YlHuInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YlHuInfo::CopyFrom(const YlHuInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.YlHuInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YlHuInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void YlHuInfo::Swap(YlHuInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YlHuInfo::InternalSwap(YlHuInfo* other) {
  std::swap(huway_, other->huway_);
  std::swap(hutype_, other->hutype_);
  ma_pai_all_.UnsafeArenaSwap(&other->ma_pai_all_);
  ma_pai_hit_.UnsafeArenaSwap(&other->ma_pai_hit_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YlHuInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = YlHuInfo_descriptor_;
  metadata.reflection = YlHuInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YlHuInfo

// required .msg_maj.hu_way huway = 1;
bool YlHuInfo::has_huway() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void YlHuInfo::set_has_huway() {
  _has_bits_[0] |= 0x00000001u;
}
void YlHuInfo::clear_has_huway() {
  _has_bits_[0] &= ~0x00000001u;
}
void YlHuInfo::clear_huway() {
  huway_ = 0;
  clear_has_huway();
}
 ::msg_maj::hu_way YlHuInfo::huway() const {
  // @@protoc_insertion_point(field_get:msg_maj.YlHuInfo.huway)
  return static_cast< ::msg_maj::hu_way >(huway_);
}
 void YlHuInfo::set_huway(::msg_maj::hu_way value) {
  assert(::msg_maj::hu_way_IsValid(value));
  set_has_huway();
  huway_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.YlHuInfo.huway)
}

// required .msg_maj.hu_type huType = 2;
bool YlHuInfo::has_hutype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void YlHuInfo::set_has_hutype() {
  _has_bits_[0] |= 0x00000002u;
}
void YlHuInfo::clear_has_hutype() {
  _has_bits_[0] &= ~0x00000002u;
}
void YlHuInfo::clear_hutype() {
  hutype_ = 0;
  clear_has_hutype();
}
 ::msg_maj::hu_type YlHuInfo::hutype() const {
  // @@protoc_insertion_point(field_get:msg_maj.YlHuInfo.huType)
  return static_cast< ::msg_maj::hu_type >(hutype_);
}
 void YlHuInfo::set_hutype(::msg_maj::hu_type value) {
  assert(::msg_maj::hu_type_IsValid(value));
  set_has_hutype();
  hutype_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.YlHuInfo.huType)
}

// repeated uint32 ma_pai_all = 3;
int YlHuInfo::ma_pai_all_size() const {
  return ma_pai_all_.size();
}
void YlHuInfo::clear_ma_pai_all() {
  ma_pai_all_.Clear();
}
 ::google::protobuf::uint32 YlHuInfo::ma_pai_all(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.YlHuInfo.ma_pai_all)
  return ma_pai_all_.Get(index);
}
 void YlHuInfo::set_ma_pai_all(int index, ::google::protobuf::uint32 value) {
  ma_pai_all_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg_maj.YlHuInfo.ma_pai_all)
}
 void YlHuInfo::add_ma_pai_all(::google::protobuf::uint32 value) {
  ma_pai_all_.Add(value);
  // @@protoc_insertion_point(field_add:msg_maj.YlHuInfo.ma_pai_all)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
YlHuInfo::ma_pai_all() const {
  // @@protoc_insertion_point(field_list:msg_maj.YlHuInfo.ma_pai_all)
  return ma_pai_all_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
YlHuInfo::mutable_ma_pai_all() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.YlHuInfo.ma_pai_all)
  return &ma_pai_all_;
}

// repeated uint32 ma_pai_hit = 4;
int YlHuInfo::ma_pai_hit_size() const {
  return ma_pai_hit_.size();
}
void YlHuInfo::clear_ma_pai_hit() {
  ma_pai_hit_.Clear();
}
 ::google::protobuf::uint32 YlHuInfo::ma_pai_hit(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.YlHuInfo.ma_pai_hit)
  return ma_pai_hit_.Get(index);
}
 void YlHuInfo::set_ma_pai_hit(int index, ::google::protobuf::uint32 value) {
  ma_pai_hit_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg_maj.YlHuInfo.ma_pai_hit)
}
 void YlHuInfo::add_ma_pai_hit(::google::protobuf::uint32 value) {
  ma_pai_hit_.Add(value);
  // @@protoc_insertion_point(field_add:msg_maj.YlHuInfo.ma_pai_hit)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
YlHuInfo::ma_pai_hit() const {
  // @@protoc_insertion_point(field_list:msg_maj.YlHuInfo.ma_pai_hit)
  return ma_pai_hit_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
YlHuInfo::mutable_ma_pai_hit() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.YlHuInfo.ma_pai_hit)
  return &ma_pai_hit_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BbHuInfo::kHuwayFieldNumber;
const int BbHuInfo::kHuTypeFieldNumber;
const int BbHuInfo::kMaPaiAllFieldNumber;
const int BbHuInfo::kMaPaiHitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BbHuInfo::BbHuInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.BbHuInfo)
}

void BbHuInfo::InitAsDefaultInstance() {
}

BbHuInfo::BbHuInfo(const BbHuInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.BbHuInfo)
}

void BbHuInfo::SharedCtor() {
  _cached_size_ = 0;
  huway_ = 0;
  hutype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BbHuInfo::~BbHuInfo() {
  // @@protoc_insertion_point(destructor:msg_maj.BbHuInfo)
  SharedDtor();
}

void BbHuInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BbHuInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BbHuInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BbHuInfo_descriptor_;
}

const BbHuInfo& BbHuInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmaj_2eproto();
  return *default_instance_;
}

BbHuInfo* BbHuInfo::default_instance_ = NULL;

BbHuInfo* BbHuInfo::New(::google::protobuf::Arena* arena) const {
  BbHuInfo* n = new BbHuInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BbHuInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.BbHuInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(BbHuInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<BbHuInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(huway_, hutype_);

#undef ZR_HELPER_
#undef ZR_

  ma_pai_all_.Clear();
  ma_pai_hit_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool BbHuInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.BbHuInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .msg_maj.hu_way huway = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::msg_maj::hu_way_IsValid(value)) {
            set_huway(static_cast< ::msg_maj::hu_way >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_huType;
        break;
      }

      // required .msg_maj.hu_type huType = 2;
      case 2: {
        if (tag == 16) {
         parse_huType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::msg_maj::hu_type_IsValid(value)) {
            set_hutype(static_cast< ::msg_maj::hu_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ma_pai_all;
        break;
      }

      // repeated uint32 ma_pai_all = 3;
      case 3: {
        if (tag == 24) {
         parse_ma_pai_all:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24, input, this->mutable_ma_pai_all())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_ma_pai_all())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ma_pai_all;
        if (input->ExpectTag(32)) goto parse_ma_pai_hit;
        break;
      }

      // repeated uint32 ma_pai_hit = 4;
      case 4: {
        if (tag == 32) {
         parse_ma_pai_hit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 32, input, this->mutable_ma_pai_hit())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_ma_pai_hit())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_ma_pai_hit;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.BbHuInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.BbHuInfo)
  return false;
#undef DO_
}

void BbHuInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.BbHuInfo)
  // required .msg_maj.hu_way huway = 1;
  if (has_huway()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->huway(), output);
  }

  // required .msg_maj.hu_type huType = 2;
  if (has_hutype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->hutype(), output);
  }

  // repeated uint32 ma_pai_all = 3;
  for (int i = 0; i < this->ma_pai_all_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->ma_pai_all(i), output);
  }

  // repeated uint32 ma_pai_hit = 4;
  for (int i = 0; i < this->ma_pai_hit_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      4, this->ma_pai_hit(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.BbHuInfo)
}

::google::protobuf::uint8* BbHuInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.BbHuInfo)
  // required .msg_maj.hu_way huway = 1;
  if (has_huway()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->huway(), target);
  }

  // required .msg_maj.hu_type huType = 2;
  if (has_hutype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->hutype(), target);
  }

  // repeated uint32 ma_pai_all = 3;
  for (int i = 0; i < this->ma_pai_all_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(3, this->ma_pai_all(i), target);
  }

  // repeated uint32 ma_pai_hit = 4;
  for (int i = 0; i < this->ma_pai_hit_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(4, this->ma_pai_hit(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.BbHuInfo)
  return target;
}

int BbHuInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:msg_maj.BbHuInfo)
  int total_size = 0;

  if (has_huway()) {
    // required .msg_maj.hu_way huway = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->huway());
  }

  if (has_hutype()) {
    // required .msg_maj.hu_type huType = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->hutype());
  }

  return total_size;
}
int BbHuInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.BbHuInfo)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .msg_maj.hu_way huway = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->huway());

    // required .msg_maj.hu_type huType = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->hutype());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated uint32 ma_pai_all = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->ma_pai_all_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->ma_pai_all(i));
    }
    total_size += 1 * this->ma_pai_all_size() + data_size;
  }

  // repeated uint32 ma_pai_hit = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->ma_pai_hit_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->ma_pai_hit(i));
    }
    total_size += 1 * this->ma_pai_hit_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BbHuInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.BbHuInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BbHuInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BbHuInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.BbHuInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.BbHuInfo)
    MergeFrom(*source);
  }
}

void BbHuInfo::MergeFrom(const BbHuInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.BbHuInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  ma_pai_all_.MergeFrom(from.ma_pai_all_);
  ma_pai_hit_.MergeFrom(from.ma_pai_hit_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_huway()) {
      set_huway(from.huway());
    }
    if (from.has_hutype()) {
      set_hutype(from.hutype());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void BbHuInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.BbHuInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BbHuInfo::CopyFrom(const BbHuInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.BbHuInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BbHuInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void BbHuInfo::Swap(BbHuInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BbHuInfo::InternalSwap(BbHuInfo* other) {
  std::swap(huway_, other->huway_);
  std::swap(hutype_, other->hutype_);
  ma_pai_all_.UnsafeArenaSwap(&other->ma_pai_all_);
  ma_pai_hit_.UnsafeArenaSwap(&other->ma_pai_hit_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BbHuInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BbHuInfo_descriptor_;
  metadata.reflection = BbHuInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BbHuInfo

// required .msg_maj.hu_way huway = 1;
bool BbHuInfo::has_huway() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BbHuInfo::set_has_huway() {
  _has_bits_[0] |= 0x00000001u;
}
void BbHuInfo::clear_has_huway() {
  _has_bits_[0] &= ~0x00000001u;
}
void BbHuInfo::clear_huway() {
  huway_ = 0;
  clear_has_huway();
}
 ::msg_maj::hu_way BbHuInfo::huway() const {
  // @@protoc_insertion_point(field_get:msg_maj.BbHuInfo.huway)
  return static_cast< ::msg_maj::hu_way >(huway_);
}
 void BbHuInfo::set_huway(::msg_maj::hu_way value) {
  assert(::msg_maj::hu_way_IsValid(value));
  set_has_huway();
  huway_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.BbHuInfo.huway)
}

// required .msg_maj.hu_type huType = 2;
bool BbHuInfo::has_hutype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BbHuInfo::set_has_hutype() {
  _has_bits_[0] |= 0x00000002u;
}
void BbHuInfo::clear_has_hutype() {
  _has_bits_[0] &= ~0x00000002u;
}
void BbHuInfo::clear_hutype() {
  hutype_ = 0;
  clear_has_hutype();
}
 ::msg_maj::hu_type BbHuInfo::hutype() const {
  // @@protoc_insertion_point(field_get:msg_maj.BbHuInfo.huType)
  return static_cast< ::msg_maj::hu_type >(hutype_);
}
 void BbHuInfo::set_hutype(::msg_maj::hu_type value) {
  assert(::msg_maj::hu_type_IsValid(value));
  set_has_hutype();
  hutype_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.BbHuInfo.huType)
}

// repeated uint32 ma_pai_all = 3;
int BbHuInfo::ma_pai_all_size() const {
  return ma_pai_all_.size();
}
void BbHuInfo::clear_ma_pai_all() {
  ma_pai_all_.Clear();
}
 ::google::protobuf::uint32 BbHuInfo::ma_pai_all(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.BbHuInfo.ma_pai_all)
  return ma_pai_all_.Get(index);
}
 void BbHuInfo::set_ma_pai_all(int index, ::google::protobuf::uint32 value) {
  ma_pai_all_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg_maj.BbHuInfo.ma_pai_all)
}
 void BbHuInfo::add_ma_pai_all(::google::protobuf::uint32 value) {
  ma_pai_all_.Add(value);
  // @@protoc_insertion_point(field_add:msg_maj.BbHuInfo.ma_pai_all)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BbHuInfo::ma_pai_all() const {
  // @@protoc_insertion_point(field_list:msg_maj.BbHuInfo.ma_pai_all)
  return ma_pai_all_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BbHuInfo::mutable_ma_pai_all() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.BbHuInfo.ma_pai_all)
  return &ma_pai_all_;
}

// repeated uint32 ma_pai_hit = 4;
int BbHuInfo::ma_pai_hit_size() const {
  return ma_pai_hit_.size();
}
void BbHuInfo::clear_ma_pai_hit() {
  ma_pai_hit_.Clear();
}
 ::google::protobuf::uint32 BbHuInfo::ma_pai_hit(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.BbHuInfo.ma_pai_hit)
  return ma_pai_hit_.Get(index);
}
 void BbHuInfo::set_ma_pai_hit(int index, ::google::protobuf::uint32 value) {
  ma_pai_hit_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg_maj.BbHuInfo.ma_pai_hit)
}
 void BbHuInfo::add_ma_pai_hit(::google::protobuf::uint32 value) {
  ma_pai_hit_.Add(value);
  // @@protoc_insertion_point(field_add:msg_maj.BbHuInfo.ma_pai_hit)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BbHuInfo::ma_pai_hit() const {
  // @@protoc_insertion_point(field_list:msg_maj.BbHuInfo.ma_pai_hit)
  return ma_pai_hit_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BbHuInfo::mutable_ma_pai_hit() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.BbHuInfo.ma_pai_hit)
  return &ma_pai_hit_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LcHuInfo::kHuwayFieldNumber;
const int LcHuInfo::kHuTypeFieldNumber;
const int LcHuInfo::kMaPaiAllFieldNumber;
const int LcHuInfo::kMaPaiHitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LcHuInfo::LcHuInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.LcHuInfo)
}

void LcHuInfo::InitAsDefaultInstance() {
}

LcHuInfo::LcHuInfo(const LcHuInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.LcHuInfo)
}

void LcHuInfo::SharedCtor() {
  _cached_size_ = 0;
  huway_ = 0;
  hutype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LcHuInfo::~LcHuInfo() {
  // @@protoc_insertion_point(destructor:msg_maj.LcHuInfo)
  SharedDtor();
}

void LcHuInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LcHuInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LcHuInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LcHuInfo_descriptor_;
}

const LcHuInfo& LcHuInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmaj_2eproto();
  return *default_instance_;
}

LcHuInfo* LcHuInfo::default_instance_ = NULL;

LcHuInfo* LcHuInfo::New(::google::protobuf::Arena* arena) const {
  LcHuInfo* n = new LcHuInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LcHuInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.LcHuInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(LcHuInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<LcHuInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(huway_, hutype_);

#undef ZR_HELPER_
#undef ZR_

  ma_pai_all_.Clear();
  ma_pai_hit_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool LcHuInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.LcHuInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .msg_maj.hu_way huway = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::msg_maj::hu_way_IsValid(value)) {
            set_huway(static_cast< ::msg_maj::hu_way >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_huType;
        break;
      }

      // required .msg_maj.hu_type huType = 2;
      case 2: {
        if (tag == 16) {
         parse_huType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::msg_maj::hu_type_IsValid(value)) {
            set_hutype(static_cast< ::msg_maj::hu_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ma_pai_all;
        break;
      }

      // repeated uint32 ma_pai_all = 3;
      case 3: {
        if (tag == 24) {
         parse_ma_pai_all:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24, input, this->mutable_ma_pai_all())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_ma_pai_all())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ma_pai_all;
        if (input->ExpectTag(32)) goto parse_ma_pai_hit;
        break;
      }

      // repeated uint32 ma_pai_hit = 4;
      case 4: {
        if (tag == 32) {
         parse_ma_pai_hit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 32, input, this->mutable_ma_pai_hit())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_ma_pai_hit())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_ma_pai_hit;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.LcHuInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.LcHuInfo)
  return false;
#undef DO_
}

void LcHuInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.LcHuInfo)
  // required .msg_maj.hu_way huway = 1;
  if (has_huway()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->huway(), output);
  }

  // required .msg_maj.hu_type huType = 2;
  if (has_hutype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->hutype(), output);
  }

  // repeated uint32 ma_pai_all = 3;
  for (int i = 0; i < this->ma_pai_all_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->ma_pai_all(i), output);
  }

  // repeated uint32 ma_pai_hit = 4;
  for (int i = 0; i < this->ma_pai_hit_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      4, this->ma_pai_hit(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.LcHuInfo)
}

::google::protobuf::uint8* LcHuInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.LcHuInfo)
  // required .msg_maj.hu_way huway = 1;
  if (has_huway()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->huway(), target);
  }

  // required .msg_maj.hu_type huType = 2;
  if (has_hutype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->hutype(), target);
  }

  // repeated uint32 ma_pai_all = 3;
  for (int i = 0; i < this->ma_pai_all_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(3, this->ma_pai_all(i), target);
  }

  // repeated uint32 ma_pai_hit = 4;
  for (int i = 0; i < this->ma_pai_hit_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(4, this->ma_pai_hit(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.LcHuInfo)
  return target;
}

int LcHuInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:msg_maj.LcHuInfo)
  int total_size = 0;

  if (has_huway()) {
    // required .msg_maj.hu_way huway = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->huway());
  }

  if (has_hutype()) {
    // required .msg_maj.hu_type huType = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->hutype());
  }

  return total_size;
}
int LcHuInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.LcHuInfo)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .msg_maj.hu_way huway = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->huway());

    // required .msg_maj.hu_type huType = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->hutype());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated uint32 ma_pai_all = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->ma_pai_all_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->ma_pai_all(i));
    }
    total_size += 1 * this->ma_pai_all_size() + data_size;
  }

  // repeated uint32 ma_pai_hit = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->ma_pai_hit_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->ma_pai_hit(i));
    }
    total_size += 1 * this->ma_pai_hit_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LcHuInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.LcHuInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const LcHuInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LcHuInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.LcHuInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.LcHuInfo)
    MergeFrom(*source);
  }
}

void LcHuInfo::MergeFrom(const LcHuInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.LcHuInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  ma_pai_all_.MergeFrom(from.ma_pai_all_);
  ma_pai_hit_.MergeFrom(from.ma_pai_hit_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_huway()) {
      set_huway(from.huway());
    }
    if (from.has_hutype()) {
      set_hutype(from.hutype());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void LcHuInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.LcHuInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LcHuInfo::CopyFrom(const LcHuInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.LcHuInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LcHuInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void LcHuInfo::Swap(LcHuInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LcHuInfo::InternalSwap(LcHuInfo* other) {
  std::swap(huway_, other->huway_);
  std::swap(hutype_, other->hutype_);
  ma_pai_all_.UnsafeArenaSwap(&other->ma_pai_all_);
  ma_pai_hit_.UnsafeArenaSwap(&other->ma_pai_hit_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LcHuInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LcHuInfo_descriptor_;
  metadata.reflection = LcHuInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LcHuInfo

// required .msg_maj.hu_way huway = 1;
bool LcHuInfo::has_huway() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LcHuInfo::set_has_huway() {
  _has_bits_[0] |= 0x00000001u;
}
void LcHuInfo::clear_has_huway() {
  _has_bits_[0] &= ~0x00000001u;
}
void LcHuInfo::clear_huway() {
  huway_ = 0;
  clear_has_huway();
}
 ::msg_maj::hu_way LcHuInfo::huway() const {
  // @@protoc_insertion_point(field_get:msg_maj.LcHuInfo.huway)
  return static_cast< ::msg_maj::hu_way >(huway_);
}
 void LcHuInfo::set_huway(::msg_maj::hu_way value) {
  assert(::msg_maj::hu_way_IsValid(value));
  set_has_huway();
  huway_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.LcHuInfo.huway)
}

// required .msg_maj.hu_type huType = 2;
bool LcHuInfo::has_hutype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LcHuInfo::set_has_hutype() {
  _has_bits_[0] |= 0x00000002u;
}
void LcHuInfo::clear_has_hutype() {
  _has_bits_[0] &= ~0x00000002u;
}
void LcHuInfo::clear_hutype() {
  hutype_ = 0;
  clear_has_hutype();
}
 ::msg_maj::hu_type LcHuInfo::hutype() const {
  // @@protoc_insertion_point(field_get:msg_maj.LcHuInfo.huType)
  return static_cast< ::msg_maj::hu_type >(hutype_);
}
 void LcHuInfo::set_hutype(::msg_maj::hu_type value) {
  assert(::msg_maj::hu_type_IsValid(value));
  set_has_hutype();
  hutype_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.LcHuInfo.huType)
}

// repeated uint32 ma_pai_all = 3;
int LcHuInfo::ma_pai_all_size() const {
  return ma_pai_all_.size();
}
void LcHuInfo::clear_ma_pai_all() {
  ma_pai_all_.Clear();
}
 ::google::protobuf::uint32 LcHuInfo::ma_pai_all(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.LcHuInfo.ma_pai_all)
  return ma_pai_all_.Get(index);
}
 void LcHuInfo::set_ma_pai_all(int index, ::google::protobuf::uint32 value) {
  ma_pai_all_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg_maj.LcHuInfo.ma_pai_all)
}
 void LcHuInfo::add_ma_pai_all(::google::protobuf::uint32 value) {
  ma_pai_all_.Add(value);
  // @@protoc_insertion_point(field_add:msg_maj.LcHuInfo.ma_pai_all)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
LcHuInfo::ma_pai_all() const {
  // @@protoc_insertion_point(field_list:msg_maj.LcHuInfo.ma_pai_all)
  return ma_pai_all_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
LcHuInfo::mutable_ma_pai_all() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.LcHuInfo.ma_pai_all)
  return &ma_pai_all_;
}

// repeated uint32 ma_pai_hit = 4;
int LcHuInfo::ma_pai_hit_size() const {
  return ma_pai_hit_.size();
}
void LcHuInfo::clear_ma_pai_hit() {
  ma_pai_hit_.Clear();
}
 ::google::protobuf::uint32 LcHuInfo::ma_pai_hit(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.LcHuInfo.ma_pai_hit)
  return ma_pai_hit_.Get(index);
}
 void LcHuInfo::set_ma_pai_hit(int index, ::google::protobuf::uint32 value) {
  ma_pai_hit_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg_maj.LcHuInfo.ma_pai_hit)
}
 void LcHuInfo::add_ma_pai_hit(::google::protobuf::uint32 value) {
  ma_pai_hit_.Add(value);
  // @@protoc_insertion_point(field_add:msg_maj.LcHuInfo.ma_pai_hit)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
LcHuInfo::ma_pai_hit() const {
  // @@protoc_insertion_point(field_list:msg_maj.LcHuInfo.ma_pai_hit)
  return ma_pai_hit_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
LcHuInfo::mutable_ma_pai_hit() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.LcHuInfo.ma_pai_hit)
  return &ma_pai_hit_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XzHuInfo::kHuwayFieldNumber;
const int XzHuInfo::kHuTypeFieldNumber;
const int XzHuInfo::kMaPaiAllFieldNumber;
const int XzHuInfo::kMaPaiHitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XzHuInfo::XzHuInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.XzHuInfo)
}

void XzHuInfo::InitAsDefaultInstance() {
}

XzHuInfo::XzHuInfo(const XzHuInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.XzHuInfo)
}

void XzHuInfo::SharedCtor() {
  _cached_size_ = 0;
  huway_ = 0;
  hutype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

XzHuInfo::~XzHuInfo() {
  // @@protoc_insertion_point(destructor:msg_maj.XzHuInfo)
  SharedDtor();
}

void XzHuInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void XzHuInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XzHuInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return XzHuInfo_descriptor_;
}

const XzHuInfo& XzHuInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmaj_2eproto();
  return *default_instance_;
}

XzHuInfo* XzHuInfo::default_instance_ = NULL;

XzHuInfo* XzHuInfo::New(::google::protobuf::Arena* arena) const {
  XzHuInfo* n = new XzHuInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XzHuInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.XzHuInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(XzHuInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<XzHuInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(huway_, hutype_);

#undef ZR_HELPER_
#undef ZR_

  ma_pai_all_.Clear();
  ma_pai_hit_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool XzHuInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.XzHuInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .msg_maj.hu_way huway = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::msg_maj::hu_way_IsValid(value)) {
            set_huway(static_cast< ::msg_maj::hu_way >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_huType;
        break;
      }

      // required .msg_maj.hu_type huType = 2;
      case 2: {
        if (tag == 16) {
         parse_huType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::msg_maj::hu_type_IsValid(value)) {
            set_hutype(static_cast< ::msg_maj::hu_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ma_pai_all;
        break;
      }

      // repeated uint32 ma_pai_all = 3;
      case 3: {
        if (tag == 24) {
         parse_ma_pai_all:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24, input, this->mutable_ma_pai_all())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_ma_pai_all())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ma_pai_all;
        if (input->ExpectTag(32)) goto parse_ma_pai_hit;
        break;
      }

      // repeated uint32 ma_pai_hit = 4;
      case 4: {
        if (tag == 32) {
         parse_ma_pai_hit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 32, input, this->mutable_ma_pai_hit())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_ma_pai_hit())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_ma_pai_hit;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.XzHuInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.XzHuInfo)
  return false;
#undef DO_
}

void XzHuInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.XzHuInfo)
  // required .msg_maj.hu_way huway = 1;
  if (has_huway()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->huway(), output);
  }

  // required .msg_maj.hu_type huType = 2;
  if (has_hutype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->hutype(), output);
  }

  // repeated uint32 ma_pai_all = 3;
  for (int i = 0; i < this->ma_pai_all_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->ma_pai_all(i), output);
  }

  // repeated uint32 ma_pai_hit = 4;
  for (int i = 0; i < this->ma_pai_hit_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      4, this->ma_pai_hit(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.XzHuInfo)
}

::google::protobuf::uint8* XzHuInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.XzHuInfo)
  // required .msg_maj.hu_way huway = 1;
  if (has_huway()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->huway(), target);
  }

  // required .msg_maj.hu_type huType = 2;
  if (has_hutype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->hutype(), target);
  }

  // repeated uint32 ma_pai_all = 3;
  for (int i = 0; i < this->ma_pai_all_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(3, this->ma_pai_all(i), target);
  }

  // repeated uint32 ma_pai_hit = 4;
  for (int i = 0; i < this->ma_pai_hit_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(4, this->ma_pai_hit(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.XzHuInfo)
  return target;
}

int XzHuInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:msg_maj.XzHuInfo)
  int total_size = 0;

  if (has_huway()) {
    // required .msg_maj.hu_way huway = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->huway());
  }

  if (has_hutype()) {
    // required .msg_maj.hu_type huType = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->hutype());
  }

  return total_size;
}
int XzHuInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.XzHuInfo)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .msg_maj.hu_way huway = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->huway());

    // required .msg_maj.hu_type huType = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->hutype());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated uint32 ma_pai_all = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->ma_pai_all_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->ma_pai_all(i));
    }
    total_size += 1 * this->ma_pai_all_size() + data_size;
  }

  // repeated uint32 ma_pai_hit = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->ma_pai_hit_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->ma_pai_hit(i));
    }
    total_size += 1 * this->ma_pai_hit_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XzHuInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.XzHuInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const XzHuInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const XzHuInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.XzHuInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.XzHuInfo)
    MergeFrom(*source);
  }
}

void XzHuInfo::MergeFrom(const XzHuInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.XzHuInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  ma_pai_all_.MergeFrom(from.ma_pai_all_);
  ma_pai_hit_.MergeFrom(from.ma_pai_hit_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_huway()) {
      set_huway(from.huway());
    }
    if (from.has_hutype()) {
      set_hutype(from.hutype());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void XzHuInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.XzHuInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XzHuInfo::CopyFrom(const XzHuInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.XzHuInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XzHuInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void XzHuInfo::Swap(XzHuInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XzHuInfo::InternalSwap(XzHuInfo* other) {
  std::swap(huway_, other->huway_);
  std::swap(hutype_, other->hutype_);
  ma_pai_all_.UnsafeArenaSwap(&other->ma_pai_all_);
  ma_pai_hit_.UnsafeArenaSwap(&other->ma_pai_hit_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XzHuInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = XzHuInfo_descriptor_;
  metadata.reflection = XzHuInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// XzHuInfo

// required .msg_maj.hu_way huway = 1;
bool XzHuInfo::has_huway() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void XzHuInfo::set_has_huway() {
  _has_bits_[0] |= 0x00000001u;
}
void XzHuInfo::clear_has_huway() {
  _has_bits_[0] &= ~0x00000001u;
}
void XzHuInfo::clear_huway() {
  huway_ = 0;
  clear_has_huway();
}
 ::msg_maj::hu_way XzHuInfo::huway() const {
  // @@protoc_insertion_point(field_get:msg_maj.XzHuInfo.huway)
  return static_cast< ::msg_maj::hu_way >(huway_);
}
 void XzHuInfo::set_huway(::msg_maj::hu_way value) {
  assert(::msg_maj::hu_way_IsValid(value));
  set_has_huway();
  huway_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.XzHuInfo.huway)
}

// required .msg_maj.hu_type huType = 2;
bool XzHuInfo::has_hutype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void XzHuInfo::set_has_hutype() {
  _has_bits_[0] |= 0x00000002u;
}
void XzHuInfo::clear_has_hutype() {
  _has_bits_[0] &= ~0x00000002u;
}
void XzHuInfo::clear_hutype() {
  hutype_ = 0;
  clear_has_hutype();
}
 ::msg_maj::hu_type XzHuInfo::hutype() const {
  // @@protoc_insertion_point(field_get:msg_maj.XzHuInfo.huType)
  return static_cast< ::msg_maj::hu_type >(hutype_);
}
 void XzHuInfo::set_hutype(::msg_maj::hu_type value) {
  assert(::msg_maj::hu_type_IsValid(value));
  set_has_hutype();
  hutype_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.XzHuInfo.huType)
}

// repeated uint32 ma_pai_all = 3;
int XzHuInfo::ma_pai_all_size() const {
  return ma_pai_all_.size();
}
void XzHuInfo::clear_ma_pai_all() {
  ma_pai_all_.Clear();
}
 ::google::protobuf::uint32 XzHuInfo::ma_pai_all(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.XzHuInfo.ma_pai_all)
  return ma_pai_all_.Get(index);
}
 void XzHuInfo::set_ma_pai_all(int index, ::google::protobuf::uint32 value) {
  ma_pai_all_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg_maj.XzHuInfo.ma_pai_all)
}
 void XzHuInfo::add_ma_pai_all(::google::protobuf::uint32 value) {
  ma_pai_all_.Add(value);
  // @@protoc_insertion_point(field_add:msg_maj.XzHuInfo.ma_pai_all)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
XzHuInfo::ma_pai_all() const {
  // @@protoc_insertion_point(field_list:msg_maj.XzHuInfo.ma_pai_all)
  return ma_pai_all_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
XzHuInfo::mutable_ma_pai_all() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.XzHuInfo.ma_pai_all)
  return &ma_pai_all_;
}

// repeated uint32 ma_pai_hit = 4;
int XzHuInfo::ma_pai_hit_size() const {
  return ma_pai_hit_.size();
}
void XzHuInfo::clear_ma_pai_hit() {
  ma_pai_hit_.Clear();
}
 ::google::protobuf::uint32 XzHuInfo::ma_pai_hit(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.XzHuInfo.ma_pai_hit)
  return ma_pai_hit_.Get(index);
}
 void XzHuInfo::set_ma_pai_hit(int index, ::google::protobuf::uint32 value) {
  ma_pai_hit_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg_maj.XzHuInfo.ma_pai_hit)
}
 void XzHuInfo::add_ma_pai_hit(::google::protobuf::uint32 value) {
  ma_pai_hit_.Add(value);
  // @@protoc_insertion_point(field_add:msg_maj.XzHuInfo.ma_pai_hit)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
XzHuInfo::ma_pai_hit() const {
  // @@protoc_insertion_point(field_list:msg_maj.XzHuInfo.ma_pai_hit)
  return ma_pai_hit_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
XzHuInfo::mutable_ma_pai_hit() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.XzHuInfo.ma_pai_hit)
  return &ma_pai_hit_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XlHuInfo::kHuwayFieldNumber;
const int XlHuInfo::kHuTypeFieldNumber;
const int XlHuInfo::kMaPaiAllFieldNumber;
const int XlHuInfo::kMaPaiHitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XlHuInfo::XlHuInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.XlHuInfo)
}

void XlHuInfo::InitAsDefaultInstance() {
}

XlHuInfo::XlHuInfo(const XlHuInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.XlHuInfo)
}

void XlHuInfo::SharedCtor() {
  _cached_size_ = 0;
  huway_ = 0;
  hutype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

XlHuInfo::~XlHuInfo() {
  // @@protoc_insertion_point(destructor:msg_maj.XlHuInfo)
  SharedDtor();
}

void XlHuInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void XlHuInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XlHuInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return XlHuInfo_descriptor_;
}

const XlHuInfo& XlHuInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmaj_2eproto();
  return *default_instance_;
}

XlHuInfo* XlHuInfo::default_instance_ = NULL;

XlHuInfo* XlHuInfo::New(::google::protobuf::Arena* arena) const {
  XlHuInfo* n = new XlHuInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XlHuInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.XlHuInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(XlHuInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<XlHuInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(huway_, hutype_);

#undef ZR_HELPER_
#undef ZR_

  ma_pai_all_.Clear();
  ma_pai_hit_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool XlHuInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.XlHuInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .msg_maj.hu_way huway = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::msg_maj::hu_way_IsValid(value)) {
            set_huway(static_cast< ::msg_maj::hu_way >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_huType;
        break;
      }

      // required .msg_maj.hu_type huType = 2;
      case 2: {
        if (tag == 16) {
         parse_huType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::msg_maj::hu_type_IsValid(value)) {
            set_hutype(static_cast< ::msg_maj::hu_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ma_pai_all;
        break;
      }

      // repeated uint32 ma_pai_all = 3;
      case 3: {
        if (tag == 24) {
         parse_ma_pai_all:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24, input, this->mutable_ma_pai_all())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_ma_pai_all())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ma_pai_all;
        if (input->ExpectTag(32)) goto parse_ma_pai_hit;
        break;
      }

      // repeated uint32 ma_pai_hit = 4;
      case 4: {
        if (tag == 32) {
         parse_ma_pai_hit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 32, input, this->mutable_ma_pai_hit())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_ma_pai_hit())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_ma_pai_hit;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.XlHuInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.XlHuInfo)
  return false;
#undef DO_
}

void XlHuInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.XlHuInfo)
  // required .msg_maj.hu_way huway = 1;
  if (has_huway()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->huway(), output);
  }

  // required .msg_maj.hu_type huType = 2;
  if (has_hutype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->hutype(), output);
  }

  // repeated uint32 ma_pai_all = 3;
  for (int i = 0; i < this->ma_pai_all_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->ma_pai_all(i), output);
  }

  // repeated uint32 ma_pai_hit = 4;
  for (int i = 0; i < this->ma_pai_hit_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      4, this->ma_pai_hit(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.XlHuInfo)
}

::google::protobuf::uint8* XlHuInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.XlHuInfo)
  // required .msg_maj.hu_way huway = 1;
  if (has_huway()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->huway(), target);
  }

  // required .msg_maj.hu_type huType = 2;
  if (has_hutype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->hutype(), target);
  }

  // repeated uint32 ma_pai_all = 3;
  for (int i = 0; i < this->ma_pai_all_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(3, this->ma_pai_all(i), target);
  }

  // repeated uint32 ma_pai_hit = 4;
  for (int i = 0; i < this->ma_pai_hit_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(4, this->ma_pai_hit(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.XlHuInfo)
  return target;
}

int XlHuInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:msg_maj.XlHuInfo)
  int total_size = 0;

  if (has_huway()) {
    // required .msg_maj.hu_way huway = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->huway());
  }

  if (has_hutype()) {
    // required .msg_maj.hu_type huType = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->hutype());
  }

  return total_size;
}
int XlHuInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.XlHuInfo)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .msg_maj.hu_way huway = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->huway());

    // required .msg_maj.hu_type huType = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->hutype());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated uint32 ma_pai_all = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->ma_pai_all_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->ma_pai_all(i));
    }
    total_size += 1 * this->ma_pai_all_size() + data_size;
  }

  // repeated uint32 ma_pai_hit = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->ma_pai_hit_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->ma_pai_hit(i));
    }
    total_size += 1 * this->ma_pai_hit_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XlHuInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.XlHuInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const XlHuInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const XlHuInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.XlHuInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.XlHuInfo)
    MergeFrom(*source);
  }
}

void XlHuInfo::MergeFrom(const XlHuInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.XlHuInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  ma_pai_all_.MergeFrom(from.ma_pai_all_);
  ma_pai_hit_.MergeFrom(from.ma_pai_hit_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_huway()) {
      set_huway(from.huway());
    }
    if (from.has_hutype()) {
      set_hutype(from.hutype());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void XlHuInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.XlHuInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XlHuInfo::CopyFrom(const XlHuInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.XlHuInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XlHuInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void XlHuInfo::Swap(XlHuInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XlHuInfo::InternalSwap(XlHuInfo* other) {
  std::swap(huway_, other->huway_);
  std::swap(hutype_, other->hutype_);
  ma_pai_all_.UnsafeArenaSwap(&other->ma_pai_all_);
  ma_pai_hit_.UnsafeArenaSwap(&other->ma_pai_hit_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XlHuInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = XlHuInfo_descriptor_;
  metadata.reflection = XlHuInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// XlHuInfo

// required .msg_maj.hu_way huway = 1;
bool XlHuInfo::has_huway() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void XlHuInfo::set_has_huway() {
  _has_bits_[0] |= 0x00000001u;
}
void XlHuInfo::clear_has_huway() {
  _has_bits_[0] &= ~0x00000001u;
}
void XlHuInfo::clear_huway() {
  huway_ = 0;
  clear_has_huway();
}
 ::msg_maj::hu_way XlHuInfo::huway() const {
  // @@protoc_insertion_point(field_get:msg_maj.XlHuInfo.huway)
  return static_cast< ::msg_maj::hu_way >(huway_);
}
 void XlHuInfo::set_huway(::msg_maj::hu_way value) {
  assert(::msg_maj::hu_way_IsValid(value));
  set_has_huway();
  huway_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.XlHuInfo.huway)
}

// required .msg_maj.hu_type huType = 2;
bool XlHuInfo::has_hutype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void XlHuInfo::set_has_hutype() {
  _has_bits_[0] |= 0x00000002u;
}
void XlHuInfo::clear_has_hutype() {
  _has_bits_[0] &= ~0x00000002u;
}
void XlHuInfo::clear_hutype() {
  hutype_ = 0;
  clear_has_hutype();
}
 ::msg_maj::hu_type XlHuInfo::hutype() const {
  // @@protoc_insertion_point(field_get:msg_maj.XlHuInfo.huType)
  return static_cast< ::msg_maj::hu_type >(hutype_);
}
 void XlHuInfo::set_hutype(::msg_maj::hu_type value) {
  assert(::msg_maj::hu_type_IsValid(value));
  set_has_hutype();
  hutype_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.XlHuInfo.huType)
}

// repeated uint32 ma_pai_all = 3;
int XlHuInfo::ma_pai_all_size() const {
  return ma_pai_all_.size();
}
void XlHuInfo::clear_ma_pai_all() {
  ma_pai_all_.Clear();
}
 ::google::protobuf::uint32 XlHuInfo::ma_pai_all(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.XlHuInfo.ma_pai_all)
  return ma_pai_all_.Get(index);
}
 void XlHuInfo::set_ma_pai_all(int index, ::google::protobuf::uint32 value) {
  ma_pai_all_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg_maj.XlHuInfo.ma_pai_all)
}
 void XlHuInfo::add_ma_pai_all(::google::protobuf::uint32 value) {
  ma_pai_all_.Add(value);
  // @@protoc_insertion_point(field_add:msg_maj.XlHuInfo.ma_pai_all)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
XlHuInfo::ma_pai_all() const {
  // @@protoc_insertion_point(field_list:msg_maj.XlHuInfo.ma_pai_all)
  return ma_pai_all_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
XlHuInfo::mutable_ma_pai_all() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.XlHuInfo.ma_pai_all)
  return &ma_pai_all_;
}

// repeated uint32 ma_pai_hit = 4;
int XlHuInfo::ma_pai_hit_size() const {
  return ma_pai_hit_.size();
}
void XlHuInfo::clear_ma_pai_hit() {
  ma_pai_hit_.Clear();
}
 ::google::protobuf::uint32 XlHuInfo::ma_pai_hit(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.XlHuInfo.ma_pai_hit)
  return ma_pai_hit_.Get(index);
}
 void XlHuInfo::set_ma_pai_hit(int index, ::google::protobuf::uint32 value) {
  ma_pai_hit_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg_maj.XlHuInfo.ma_pai_hit)
}
 void XlHuInfo::add_ma_pai_hit(::google::protobuf::uint32 value) {
  ma_pai_hit_.Add(value);
  // @@protoc_insertion_point(field_add:msg_maj.XlHuInfo.ma_pai_hit)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
XlHuInfo::ma_pai_hit() const {
  // @@protoc_insertion_point(field_list:msg_maj.XlHuInfo.ma_pai_hit)
  return ma_pai_hit_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
XlHuInfo::mutable_ma_pai_hit() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.XlHuInfo.ma_pai_hit)
  return &ma_pai_hit_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HuInfo::kGameTypeFieldNumber;
const int HuInfo::kYlInfoFieldNumber;
const int HuInfo::kBbInfoFieldNumber;
const int HuInfo::kLcInfoFieldNumber;
const int HuInfo::kXzInfoFieldNumber;
const int HuInfo::kXlInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HuInfo::HuInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.HuInfo)
}

void HuInfo::InitAsDefaultInstance() {
  yl_info_ = const_cast< ::msg_maj::YlHuInfo*>(&::msg_maj::YlHuInfo::default_instance());
  bb_info_ = const_cast< ::msg_maj::BbHuInfo*>(&::msg_maj::BbHuInfo::default_instance());
  lc_info_ = const_cast< ::msg_maj::LcHuInfo*>(&::msg_maj::LcHuInfo::default_instance());
  xz_info_ = const_cast< ::msg_maj::XzHuInfo*>(&::msg_maj::XzHuInfo::default_instance());
  xl_info_ = const_cast< ::msg_maj::XlHuInfo*>(&::msg_maj::XlHuInfo::default_instance());
}

HuInfo::HuInfo(const HuInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.HuInfo)
}

void HuInfo::SharedCtor() {
  _cached_size_ = 0;
  game_type_ = 0u;
  yl_info_ = NULL;
  bb_info_ = NULL;
  lc_info_ = NULL;
  xz_info_ = NULL;
  xl_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HuInfo::~HuInfo() {
  // @@protoc_insertion_point(destructor:msg_maj.HuInfo)
  SharedDtor();
}

void HuInfo::SharedDtor() {
  if (this != default_instance_) {
    delete yl_info_;
    delete bb_info_;
    delete lc_info_;
    delete xz_info_;
    delete xl_info_;
  }
}

void HuInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HuInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HuInfo_descriptor_;
}

const HuInfo& HuInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmaj_2eproto();
  return *default_instance_;
}

HuInfo* HuInfo::default_instance_ = NULL;

HuInfo* HuInfo::New(::google::protobuf::Arena* arena) const {
  HuInfo* n = new HuInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HuInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.HuInfo)
  if (_has_bits_[0 / 32] & 63u) {
    game_type_ = 0u;
    if (has_yl_info()) {
      if (yl_info_ != NULL) yl_info_->::msg_maj::YlHuInfo::Clear();
    }
    if (has_bb_info()) {
      if (bb_info_ != NULL) bb_info_->::msg_maj::BbHuInfo::Clear();
    }
    if (has_lc_info()) {
      if (lc_info_ != NULL) lc_info_->::msg_maj::LcHuInfo::Clear();
    }
    if (has_xz_info()) {
      if (xz_info_ != NULL) xz_info_->::msg_maj::XzHuInfo::Clear();
    }
    if (has_xl_info()) {
      if (xl_info_ != NULL) xl_info_->::msg_maj::XlHuInfo::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool HuInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.HuInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 game_type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &game_type_)));
          set_has_game_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_yl_info;
        break;
      }

      // optional .msg_maj.YlHuInfo yl_info = 2;
      case 2: {
        if (tag == 18) {
         parse_yl_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_yl_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_bb_info;
        break;
      }

      // optional .msg_maj.BbHuInfo bb_info = 3;
      case 3: {
        if (tag == 26) {
         parse_bb_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bb_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_lc_info;
        break;
      }

      // optional .msg_maj.LcHuInfo lc_info = 4;
      case 4: {
        if (tag == 34) {
         parse_lc_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_lc_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_xz_info;
        break;
      }

      // optional .msg_maj.XzHuInfo xz_info = 5;
      case 5: {
        if (tag == 42) {
         parse_xz_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_xz_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_xl_info;
        break;
      }

      // optional .msg_maj.XlHuInfo xl_info = 6;
      case 6: {
        if (tag == 50) {
         parse_xl_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_xl_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.HuInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.HuInfo)
  return false;
#undef DO_
}

void HuInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.HuInfo)
  // required uint32 game_type = 1;
  if (has_game_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->game_type(), output);
  }

  // optional .msg_maj.YlHuInfo yl_info = 2;
  if (has_yl_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->yl_info_, output);
  }

  // optional .msg_maj.BbHuInfo bb_info = 3;
  if (has_bb_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->bb_info_, output);
  }

  // optional .msg_maj.LcHuInfo lc_info = 4;
  if (has_lc_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->lc_info_, output);
  }

  // optional .msg_maj.XzHuInfo xz_info = 5;
  if (has_xz_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->xz_info_, output);
  }

  // optional .msg_maj.XlHuInfo xl_info = 6;
  if (has_xl_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->xl_info_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.HuInfo)
}

::google::protobuf::uint8* HuInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.HuInfo)
  // required uint32 game_type = 1;
  if (has_game_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->game_type(), target);
  }

  // optional .msg_maj.YlHuInfo yl_info = 2;
  if (has_yl_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->yl_info_, false, target);
  }

  // optional .msg_maj.BbHuInfo bb_info = 3;
  if (has_bb_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->bb_info_, false, target);
  }

  // optional .msg_maj.LcHuInfo lc_info = 4;
  if (has_lc_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->lc_info_, false, target);
  }

  // optional .msg_maj.XzHuInfo xz_info = 5;
  if (has_xz_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->xz_info_, false, target);
  }

  // optional .msg_maj.XlHuInfo xl_info = 6;
  if (has_xl_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->xl_info_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.HuInfo)
  return target;
}

int HuInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.HuInfo)
  int total_size = 0;

  // required uint32 game_type = 1;
  if (has_game_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->game_type());
  }
  if (_has_bits_[1 / 32] & 62u) {
    // optional .msg_maj.YlHuInfo yl_info = 2;
    if (has_yl_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->yl_info_);
    }

    // optional .msg_maj.BbHuInfo bb_info = 3;
    if (has_bb_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->bb_info_);
    }

    // optional .msg_maj.LcHuInfo lc_info = 4;
    if (has_lc_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->lc_info_);
    }

    // optional .msg_maj.XzHuInfo xz_info = 5;
    if (has_xz_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->xz_info_);
    }

    // optional .msg_maj.XlHuInfo xl_info = 6;
    if (has_xl_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->xl_info_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HuInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.HuInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const HuInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const HuInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.HuInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.HuInfo)
    MergeFrom(*source);
  }
}

void HuInfo::MergeFrom(const HuInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.HuInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_game_type()) {
      set_game_type(from.game_type());
    }
    if (from.has_yl_info()) {
      mutable_yl_info()->::msg_maj::YlHuInfo::MergeFrom(from.yl_info());
    }
    if (from.has_bb_info()) {
      mutable_bb_info()->::msg_maj::BbHuInfo::MergeFrom(from.bb_info());
    }
    if (from.has_lc_info()) {
      mutable_lc_info()->::msg_maj::LcHuInfo::MergeFrom(from.lc_info());
    }
    if (from.has_xz_info()) {
      mutable_xz_info()->::msg_maj::XzHuInfo::MergeFrom(from.xz_info());
    }
    if (from.has_xl_info()) {
      mutable_xl_info()->::msg_maj::XlHuInfo::MergeFrom(from.xl_info());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void HuInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.HuInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HuInfo::CopyFrom(const HuInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.HuInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HuInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_yl_info()) {
    if (!this->yl_info_->IsInitialized()) return false;
  }
  if (has_bb_info()) {
    if (!this->bb_info_->IsInitialized()) return false;
  }
  if (has_lc_info()) {
    if (!this->lc_info_->IsInitialized()) return false;
  }
  if (has_xz_info()) {
    if (!this->xz_info_->IsInitialized()) return false;
  }
  if (has_xl_info()) {
    if (!this->xl_info_->IsInitialized()) return false;
  }
  return true;
}

void HuInfo::Swap(HuInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HuInfo::InternalSwap(HuInfo* other) {
  std::swap(game_type_, other->game_type_);
  std::swap(yl_info_, other->yl_info_);
  std::swap(bb_info_, other->bb_info_);
  std::swap(lc_info_, other->lc_info_);
  std::swap(xz_info_, other->xz_info_);
  std::swap(xl_info_, other->xl_info_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HuInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HuInfo_descriptor_;
  metadata.reflection = HuInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HuInfo

// required uint32 game_type = 1;
bool HuInfo::has_game_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void HuInfo::set_has_game_type() {
  _has_bits_[0] |= 0x00000001u;
}
void HuInfo::clear_has_game_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void HuInfo::clear_game_type() {
  game_type_ = 0u;
  clear_has_game_type();
}
 ::google::protobuf::uint32 HuInfo::game_type() const {
  // @@protoc_insertion_point(field_get:msg_maj.HuInfo.game_type)
  return game_type_;
}
 void HuInfo::set_game_type(::google::protobuf::uint32 value) {
  set_has_game_type();
  game_type_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.HuInfo.game_type)
}

// optional .msg_maj.YlHuInfo yl_info = 2;
bool HuInfo::has_yl_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void HuInfo::set_has_yl_info() {
  _has_bits_[0] |= 0x00000002u;
}
void HuInfo::clear_has_yl_info() {
  _has_bits_[0] &= ~0x00000002u;
}
void HuInfo::clear_yl_info() {
  if (yl_info_ != NULL) yl_info_->::msg_maj::YlHuInfo::Clear();
  clear_has_yl_info();
}
const ::msg_maj::YlHuInfo& HuInfo::yl_info() const {
  // @@protoc_insertion_point(field_get:msg_maj.HuInfo.yl_info)
  return yl_info_ != NULL ? *yl_info_ : *default_instance_->yl_info_;
}
::msg_maj::YlHuInfo* HuInfo::mutable_yl_info() {
  set_has_yl_info();
  if (yl_info_ == NULL) {
    yl_info_ = new ::msg_maj::YlHuInfo;
  }
  // @@protoc_insertion_point(field_mutable:msg_maj.HuInfo.yl_info)
  return yl_info_;
}
::msg_maj::YlHuInfo* HuInfo::release_yl_info() {
  // @@protoc_insertion_point(field_release:msg_maj.HuInfo.yl_info)
  clear_has_yl_info();
  ::msg_maj::YlHuInfo* temp = yl_info_;
  yl_info_ = NULL;
  return temp;
}
void HuInfo::set_allocated_yl_info(::msg_maj::YlHuInfo* yl_info) {
  delete yl_info_;
  yl_info_ = yl_info;
  if (yl_info) {
    set_has_yl_info();
  } else {
    clear_has_yl_info();
  }
  // @@protoc_insertion_point(field_set_allocated:msg_maj.HuInfo.yl_info)
}

// optional .msg_maj.BbHuInfo bb_info = 3;
bool HuInfo::has_bb_info() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void HuInfo::set_has_bb_info() {
  _has_bits_[0] |= 0x00000004u;
}
void HuInfo::clear_has_bb_info() {
  _has_bits_[0] &= ~0x00000004u;
}
void HuInfo::clear_bb_info() {
  if (bb_info_ != NULL) bb_info_->::msg_maj::BbHuInfo::Clear();
  clear_has_bb_info();
}
const ::msg_maj::BbHuInfo& HuInfo::bb_info() const {
  // @@protoc_insertion_point(field_get:msg_maj.HuInfo.bb_info)
  return bb_info_ != NULL ? *bb_info_ : *default_instance_->bb_info_;
}
::msg_maj::BbHuInfo* HuInfo::mutable_bb_info() {
  set_has_bb_info();
  if (bb_info_ == NULL) {
    bb_info_ = new ::msg_maj::BbHuInfo;
  }
  // @@protoc_insertion_point(field_mutable:msg_maj.HuInfo.bb_info)
  return bb_info_;
}
::msg_maj::BbHuInfo* HuInfo::release_bb_info() {
  // @@protoc_insertion_point(field_release:msg_maj.HuInfo.bb_info)
  clear_has_bb_info();
  ::msg_maj::BbHuInfo* temp = bb_info_;
  bb_info_ = NULL;
  return temp;
}
void HuInfo::set_allocated_bb_info(::msg_maj::BbHuInfo* bb_info) {
  delete bb_info_;
  bb_info_ = bb_info;
  if (bb_info) {
    set_has_bb_info();
  } else {
    clear_has_bb_info();
  }
  // @@protoc_insertion_point(field_set_allocated:msg_maj.HuInfo.bb_info)
}

// optional .msg_maj.LcHuInfo lc_info = 4;
bool HuInfo::has_lc_info() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void HuInfo::set_has_lc_info() {
  _has_bits_[0] |= 0x00000008u;
}
void HuInfo::clear_has_lc_info() {
  _has_bits_[0] &= ~0x00000008u;
}
void HuInfo::clear_lc_info() {
  if (lc_info_ != NULL) lc_info_->::msg_maj::LcHuInfo::Clear();
  clear_has_lc_info();
}
const ::msg_maj::LcHuInfo& HuInfo::lc_info() const {
  // @@protoc_insertion_point(field_get:msg_maj.HuInfo.lc_info)
  return lc_info_ != NULL ? *lc_info_ : *default_instance_->lc_info_;
}
::msg_maj::LcHuInfo* HuInfo::mutable_lc_info() {
  set_has_lc_info();
  if (lc_info_ == NULL) {
    lc_info_ = new ::msg_maj::LcHuInfo;
  }
  // @@protoc_insertion_point(field_mutable:msg_maj.HuInfo.lc_info)
  return lc_info_;
}
::msg_maj::LcHuInfo* HuInfo::release_lc_info() {
  // @@protoc_insertion_point(field_release:msg_maj.HuInfo.lc_info)
  clear_has_lc_info();
  ::msg_maj::LcHuInfo* temp = lc_info_;
  lc_info_ = NULL;
  return temp;
}
void HuInfo::set_allocated_lc_info(::msg_maj::LcHuInfo* lc_info) {
  delete lc_info_;
  lc_info_ = lc_info;
  if (lc_info) {
    set_has_lc_info();
  } else {
    clear_has_lc_info();
  }
  // @@protoc_insertion_point(field_set_allocated:msg_maj.HuInfo.lc_info)
}

// optional .msg_maj.XzHuInfo xz_info = 5;
bool HuInfo::has_xz_info() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void HuInfo::set_has_xz_info() {
  _has_bits_[0] |= 0x00000010u;
}
void HuInfo::clear_has_xz_info() {
  _has_bits_[0] &= ~0x00000010u;
}
void HuInfo::clear_xz_info() {
  if (xz_info_ != NULL) xz_info_->::msg_maj::XzHuInfo::Clear();
  clear_has_xz_info();
}
const ::msg_maj::XzHuInfo& HuInfo::xz_info() const {
  // @@protoc_insertion_point(field_get:msg_maj.HuInfo.xz_info)
  return xz_info_ != NULL ? *xz_info_ : *default_instance_->xz_info_;
}
::msg_maj::XzHuInfo* HuInfo::mutable_xz_info() {
  set_has_xz_info();
  if (xz_info_ == NULL) {
    xz_info_ = new ::msg_maj::XzHuInfo;
  }
  // @@protoc_insertion_point(field_mutable:msg_maj.HuInfo.xz_info)
  return xz_info_;
}
::msg_maj::XzHuInfo* HuInfo::release_xz_info() {
  // @@protoc_insertion_point(field_release:msg_maj.HuInfo.xz_info)
  clear_has_xz_info();
  ::msg_maj::XzHuInfo* temp = xz_info_;
  xz_info_ = NULL;
  return temp;
}
void HuInfo::set_allocated_xz_info(::msg_maj::XzHuInfo* xz_info) {
  delete xz_info_;
  xz_info_ = xz_info;
  if (xz_info) {
    set_has_xz_info();
  } else {
    clear_has_xz_info();
  }
  // @@protoc_insertion_point(field_set_allocated:msg_maj.HuInfo.xz_info)
}

// optional .msg_maj.XlHuInfo xl_info = 6;
bool HuInfo::has_xl_info() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void HuInfo::set_has_xl_info() {
  _has_bits_[0] |= 0x00000020u;
}
void HuInfo::clear_has_xl_info() {
  _has_bits_[0] &= ~0x00000020u;
}
void HuInfo::clear_xl_info() {
  if (xl_info_ != NULL) xl_info_->::msg_maj::XlHuInfo::Clear();
  clear_has_xl_info();
}
const ::msg_maj::XlHuInfo& HuInfo::xl_info() const {
  // @@protoc_insertion_point(field_get:msg_maj.HuInfo.xl_info)
  return xl_info_ != NULL ? *xl_info_ : *default_instance_->xl_info_;
}
::msg_maj::XlHuInfo* HuInfo::mutable_xl_info() {
  set_has_xl_info();
  if (xl_info_ == NULL) {
    xl_info_ = new ::msg_maj::XlHuInfo;
  }
  // @@protoc_insertion_point(field_mutable:msg_maj.HuInfo.xl_info)
  return xl_info_;
}
::msg_maj::XlHuInfo* HuInfo::release_xl_info() {
  // @@protoc_insertion_point(field_release:msg_maj.HuInfo.xl_info)
  clear_has_xl_info();
  ::msg_maj::XlHuInfo* temp = xl_info_;
  xl_info_ = NULL;
  return temp;
}
void HuInfo::set_allocated_xl_info(::msg_maj::XlHuInfo* xl_info) {
  delete xl_info_;
  xl_info_ = xl_info;
  if (xl_info) {
    set_has_xl_info();
  } else {
    clear_has_xl_info();
  }
  // @@protoc_insertion_point(field_set_allocated:msg_maj.HuInfo.xl_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SameIpSeats::kSeatFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SameIpSeats::SameIpSeats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.SameIpSeats)
}

void SameIpSeats::InitAsDefaultInstance() {
}

SameIpSeats::SameIpSeats(const SameIpSeats& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.SameIpSeats)
}

void SameIpSeats::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SameIpSeats::~SameIpSeats() {
  // @@protoc_insertion_point(destructor:msg_maj.SameIpSeats)
  SharedDtor();
}

void SameIpSeats::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SameIpSeats::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SameIpSeats::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SameIpSeats_descriptor_;
}

const SameIpSeats& SameIpSeats::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmaj_2eproto();
  return *default_instance_;
}

SameIpSeats* SameIpSeats::default_instance_ = NULL;

SameIpSeats* SameIpSeats::New(::google::protobuf::Arena* arena) const {
  SameIpSeats* n = new SameIpSeats;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SameIpSeats::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.SameIpSeats)
  seat_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SameIpSeats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.SameIpSeats)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 seat = 1;
      case 1: {
        if (tag == 8) {
         parse_seat:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8, input, this->mutable_seat())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_seat())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_seat;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.SameIpSeats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.SameIpSeats)
  return false;
#undef DO_
}

void SameIpSeats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.SameIpSeats)
  // repeated uint32 seat = 1;
  for (int i = 0; i < this->seat_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->seat(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.SameIpSeats)
}

::google::protobuf::uint8* SameIpSeats::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.SameIpSeats)
  // repeated uint32 seat = 1;
  for (int i = 0; i < this->seat_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(1, this->seat(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.SameIpSeats)
  return target;
}

int SameIpSeats::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.SameIpSeats)
  int total_size = 0;

  // repeated uint32 seat = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->seat_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->seat(i));
    }
    total_size += 1 * this->seat_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SameIpSeats::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.SameIpSeats)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SameIpSeats* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SameIpSeats>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.SameIpSeats)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.SameIpSeats)
    MergeFrom(*source);
  }
}

void SameIpSeats::MergeFrom(const SameIpSeats& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.SameIpSeats)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  seat_.MergeFrom(from.seat_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SameIpSeats::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.SameIpSeats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SameIpSeats::CopyFrom(const SameIpSeats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.SameIpSeats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SameIpSeats::IsInitialized() const {

  return true;
}

void SameIpSeats::Swap(SameIpSeats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SameIpSeats::InternalSwap(SameIpSeats* other) {
  seat_.UnsafeArenaSwap(&other->seat_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SameIpSeats::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SameIpSeats_descriptor_;
  metadata.reflection = SameIpSeats_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SameIpSeats

// repeated uint32 seat = 1;
int SameIpSeats::seat_size() const {
  return seat_.size();
}
void SameIpSeats::clear_seat() {
  seat_.Clear();
}
 ::google::protobuf::uint32 SameIpSeats::seat(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.SameIpSeats.seat)
  return seat_.Get(index);
}
 void SameIpSeats::set_seat(int index, ::google::protobuf::uint32 value) {
  seat_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg_maj.SameIpSeats.seat)
}
 void SameIpSeats::add_seat(::google::protobuf::uint32 value) {
  seat_.Add(value);
  // @@protoc_insertion_point(field_add:msg_maj.SameIpSeats.seat)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SameIpSeats::seat() const {
  // @@protoc_insertion_point(field_list:msg_maj.SameIpSeats.seat)
  return seat_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SameIpSeats::mutable_seat() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.SameIpSeats.seat)
  return &seat_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuickMessageReq::kMsgIndexFieldNumber;
const int QuickMessageReq::kSeatFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuickMessageReq::QuickMessageReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.QuickMessageReq)
}

void QuickMessageReq::InitAsDefaultInstance() {
}

QuickMessageReq::QuickMessageReq(const QuickMessageReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.QuickMessageReq)
}

void QuickMessageReq::SharedCtor() {
  _cached_size_ = 0;
  msg_index_ = 0u;
  seat_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QuickMessageReq::~QuickMessageReq() {
  // @@protoc_insertion_point(destructor:msg_maj.QuickMessageReq)
  SharedDtor();
}

void QuickMessageReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void QuickMessageReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuickMessageReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QuickMessageReq_descriptor_;
}

const QuickMessageReq& QuickMessageReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmaj_2eproto();
  return *default_instance_;
}

QuickMessageReq* QuickMessageReq::default_instance_ = NULL;

QuickMessageReq* QuickMessageReq::New(::google::protobuf::Arena* arena) const {
  QuickMessageReq* n = new QuickMessageReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuickMessageReq::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.QuickMessageReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(QuickMessageReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<QuickMessageReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(msg_index_, seat_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QuickMessageReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.QuickMessageReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 msg_index = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msg_index_)));
          set_has_msg_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_seat;
        break;
      }

      // required uint32 seat = 2;
      case 2: {
        if (tag == 16) {
         parse_seat:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seat_)));
          set_has_seat();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.QuickMessageReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.QuickMessageReq)
  return false;
#undef DO_
}

void QuickMessageReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.QuickMessageReq)
  // required uint32 msg_index = 1;
  if (has_msg_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->msg_index(), output);
  }

  // required uint32 seat = 2;
  if (has_seat()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->seat(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.QuickMessageReq)
}

::google::protobuf::uint8* QuickMessageReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.QuickMessageReq)
  // required uint32 msg_index = 1;
  if (has_msg_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->msg_index(), target);
  }

  // required uint32 seat = 2;
  if (has_seat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->seat(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.QuickMessageReq)
  return target;
}

int QuickMessageReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:msg_maj.QuickMessageReq)
  int total_size = 0;

  if (has_msg_index()) {
    // required uint32 msg_index = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msg_index());
  }

  if (has_seat()) {
    // required uint32 seat = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->seat());
  }

  return total_size;
}
int QuickMessageReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.QuickMessageReq)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint32 msg_index = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msg_index());

    // required uint32 seat = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->seat());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuickMessageReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.QuickMessageReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const QuickMessageReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const QuickMessageReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.QuickMessageReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.QuickMessageReq)
    MergeFrom(*source);
  }
}

void QuickMessageReq::MergeFrom(const QuickMessageReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.QuickMessageReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msg_index()) {
      set_msg_index(from.msg_index());
    }
    if (from.has_seat()) {
      set_seat(from.seat());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void QuickMessageReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.QuickMessageReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuickMessageReq::CopyFrom(const QuickMessageReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.QuickMessageReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuickMessageReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void QuickMessageReq::Swap(QuickMessageReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuickMessageReq::InternalSwap(QuickMessageReq* other) {
  std::swap(msg_index_, other->msg_index_);
  std::swap(seat_, other->seat_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuickMessageReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QuickMessageReq_descriptor_;
  metadata.reflection = QuickMessageReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuickMessageReq

// required uint32 msg_index = 1;
bool QuickMessageReq::has_msg_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QuickMessageReq::set_has_msg_index() {
  _has_bits_[0] |= 0x00000001u;
}
void QuickMessageReq::clear_has_msg_index() {
  _has_bits_[0] &= ~0x00000001u;
}
void QuickMessageReq::clear_msg_index() {
  msg_index_ = 0u;
  clear_has_msg_index();
}
 ::google::protobuf::uint32 QuickMessageReq::msg_index() const {
  // @@protoc_insertion_point(field_get:msg_maj.QuickMessageReq.msg_index)
  return msg_index_;
}
 void QuickMessageReq::set_msg_index(::google::protobuf::uint32 value) {
  set_has_msg_index();
  msg_index_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.QuickMessageReq.msg_index)
}

// required uint32 seat = 2;
bool QuickMessageReq::has_seat() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void QuickMessageReq::set_has_seat() {
  _has_bits_[0] |= 0x00000002u;
}
void QuickMessageReq::clear_has_seat() {
  _has_bits_[0] &= ~0x00000002u;
}
void QuickMessageReq::clear_seat() {
  seat_ = 0u;
  clear_has_seat();
}
 ::google::protobuf::uint32 QuickMessageReq::seat() const {
  // @@protoc_insertion_point(field_get:msg_maj.QuickMessageReq.seat)
  return seat_;
}
 void QuickMessageReq::set_seat(::google::protobuf::uint32 value) {
  set_has_seat();
  seat_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.QuickMessageReq.seat)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuickMessageResp::kRetFieldNumber;
const int QuickMessageResp::kMsgIndexFieldNumber;
const int QuickMessageResp::kSeatFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuickMessageResp::QuickMessageResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.QuickMessageResp)
}

void QuickMessageResp::InitAsDefaultInstance() {
}

QuickMessageResp::QuickMessageResp(const QuickMessageResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.QuickMessageResp)
}

void QuickMessageResp::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0u;
  msg_index_ = 0u;
  seat_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QuickMessageResp::~QuickMessageResp() {
  // @@protoc_insertion_point(destructor:msg_maj.QuickMessageResp)
  SharedDtor();
}

void QuickMessageResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void QuickMessageResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuickMessageResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QuickMessageResp_descriptor_;
}

const QuickMessageResp& QuickMessageResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmaj_2eproto();
  return *default_instance_;
}

QuickMessageResp* QuickMessageResp::default_instance_ = NULL;

QuickMessageResp* QuickMessageResp::New(::google::protobuf::Arena* arena) const {
  QuickMessageResp* n = new QuickMessageResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuickMessageResp::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.QuickMessageResp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(QuickMessageResp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<QuickMessageResp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(ret_, seat_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QuickMessageResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.QuickMessageResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 ret = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_msg_index;
        break;
      }

      // required uint32 msg_index = 2;
      case 2: {
        if (tag == 16) {
         parse_msg_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msg_index_)));
          set_has_msg_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_seat;
        break;
      }

      // required uint32 seat = 3;
      case 3: {
        if (tag == 24) {
         parse_seat:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seat_)));
          set_has_seat();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.QuickMessageResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.QuickMessageResp)
  return false;
#undef DO_
}

void QuickMessageResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.QuickMessageResp)
  // required uint32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ret(), output);
  }

  // required uint32 msg_index = 2;
  if (has_msg_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->msg_index(), output);
  }

  // required uint32 seat = 3;
  if (has_seat()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->seat(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.QuickMessageResp)
}

::google::protobuf::uint8* QuickMessageResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.QuickMessageResp)
  // required uint32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ret(), target);
  }

  // required uint32 msg_index = 2;
  if (has_msg_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->msg_index(), target);
  }

  // required uint32 seat = 3;
  if (has_seat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->seat(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.QuickMessageResp)
  return target;
}

int QuickMessageResp::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:msg_maj.QuickMessageResp)
  int total_size = 0;

  if (has_ret()) {
    // required uint32 ret = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ret());
  }

  if (has_msg_index()) {
    // required uint32 msg_index = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msg_index());
  }

  if (has_seat()) {
    // required uint32 seat = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->seat());
  }

  return total_size;
}
int QuickMessageResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.QuickMessageResp)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required uint32 ret = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ret());

    // required uint32 msg_index = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msg_index());

    // required uint32 seat = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->seat());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuickMessageResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.QuickMessageResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const QuickMessageResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const QuickMessageResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.QuickMessageResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.QuickMessageResp)
    MergeFrom(*source);
  }
}

void QuickMessageResp::MergeFrom(const QuickMessageResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.QuickMessageResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_msg_index()) {
      set_msg_index(from.msg_index());
    }
    if (from.has_seat()) {
      set_seat(from.seat());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void QuickMessageResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.QuickMessageResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuickMessageResp::CopyFrom(const QuickMessageResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.QuickMessageResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuickMessageResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void QuickMessageResp::Swap(QuickMessageResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuickMessageResp::InternalSwap(QuickMessageResp* other) {
  std::swap(ret_, other->ret_);
  std::swap(msg_index_, other->msg_index_);
  std::swap(seat_, other->seat_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuickMessageResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QuickMessageResp_descriptor_;
  metadata.reflection = QuickMessageResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuickMessageResp

// required uint32 ret = 1;
bool QuickMessageResp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QuickMessageResp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
void QuickMessageResp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
void QuickMessageResp::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
 ::google::protobuf::uint32 QuickMessageResp::ret() const {
  // @@protoc_insertion_point(field_get:msg_maj.QuickMessageResp.ret)
  return ret_;
}
 void QuickMessageResp::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.QuickMessageResp.ret)
}

// required uint32 msg_index = 2;
bool QuickMessageResp::has_msg_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void QuickMessageResp::set_has_msg_index() {
  _has_bits_[0] |= 0x00000002u;
}
void QuickMessageResp::clear_has_msg_index() {
  _has_bits_[0] &= ~0x00000002u;
}
void QuickMessageResp::clear_msg_index() {
  msg_index_ = 0u;
  clear_has_msg_index();
}
 ::google::protobuf::uint32 QuickMessageResp::msg_index() const {
  // @@protoc_insertion_point(field_get:msg_maj.QuickMessageResp.msg_index)
  return msg_index_;
}
 void QuickMessageResp::set_msg_index(::google::protobuf::uint32 value) {
  set_has_msg_index();
  msg_index_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.QuickMessageResp.msg_index)
}

// required uint32 seat = 3;
bool QuickMessageResp::has_seat() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void QuickMessageResp::set_has_seat() {
  _has_bits_[0] |= 0x00000004u;
}
void QuickMessageResp::clear_has_seat() {
  _has_bits_[0] &= ~0x00000004u;
}
void QuickMessageResp::clear_seat() {
  seat_ = 0u;
  clear_has_seat();
}
 ::google::protobuf::uint32 QuickMessageResp::seat() const {
  // @@protoc_insertion_point(field_get:msg_maj.QuickMessageResp.seat)
  return seat_;
}
 void QuickMessageResp::set_seat(::google::protobuf::uint32 value) {
  set_has_seat();
  seat_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.QuickMessageResp.seat)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NotifyPlayerEvent::kEventListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NotifyPlayerEvent::NotifyPlayerEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.NotifyPlayerEvent)
}

void NotifyPlayerEvent::InitAsDefaultInstance() {
}

NotifyPlayerEvent::NotifyPlayerEvent(const NotifyPlayerEvent& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.NotifyPlayerEvent)
}

void NotifyPlayerEvent::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotifyPlayerEvent::~NotifyPlayerEvent() {
  // @@protoc_insertion_point(destructor:msg_maj.NotifyPlayerEvent)
  SharedDtor();
}

void NotifyPlayerEvent::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NotifyPlayerEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifyPlayerEvent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifyPlayerEvent_descriptor_;
}

const NotifyPlayerEvent& NotifyPlayerEvent::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmaj_2eproto();
  return *default_instance_;
}

NotifyPlayerEvent* NotifyPlayerEvent::default_instance_ = NULL;

NotifyPlayerEvent* NotifyPlayerEvent::New(::google::protobuf::Arena* arena) const {
  NotifyPlayerEvent* n = new NotifyPlayerEvent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NotifyPlayerEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.NotifyPlayerEvent)
  event_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool NotifyPlayerEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.NotifyPlayerEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .msg_maj.EventInfo event_list = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_event_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_event_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_event_list;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.NotifyPlayerEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.NotifyPlayerEvent)
  return false;
#undef DO_
}

void NotifyPlayerEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.NotifyPlayerEvent)
  // repeated .msg_maj.EventInfo event_list = 1;
  for (unsigned int i = 0, n = this->event_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->event_list(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.NotifyPlayerEvent)
}

::google::protobuf::uint8* NotifyPlayerEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.NotifyPlayerEvent)
  // repeated .msg_maj.EventInfo event_list = 1;
  for (unsigned int i = 0, n = this->event_list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->event_list(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.NotifyPlayerEvent)
  return target;
}

int NotifyPlayerEvent::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.NotifyPlayerEvent)
  int total_size = 0;

  // repeated .msg_maj.EventInfo event_list = 1;
  total_size += 1 * this->event_list_size();
  for (int i = 0; i < this->event_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->event_list(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifyPlayerEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.NotifyPlayerEvent)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const NotifyPlayerEvent* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const NotifyPlayerEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.NotifyPlayerEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.NotifyPlayerEvent)
    MergeFrom(*source);
  }
}

void NotifyPlayerEvent::MergeFrom(const NotifyPlayerEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.NotifyPlayerEvent)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  event_list_.MergeFrom(from.event_list_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void NotifyPlayerEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.NotifyPlayerEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyPlayerEvent::CopyFrom(const NotifyPlayerEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.NotifyPlayerEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyPlayerEvent::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->event_list())) return false;
  return true;
}

void NotifyPlayerEvent::Swap(NotifyPlayerEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NotifyPlayerEvent::InternalSwap(NotifyPlayerEvent* other) {
  event_list_.UnsafeArenaSwap(&other->event_list_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NotifyPlayerEvent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifyPlayerEvent_descriptor_;
  metadata.reflection = NotifyPlayerEvent_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NotifyPlayerEvent

// repeated .msg_maj.EventInfo event_list = 1;
int NotifyPlayerEvent::event_list_size() const {
  return event_list_.size();
}
void NotifyPlayerEvent::clear_event_list() {
  event_list_.Clear();
}
const ::msg_maj::EventInfo& NotifyPlayerEvent::event_list(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.NotifyPlayerEvent.event_list)
  return event_list_.Get(index);
}
::msg_maj::EventInfo* NotifyPlayerEvent::mutable_event_list(int index) {
  // @@protoc_insertion_point(field_mutable:msg_maj.NotifyPlayerEvent.event_list)
  return event_list_.Mutable(index);
}
::msg_maj::EventInfo* NotifyPlayerEvent::add_event_list() {
  // @@protoc_insertion_point(field_add:msg_maj.NotifyPlayerEvent.event_list)
  return event_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::msg_maj::EventInfo >*
NotifyPlayerEvent::mutable_event_list() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.NotifyPlayerEvent.event_list)
  return &event_list_;
}
const ::google::protobuf::RepeatedPtrField< ::msg_maj::EventInfo >&
NotifyPlayerEvent::event_list() const {
  // @@protoc_insertion_point(field_list:msg_maj.NotifyPlayerEvent.event_list)
  return event_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NotifyGhostPaiListResult::kGameTypeFieldNumber;
const int NotifyGhostPaiListResult::kDeskTileCountFieldNumber;
const int NotifyGhostPaiListResult::kFanPaiFieldNumber;
const int NotifyGhostPaiListResult::kGhostPaiFieldNumber;
const int NotifyGhostPaiListResult::kIsDisconnFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NotifyGhostPaiListResult::NotifyGhostPaiListResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.NotifyGhostPaiListResult)
}

void NotifyGhostPaiListResult::InitAsDefaultInstance() {
}

NotifyGhostPaiListResult::NotifyGhostPaiListResult(const NotifyGhostPaiListResult& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.NotifyGhostPaiListResult)
}

void NotifyGhostPaiListResult::SharedCtor() {
  _cached_size_ = 0;
  game_type_ = 0;
  desk_tile_count_ = 0;
  fan_pai_ = 0;
  is_disconn_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotifyGhostPaiListResult::~NotifyGhostPaiListResult() {
  // @@protoc_insertion_point(destructor:msg_maj.NotifyGhostPaiListResult)
  SharedDtor();
}

void NotifyGhostPaiListResult::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NotifyGhostPaiListResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifyGhostPaiListResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifyGhostPaiListResult_descriptor_;
}

const NotifyGhostPaiListResult& NotifyGhostPaiListResult::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmaj_2eproto();
  return *default_instance_;
}

NotifyGhostPaiListResult* NotifyGhostPaiListResult::default_instance_ = NULL;

NotifyGhostPaiListResult* NotifyGhostPaiListResult::New(::google::protobuf::Arena* arena) const {
  NotifyGhostPaiListResult* n = new NotifyGhostPaiListResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NotifyGhostPaiListResult::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.NotifyGhostPaiListResult)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(NotifyGhostPaiListResult, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<NotifyGhostPaiListResult*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(game_type_, desk_tile_count_);
  ZR_(fan_pai_, is_disconn_);

#undef ZR_HELPER_
#undef ZR_

  ghost_pai_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool NotifyGhostPaiListResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.NotifyGhostPaiListResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 game_type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &game_type_)));
          set_has_game_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_desk_tile_count;
        break;
      }

      // required int32 desk_tile_count = 2;
      case 2: {
        if (tag == 16) {
         parse_desk_tile_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &desk_tile_count_)));
          set_has_desk_tile_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_fan_pai;
        break;
      }

      // required int32 fan_pai = 3;
      case 3: {
        if (tag == 24) {
         parse_fan_pai:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fan_pai_)));
          set_has_fan_pai();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_ghost_pai;
        break;
      }

      // repeated int32 ghost_pai = 4;
      case 4: {
        if (tag == 32) {
         parse_ghost_pai:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32, input, this->mutable_ghost_pai())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_ghost_pai())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_ghost_pai;
        if (input->ExpectTag(40)) goto parse_is_disconn;
        break;
      }

      // required bool is_disconn = 5;
      case 5: {
        if (tag == 40) {
         parse_is_disconn:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_disconn_)));
          set_has_is_disconn();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.NotifyGhostPaiListResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.NotifyGhostPaiListResult)
  return false;
#undef DO_
}

void NotifyGhostPaiListResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.NotifyGhostPaiListResult)
  // required int32 game_type = 1;
  if (has_game_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->game_type(), output);
  }

  // required int32 desk_tile_count = 2;
  if (has_desk_tile_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->desk_tile_count(), output);
  }

  // required int32 fan_pai = 3;
  if (has_fan_pai()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->fan_pai(), output);
  }

  // repeated int32 ghost_pai = 4;
  for (int i = 0; i < this->ghost_pai_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->ghost_pai(i), output);
  }

  // required bool is_disconn = 5;
  if (has_is_disconn()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->is_disconn(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.NotifyGhostPaiListResult)
}

::google::protobuf::uint8* NotifyGhostPaiListResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.NotifyGhostPaiListResult)
  // required int32 game_type = 1;
  if (has_game_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->game_type(), target);
  }

  // required int32 desk_tile_count = 2;
  if (has_desk_tile_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->desk_tile_count(), target);
  }

  // required int32 fan_pai = 3;
  if (has_fan_pai()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->fan_pai(), target);
  }

  // repeated int32 ghost_pai = 4;
  for (int i = 0; i < this->ghost_pai_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(4, this->ghost_pai(i), target);
  }

  // required bool is_disconn = 5;
  if (has_is_disconn()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->is_disconn(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.NotifyGhostPaiListResult)
  return target;
}

int NotifyGhostPaiListResult::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:msg_maj.NotifyGhostPaiListResult)
  int total_size = 0;

  if (has_game_type()) {
    // required int32 game_type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->game_type());
  }

  if (has_desk_tile_count()) {
    // required int32 desk_tile_count = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->desk_tile_count());
  }

  if (has_fan_pai()) {
    // required int32 fan_pai = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fan_pai());
  }

  if (has_is_disconn()) {
    // required bool is_disconn = 5;
    total_size += 1 + 1;
  }

  return total_size;
}
int NotifyGhostPaiListResult::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.NotifyGhostPaiListResult)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000017) ^ 0x00000017) == 0) {  // All required fields are present.
    // required int32 game_type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->game_type());

    // required int32 desk_tile_count = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->desk_tile_count());

    // required int32 fan_pai = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fan_pai());

    // required bool is_disconn = 5;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated int32 ghost_pai = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->ghost_pai_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->ghost_pai(i));
    }
    total_size += 1 * this->ghost_pai_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifyGhostPaiListResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.NotifyGhostPaiListResult)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const NotifyGhostPaiListResult* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const NotifyGhostPaiListResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.NotifyGhostPaiListResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.NotifyGhostPaiListResult)
    MergeFrom(*source);
  }
}

void NotifyGhostPaiListResult::MergeFrom(const NotifyGhostPaiListResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.NotifyGhostPaiListResult)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  ghost_pai_.MergeFrom(from.ghost_pai_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_game_type()) {
      set_game_type(from.game_type());
    }
    if (from.has_desk_tile_count()) {
      set_desk_tile_count(from.desk_tile_count());
    }
    if (from.has_fan_pai()) {
      set_fan_pai(from.fan_pai());
    }
    if (from.has_is_disconn()) {
      set_is_disconn(from.is_disconn());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void NotifyGhostPaiListResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.NotifyGhostPaiListResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyGhostPaiListResult::CopyFrom(const NotifyGhostPaiListResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.NotifyGhostPaiListResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyGhostPaiListResult::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000017) != 0x00000017) return false;

  return true;
}

void NotifyGhostPaiListResult::Swap(NotifyGhostPaiListResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NotifyGhostPaiListResult::InternalSwap(NotifyGhostPaiListResult* other) {
  std::swap(game_type_, other->game_type_);
  std::swap(desk_tile_count_, other->desk_tile_count_);
  std::swap(fan_pai_, other->fan_pai_);
  ghost_pai_.UnsafeArenaSwap(&other->ghost_pai_);
  std::swap(is_disconn_, other->is_disconn_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NotifyGhostPaiListResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifyGhostPaiListResult_descriptor_;
  metadata.reflection = NotifyGhostPaiListResult_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NotifyGhostPaiListResult

// required int32 game_type = 1;
bool NotifyGhostPaiListResult::has_game_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void NotifyGhostPaiListResult::set_has_game_type() {
  _has_bits_[0] |= 0x00000001u;
}
void NotifyGhostPaiListResult::clear_has_game_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void NotifyGhostPaiListResult::clear_game_type() {
  game_type_ = 0;
  clear_has_game_type();
}
 ::google::protobuf::int32 NotifyGhostPaiListResult::game_type() const {
  // @@protoc_insertion_point(field_get:msg_maj.NotifyGhostPaiListResult.game_type)
  return game_type_;
}
 void NotifyGhostPaiListResult::set_game_type(::google::protobuf::int32 value) {
  set_has_game_type();
  game_type_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.NotifyGhostPaiListResult.game_type)
}

// required int32 desk_tile_count = 2;
bool NotifyGhostPaiListResult::has_desk_tile_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void NotifyGhostPaiListResult::set_has_desk_tile_count() {
  _has_bits_[0] |= 0x00000002u;
}
void NotifyGhostPaiListResult::clear_has_desk_tile_count() {
  _has_bits_[0] &= ~0x00000002u;
}
void NotifyGhostPaiListResult::clear_desk_tile_count() {
  desk_tile_count_ = 0;
  clear_has_desk_tile_count();
}
 ::google::protobuf::int32 NotifyGhostPaiListResult::desk_tile_count() const {
  // @@protoc_insertion_point(field_get:msg_maj.NotifyGhostPaiListResult.desk_tile_count)
  return desk_tile_count_;
}
 void NotifyGhostPaiListResult::set_desk_tile_count(::google::protobuf::int32 value) {
  set_has_desk_tile_count();
  desk_tile_count_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.NotifyGhostPaiListResult.desk_tile_count)
}

// required int32 fan_pai = 3;
bool NotifyGhostPaiListResult::has_fan_pai() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void NotifyGhostPaiListResult::set_has_fan_pai() {
  _has_bits_[0] |= 0x00000004u;
}
void NotifyGhostPaiListResult::clear_has_fan_pai() {
  _has_bits_[0] &= ~0x00000004u;
}
void NotifyGhostPaiListResult::clear_fan_pai() {
  fan_pai_ = 0;
  clear_has_fan_pai();
}
 ::google::protobuf::int32 NotifyGhostPaiListResult::fan_pai() const {
  // @@protoc_insertion_point(field_get:msg_maj.NotifyGhostPaiListResult.fan_pai)
  return fan_pai_;
}
 void NotifyGhostPaiListResult::set_fan_pai(::google::protobuf::int32 value) {
  set_has_fan_pai();
  fan_pai_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.NotifyGhostPaiListResult.fan_pai)
}

// repeated int32 ghost_pai = 4;
int NotifyGhostPaiListResult::ghost_pai_size() const {
  return ghost_pai_.size();
}
void NotifyGhostPaiListResult::clear_ghost_pai() {
  ghost_pai_.Clear();
}
 ::google::protobuf::int32 NotifyGhostPaiListResult::ghost_pai(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.NotifyGhostPaiListResult.ghost_pai)
  return ghost_pai_.Get(index);
}
 void NotifyGhostPaiListResult::set_ghost_pai(int index, ::google::protobuf::int32 value) {
  ghost_pai_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg_maj.NotifyGhostPaiListResult.ghost_pai)
}
 void NotifyGhostPaiListResult::add_ghost_pai(::google::protobuf::int32 value) {
  ghost_pai_.Add(value);
  // @@protoc_insertion_point(field_add:msg_maj.NotifyGhostPaiListResult.ghost_pai)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
NotifyGhostPaiListResult::ghost_pai() const {
  // @@protoc_insertion_point(field_list:msg_maj.NotifyGhostPaiListResult.ghost_pai)
  return ghost_pai_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
NotifyGhostPaiListResult::mutable_ghost_pai() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.NotifyGhostPaiListResult.ghost_pai)
  return &ghost_pai_;
}

// required bool is_disconn = 5;
bool NotifyGhostPaiListResult::has_is_disconn() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void NotifyGhostPaiListResult::set_has_is_disconn() {
  _has_bits_[0] |= 0x00000010u;
}
void NotifyGhostPaiListResult::clear_has_is_disconn() {
  _has_bits_[0] &= ~0x00000010u;
}
void NotifyGhostPaiListResult::clear_is_disconn() {
  is_disconn_ = false;
  clear_has_is_disconn();
}
 bool NotifyGhostPaiListResult::is_disconn() const {
  // @@protoc_insertion_point(field_get:msg_maj.NotifyGhostPaiListResult.is_disconn)
  return is_disconn_;
}
 void NotifyGhostPaiListResult::set_is_disconn(bool value) {
  set_has_is_disconn();
  is_disconn_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.NotifyGhostPaiListResult.is_disconn)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NotifyGenzhuang::NotifyGenzhuang()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.NotifyGenzhuang)
}

void NotifyGenzhuang::InitAsDefaultInstance() {
}

NotifyGenzhuang::NotifyGenzhuang(const NotifyGenzhuang& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.NotifyGenzhuang)
}

void NotifyGenzhuang::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotifyGenzhuang::~NotifyGenzhuang() {
  // @@protoc_insertion_point(destructor:msg_maj.NotifyGenzhuang)
  SharedDtor();
}

void NotifyGenzhuang::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NotifyGenzhuang::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifyGenzhuang::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifyGenzhuang_descriptor_;
}

const NotifyGenzhuang& NotifyGenzhuang::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmaj_2eproto();
  return *default_instance_;
}

NotifyGenzhuang* NotifyGenzhuang::default_instance_ = NULL;

NotifyGenzhuang* NotifyGenzhuang::New(::google::protobuf::Arena* arena) const {
  NotifyGenzhuang* n = new NotifyGenzhuang;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NotifyGenzhuang::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.NotifyGenzhuang)
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool NotifyGenzhuang::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.NotifyGenzhuang)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.NotifyGenzhuang)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.NotifyGenzhuang)
  return false;
#undef DO_
}

void NotifyGenzhuang::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.NotifyGenzhuang)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.NotifyGenzhuang)
}

::google::protobuf::uint8* NotifyGenzhuang::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.NotifyGenzhuang)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.NotifyGenzhuang)
  return target;
}

int NotifyGenzhuang::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.NotifyGenzhuang)
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifyGenzhuang::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.NotifyGenzhuang)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const NotifyGenzhuang* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const NotifyGenzhuang>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.NotifyGenzhuang)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.NotifyGenzhuang)
    MergeFrom(*source);
  }
}

void NotifyGenzhuang::MergeFrom(const NotifyGenzhuang& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.NotifyGenzhuang)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void NotifyGenzhuang::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.NotifyGenzhuang)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyGenzhuang::CopyFrom(const NotifyGenzhuang& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.NotifyGenzhuang)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyGenzhuang::IsInitialized() const {

  return true;
}

void NotifyGenzhuang::Swap(NotifyGenzhuang* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NotifyGenzhuang::InternalSwap(NotifyGenzhuang* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NotifyGenzhuang::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifyGenzhuang_descriptor_;
  metadata.reflection = NotifyGenzhuang_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NotifyGenzhuang

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AskSanZhang::kLesstypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AskSanZhang::AskSanZhang()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.AskSanZhang)
}

void AskSanZhang::InitAsDefaultInstance() {
}

AskSanZhang::AskSanZhang(const AskSanZhang& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.AskSanZhang)
}

void AskSanZhang::SharedCtor() {
  _cached_size_ = 0;
  lesstype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AskSanZhang::~AskSanZhang() {
  // @@protoc_insertion_point(destructor:msg_maj.AskSanZhang)
  SharedDtor();
}

void AskSanZhang::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AskSanZhang::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AskSanZhang::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AskSanZhang_descriptor_;
}

const AskSanZhang& AskSanZhang::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmaj_2eproto();
  return *default_instance_;
}

AskSanZhang* AskSanZhang::default_instance_ = NULL;

AskSanZhang* AskSanZhang::New(::google::protobuf::Arena* arena) const {
  AskSanZhang* n = new AskSanZhang;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AskSanZhang::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.AskSanZhang)
  lesstype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool AskSanZhang::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.AskSanZhang)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 lesstype = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lesstype_)));
          set_has_lesstype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.AskSanZhang)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.AskSanZhang)
  return false;
#undef DO_
}

void AskSanZhang::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.AskSanZhang)
  // required int32 lesstype = 1;
  if (has_lesstype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->lesstype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.AskSanZhang)
}

::google::protobuf::uint8* AskSanZhang::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.AskSanZhang)
  // required int32 lesstype = 1;
  if (has_lesstype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->lesstype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.AskSanZhang)
  return target;
}

int AskSanZhang::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.AskSanZhang)
  int total_size = 0;

  // required int32 lesstype = 1;
  if (has_lesstype()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lesstype());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AskSanZhang::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.AskSanZhang)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AskSanZhang* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AskSanZhang>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.AskSanZhang)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.AskSanZhang)
    MergeFrom(*source);
  }
}

void AskSanZhang::MergeFrom(const AskSanZhang& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.AskSanZhang)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_lesstype()) {
      set_lesstype(from.lesstype());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void AskSanZhang::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.AskSanZhang)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AskSanZhang::CopyFrom(const AskSanZhang& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.AskSanZhang)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AskSanZhang::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void AskSanZhang::Swap(AskSanZhang* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AskSanZhang::InternalSwap(AskSanZhang* other) {
  std::swap(lesstype_, other->lesstype_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AskSanZhang::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AskSanZhang_descriptor_;
  metadata.reflection = AskSanZhang_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AskSanZhang

// required int32 lesstype = 1;
bool AskSanZhang::has_lesstype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AskSanZhang::set_has_lesstype() {
  _has_bits_[0] |= 0x00000001u;
}
void AskSanZhang::clear_has_lesstype() {
  _has_bits_[0] &= ~0x00000001u;
}
void AskSanZhang::clear_lesstype() {
  lesstype_ = 0;
  clear_has_lesstype();
}
 ::google::protobuf::int32 AskSanZhang::lesstype() const {
  // @@protoc_insertion_point(field_get:msg_maj.AskSanZhang.lesstype)
  return lesstype_;
}
 void AskSanZhang::set_lesstype(::google::protobuf::int32 value) {
  set_has_lesstype();
  lesstype_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.AskSanZhang.lesstype)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HuanSanZhangReq::kSeatFieldNumber;
const int HuanSanZhangReq::kTypeFieldNumber;
const int HuanSanZhangReq::kPaisFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HuanSanZhangReq::HuanSanZhangReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.HuanSanZhangReq)
}

void HuanSanZhangReq::InitAsDefaultInstance() {
}

HuanSanZhangReq::HuanSanZhangReq(const HuanSanZhangReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.HuanSanZhangReq)
}

void HuanSanZhangReq::SharedCtor() {
  _cached_size_ = 0;
  seat_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HuanSanZhangReq::~HuanSanZhangReq() {
  // @@protoc_insertion_point(destructor:msg_maj.HuanSanZhangReq)
  SharedDtor();
}

void HuanSanZhangReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HuanSanZhangReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HuanSanZhangReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HuanSanZhangReq_descriptor_;
}

const HuanSanZhangReq& HuanSanZhangReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmaj_2eproto();
  return *default_instance_;
}

HuanSanZhangReq* HuanSanZhangReq::default_instance_ = NULL;

HuanSanZhangReq* HuanSanZhangReq::New(::google::protobuf::Arena* arena) const {
  HuanSanZhangReq* n = new HuanSanZhangReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HuanSanZhangReq::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.HuanSanZhangReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(HuanSanZhangReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<HuanSanZhangReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(seat_, type_);

#undef ZR_HELPER_
#undef ZR_

  pais_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool HuanSanZhangReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.HuanSanZhangReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 seat = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &seat_)));
          set_has_seat();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // required int32 type = 2;
      case 2: {
        if (tag == 16) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_pais;
        break;
      }

      // repeated int32 pais = 3;
      case 3: {
        if (tag == 24) {
         parse_pais:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_pais())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_pais())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_pais;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.HuanSanZhangReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.HuanSanZhangReq)
  return false;
#undef DO_
}

void HuanSanZhangReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.HuanSanZhangReq)
  // required int32 seat = 1;
  if (has_seat()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->seat(), output);
  }

  // required int32 type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }

  // repeated int32 pais = 3;
  for (int i = 0; i < this->pais_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->pais(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.HuanSanZhangReq)
}

::google::protobuf::uint8* HuanSanZhangReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.HuanSanZhangReq)
  // required int32 seat = 1;
  if (has_seat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->seat(), target);
  }

  // required int32 type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }

  // repeated int32 pais = 3;
  for (int i = 0; i < this->pais_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->pais(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.HuanSanZhangReq)
  return target;
}

int HuanSanZhangReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:msg_maj.HuanSanZhangReq)
  int total_size = 0;

  if (has_seat()) {
    // required int32 seat = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->seat());
  }

  if (has_type()) {
    // required int32 type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  return total_size;
}
int HuanSanZhangReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.HuanSanZhangReq)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 seat = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->seat());

    // required int32 type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated int32 pais = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->pais_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->pais(i));
    }
    total_size += 1 * this->pais_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HuanSanZhangReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.HuanSanZhangReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const HuanSanZhangReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const HuanSanZhangReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.HuanSanZhangReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.HuanSanZhangReq)
    MergeFrom(*source);
  }
}

void HuanSanZhangReq::MergeFrom(const HuanSanZhangReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.HuanSanZhangReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  pais_.MergeFrom(from.pais_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_seat()) {
      set_seat(from.seat());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void HuanSanZhangReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.HuanSanZhangReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HuanSanZhangReq::CopyFrom(const HuanSanZhangReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.HuanSanZhangReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HuanSanZhangReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void HuanSanZhangReq::Swap(HuanSanZhangReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HuanSanZhangReq::InternalSwap(HuanSanZhangReq* other) {
  std::swap(seat_, other->seat_);
  std::swap(type_, other->type_);
  pais_.UnsafeArenaSwap(&other->pais_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HuanSanZhangReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HuanSanZhangReq_descriptor_;
  metadata.reflection = HuanSanZhangReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HuanSanZhangReq

// required int32 seat = 1;
bool HuanSanZhangReq::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void HuanSanZhangReq::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
void HuanSanZhangReq::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
void HuanSanZhangReq::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
 ::google::protobuf::int32 HuanSanZhangReq::seat() const {
  // @@protoc_insertion_point(field_get:msg_maj.HuanSanZhangReq.seat)
  return seat_;
}
 void HuanSanZhangReq::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.HuanSanZhangReq.seat)
}

// required int32 type = 2;
bool HuanSanZhangReq::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void HuanSanZhangReq::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
void HuanSanZhangReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void HuanSanZhangReq::clear_type() {
  type_ = 0;
  clear_has_type();
}
 ::google::protobuf::int32 HuanSanZhangReq::type() const {
  // @@protoc_insertion_point(field_get:msg_maj.HuanSanZhangReq.type)
  return type_;
}
 void HuanSanZhangReq::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.HuanSanZhangReq.type)
}

// repeated int32 pais = 3;
int HuanSanZhangReq::pais_size() const {
  return pais_.size();
}
void HuanSanZhangReq::clear_pais() {
  pais_.Clear();
}
 ::google::protobuf::int32 HuanSanZhangReq::pais(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.HuanSanZhangReq.pais)
  return pais_.Get(index);
}
 void HuanSanZhangReq::set_pais(int index, ::google::protobuf::int32 value) {
  pais_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg_maj.HuanSanZhangReq.pais)
}
 void HuanSanZhangReq::add_pais(::google::protobuf::int32 value) {
  pais_.Add(value);
  // @@protoc_insertion_point(field_add:msg_maj.HuanSanZhangReq.pais)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
HuanSanZhangReq::pais() const {
  // @@protoc_insertion_point(field_list:msg_maj.HuanSanZhangReq.pais)
  return pais_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
HuanSanZhangReq::mutable_pais() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.HuanSanZhangReq.pais)
  return &pais_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HuanSanZhangNotify::kDirectFieldNumber;
const int HuanSanZhangNotify::kSeatFieldNumber;
const int HuanSanZhangNotify::kTypeFieldNumber;
const int HuanSanZhangNotify::kPaisFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HuanSanZhangNotify::HuanSanZhangNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.HuanSanZhangNotify)
}

void HuanSanZhangNotify::InitAsDefaultInstance() {
}

HuanSanZhangNotify::HuanSanZhangNotify(const HuanSanZhangNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.HuanSanZhangNotify)
}

void HuanSanZhangNotify::SharedCtor() {
  _cached_size_ = 0;
  direct_ = 0;
  seat_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HuanSanZhangNotify::~HuanSanZhangNotify() {
  // @@protoc_insertion_point(destructor:msg_maj.HuanSanZhangNotify)
  SharedDtor();
}

void HuanSanZhangNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HuanSanZhangNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HuanSanZhangNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HuanSanZhangNotify_descriptor_;
}

const HuanSanZhangNotify& HuanSanZhangNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmaj_2eproto();
  return *default_instance_;
}

HuanSanZhangNotify* HuanSanZhangNotify::default_instance_ = NULL;

HuanSanZhangNotify* HuanSanZhangNotify::New(::google::protobuf::Arena* arena) const {
  HuanSanZhangNotify* n = new HuanSanZhangNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HuanSanZhangNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.HuanSanZhangNotify)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(HuanSanZhangNotify, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<HuanSanZhangNotify*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 7u) {
    ZR_(direct_, seat_);
    type_ = 0;
  }

#undef ZR_HELPER_
#undef ZR_

  pais_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool HuanSanZhangNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.HuanSanZhangNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 direct = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &direct_)));
          set_has_direct();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_seat;
        break;
      }

      // required int32 seat = 2;
      case 2: {
        if (tag == 16) {
         parse_seat:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &seat_)));
          set_has_seat();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_type;
        break;
      }

      // required int32 type = 3;
      case 3: {
        if (tag == 24) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_pais;
        break;
      }

      // repeated int32 pais = 4;
      case 4: {
        if (tag == 32) {
         parse_pais:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32, input, this->mutable_pais())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_pais())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_pais;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.HuanSanZhangNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.HuanSanZhangNotify)
  return false;
#undef DO_
}

void HuanSanZhangNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.HuanSanZhangNotify)
  // required int32 direct = 1;
  if (has_direct()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->direct(), output);
  }

  // required int32 seat = 2;
  if (has_seat()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->seat(), output);
  }

  // required int32 type = 3;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->type(), output);
  }

  // repeated int32 pais = 4;
  for (int i = 0; i < this->pais_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->pais(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.HuanSanZhangNotify)
}

::google::protobuf::uint8* HuanSanZhangNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.HuanSanZhangNotify)
  // required int32 direct = 1;
  if (has_direct()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->direct(), target);
  }

  // required int32 seat = 2;
  if (has_seat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->seat(), target);
  }

  // required int32 type = 3;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->type(), target);
  }

  // repeated int32 pais = 4;
  for (int i = 0; i < this->pais_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(4, this->pais(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.HuanSanZhangNotify)
  return target;
}

int HuanSanZhangNotify::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:msg_maj.HuanSanZhangNotify)
  int total_size = 0;

  if (has_direct()) {
    // required int32 direct = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->direct());
  }

  if (has_seat()) {
    // required int32 seat = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->seat());
  }

  if (has_type()) {
    // required int32 type = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  return total_size;
}
int HuanSanZhangNotify::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.HuanSanZhangNotify)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 direct = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->direct());

    // required int32 seat = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->seat());

    // required int32 type = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated int32 pais = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->pais_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->pais(i));
    }
    total_size += 1 * this->pais_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HuanSanZhangNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.HuanSanZhangNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const HuanSanZhangNotify* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const HuanSanZhangNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.HuanSanZhangNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.HuanSanZhangNotify)
    MergeFrom(*source);
  }
}

void HuanSanZhangNotify::MergeFrom(const HuanSanZhangNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.HuanSanZhangNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  pais_.MergeFrom(from.pais_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_direct()) {
      set_direct(from.direct());
    }
    if (from.has_seat()) {
      set_seat(from.seat());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void HuanSanZhangNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.HuanSanZhangNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HuanSanZhangNotify::CopyFrom(const HuanSanZhangNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.HuanSanZhangNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HuanSanZhangNotify::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void HuanSanZhangNotify::Swap(HuanSanZhangNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HuanSanZhangNotify::InternalSwap(HuanSanZhangNotify* other) {
  std::swap(direct_, other->direct_);
  std::swap(seat_, other->seat_);
  std::swap(type_, other->type_);
  pais_.UnsafeArenaSwap(&other->pais_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HuanSanZhangNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HuanSanZhangNotify_descriptor_;
  metadata.reflection = HuanSanZhangNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HuanSanZhangNotify

// required int32 direct = 1;
bool HuanSanZhangNotify::has_direct() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void HuanSanZhangNotify::set_has_direct() {
  _has_bits_[0] |= 0x00000001u;
}
void HuanSanZhangNotify::clear_has_direct() {
  _has_bits_[0] &= ~0x00000001u;
}
void HuanSanZhangNotify::clear_direct() {
  direct_ = 0;
  clear_has_direct();
}
 ::google::protobuf::int32 HuanSanZhangNotify::direct() const {
  // @@protoc_insertion_point(field_get:msg_maj.HuanSanZhangNotify.direct)
  return direct_;
}
 void HuanSanZhangNotify::set_direct(::google::protobuf::int32 value) {
  set_has_direct();
  direct_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.HuanSanZhangNotify.direct)
}

// required int32 seat = 2;
bool HuanSanZhangNotify::has_seat() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void HuanSanZhangNotify::set_has_seat() {
  _has_bits_[0] |= 0x00000002u;
}
void HuanSanZhangNotify::clear_has_seat() {
  _has_bits_[0] &= ~0x00000002u;
}
void HuanSanZhangNotify::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
 ::google::protobuf::int32 HuanSanZhangNotify::seat() const {
  // @@protoc_insertion_point(field_get:msg_maj.HuanSanZhangNotify.seat)
  return seat_;
}
 void HuanSanZhangNotify::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.HuanSanZhangNotify.seat)
}

// required int32 type = 3;
bool HuanSanZhangNotify::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void HuanSanZhangNotify::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
void HuanSanZhangNotify::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
void HuanSanZhangNotify::clear_type() {
  type_ = 0;
  clear_has_type();
}
 ::google::protobuf::int32 HuanSanZhangNotify::type() const {
  // @@protoc_insertion_point(field_get:msg_maj.HuanSanZhangNotify.type)
  return type_;
}
 void HuanSanZhangNotify::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.HuanSanZhangNotify.type)
}

// repeated int32 pais = 4;
int HuanSanZhangNotify::pais_size() const {
  return pais_.size();
}
void HuanSanZhangNotify::clear_pais() {
  pais_.Clear();
}
 ::google::protobuf::int32 HuanSanZhangNotify::pais(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.HuanSanZhangNotify.pais)
  return pais_.Get(index);
}
 void HuanSanZhangNotify::set_pais(int index, ::google::protobuf::int32 value) {
  pais_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg_maj.HuanSanZhangNotify.pais)
}
 void HuanSanZhangNotify::add_pais(::google::protobuf::int32 value) {
  pais_.Add(value);
  // @@protoc_insertion_point(field_add:msg_maj.HuanSanZhangNotify.pais)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
HuanSanZhangNotify::pais() const {
  // @@protoc_insertion_point(field_list:msg_maj.HuanSanZhangNotify.pais)
  return pais_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
HuanSanZhangNotify::mutable_pais() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.HuanSanZhangNotify.pais)
  return &pais_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AskDingQue::kLesstypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AskDingQue::AskDingQue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.AskDingQue)
}

void AskDingQue::InitAsDefaultInstance() {
}

AskDingQue::AskDingQue(const AskDingQue& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.AskDingQue)
}

void AskDingQue::SharedCtor() {
  _cached_size_ = 0;
  lesstype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AskDingQue::~AskDingQue() {
  // @@protoc_insertion_point(destructor:msg_maj.AskDingQue)
  SharedDtor();
}

void AskDingQue::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AskDingQue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AskDingQue::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AskDingQue_descriptor_;
}

const AskDingQue& AskDingQue::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmaj_2eproto();
  return *default_instance_;
}

AskDingQue* AskDingQue::default_instance_ = NULL;

AskDingQue* AskDingQue::New(::google::protobuf::Arena* arena) const {
  AskDingQue* n = new AskDingQue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AskDingQue::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.AskDingQue)
  lesstype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool AskDingQue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.AskDingQue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 lesstype = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lesstype_)));
          set_has_lesstype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.AskDingQue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.AskDingQue)
  return false;
#undef DO_
}

void AskDingQue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.AskDingQue)
  // required int32 lesstype = 1;
  if (has_lesstype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->lesstype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.AskDingQue)
}

::google::protobuf::uint8* AskDingQue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.AskDingQue)
  // required int32 lesstype = 1;
  if (has_lesstype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->lesstype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.AskDingQue)
  return target;
}

int AskDingQue::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.AskDingQue)
  int total_size = 0;

  // required int32 lesstype = 1;
  if (has_lesstype()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lesstype());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AskDingQue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.AskDingQue)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AskDingQue* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AskDingQue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.AskDingQue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.AskDingQue)
    MergeFrom(*source);
  }
}

void AskDingQue::MergeFrom(const AskDingQue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.AskDingQue)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_lesstype()) {
      set_lesstype(from.lesstype());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void AskDingQue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.AskDingQue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AskDingQue::CopyFrom(const AskDingQue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.AskDingQue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AskDingQue::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void AskDingQue::Swap(AskDingQue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AskDingQue::InternalSwap(AskDingQue* other) {
  std::swap(lesstype_, other->lesstype_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AskDingQue::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AskDingQue_descriptor_;
  metadata.reflection = AskDingQue_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AskDingQue

// required int32 lesstype = 1;
bool AskDingQue::has_lesstype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AskDingQue::set_has_lesstype() {
  _has_bits_[0] |= 0x00000001u;
}
void AskDingQue::clear_has_lesstype() {
  _has_bits_[0] &= ~0x00000001u;
}
void AskDingQue::clear_lesstype() {
  lesstype_ = 0;
  clear_has_lesstype();
}
 ::google::protobuf::int32 AskDingQue::lesstype() const {
  // @@protoc_insertion_point(field_get:msg_maj.AskDingQue.lesstype)
  return lesstype_;
}
 void AskDingQue::set_lesstype(::google::protobuf::int32 value) {
  set_has_lesstype();
  lesstype_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.AskDingQue.lesstype)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DingQueReq::kSeatFieldNumber;
const int DingQueReq::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DingQueReq::DingQueReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.DingQueReq)
}

void DingQueReq::InitAsDefaultInstance() {
}

DingQueReq::DingQueReq(const DingQueReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.DingQueReq)
}

void DingQueReq::SharedCtor() {
  _cached_size_ = 0;
  seat_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DingQueReq::~DingQueReq() {
  // @@protoc_insertion_point(destructor:msg_maj.DingQueReq)
  SharedDtor();
}

void DingQueReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DingQueReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DingQueReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DingQueReq_descriptor_;
}

const DingQueReq& DingQueReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmaj_2eproto();
  return *default_instance_;
}

DingQueReq* DingQueReq::default_instance_ = NULL;

DingQueReq* DingQueReq::New(::google::protobuf::Arena* arena) const {
  DingQueReq* n = new DingQueReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DingQueReq::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.DingQueReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(DingQueReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<DingQueReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(seat_, type_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DingQueReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.DingQueReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 seat = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &seat_)));
          set_has_seat();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // required int32 type = 2;
      case 2: {
        if (tag == 16) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.DingQueReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.DingQueReq)
  return false;
#undef DO_
}

void DingQueReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.DingQueReq)
  // required int32 seat = 1;
  if (has_seat()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->seat(), output);
  }

  // required int32 type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.DingQueReq)
}

::google::protobuf::uint8* DingQueReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.DingQueReq)
  // required int32 seat = 1;
  if (has_seat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->seat(), target);
  }

  // required int32 type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.DingQueReq)
  return target;
}

int DingQueReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:msg_maj.DingQueReq)
  int total_size = 0;

  if (has_seat()) {
    // required int32 seat = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->seat());
  }

  if (has_type()) {
    // required int32 type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  return total_size;
}
int DingQueReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.DingQueReq)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 seat = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->seat());

    // required int32 type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DingQueReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.DingQueReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DingQueReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DingQueReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.DingQueReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.DingQueReq)
    MergeFrom(*source);
  }
}

void DingQueReq::MergeFrom(const DingQueReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.DingQueReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_seat()) {
      set_seat(from.seat());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void DingQueReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.DingQueReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DingQueReq::CopyFrom(const DingQueReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.DingQueReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DingQueReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void DingQueReq::Swap(DingQueReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DingQueReq::InternalSwap(DingQueReq* other) {
  std::swap(seat_, other->seat_);
  std::swap(type_, other->type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DingQueReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DingQueReq_descriptor_;
  metadata.reflection = DingQueReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DingQueReq

// required int32 seat = 1;
bool DingQueReq::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DingQueReq::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
void DingQueReq::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
void DingQueReq::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
 ::google::protobuf::int32 DingQueReq::seat() const {
  // @@protoc_insertion_point(field_get:msg_maj.DingQueReq.seat)
  return seat_;
}
 void DingQueReq::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.DingQueReq.seat)
}

// required int32 type = 2;
bool DingQueReq::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DingQueReq::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
void DingQueReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void DingQueReq::clear_type() {
  type_ = 0;
  clear_has_type();
}
 ::google::protobuf::int32 DingQueReq::type() const {
  // @@protoc_insertion_point(field_get:msg_maj.DingQueReq.type)
  return type_;
}
 void DingQueReq::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.DingQueReq.type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DingQueNotify::kQuelistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DingQueNotify::DingQueNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.DingQueNotify)
}

void DingQueNotify::InitAsDefaultInstance() {
}

DingQueNotify::DingQueNotify(const DingQueNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.DingQueNotify)
}

void DingQueNotify::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DingQueNotify::~DingQueNotify() {
  // @@protoc_insertion_point(destructor:msg_maj.DingQueNotify)
  SharedDtor();
}

void DingQueNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DingQueNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DingQueNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DingQueNotify_descriptor_;
}

const DingQueNotify& DingQueNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmaj_2eproto();
  return *default_instance_;
}

DingQueNotify* DingQueNotify::default_instance_ = NULL;

DingQueNotify* DingQueNotify::New(::google::protobuf::Arena* arena) const {
  DingQueNotify* n = new DingQueNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DingQueNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.DingQueNotify)
  quelist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DingQueNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.DingQueNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .msg_maj.DingQueReq quelist = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_quelist:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_quelist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_quelist;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.DingQueNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.DingQueNotify)
  return false;
#undef DO_
}

void DingQueNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.DingQueNotify)
  // repeated .msg_maj.DingQueReq quelist = 1;
  for (unsigned int i = 0, n = this->quelist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->quelist(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.DingQueNotify)
}

::google::protobuf::uint8* DingQueNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.DingQueNotify)
  // repeated .msg_maj.DingQueReq quelist = 1;
  for (unsigned int i = 0, n = this->quelist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->quelist(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.DingQueNotify)
  return target;
}

int DingQueNotify::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.DingQueNotify)
  int total_size = 0;

  // repeated .msg_maj.DingQueReq quelist = 1;
  total_size += 1 * this->quelist_size();
  for (int i = 0; i < this->quelist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->quelist(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DingQueNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.DingQueNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DingQueNotify* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DingQueNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.DingQueNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.DingQueNotify)
    MergeFrom(*source);
  }
}

void DingQueNotify::MergeFrom(const DingQueNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.DingQueNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  quelist_.MergeFrom(from.quelist_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void DingQueNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.DingQueNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DingQueNotify::CopyFrom(const DingQueNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.DingQueNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DingQueNotify::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->quelist())) return false;
  return true;
}

void DingQueNotify::Swap(DingQueNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DingQueNotify::InternalSwap(DingQueNotify* other) {
  quelist_.UnsafeArenaSwap(&other->quelist_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DingQueNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DingQueNotify_descriptor_;
  metadata.reflection = DingQueNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DingQueNotify

// repeated .msg_maj.DingQueReq quelist = 1;
int DingQueNotify::quelist_size() const {
  return quelist_.size();
}
void DingQueNotify::clear_quelist() {
  quelist_.Clear();
}
const ::msg_maj::DingQueReq& DingQueNotify::quelist(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.DingQueNotify.quelist)
  return quelist_.Get(index);
}
::msg_maj::DingQueReq* DingQueNotify::mutable_quelist(int index) {
  // @@protoc_insertion_point(field_mutable:msg_maj.DingQueNotify.quelist)
  return quelist_.Mutable(index);
}
::msg_maj::DingQueReq* DingQueNotify::add_quelist() {
  // @@protoc_insertion_point(field_add:msg_maj.DingQueNotify.quelist)
  return quelist_.Add();
}
::google::protobuf::RepeatedPtrField< ::msg_maj::DingQueReq >*
DingQueNotify::mutable_quelist() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.DingQueNotify.quelist)
  return &quelist_;
}
const ::google::protobuf::RepeatedPtrField< ::msg_maj::DingQueReq >&
DingQueNotify::quelist() const {
  // @@protoc_insertion_point(field_list:msg_maj.DingQueNotify.quelist)
  return quelist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HuPaiListNotify::kSeatFieldNumber;
const int HuPaiListNotify::kTilesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HuPaiListNotify::HuPaiListNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.HuPaiListNotify)
}

void HuPaiListNotify::InitAsDefaultInstance() {
}

HuPaiListNotify::HuPaiListNotify(const HuPaiListNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.HuPaiListNotify)
}

void HuPaiListNotify::SharedCtor() {
  _cached_size_ = 0;
  seat_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HuPaiListNotify::~HuPaiListNotify() {
  // @@protoc_insertion_point(destructor:msg_maj.HuPaiListNotify)
  SharedDtor();
}

void HuPaiListNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HuPaiListNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HuPaiListNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HuPaiListNotify_descriptor_;
}

const HuPaiListNotify& HuPaiListNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmaj_2eproto();
  return *default_instance_;
}

HuPaiListNotify* HuPaiListNotify::default_instance_ = NULL;

HuPaiListNotify* HuPaiListNotify::New(::google::protobuf::Arena* arena) const {
  HuPaiListNotify* n = new HuPaiListNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HuPaiListNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.HuPaiListNotify)
  seat_ = 0;
  tiles_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool HuPaiListNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.HuPaiListNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 seat = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &seat_)));
          set_has_seat();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_tiles;
        break;
      }

      // repeated int32 tiles = 2;
      case 2: {
        if (tag == 16) {
         parse_tiles:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_tiles())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_tiles())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_tiles;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.HuPaiListNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.HuPaiListNotify)
  return false;
#undef DO_
}

void HuPaiListNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.HuPaiListNotify)
  // required int32 seat = 1;
  if (has_seat()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->seat(), output);
  }

  // repeated int32 tiles = 2;
  for (int i = 0; i < this->tiles_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->tiles(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.HuPaiListNotify)
}

::google::protobuf::uint8* HuPaiListNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.HuPaiListNotify)
  // required int32 seat = 1;
  if (has_seat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->seat(), target);
  }

  // repeated int32 tiles = 2;
  for (int i = 0; i < this->tiles_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->tiles(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.HuPaiListNotify)
  return target;
}

int HuPaiListNotify::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.HuPaiListNotify)
  int total_size = 0;

  // required int32 seat = 1;
  if (has_seat()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->seat());
  }
  // repeated int32 tiles = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->tiles_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->tiles(i));
    }
    total_size += 1 * this->tiles_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HuPaiListNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.HuPaiListNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const HuPaiListNotify* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const HuPaiListNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.HuPaiListNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.HuPaiListNotify)
    MergeFrom(*source);
  }
}

void HuPaiListNotify::MergeFrom(const HuPaiListNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.HuPaiListNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  tiles_.MergeFrom(from.tiles_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_seat()) {
      set_seat(from.seat());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void HuPaiListNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.HuPaiListNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HuPaiListNotify::CopyFrom(const HuPaiListNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.HuPaiListNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HuPaiListNotify::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void HuPaiListNotify::Swap(HuPaiListNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HuPaiListNotify::InternalSwap(HuPaiListNotify* other) {
  std::swap(seat_, other->seat_);
  tiles_.UnsafeArenaSwap(&other->tiles_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HuPaiListNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HuPaiListNotify_descriptor_;
  metadata.reflection = HuPaiListNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HuPaiListNotify

// required int32 seat = 1;
bool HuPaiListNotify::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void HuPaiListNotify::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
void HuPaiListNotify::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
void HuPaiListNotify::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
 ::google::protobuf::int32 HuPaiListNotify::seat() const {
  // @@protoc_insertion_point(field_get:msg_maj.HuPaiListNotify.seat)
  return seat_;
}
 void HuPaiListNotify::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.HuPaiListNotify.seat)
}

// repeated int32 tiles = 2;
int HuPaiListNotify::tiles_size() const {
  return tiles_.size();
}
void HuPaiListNotify::clear_tiles() {
  tiles_.Clear();
}
 ::google::protobuf::int32 HuPaiListNotify::tiles(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.HuPaiListNotify.tiles)
  return tiles_.Get(index);
}
 void HuPaiListNotify::set_tiles(int index, ::google::protobuf::int32 value) {
  tiles_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg_maj.HuPaiListNotify.tiles)
}
 void HuPaiListNotify::add_tiles(::google::protobuf::int32 value) {
  tiles_.Add(value);
  // @@protoc_insertion_point(field_add:msg_maj.HuPaiListNotify.tiles)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
HuPaiListNotify::tiles() const {
  // @@protoc_insertion_point(field_list:msg_maj.HuPaiListNotify.tiles)
  return tiles_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
HuPaiListNotify::mutable_tiles() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.HuPaiListNotify.tiles)
  return &tiles_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MyScoreListReq::MyScoreListReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.MyScoreListReq)
}

void MyScoreListReq::InitAsDefaultInstance() {
}

MyScoreListReq::MyScoreListReq(const MyScoreListReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.MyScoreListReq)
}

void MyScoreListReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MyScoreListReq::~MyScoreListReq() {
  // @@protoc_insertion_point(destructor:msg_maj.MyScoreListReq)
  SharedDtor();
}

void MyScoreListReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MyScoreListReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MyScoreListReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MyScoreListReq_descriptor_;
}

const MyScoreListReq& MyScoreListReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmaj_2eproto();
  return *default_instance_;
}

MyScoreListReq* MyScoreListReq::default_instance_ = NULL;

MyScoreListReq* MyScoreListReq::New(::google::protobuf::Arena* arena) const {
  MyScoreListReq* n = new MyScoreListReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MyScoreListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.MyScoreListReq)
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MyScoreListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.MyScoreListReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.MyScoreListReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.MyScoreListReq)
  return false;
#undef DO_
}

void MyScoreListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.MyScoreListReq)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.MyScoreListReq)
}

::google::protobuf::uint8* MyScoreListReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.MyScoreListReq)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.MyScoreListReq)
  return target;
}

int MyScoreListReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.MyScoreListReq)
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MyScoreListReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.MyScoreListReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MyScoreListReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MyScoreListReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.MyScoreListReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.MyScoreListReq)
    MergeFrom(*source);
  }
}

void MyScoreListReq::MergeFrom(const MyScoreListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.MyScoreListReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MyScoreListReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.MyScoreListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MyScoreListReq::CopyFrom(const MyScoreListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.MyScoreListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MyScoreListReq::IsInitialized() const {

  return true;
}

void MyScoreListReq::Swap(MyScoreListReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MyScoreListReq::InternalSwap(MyScoreListReq* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MyScoreListReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MyScoreListReq_descriptor_;
  metadata.reflection = MyScoreListReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MyScoreListReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MyScoreListResp::kMyscoreFieldNumber;
const int MyScoreListResp::kScorelistFieldNumber;
const int MyScoreListResp::kGameTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MyScoreListResp::MyScoreListResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.MyScoreListResp)
}

void MyScoreListResp::InitAsDefaultInstance() {
}

MyScoreListResp::MyScoreListResp(const MyScoreListResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.MyScoreListResp)
}

void MyScoreListResp::SharedCtor() {
  _cached_size_ = 0;
  myscore_ = 0;
  game_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MyScoreListResp::~MyScoreListResp() {
  // @@protoc_insertion_point(destructor:msg_maj.MyScoreListResp)
  SharedDtor();
}

void MyScoreListResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MyScoreListResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MyScoreListResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MyScoreListResp_descriptor_;
}

const MyScoreListResp& MyScoreListResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmaj_2eproto();
  return *default_instance_;
}

MyScoreListResp* MyScoreListResp::default_instance_ = NULL;

MyScoreListResp* MyScoreListResp::New(::google::protobuf::Arena* arena) const {
  MyScoreListResp* n = new MyScoreListResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MyScoreListResp::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.MyScoreListResp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(MyScoreListResp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MyScoreListResp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(myscore_, game_type_);

#undef ZR_HELPER_
#undef ZR_

  scorelist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MyScoreListResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.MyScoreListResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 myscore = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &myscore_)));
          set_has_myscore();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_scorelist;
        break;
      }

      // repeated .msg_maj.ScoreDetail scorelist = 2;
      case 2: {
        if (tag == 18) {
         parse_scorelist:
          DO_(input->IncrementRecursionDepth());
         parse_loop_scorelist:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_scorelist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_scorelist;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(24)) goto parse_game_type;
        break;
      }

      // optional int32 game_type = 3;
      case 3: {
        if (tag == 24) {
         parse_game_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &game_type_)));
          set_has_game_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.MyScoreListResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.MyScoreListResp)
  return false;
#undef DO_
}

void MyScoreListResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.MyScoreListResp)
  // required int32 myscore = 1;
  if (has_myscore()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->myscore(), output);
  }

  // repeated .msg_maj.ScoreDetail scorelist = 2;
  for (unsigned int i = 0, n = this->scorelist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->scorelist(i), output);
  }

  // optional int32 game_type = 3;
  if (has_game_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->game_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.MyScoreListResp)
}

::google::protobuf::uint8* MyScoreListResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.MyScoreListResp)
  // required int32 myscore = 1;
  if (has_myscore()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->myscore(), target);
  }

  // repeated .msg_maj.ScoreDetail scorelist = 2;
  for (unsigned int i = 0, n = this->scorelist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->scorelist(i), false, target);
  }

  // optional int32 game_type = 3;
  if (has_game_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->game_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.MyScoreListResp)
  return target;
}

int MyScoreListResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.MyScoreListResp)
  int total_size = 0;

  // required int32 myscore = 1;
  if (has_myscore()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->myscore());
  }
  // optional int32 game_type = 3;
  if (has_game_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->game_type());
  }

  // repeated .msg_maj.ScoreDetail scorelist = 2;
  total_size += 1 * this->scorelist_size();
  for (int i = 0; i < this->scorelist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->scorelist(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MyScoreListResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.MyScoreListResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MyScoreListResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MyScoreListResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.MyScoreListResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.MyScoreListResp)
    MergeFrom(*source);
  }
}

void MyScoreListResp::MergeFrom(const MyScoreListResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.MyScoreListResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  scorelist_.MergeFrom(from.scorelist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_myscore()) {
      set_myscore(from.myscore());
    }
    if (from.has_game_type()) {
      set_game_type(from.game_type());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MyScoreListResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.MyScoreListResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MyScoreListResp::CopyFrom(const MyScoreListResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.MyScoreListResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MyScoreListResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void MyScoreListResp::Swap(MyScoreListResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MyScoreListResp::InternalSwap(MyScoreListResp* other) {
  std::swap(myscore_, other->myscore_);
  scorelist_.UnsafeArenaSwap(&other->scorelist_);
  std::swap(game_type_, other->game_type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MyScoreListResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MyScoreListResp_descriptor_;
  metadata.reflection = MyScoreListResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MyScoreListResp

// required int32 myscore = 1;
bool MyScoreListResp::has_myscore() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MyScoreListResp::set_has_myscore() {
  _has_bits_[0] |= 0x00000001u;
}
void MyScoreListResp::clear_has_myscore() {
  _has_bits_[0] &= ~0x00000001u;
}
void MyScoreListResp::clear_myscore() {
  myscore_ = 0;
  clear_has_myscore();
}
 ::google::protobuf::int32 MyScoreListResp::myscore() const {
  // @@protoc_insertion_point(field_get:msg_maj.MyScoreListResp.myscore)
  return myscore_;
}
 void MyScoreListResp::set_myscore(::google::protobuf::int32 value) {
  set_has_myscore();
  myscore_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.MyScoreListResp.myscore)
}

// repeated .msg_maj.ScoreDetail scorelist = 2;
int MyScoreListResp::scorelist_size() const {
  return scorelist_.size();
}
void MyScoreListResp::clear_scorelist() {
  scorelist_.Clear();
}
const ::msg_maj::ScoreDetail& MyScoreListResp::scorelist(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.MyScoreListResp.scorelist)
  return scorelist_.Get(index);
}
::msg_maj::ScoreDetail* MyScoreListResp::mutable_scorelist(int index) {
  // @@protoc_insertion_point(field_mutable:msg_maj.MyScoreListResp.scorelist)
  return scorelist_.Mutable(index);
}
::msg_maj::ScoreDetail* MyScoreListResp::add_scorelist() {
  // @@protoc_insertion_point(field_add:msg_maj.MyScoreListResp.scorelist)
  return scorelist_.Add();
}
::google::protobuf::RepeatedPtrField< ::msg_maj::ScoreDetail >*
MyScoreListResp::mutable_scorelist() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.MyScoreListResp.scorelist)
  return &scorelist_;
}
const ::google::protobuf::RepeatedPtrField< ::msg_maj::ScoreDetail >&
MyScoreListResp::scorelist() const {
  // @@protoc_insertion_point(field_list:msg_maj.MyScoreListResp.scorelist)
  return scorelist_;
}

// optional int32 game_type = 3;
bool MyScoreListResp::has_game_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void MyScoreListResp::set_has_game_type() {
  _has_bits_[0] |= 0x00000004u;
}
void MyScoreListResp::clear_has_game_type() {
  _has_bits_[0] &= ~0x00000004u;
}
void MyScoreListResp::clear_game_type() {
  game_type_ = 0;
  clear_has_game_type();
}
 ::google::protobuf::int32 MyScoreListResp::game_type() const {
  // @@protoc_insertion_point(field_get:msg_maj.MyScoreListResp.game_type)
  return game_type_;
}
 void MyScoreListResp::set_game_type(::google::protobuf::int32 value) {
  set_has_game_type();
  game_type_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.MyScoreListResp.game_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MyTingPaiListReq::MyTingPaiListReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg_maj.MyTingPaiListReq)
}

void MyTingPaiListReq::InitAsDefaultInstance() {
}

MyTingPaiListReq::MyTingPaiListReq(const MyTingPaiListReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msg_maj.MyTingPaiListReq)
}

void MyTingPaiListReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MyTingPaiListReq::~MyTingPaiListReq() {
  // @@protoc_insertion_point(destructor:msg_maj.MyTingPaiListReq)
  SharedDtor();
}

void MyTingPaiListReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MyTingPaiListReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MyTingPaiListReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MyTingPaiListReq_descriptor_;
}

const MyTingPaiListReq& MyTingPaiListReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fmaj_2eproto();
  return *default_instance_;
}

MyTingPaiListReq* MyTingPaiListReq::default_instance_ = NULL;

MyTingPaiListReq* MyTingPaiListReq::New(::google::protobuf::Arena* arena) const {
  MyTingPaiListReq* n = new MyTingPaiListReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MyTingPaiListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:msg_maj.MyTingPaiListReq)
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MyTingPaiListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg_maj.MyTingPaiListReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:msg_maj.MyTingPaiListReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg_maj.MyTingPaiListReq)
  return false;
#undef DO_
}

void MyTingPaiListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg_maj.MyTingPaiListReq)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg_maj.MyTingPaiListReq)
}

::google::protobuf::uint8* MyTingPaiListReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg_maj.MyTingPaiListReq)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg_maj.MyTingPaiListReq)
  return target;
}

int MyTingPaiListReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msg_maj.MyTingPaiListReq)
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MyTingPaiListReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg_maj.MyTingPaiListReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MyTingPaiListReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MyTingPaiListReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg_maj.MyTingPaiListReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg_maj.MyTingPaiListReq)
    MergeFrom(*source);
  }
}

void MyTingPaiListReq::MergeFrom(const MyTingPaiListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg_maj.MyTingPaiListReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MyTingPaiListReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg_maj.MyTingPaiListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MyTingPaiListReq::CopyFrom(const MyTingPaiListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg_maj.MyTingPaiListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MyTingPaiListReq::IsInitialized() const {

  return true;
}

void MyTingPaiListReq::Swap(MyTingPaiListReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MyTingPaiListReq::InternalSwap(MyTingPaiListReq* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MyTingPaiListReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MyTingPaiListReq_descriptor_;
  metadata.reflection = MyTingPaiListReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MyTingPaiListReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace msg_maj

// @@protoc_insertion_point(global_scope)
