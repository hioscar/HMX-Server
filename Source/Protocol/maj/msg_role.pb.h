// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_role.proto

#ifndef PROTOBUF_msg_5frole_2eproto__INCLUDED
#define PROTOBUF_msg_5frole_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace msg_maj {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_msg_5frole_2eproto();
void protobuf_AssignDesc_msg_5frole_2eproto();
void protobuf_ShutdownFile_msg_5frole_2eproto();

class CardinfoReq;
class Data;
class GetTitleListReq;
class GetTitleListResp;
class GpsUploadReq;
class MoneyLog;
class NotifyLoseGame;
class PlayerInfoReq;
class PlayerInfoResp;
class Role;
class RoleC;
class RoleFep;
class RoleOff;
class RoleWs;
class RoomCardData;
class SetLogoReq;
class SetLogoResp;
class SetTitleReq;
class SetTitleResp;
class SettingReq;
class SettingResp;
class SyncRoleToWs;
class Title;
class UpdateRoleData;
class UpdateRoleReq;

enum c_cmd_role {
  setting_req = 1,
  setting_resp = 2,
  set_logo_req = 3,
  set_logo_resp = 4,
  get_title_list_req = 5,
  get_title_list_resp = 6,
  set_title_req = 7,
  set_title_resp = 8,
  player_info_req = 9,
  player_info_resp = 10,
  update_role_req = 19,
  update_role_data = 20,
  gps_upload_req = 21,
  sync_role_to_ws = 22,
  cardinfo_req = 23,
  notify_lose_game = 24
};
bool c_cmd_role_IsValid(int value);
const c_cmd_role c_cmd_role_MIN = setting_req;
const c_cmd_role c_cmd_role_MAX = notify_lose_game;
const int c_cmd_role_ARRAYSIZE = c_cmd_role_MAX + 1;

const ::google::protobuf::EnumDescriptor* c_cmd_role_descriptor();
inline const ::std::string& c_cmd_role_Name(c_cmd_role value) {
  return ::google::protobuf::internal::NameOfEnum(
    c_cmd_role_descriptor(), value);
}
inline bool c_cmd_role_Parse(
    const ::std::string& name, c_cmd_role* value) {
  return ::google::protobuf::internal::ParseNamedEnum<c_cmd_role>(
    c_cmd_role_descriptor(), name, value);
}
enum money_type {
  money_t_roomcard = 1
};
bool money_type_IsValid(int value);
const money_type money_type_MIN = money_t_roomcard;
const money_type money_type_MAX = money_t_roomcard;
const int money_type_ARRAYSIZE = money_type_MAX + 1;

const ::google::protobuf::EnumDescriptor* money_type_descriptor();
inline const ::std::string& money_type_Name(money_type value) {
  return ::google::protobuf::internal::NameOfEnum(
    money_type_descriptor(), value);
}
inline bool money_type_Parse(
    const ::std::string& name, money_type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<money_type>(
    money_type_descriptor(), name, value);
}
// ===================================================================

class SettingReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.SettingReq) */ {
 public:
  SettingReq();
  virtual ~SettingReq();

  SettingReq(const SettingReq& from);

  inline SettingReq& operator=(const SettingReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SettingReq& default_instance();

  void Swap(SettingReq* other);

  // implements Message ----------------------------------------------

  inline SettingReq* New() const { return New(NULL); }

  SettingReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SettingReq& from);
  void MergeFrom(const SettingReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SettingReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 sound = 1;
  bool has_sound() const;
  void clear_sound();
  static const int kSoundFieldNumber = 1;
  ::google::protobuf::uint32 sound() const;
  void set_sound(::google::protobuf::uint32 value);

  // required uint32 music = 2;
  bool has_music() const;
  void clear_music();
  static const int kMusicFieldNumber = 2;
  ::google::protobuf::uint32 music() const;
  void set_music(::google::protobuf::uint32 value);

  // required bool buzzes = 3;
  bool has_buzzes() const;
  void clear_buzzes();
  static const int kBuzzesFieldNumber = 3;
  bool buzzes() const;
  void set_buzzes(bool value);

  // @@protoc_insertion_point(class_scope:msg_maj.SettingReq)
 private:
  inline void set_has_sound();
  inline void clear_has_sound();
  inline void set_has_music();
  inline void clear_has_music();
  inline void set_has_buzzes();
  inline void clear_has_buzzes();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 sound_;
  ::google::protobuf::uint32 music_;
  bool buzzes_;
  friend void  protobuf_AddDesc_msg_5frole_2eproto();
  friend void protobuf_AssignDesc_msg_5frole_2eproto();
  friend void protobuf_ShutdownFile_msg_5frole_2eproto();

  void InitAsDefaultInstance();
  static SettingReq* default_instance_;
};
// -------------------------------------------------------------------

class SettingResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.SettingResp) */ {
 public:
  SettingResp();
  virtual ~SettingResp();

  SettingResp(const SettingResp& from);

  inline SettingResp& operator=(const SettingResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SettingResp& default_instance();

  void Swap(SettingResp* other);

  // implements Message ----------------------------------------------

  inline SettingResp* New() const { return New(NULL); }

  SettingResp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SettingResp& from);
  void MergeFrom(const SettingResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SettingResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 sound = 1;
  bool has_sound() const;
  void clear_sound();
  static const int kSoundFieldNumber = 1;
  ::google::protobuf::uint32 sound() const;
  void set_sound(::google::protobuf::uint32 value);

  // required uint32 music = 2;
  bool has_music() const;
  void clear_music();
  static const int kMusicFieldNumber = 2;
  ::google::protobuf::uint32 music() const;
  void set_music(::google::protobuf::uint32 value);

  // required bool buzzes = 3;
  bool has_buzzes() const;
  void clear_buzzes();
  static const int kBuzzesFieldNumber = 3;
  bool buzzes() const;
  void set_buzzes(bool value);

  // @@protoc_insertion_point(class_scope:msg_maj.SettingResp)
 private:
  inline void set_has_sound();
  inline void clear_has_sound();
  inline void set_has_music();
  inline void clear_has_music();
  inline void set_has_buzzes();
  inline void clear_has_buzzes();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 sound_;
  ::google::protobuf::uint32 music_;
  bool buzzes_;
  friend void  protobuf_AddDesc_msg_5frole_2eproto();
  friend void protobuf_AssignDesc_msg_5frole_2eproto();
  friend void protobuf_ShutdownFile_msg_5frole_2eproto();

  void InitAsDefaultInstance();
  static SettingResp* default_instance_;
};
// -------------------------------------------------------------------

class SetLogoReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.SetLogoReq) */ {
 public:
  SetLogoReq();
  virtual ~SetLogoReq();

  SetLogoReq(const SetLogoReq& from);

  inline SetLogoReq& operator=(const SetLogoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetLogoReq& default_instance();

  void Swap(SetLogoReq* other);

  // implements Message ----------------------------------------------

  inline SetLogoReq* New() const { return New(NULL); }

  SetLogoReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetLogoReq& from);
  void MergeFrom(const SetLogoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SetLogoReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 logo_icon = 1;
  bool has_logo_icon() const;
  void clear_logo_icon();
  static const int kLogoIconFieldNumber = 1;
  ::google::protobuf::uint32 logo_icon() const;
  void set_logo_icon(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:msg_maj.SetLogoReq)
 private:
  inline void set_has_logo_icon();
  inline void clear_has_logo_icon();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 logo_icon_;
  friend void  protobuf_AddDesc_msg_5frole_2eproto();
  friend void protobuf_AssignDesc_msg_5frole_2eproto();
  friend void protobuf_ShutdownFile_msg_5frole_2eproto();

  void InitAsDefaultInstance();
  static SetLogoReq* default_instance_;
};
// -------------------------------------------------------------------

class SetLogoResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.SetLogoResp) */ {
 public:
  SetLogoResp();
  virtual ~SetLogoResp();

  SetLogoResp(const SetLogoResp& from);

  inline SetLogoResp& operator=(const SetLogoResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetLogoResp& default_instance();

  void Swap(SetLogoResp* other);

  // implements Message ----------------------------------------------

  inline SetLogoResp* New() const { return New(NULL); }

  SetLogoResp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetLogoResp& from);
  void MergeFrom(const SetLogoResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SetLogoResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 logo_icon = 1;
  bool has_logo_icon() const;
  void clear_logo_icon();
  static const int kLogoIconFieldNumber = 1;
  ::google::protobuf::uint32 logo_icon() const;
  void set_logo_icon(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:msg_maj.SetLogoResp)
 private:
  inline void set_has_logo_icon();
  inline void clear_has_logo_icon();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 logo_icon_;
  friend void  protobuf_AddDesc_msg_5frole_2eproto();
  friend void protobuf_AssignDesc_msg_5frole_2eproto();
  friend void protobuf_ShutdownFile_msg_5frole_2eproto();

  void InitAsDefaultInstance();
  static SetLogoResp* default_instance_;
};
// -------------------------------------------------------------------

class GetTitleListReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.GetTitleListReq) */ {
 public:
  GetTitleListReq();
  virtual ~GetTitleListReq();

  GetTitleListReq(const GetTitleListReq& from);

  inline GetTitleListReq& operator=(const GetTitleListReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetTitleListReq& default_instance();

  void Swap(GetTitleListReq* other);

  // implements Message ----------------------------------------------

  inline GetTitleListReq* New() const { return New(NULL); }

  GetTitleListReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetTitleListReq& from);
  void MergeFrom(const GetTitleListReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetTitleListReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .msg_maj.Title title = 1;
  int title_size() const;
  void clear_title();
  static const int kTitleFieldNumber = 1;
  const ::msg_maj::Title& title(int index) const;
  ::msg_maj::Title* mutable_title(int index);
  ::msg_maj::Title* add_title();
  ::google::protobuf::RepeatedPtrField< ::msg_maj::Title >*
      mutable_title();
  const ::google::protobuf::RepeatedPtrField< ::msg_maj::Title >&
      title() const;

  // @@protoc_insertion_point(class_scope:msg_maj.GetTitleListReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::msg_maj::Title > title_;
  friend void  protobuf_AddDesc_msg_5frole_2eproto();
  friend void protobuf_AssignDesc_msg_5frole_2eproto();
  friend void protobuf_ShutdownFile_msg_5frole_2eproto();

  void InitAsDefaultInstance();
  static GetTitleListReq* default_instance_;
};
// -------------------------------------------------------------------

class Title : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.Title) */ {
 public:
  Title();
  virtual ~Title();

  Title(const Title& from);

  inline Title& operator=(const Title& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Title& default_instance();

  void Swap(Title* other);

  // implements Message ----------------------------------------------

  inline Title* New() const { return New(NULL); }

  Title* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Title& from);
  void MergeFrom(const Title& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Title* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // required string title = 2;
  bool has_title() const;
  void clear_title();
  static const int kTitleFieldNumber = 2;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // @@protoc_insertion_point(class_scope:msg_maj.Title)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_title();
  inline void clear_has_title();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_msg_5frole_2eproto();
  friend void protobuf_AssignDesc_msg_5frole_2eproto();
  friend void protobuf_ShutdownFile_msg_5frole_2eproto();

  void InitAsDefaultInstance();
  static Title* default_instance_;
};
// -------------------------------------------------------------------

class GetTitleListResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.GetTitleListResp) */ {
 public:
  GetTitleListResp();
  virtual ~GetTitleListResp();

  GetTitleListResp(const GetTitleListResp& from);

  inline GetTitleListResp& operator=(const GetTitleListResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetTitleListResp& default_instance();

  void Swap(GetTitleListResp* other);

  // implements Message ----------------------------------------------

  inline GetTitleListResp* New() const { return New(NULL); }

  GetTitleListResp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetTitleListResp& from);
  void MergeFrom(const GetTitleListResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetTitleListResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:msg_maj.GetTitleListResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_msg_5frole_2eproto();
  friend void protobuf_AssignDesc_msg_5frole_2eproto();
  friend void protobuf_ShutdownFile_msg_5frole_2eproto();

  void InitAsDefaultInstance();
  static GetTitleListResp* default_instance_;
};
// -------------------------------------------------------------------

class SetTitleReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.SetTitleReq) */ {
 public:
  SetTitleReq();
  virtual ~SetTitleReq();

  SetTitleReq(const SetTitleReq& from);

  inline SetTitleReq& operator=(const SetTitleReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetTitleReq& default_instance();

  void Swap(SetTitleReq* other);

  // implements Message ----------------------------------------------

  inline SetTitleReq* New() const { return New(NULL); }

  SetTitleReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetTitleReq& from);
  void MergeFrom(const SetTitleReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SetTitleReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:msg_maj.SetTitleReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_msg_5frole_2eproto();
  friend void protobuf_AssignDesc_msg_5frole_2eproto();
  friend void protobuf_ShutdownFile_msg_5frole_2eproto();

  void InitAsDefaultInstance();
  static SetTitleReq* default_instance_;
};
// -------------------------------------------------------------------

class SetTitleResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.SetTitleResp) */ {
 public:
  SetTitleResp();
  virtual ~SetTitleResp();

  SetTitleResp(const SetTitleResp& from);

  inline SetTitleResp& operator=(const SetTitleResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetTitleResp& default_instance();

  void Swap(SetTitleResp* other);

  // implements Message ----------------------------------------------

  inline SetTitleResp* New() const { return New(NULL); }

  SetTitleResp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetTitleResp& from);
  void MergeFrom(const SetTitleResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SetTitleResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:msg_maj.SetTitleResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_msg_5frole_2eproto();
  friend void protobuf_AssignDesc_msg_5frole_2eproto();
  friend void protobuf_ShutdownFile_msg_5frole_2eproto();

  void InitAsDefaultInstance();
  static SetTitleResp* default_instance_;
};
// -------------------------------------------------------------------

class PlayerInfoReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.PlayerInfoReq) */ {
 public:
  PlayerInfoReq();
  virtual ~PlayerInfoReq();

  PlayerInfoReq(const PlayerInfoReq& from);

  inline PlayerInfoReq& operator=(const PlayerInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerInfoReq& default_instance();

  void Swap(PlayerInfoReq* other);

  // implements Message ----------------------------------------------

  inline PlayerInfoReq* New() const { return New(NULL); }

  PlayerInfoReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerInfoReq& from);
  void MergeFrom(const PlayerInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PlayerInfoReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint64 uid() const;
  void set_uid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:msg_maj.PlayerInfoReq)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 uid_;
  friend void  protobuf_AddDesc_msg_5frole_2eproto();
  friend void protobuf_AssignDesc_msg_5frole_2eproto();
  friend void protobuf_ShutdownFile_msg_5frole_2eproto();

  void InitAsDefaultInstance();
  static PlayerInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class PlayerInfoResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.PlayerInfoResp) */ {
 public:
  PlayerInfoResp();
  virtual ~PlayerInfoResp();

  PlayerInfoResp(const PlayerInfoResp& from);

  inline PlayerInfoResp& operator=(const PlayerInfoResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerInfoResp& default_instance();

  void Swap(PlayerInfoResp* other);

  // implements Message ----------------------------------------------

  inline PlayerInfoResp* New() const { return New(NULL); }

  PlayerInfoResp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerInfoResp& from);
  void MergeFrom(const PlayerInfoResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PlayerInfoResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .msg_maj.RoleC role = 1;
  bool has_role() const;
  void clear_role();
  static const int kRoleFieldNumber = 1;
  const ::msg_maj::RoleC& role() const;
  ::msg_maj::RoleC* mutable_role();
  ::msg_maj::RoleC* release_role();
  void set_allocated_role(::msg_maj::RoleC* role);

  // @@protoc_insertion_point(class_scope:msg_maj.PlayerInfoResp)
 private:
  inline void set_has_role();
  inline void clear_has_role();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg_maj::RoleC* role_;
  friend void  protobuf_AddDesc_msg_5frole_2eproto();
  friend void protobuf_AssignDesc_msg_5frole_2eproto();
  friend void protobuf_ShutdownFile_msg_5frole_2eproto();

  void InitAsDefaultInstance();
  static PlayerInfoResp* default_instance_;
};
// -------------------------------------------------------------------

class Data : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.Data) */ {
 public:
  Data();
  virtual ~Data();

  Data(const Data& from);

  inline Data& operator=(const Data& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Data& default_instance();

  void Swap(Data* other);

  // implements Message ----------------------------------------------

  inline Data* New() const { return New(NULL); }

  Data* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Data& from);
  void MergeFrom(const Data& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Data* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 reset_time = 1;
  bool has_reset_time() const;
  void clear_reset_time();
  static const int kResetTimeFieldNumber = 1;
  ::google::protobuf::uint64 reset_time() const;
  void set_reset_time(::google::protobuf::uint64 value);

  // optional uint32 first_show_status = 2;
  bool has_first_show_status() const;
  void clear_first_show_status();
  static const int kFirstShowStatusFieldNumber = 2;
  ::google::protobuf::uint32 first_show_status() const;
  void set_first_show_status(::google::protobuf::uint32 value);

  // optional uint32 has_inv_friend_num = 3;
  bool has_has_inv_friend_num() const;
  void clear_has_inv_friend_num();
  static const int kHasInvFriendNumFieldNumber = 3;
  ::google::protobuf::uint32 has_inv_friend_num() const;
  void set_has_inv_friend_num(::google::protobuf::uint32 value);

  // optional uint32 has_get_room_card = 4;
  bool has_has_get_room_card() const;
  void clear_has_get_room_card();
  static const int kHasGetRoomCardFieldNumber = 4;
  ::google::protobuf::uint32 has_get_room_card() const;
  void set_has_get_room_card(::google::protobuf::uint32 value);

  // optional uint32 can_get_room_card = 5;
  bool has_can_get_room_card() const;
  void clear_can_get_room_card();
  static const int kCanGetRoomCardFieldNumber = 5;
  ::google::protobuf::uint32 can_get_room_card() const;
  void set_can_get_room_card(::google::protobuf::uint32 value);

  // optional uint32 be_invitation_id = 6;
  bool has_be_invitation_id() const;
  void clear_be_invitation_id();
  static const int kBeInvitationIdFieldNumber = 6;
  ::google::protobuf::uint32 be_invitation_id() const;
  void set_be_invitation_id(::google::protobuf::uint32 value);

  // optional uint32 play_games = 7;
  bool has_play_games() const;
  void clear_play_games();
  static const int kPlayGamesFieldNumber = 7;
  ::google::protobuf::uint32 play_games() const;
  void set_play_games(::google::protobuf::uint32 value);

  // optional uint32 recv_reward_status = 8;
  bool has_recv_reward_status() const;
  void clear_recv_reward_status();
  static const int kRecvRewardStatusFieldNumber = 8;
  ::google::protobuf::uint32 recv_reward_status() const;
  void set_recv_reward_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:msg_maj.Data)
 private:
  inline void set_has_reset_time();
  inline void clear_has_reset_time();
  inline void set_has_first_show_status();
  inline void clear_has_first_show_status();
  inline void set_has_has_inv_friend_num();
  inline void clear_has_has_inv_friend_num();
  inline void set_has_has_get_room_card();
  inline void clear_has_has_get_room_card();
  inline void set_has_can_get_room_card();
  inline void clear_has_can_get_room_card();
  inline void set_has_be_invitation_id();
  inline void clear_has_be_invitation_id();
  inline void set_has_play_games();
  inline void clear_has_play_games();
  inline void set_has_recv_reward_status();
  inline void clear_has_recv_reward_status();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 reset_time_;
  ::google::protobuf::uint32 first_show_status_;
  ::google::protobuf::uint32 has_inv_friend_num_;
  ::google::protobuf::uint32 has_get_room_card_;
  ::google::protobuf::uint32 can_get_room_card_;
  ::google::protobuf::uint32 be_invitation_id_;
  ::google::protobuf::uint32 play_games_;
  ::google::protobuf::uint32 recv_reward_status_;
  friend void  protobuf_AddDesc_msg_5frole_2eproto();
  friend void protobuf_AssignDesc_msg_5frole_2eproto();
  friend void protobuf_ShutdownFile_msg_5frole_2eproto();

  void InitAsDefaultInstance();
  static Data* default_instance_;
};
// -------------------------------------------------------------------

class Role : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.Role) */ {
 public:
  Role();
  virtual ~Role();

  Role(const Role& from);

  inline Role& operator=(const Role& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Role& default_instance();

  void Swap(Role* other);

  // implements Message ----------------------------------------------

  inline Role* New() const { return New(NULL); }

  Role* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Role& from);
  void MergeFrom(const Role& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Role* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // optional string account = 2;
  bool has_account() const;
  void clear_account();
  static const int kAccountFieldNumber = 2;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // optional string nickname = 3;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNicknameFieldNumber = 3;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // optional uint32 level = 4;
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 4;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // optional string logo_icon = 5;
  bool has_logo_icon() const;
  void clear_logo_icon();
  static const int kLogoIconFieldNumber = 5;
  const ::std::string& logo_icon() const;
  void set_logo_icon(const ::std::string& value);
  void set_logo_icon(const char* value);
  void set_logo_icon(const char* value, size_t size);
  ::std::string* mutable_logo_icon();
  ::std::string* release_logo_icon();
  void set_allocated_logo_icon(::std::string* logo_icon);

  // optional uint32 title = 6;
  bool has_title() const;
  void clear_title();
  static const int kTitleFieldNumber = 6;
  ::google::protobuf::uint32 title() const;
  void set_title(::google::protobuf::uint32 value);

  // optional uint32 diamond = 7;
  bool has_diamond() const;
  void clear_diamond();
  static const int kDiamondFieldNumber = 7;
  ::google::protobuf::uint32 diamond() const;
  void set_diamond(::google::protobuf::uint32 value);

  // optional uint32 coin = 8;
  bool has_coin() const;
  void clear_coin();
  static const int kCoinFieldNumber = 8;
  ::google::protobuf::uint32 coin() const;
  void set_coin(::google::protobuf::uint32 value);

  // optional uint32 sexual = 9;
  bool has_sexual() const;
  void clear_sexual();
  static const int kSexualFieldNumber = 9;
  ::google::protobuf::uint32 sexual() const;
  void set_sexual(::google::protobuf::uint32 value);

  // optional uint32 room_card = 10;
  bool has_room_card() const;
  void clear_room_card();
  static const int kRoomCardFieldNumber = 10;
  ::google::protobuf::uint32 room_card() const;
  void set_room_card(::google::protobuf::uint32 value);

  // optional uint32 total_games = 11;
  bool has_total_games() const;
  void clear_total_games();
  static const int kTotalGamesFieldNumber = 11;
  ::google::protobuf::uint32 total_games() const;
  void set_total_games(::google::protobuf::uint32 value);

  // optional uint32 win_games = 12;
  bool has_win_games() const;
  void clear_win_games();
  static const int kWinGamesFieldNumber = 12;
  ::google::protobuf::uint32 win_games() const;
  void set_win_games(::google::protobuf::uint32 value);

  // optional uint32 con_games = 13;
  bool has_con_games() const;
  void clear_con_games();
  static const int kConGamesFieldNumber = 13;
  ::google::protobuf::uint32 con_games() const;
  void set_con_games(::google::protobuf::uint32 value);

  // optional uint32 his_max_score = 14;
  bool has_his_max_score() const;
  void clear_his_max_score();
  static const int kHisMaxScoreFieldNumber = 14;
  ::google::protobuf::uint32 his_max_score() const;
  void set_his_max_score(::google::protobuf::uint32 value);

  // optional uint32 his_max_con = 15;
  bool has_his_max_con() const;
  void clear_his_max_con();
  static const int kHisMaxConFieldNumber = 15;
  ::google::protobuf::uint32 his_max_con() const;
  void set_his_max_con(::google::protobuf::uint32 value);

  // optional uint32 week_max_score = 16;
  bool has_week_max_score() const;
  void clear_week_max_score();
  static const int kWeekMaxScoreFieldNumber = 16;
  ::google::protobuf::uint32 week_max_score() const;
  void set_week_max_score(::google::protobuf::uint32 value);

  // optional uint64 top_wins_ymd = 17;
  bool has_top_wins_ymd() const;
  void clear_top_wins_ymd();
  static const int kTopWinsYmdFieldNumber = 17;
  ::google::protobuf::uint64 top_wins_ymd() const;
  void set_top_wins_ymd(::google::protobuf::uint64 value);

  // optional int32 top_wins_total = 18;
  bool has_top_wins_total() const;
  void clear_top_wins_total();
  static const int kTopWinsTotalFieldNumber = 18;
  ::google::protobuf::int32 top_wins_total() const;
  void set_top_wins_total(::google::protobuf::int32 value);

  // optional uint64 top_score_ymd = 19;
  bool has_top_score_ymd() const;
  void clear_top_score_ymd();
  static const int kTopScoreYmdFieldNumber = 19;
  ::google::protobuf::uint64 top_score_ymd() const;
  void set_top_score_ymd(::google::protobuf::uint64 value);

  // optional int32 top_score_total = 20;
  bool has_top_score_total() const;
  void clear_top_score_total();
  static const int kTopScoreTotalFieldNumber = 20;
  ::google::protobuf::int32 top_score_total() const;
  void set_top_score_total(::google::protobuf::int32 value);

  // optional uint64 blocktime = 21;
  bool has_blocktime() const;
  void clear_blocktime();
  static const int kBlocktimeFieldNumber = 21;
  ::google::protobuf::uint64 blocktime() const;
  void set_blocktime(::google::protobuf::uint64 value);

  // optional uint32 today_play_num = 22;
  bool has_today_play_num() const;
  void clear_today_play_num();
  static const int kTodayPlayNumFieldNumber = 22;
  ::google::protobuf::uint32 today_play_num() const;
  void set_today_play_num(::google::protobuf::uint32 value);

  // optional string readname = 23;
  bool has_readname() const;
  void clear_readname();
  static const int kReadnameFieldNumber = 23;
  const ::std::string& readname() const;
  void set_readname(const ::std::string& value);
  void set_readname(const char* value);
  void set_readname(const char* value, size_t size);
  ::std::string* mutable_readname();
  ::std::string* release_readname();
  void set_allocated_readname(::std::string* readname);

  // optional string readcard = 24;
  bool has_readcard() const;
  void clear_readcard();
  static const int kReadcardFieldNumber = 24;
  const ::std::string& readcard() const;
  void set_readcard(const ::std::string& value);
  void set_readcard(const char* value);
  void set_readcard(const char* value, size_t size);
  ::std::string* mutable_readcard();
  ::std::string* release_readcard();
  void set_allocated_readcard(::std::string* readcard);

  // optional uint64 last_game_end = 25;
  bool has_last_game_end() const;
  void clear_last_game_end();
  static const int kLastGameEndFieldNumber = 25;
  ::google::protobuf::uint64 last_game_end() const;
  void set_last_game_end(::google::protobuf::uint64 value);

  // optional uint64 login_time = 26;
  bool has_login_time() const;
  void clear_login_time();
  static const int kLoginTimeFieldNumber = 26;
  ::google::protobuf::uint64 login_time() const;
  void set_login_time(::google::protobuf::uint64 value);

  // optional string ip = 27;
  bool has_ip() const;
  void clear_ip();
  static const int kIpFieldNumber = 27;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // optional .msg_maj.Data data = 99;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 99;
  const ::msg_maj::Data& data() const;
  ::msg_maj::Data* mutable_data();
  ::msg_maj::Data* release_data();
  void set_allocated_data(::msg_maj::Data* data);

  // @@protoc_insertion_point(class_scope:msg_maj.Role)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_account();
  inline void clear_has_account();
  inline void set_has_nickname();
  inline void clear_has_nickname();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_logo_icon();
  inline void clear_has_logo_icon();
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_diamond();
  inline void clear_has_diamond();
  inline void set_has_coin();
  inline void clear_has_coin();
  inline void set_has_sexual();
  inline void clear_has_sexual();
  inline void set_has_room_card();
  inline void clear_has_room_card();
  inline void set_has_total_games();
  inline void clear_has_total_games();
  inline void set_has_win_games();
  inline void clear_has_win_games();
  inline void set_has_con_games();
  inline void clear_has_con_games();
  inline void set_has_his_max_score();
  inline void clear_has_his_max_score();
  inline void set_has_his_max_con();
  inline void clear_has_his_max_con();
  inline void set_has_week_max_score();
  inline void clear_has_week_max_score();
  inline void set_has_top_wins_ymd();
  inline void clear_has_top_wins_ymd();
  inline void set_has_top_wins_total();
  inline void clear_has_top_wins_total();
  inline void set_has_top_score_ymd();
  inline void clear_has_top_score_ymd();
  inline void set_has_top_score_total();
  inline void clear_has_top_score_total();
  inline void set_has_blocktime();
  inline void clear_has_blocktime();
  inline void set_has_today_play_num();
  inline void clear_has_today_play_num();
  inline void set_has_readname();
  inline void clear_has_readname();
  inline void set_has_readcard();
  inline void clear_has_readcard();
  inline void set_has_last_game_end();
  inline void clear_has_last_game_end();
  inline void set_has_login_time();
  inline void clear_has_login_time();
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::internal::ArenaStringPtr logo_icon_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 title_;
  ::google::protobuf::uint32 diamond_;
  ::google::protobuf::uint32 coin_;
  ::google::protobuf::uint32 sexual_;
  ::google::protobuf::uint32 room_card_;
  ::google::protobuf::uint32 total_games_;
  ::google::protobuf::uint32 win_games_;
  ::google::protobuf::uint32 con_games_;
  ::google::protobuf::uint32 his_max_score_;
  ::google::protobuf::uint32 his_max_con_;
  ::google::protobuf::uint32 week_max_score_;
  ::google::protobuf::uint64 top_wins_ymd_;
  ::google::protobuf::uint64 top_score_ymd_;
  ::google::protobuf::int32 top_wins_total_;
  ::google::protobuf::int32 top_score_total_;
  ::google::protobuf::uint64 blocktime_;
  ::google::protobuf::internal::ArenaStringPtr readname_;
  ::google::protobuf::internal::ArenaStringPtr readcard_;
  ::google::protobuf::uint64 last_game_end_;
  ::google::protobuf::uint64 login_time_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::msg_maj::Data* data_;
  ::google::protobuf::uint32 today_play_num_;
  friend void  protobuf_AddDesc_msg_5frole_2eproto();
  friend void protobuf_AssignDesc_msg_5frole_2eproto();
  friend void protobuf_ShutdownFile_msg_5frole_2eproto();

  void InitAsDefaultInstance();
  static Role* default_instance_;
};
// -------------------------------------------------------------------

class RoleOff : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.RoleOff) */ {
 public:
  RoleOff();
  virtual ~RoleOff();

  RoleOff(const RoleOff& from);

  inline RoleOff& operator=(const RoleOff& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleOff& default_instance();

  void Swap(RoleOff* other);

  // implements Message ----------------------------------------------

  inline RoleOff* New() const { return New(NULL); }

  RoleOff* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleOff& from);
  void MergeFrom(const RoleOff& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RoleOff* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // optional string account = 2;
  bool has_account() const;
  void clear_account();
  static const int kAccountFieldNumber = 2;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // optional string nickname = 3;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNicknameFieldNumber = 3;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // optional uint32 level = 4;
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 4;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // optional string logo_icon = 5;
  bool has_logo_icon() const;
  void clear_logo_icon();
  static const int kLogoIconFieldNumber = 5;
  const ::std::string& logo_icon() const;
  void set_logo_icon(const ::std::string& value);
  void set_logo_icon(const char* value);
  void set_logo_icon(const char* value, size_t size);
  ::std::string* mutable_logo_icon();
  ::std::string* release_logo_icon();
  void set_allocated_logo_icon(::std::string* logo_icon);

  // optional uint32 title = 6;
  bool has_title() const;
  void clear_title();
  static const int kTitleFieldNumber = 6;
  ::google::protobuf::uint32 title() const;
  void set_title(::google::protobuf::uint32 value);

  // optional uint32 diamond = 7;
  bool has_diamond() const;
  void clear_diamond();
  static const int kDiamondFieldNumber = 7;
  ::google::protobuf::uint32 diamond() const;
  void set_diamond(::google::protobuf::uint32 value);

  // optional uint32 coin = 8;
  bool has_coin() const;
  void clear_coin();
  static const int kCoinFieldNumber = 8;
  ::google::protobuf::uint32 coin() const;
  void set_coin(::google::protobuf::uint32 value);

  // optional uint32 sexual = 9;
  bool has_sexual() const;
  void clear_sexual();
  static const int kSexualFieldNumber = 9;
  ::google::protobuf::uint32 sexual() const;
  void set_sexual(::google::protobuf::uint32 value);

  // optional uint32 room_card = 10;
  bool has_room_card() const;
  void clear_room_card();
  static const int kRoomCardFieldNumber = 10;
  ::google::protobuf::uint32 room_card() const;
  void set_room_card(::google::protobuf::uint32 value);

  // optional uint32 total_games = 11;
  bool has_total_games() const;
  void clear_total_games();
  static const int kTotalGamesFieldNumber = 11;
  ::google::protobuf::uint32 total_games() const;
  void set_total_games(::google::protobuf::uint32 value);

  // optional uint32 win_games = 12;
  bool has_win_games() const;
  void clear_win_games();
  static const int kWinGamesFieldNumber = 12;
  ::google::protobuf::uint32 win_games() const;
  void set_win_games(::google::protobuf::uint32 value);

  // optional uint32 con_games = 13;
  bool has_con_games() const;
  void clear_con_games();
  static const int kConGamesFieldNumber = 13;
  ::google::protobuf::uint32 con_games() const;
  void set_con_games(::google::protobuf::uint32 value);

  // optional uint32 his_max_score = 14;
  bool has_his_max_score() const;
  void clear_his_max_score();
  static const int kHisMaxScoreFieldNumber = 14;
  ::google::protobuf::uint32 his_max_score() const;
  void set_his_max_score(::google::protobuf::uint32 value);

  // optional uint32 his_max_con = 15;
  bool has_his_max_con() const;
  void clear_his_max_con();
  static const int kHisMaxConFieldNumber = 15;
  ::google::protobuf::uint32 his_max_con() const;
  void set_his_max_con(::google::protobuf::uint32 value);

  // optional uint32 week_max_score = 16;
  bool has_week_max_score() const;
  void clear_week_max_score();
  static const int kWeekMaxScoreFieldNumber = 16;
  ::google::protobuf::uint32 week_max_score() const;
  void set_week_max_score(::google::protobuf::uint32 value);

  // optional uint64 top_wins_ymd = 17;
  bool has_top_wins_ymd() const;
  void clear_top_wins_ymd();
  static const int kTopWinsYmdFieldNumber = 17;
  ::google::protobuf::uint64 top_wins_ymd() const;
  void set_top_wins_ymd(::google::protobuf::uint64 value);

  // optional int32 top_wins_total = 18;
  bool has_top_wins_total() const;
  void clear_top_wins_total();
  static const int kTopWinsTotalFieldNumber = 18;
  ::google::protobuf::int32 top_wins_total() const;
  void set_top_wins_total(::google::protobuf::int32 value);

  // optional uint64 top_score_ymd = 19;
  bool has_top_score_ymd() const;
  void clear_top_score_ymd();
  static const int kTopScoreYmdFieldNumber = 19;
  ::google::protobuf::uint64 top_score_ymd() const;
  void set_top_score_ymd(::google::protobuf::uint64 value);

  // optional int32 top_score_total = 20;
  bool has_top_score_total() const;
  void clear_top_score_total();
  static const int kTopScoreTotalFieldNumber = 20;
  ::google::protobuf::int32 top_score_total() const;
  void set_top_score_total(::google::protobuf::int32 value);

  // optional uint64 blocktime = 21;
  bool has_blocktime() const;
  void clear_blocktime();
  static const int kBlocktimeFieldNumber = 21;
  ::google::protobuf::uint64 blocktime() const;
  void set_blocktime(::google::protobuf::uint64 value);

  // optional uint32 today_play_num = 22;
  bool has_today_play_num() const;
  void clear_today_play_num();
  static const int kTodayPlayNumFieldNumber = 22;
  ::google::protobuf::uint32 today_play_num() const;
  void set_today_play_num(::google::protobuf::uint32 value);

  // optional string readname = 23;
  bool has_readname() const;
  void clear_readname();
  static const int kReadnameFieldNumber = 23;
  const ::std::string& readname() const;
  void set_readname(const ::std::string& value);
  void set_readname(const char* value);
  void set_readname(const char* value, size_t size);
  ::std::string* mutable_readname();
  ::std::string* release_readname();
  void set_allocated_readname(::std::string* readname);

  // optional string readcard = 24;
  bool has_readcard() const;
  void clear_readcard();
  static const int kReadcardFieldNumber = 24;
  const ::std::string& readcard() const;
  void set_readcard(const ::std::string& value);
  void set_readcard(const char* value);
  void set_readcard(const char* value, size_t size);
  ::std::string* mutable_readcard();
  ::std::string* release_readcard();
  void set_allocated_readcard(::std::string* readcard);

  // optional uint64 last_game_end = 25;
  bool has_last_game_end() const;
  void clear_last_game_end();
  static const int kLastGameEndFieldNumber = 25;
  ::google::protobuf::uint64 last_game_end() const;
  void set_last_game_end(::google::protobuf::uint64 value);

  // optional uint64 login_time = 26;
  bool has_login_time() const;
  void clear_login_time();
  static const int kLoginTimeFieldNumber = 26;
  ::google::protobuf::uint64 login_time() const;
  void set_login_time(::google::protobuf::uint64 value);

  // optional string ip = 27;
  bool has_ip() const;
  void clear_ip();
  static const int kIpFieldNumber = 27;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // optional .msg_maj.Data data = 99;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 99;
  const ::msg_maj::Data& data() const;
  ::msg_maj::Data* mutable_data();
  ::msg_maj::Data* release_data();
  void set_allocated_data(::msg_maj::Data* data);

  // @@protoc_insertion_point(class_scope:msg_maj.RoleOff)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_account();
  inline void clear_has_account();
  inline void set_has_nickname();
  inline void clear_has_nickname();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_logo_icon();
  inline void clear_has_logo_icon();
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_diamond();
  inline void clear_has_diamond();
  inline void set_has_coin();
  inline void clear_has_coin();
  inline void set_has_sexual();
  inline void clear_has_sexual();
  inline void set_has_room_card();
  inline void clear_has_room_card();
  inline void set_has_total_games();
  inline void clear_has_total_games();
  inline void set_has_win_games();
  inline void clear_has_win_games();
  inline void set_has_con_games();
  inline void clear_has_con_games();
  inline void set_has_his_max_score();
  inline void clear_has_his_max_score();
  inline void set_has_his_max_con();
  inline void clear_has_his_max_con();
  inline void set_has_week_max_score();
  inline void clear_has_week_max_score();
  inline void set_has_top_wins_ymd();
  inline void clear_has_top_wins_ymd();
  inline void set_has_top_wins_total();
  inline void clear_has_top_wins_total();
  inline void set_has_top_score_ymd();
  inline void clear_has_top_score_ymd();
  inline void set_has_top_score_total();
  inline void clear_has_top_score_total();
  inline void set_has_blocktime();
  inline void clear_has_blocktime();
  inline void set_has_today_play_num();
  inline void clear_has_today_play_num();
  inline void set_has_readname();
  inline void clear_has_readname();
  inline void set_has_readcard();
  inline void clear_has_readcard();
  inline void set_has_last_game_end();
  inline void clear_has_last_game_end();
  inline void set_has_login_time();
  inline void clear_has_login_time();
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::internal::ArenaStringPtr logo_icon_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 title_;
  ::google::protobuf::uint32 diamond_;
  ::google::protobuf::uint32 coin_;
  ::google::protobuf::uint32 sexual_;
  ::google::protobuf::uint32 room_card_;
  ::google::protobuf::uint32 total_games_;
  ::google::protobuf::uint32 win_games_;
  ::google::protobuf::uint32 con_games_;
  ::google::protobuf::uint32 his_max_score_;
  ::google::protobuf::uint32 his_max_con_;
  ::google::protobuf::uint32 week_max_score_;
  ::google::protobuf::uint64 top_wins_ymd_;
  ::google::protobuf::uint64 top_score_ymd_;
  ::google::protobuf::int32 top_wins_total_;
  ::google::protobuf::int32 top_score_total_;
  ::google::protobuf::uint64 blocktime_;
  ::google::protobuf::internal::ArenaStringPtr readname_;
  ::google::protobuf::internal::ArenaStringPtr readcard_;
  ::google::protobuf::uint64 last_game_end_;
  ::google::protobuf::uint64 login_time_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::msg_maj::Data* data_;
  ::google::protobuf::uint32 today_play_num_;
  friend void  protobuf_AddDesc_msg_5frole_2eproto();
  friend void protobuf_AssignDesc_msg_5frole_2eproto();
  friend void protobuf_ShutdownFile_msg_5frole_2eproto();

  void InitAsDefaultInstance();
  static RoleOff* default_instance_;
};
// -------------------------------------------------------------------

class RoleWs : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.RoleWs) */ {
 public:
  RoleWs();
  virtual ~RoleWs();

  RoleWs(const RoleWs& from);

  inline RoleWs& operator=(const RoleWs& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleWs& default_instance();

  void Swap(RoleWs* other);

  // implements Message ----------------------------------------------

  inline RoleWs* New() const { return New(NULL); }

  RoleWs* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleWs& from);
  void MergeFrom(const RoleWs& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RoleWs* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // optional string account = 2;
  bool has_account() const;
  void clear_account();
  static const int kAccountFieldNumber = 2;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // optional string nickname = 3;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNicknameFieldNumber = 3;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // optional string logo_icon = 4;
  bool has_logo_icon() const;
  void clear_logo_icon();
  static const int kLogoIconFieldNumber = 4;
  const ::std::string& logo_icon() const;
  void set_logo_icon(const ::std::string& value);
  void set_logo_icon(const char* value);
  void set_logo_icon(const char* value, size_t size);
  ::std::string* mutable_logo_icon();
  ::std::string* release_logo_icon();
  void set_allocated_logo_icon(::std::string* logo_icon);

  // optional uint32 room_card = 5;
  bool has_room_card() const;
  void clear_room_card();
  static const int kRoomCardFieldNumber = 5;
  ::google::protobuf::uint32 room_card() const;
  void set_room_card(::google::protobuf::uint32 value);

  // optional uint32 total_games = 6;
  bool has_total_games() const;
  void clear_total_games();
  static const int kTotalGamesFieldNumber = 6;
  ::google::protobuf::uint32 total_games() const;
  void set_total_games(::google::protobuf::uint32 value);

  // optional uint32 win_games = 7;
  bool has_win_games() const;
  void clear_win_games();
  static const int kWinGamesFieldNumber = 7;
  ::google::protobuf::uint32 win_games() const;
  void set_win_games(::google::protobuf::uint32 value);

  // optional uint32 his_max_con = 8;
  bool has_his_max_con() const;
  void clear_his_max_con();
  static const int kHisMaxConFieldNumber = 8;
  ::google::protobuf::uint32 his_max_con() const;
  void set_his_max_con(::google::protobuf::uint32 value);

  // optional uint32 his_max_score = 9;
  bool has_his_max_score() const;
  void clear_his_max_score();
  static const int kHisMaxScoreFieldNumber = 9;
  ::google::protobuf::uint32 his_max_score() const;
  void set_his_max_score(::google::protobuf::uint32 value);

  // optional int32 top_score_total = 10;
  bool has_top_score_total() const;
  void clear_top_score_total();
  static const int kTopScoreTotalFieldNumber = 10;
  ::google::protobuf::int32 top_score_total() const;
  void set_top_score_total(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg_maj.RoleWs)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_account();
  inline void clear_has_account();
  inline void set_has_nickname();
  inline void clear_has_nickname();
  inline void set_has_logo_icon();
  inline void clear_has_logo_icon();
  inline void set_has_room_card();
  inline void clear_has_room_card();
  inline void set_has_total_games();
  inline void clear_has_total_games();
  inline void set_has_win_games();
  inline void clear_has_win_games();
  inline void set_has_his_max_con();
  inline void clear_has_his_max_con();
  inline void set_has_his_max_score();
  inline void clear_has_his_max_score();
  inline void set_has_top_score_total();
  inline void clear_has_top_score_total();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::internal::ArenaStringPtr logo_icon_;
  ::google::protobuf::uint32 room_card_;
  ::google::protobuf::uint32 total_games_;
  ::google::protobuf::uint32 win_games_;
  ::google::protobuf::uint32 his_max_con_;
  ::google::protobuf::uint32 his_max_score_;
  ::google::protobuf::int32 top_score_total_;
  friend void  protobuf_AddDesc_msg_5frole_2eproto();
  friend void protobuf_AssignDesc_msg_5frole_2eproto();
  friend void protobuf_ShutdownFile_msg_5frole_2eproto();

  void InitAsDefaultInstance();
  static RoleWs* default_instance_;
};
// -------------------------------------------------------------------

class RoleFep : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.RoleFep) */ {
 public:
  RoleFep();
  virtual ~RoleFep();

  RoleFep(const RoleFep& from);

  inline RoleFep& operator=(const RoleFep& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleFep& default_instance();

  void Swap(RoleFep* other);

  // implements Message ----------------------------------------------

  inline RoleFep* New() const { return New(NULL); }

  RoleFep* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleFep& from);
  void MergeFrom(const RoleFep& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RoleFep* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // optional uint64 sessionid = 2;
  bool has_sessionid() const;
  void clear_sessionid();
  static const int kSessionidFieldNumber = 2;
  ::google::protobuf::uint64 sessionid() const;
  void set_sessionid(::google::protobuf::uint64 value);

  // optional uint32 serverid = 3;
  bool has_serverid() const;
  void clear_serverid();
  static const int kServeridFieldNumber = 3;
  ::google::protobuf::uint32 serverid() const;
  void set_serverid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:msg_maj.RoleFep)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_sessionid();
  inline void clear_has_sessionid();
  inline void set_has_serverid();
  inline void clear_has_serverid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint64 sessionid_;
  ::google::protobuf::uint32 serverid_;
  friend void  protobuf_AddDesc_msg_5frole_2eproto();
  friend void protobuf_AssignDesc_msg_5frole_2eproto();
  friend void protobuf_ShutdownFile_msg_5frole_2eproto();

  void InitAsDefaultInstance();
  static RoleFep* default_instance_;
};
// -------------------------------------------------------------------

class RoleC : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.RoleC) */ {
 public:
  RoleC();
  virtual ~RoleC();

  RoleC(const RoleC& from);

  inline RoleC& operator=(const RoleC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleC& default_instance();

  void Swap(RoleC* other);

  // implements Message ----------------------------------------------

  inline RoleC* New() const { return New(NULL); }

  RoleC* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleC& from);
  void MergeFrom(const RoleC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RoleC* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // optional string nickname = 2;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNicknameFieldNumber = 2;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // optional string logo_icon = 3;
  bool has_logo_icon() const;
  void clear_logo_icon();
  static const int kLogoIconFieldNumber = 3;
  const ::std::string& logo_icon() const;
  void set_logo_icon(const ::std::string& value);
  void set_logo_icon(const char* value);
  void set_logo_icon(const char* value, size_t size);
  ::std::string* mutable_logo_icon();
  ::std::string* release_logo_icon();
  void set_allocated_logo_icon(::std::string* logo_icon);

  // optional uint32 sexual = 4;
  bool has_sexual() const;
  void clear_sexual();
  static const int kSexualFieldNumber = 4;
  ::google::protobuf::uint32 sexual() const;
  void set_sexual(::google::protobuf::uint32 value);

  // optional uint32 room_card = 5;
  bool has_room_card() const;
  void clear_room_card();
  static const int kRoomCardFieldNumber = 5;
  ::google::protobuf::uint32 room_card() const;
  void set_room_card(::google::protobuf::uint32 value);

  // optional uint32 total_games = 6;
  bool has_total_games() const;
  void clear_total_games();
  static const int kTotalGamesFieldNumber = 6;
  ::google::protobuf::uint32 total_games() const;
  void set_total_games(::google::protobuf::uint32 value);

  // optional uint32 win_games = 7;
  bool has_win_games() const;
  void clear_win_games();
  static const int kWinGamesFieldNumber = 7;
  ::google::protobuf::uint32 win_games() const;
  void set_win_games(::google::protobuf::uint32 value);

  // optional uint32 his_con_games = 8;
  bool has_his_con_games() const;
  void clear_his_con_games();
  static const int kHisConGamesFieldNumber = 8;
  ::google::protobuf::uint32 his_con_games() const;
  void set_his_con_games(::google::protobuf::uint32 value);

  // optional uint32 his_max_score = 9;
  bool has_his_max_score() const;
  void clear_his_max_score();
  static const int kHisMaxScoreFieldNumber = 9;
  ::google::protobuf::uint32 his_max_score() const;
  void set_his_max_score(::google::protobuf::uint32 value);

  // optional int32 top_score_total = 10;
  bool has_top_score_total() const;
  void clear_top_score_total();
  static const int kTopScoreTotalFieldNumber = 10;
  ::google::protobuf::int32 top_score_total() const;
  void set_top_score_total(::google::protobuf::int32 value);

  // optional string address = 11;
  bool has_address() const;
  void clear_address();
  static const int kAddressFieldNumber = 11;
  const ::std::string& address() const;
  void set_address(const ::std::string& value);
  void set_address(const char* value);
  void set_address(const char* value, size_t size);
  ::std::string* mutable_address();
  ::std::string* release_address();
  void set_allocated_address(::std::string* address);

  // @@protoc_insertion_point(class_scope:msg_maj.RoleC)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_nickname();
  inline void clear_has_nickname();
  inline void set_has_logo_icon();
  inline void clear_has_logo_icon();
  inline void set_has_sexual();
  inline void clear_has_sexual();
  inline void set_has_room_card();
  inline void clear_has_room_card();
  inline void set_has_total_games();
  inline void clear_has_total_games();
  inline void set_has_win_games();
  inline void clear_has_win_games();
  inline void set_has_his_con_games();
  inline void clear_has_his_con_games();
  inline void set_has_his_max_score();
  inline void clear_has_his_max_score();
  inline void set_has_top_score_total();
  inline void clear_has_top_score_total();
  inline void set_has_address();
  inline void clear_has_address();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::internal::ArenaStringPtr logo_icon_;
  ::google::protobuf::uint32 sexual_;
  ::google::protobuf::uint32 room_card_;
  ::google::protobuf::uint32 total_games_;
  ::google::protobuf::uint32 win_games_;
  ::google::protobuf::uint32 his_con_games_;
  ::google::protobuf::uint32 his_max_score_;
  ::google::protobuf::internal::ArenaStringPtr address_;
  ::google::protobuf::int32 top_score_total_;
  friend void  protobuf_AddDesc_msg_5frole_2eproto();
  friend void protobuf_AssignDesc_msg_5frole_2eproto();
  friend void protobuf_ShutdownFile_msg_5frole_2eproto();

  void InitAsDefaultInstance();
  static RoleC* default_instance_;
};
// -------------------------------------------------------------------

class RoomCardData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.RoomCardData) */ {
 public:
  RoomCardData();
  virtual ~RoomCardData();

  RoomCardData(const RoomCardData& from);

  inline RoomCardData& operator=(const RoomCardData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomCardData& default_instance();

  void Swap(RoomCardData* other);

  // implements Message ----------------------------------------------

  inline RoomCardData* New() const { return New(NULL); }

  RoomCardData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoomCardData& from);
  void MergeFrom(const RoomCardData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RoomCardData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 room_card = 1;
  bool has_room_card() const;
  void clear_room_card();
  static const int kRoomCardFieldNumber = 1;
  ::google::protobuf::uint32 room_card() const;
  void set_room_card(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:msg_maj.RoomCardData)
 private:
  inline void set_has_room_card();
  inline void clear_has_room_card();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 room_card_;
  friend void  protobuf_AddDesc_msg_5frole_2eproto();
  friend void protobuf_AssignDesc_msg_5frole_2eproto();
  friend void protobuf_ShutdownFile_msg_5frole_2eproto();

  void InitAsDefaultInstance();
  static RoomCardData* default_instance_;
};
// -------------------------------------------------------------------

class UpdateRoleData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.UpdateRoleData) */ {
 public:
  UpdateRoleData();
  virtual ~UpdateRoleData();

  UpdateRoleData(const UpdateRoleData& from);

  inline UpdateRoleData& operator=(const UpdateRoleData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateRoleData& default_instance();

  void Swap(UpdateRoleData* other);

  // implements Message ----------------------------------------------

  inline UpdateRoleData* New() const { return New(NULL); }

  UpdateRoleData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateRoleData& from);
  void MergeFrom(const UpdateRoleData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UpdateRoleData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg_maj.RoomCardData room_card_data = 1;
  bool has_room_card_data() const;
  void clear_room_card_data();
  static const int kRoomCardDataFieldNumber = 1;
  const ::msg_maj::RoomCardData& room_card_data() const;
  ::msg_maj::RoomCardData* mutable_room_card_data();
  ::msg_maj::RoomCardData* release_room_card_data();
  void set_allocated_room_card_data(::msg_maj::RoomCardData* room_card_data);

  // @@protoc_insertion_point(class_scope:msg_maj.UpdateRoleData)
 private:
  inline void set_has_room_card_data();
  inline void clear_has_room_card_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg_maj::RoomCardData* room_card_data_;
  friend void  protobuf_AddDesc_msg_5frole_2eproto();
  friend void protobuf_AssignDesc_msg_5frole_2eproto();
  friend void protobuf_ShutdownFile_msg_5frole_2eproto();

  void InitAsDefaultInstance();
  static UpdateRoleData* default_instance_;
};
// -------------------------------------------------------------------

class MoneyLog : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.MoneyLog) */ {
 public:
  MoneyLog();
  virtual ~MoneyLog();

  MoneyLog(const MoneyLog& from);

  inline MoneyLog& operator=(const MoneyLog& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MoneyLog& default_instance();

  void Swap(MoneyLog* other);

  // implements Message ----------------------------------------------

  inline MoneyLog* New() const { return New(NULL); }

  MoneyLog* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MoneyLog& from);
  void MergeFrom(const MoneyLog& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MoneyLog* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 log_id = 1;
  bool has_log_id() const;
  void clear_log_id();
  static const int kLogIdFieldNumber = 1;
  ::google::protobuf::uint64 log_id() const;
  void set_log_id(::google::protobuf::uint64 value);

  // required int32 money_type = 2;
  bool has_money_type() const;
  void clear_money_type();
  static const int kMoneyTypeFieldNumber = 2;
  ::google::protobuf::int32 money_type() const;
  void set_money_type(::google::protobuf::int32 value);

  // required int32 money_num = 3;
  bool has_money_num() const;
  void clear_money_num();
  static const int kMoneyNumFieldNumber = 3;
  ::google::protobuf::int32 money_num() const;
  void set_money_num(::google::protobuf::int32 value);

  // required int32 log_type = 4;
  bool has_log_type() const;
  void clear_log_type();
  static const int kLogTypeFieldNumber = 4;
  ::google::protobuf::int32 log_type() const;
  void set_log_type(::google::protobuf::int32 value);

  // required uint64 char_id = 6;
  bool has_char_id() const;
  void clear_char_id();
  static const int kCharIdFieldNumber = 6;
  ::google::protobuf::uint64 char_id() const;
  void set_char_id(::google::protobuf::uint64 value);

  // required uint64 log_time = 7;
  bool has_log_time() const;
  void clear_log_time();
  static const int kLogTimeFieldNumber = 7;
  ::google::protobuf::uint64 log_time() const;
  void set_log_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:msg_maj.MoneyLog)
 private:
  inline void set_has_log_id();
  inline void clear_has_log_id();
  inline void set_has_money_type();
  inline void clear_has_money_type();
  inline void set_has_money_num();
  inline void clear_has_money_num();
  inline void set_has_log_type();
  inline void clear_has_log_type();
  inline void set_has_char_id();
  inline void clear_has_char_id();
  inline void set_has_log_time();
  inline void clear_has_log_time();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 log_id_;
  ::google::protobuf::int32 money_type_;
  ::google::protobuf::int32 money_num_;
  ::google::protobuf::uint64 char_id_;
  ::google::protobuf::uint64 log_time_;
  ::google::protobuf::int32 log_type_;
  friend void  protobuf_AddDesc_msg_5frole_2eproto();
  friend void protobuf_AssignDesc_msg_5frole_2eproto();
  friend void protobuf_ShutdownFile_msg_5frole_2eproto();

  void InitAsDefaultInstance();
  static MoneyLog* default_instance_;
};
// -------------------------------------------------------------------

class GpsUploadReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.GpsUploadReq) */ {
 public:
  GpsUploadReq();
  virtual ~GpsUploadReq();

  GpsUploadReq(const GpsUploadReq& from);

  inline GpsUploadReq& operator=(const GpsUploadReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GpsUploadReq& default_instance();

  void Swap(GpsUploadReq* other);

  // implements Message ----------------------------------------------

  inline GpsUploadReq* New() const { return New(NULL); }

  GpsUploadReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GpsUploadReq& from);
  void MergeFrom(const GpsUploadReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GpsUploadReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required double longitude = 1;
  bool has_longitude() const;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 1;
  double longitude() const;
  void set_longitude(double value);

  // required double latitude = 2;
  bool has_latitude() const;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 2;
  double latitude() const;
  void set_latitude(double value);

  // required string address = 3;
  bool has_address() const;
  void clear_address();
  static const int kAddressFieldNumber = 3;
  const ::std::string& address() const;
  void set_address(const ::std::string& value);
  void set_address(const char* value);
  void set_address(const char* value, size_t size);
  ::std::string* mutable_address();
  ::std::string* release_address();
  void set_allocated_address(::std::string* address);

  // @@protoc_insertion_point(class_scope:msg_maj.GpsUploadReq)
 private:
  inline void set_has_longitude();
  inline void clear_has_longitude();
  inline void set_has_latitude();
  inline void clear_has_latitude();
  inline void set_has_address();
  inline void clear_has_address();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double longitude_;
  double latitude_;
  ::google::protobuf::internal::ArenaStringPtr address_;
  friend void  protobuf_AddDesc_msg_5frole_2eproto();
  friend void protobuf_AssignDesc_msg_5frole_2eproto();
  friend void protobuf_ShutdownFile_msg_5frole_2eproto();

  void InitAsDefaultInstance();
  static GpsUploadReq* default_instance_;
};
// -------------------------------------------------------------------

class UpdateRoleReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.UpdateRoleReq) */ {
 public:
  UpdateRoleReq();
  virtual ~UpdateRoleReq();

  UpdateRoleReq(const UpdateRoleReq& from);

  inline UpdateRoleReq& operator=(const UpdateRoleReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateRoleReq& default_instance();

  void Swap(UpdateRoleReq* other);

  // implements Message ----------------------------------------------

  inline UpdateRoleReq* New() const { return New(NULL); }

  UpdateRoleReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateRoleReq& from);
  void MergeFrom(const UpdateRoleReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UpdateRoleReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:msg_maj.UpdateRoleReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_msg_5frole_2eproto();
  friend void protobuf_AssignDesc_msg_5frole_2eproto();
  friend void protobuf_ShutdownFile_msg_5frole_2eproto();

  void InitAsDefaultInstance();
  static UpdateRoleReq* default_instance_;
};
// -------------------------------------------------------------------

class SyncRoleToWs : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.SyncRoleToWs) */ {
 public:
  SyncRoleToWs();
  virtual ~SyncRoleToWs();

  SyncRoleToWs(const SyncRoleToWs& from);

  inline SyncRoleToWs& operator=(const SyncRoleToWs& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncRoleToWs& default_instance();

  void Swap(SyncRoleToWs* other);

  // implements Message ----------------------------------------------

  inline SyncRoleToWs* New() const { return New(NULL); }

  SyncRoleToWs* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SyncRoleToWs& from);
  void MergeFrom(const SyncRoleToWs& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SyncRoleToWs* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint64 uid() const;
  void set_uid(::google::protobuf::uint64 value);

  // required uint64 room_id = 2;
  bool has_room_id() const;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 2;
  ::google::protobuf::uint64 room_id() const;
  void set_room_id(::google::protobuf::uint64 value);

  // required uint32 room_seat = 3;
  bool has_room_seat() const;
  void clear_room_seat();
  static const int kRoomSeatFieldNumber = 3;
  ::google::protobuf::uint32 room_seat() const;
  void set_room_seat(::google::protobuf::uint32 value);

  // required uint32 room_card = 4;
  bool has_room_card() const;
  void clear_room_card();
  static const int kRoomCardFieldNumber = 4;
  ::google::protobuf::uint32 room_card() const;
  void set_room_card(::google::protobuf::uint32 value);

  // required bool disconnect = 5;
  bool has_disconnect() const;
  void clear_disconnect();
  static const int kDisconnectFieldNumber = 5;
  bool disconnect() const;
  void set_disconnect(bool value);

  // required bool robotPlaying = 6;
  bool has_robotplaying() const;
  void clear_robotplaying();
  static const int kRobotPlayingFieldNumber = 6;
  bool robotplaying() const;
  void set_robotplaying(bool value);

  // required uint32 hisConGames = 7;
  bool has_hiscongames() const;
  void clear_hiscongames();
  static const int kHisConGamesFieldNumber = 7;
  ::google::protobuf::uint32 hiscongames() const;
  void set_hiscongames(::google::protobuf::uint32 value);

  // required uint32 hisMaxScore = 8;
  bool has_hismaxscore() const;
  void clear_hismaxscore();
  static const int kHisMaxScoreFieldNumber = 8;
  ::google::protobuf::uint32 hismaxscore() const;
  void set_hismaxscore(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:msg_maj.SyncRoleToWs)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_room_seat();
  inline void clear_has_room_seat();
  inline void set_has_room_card();
  inline void clear_has_room_card();
  inline void set_has_disconnect();
  inline void clear_has_disconnect();
  inline void set_has_robotplaying();
  inline void clear_has_robotplaying();
  inline void set_has_hiscongames();
  inline void clear_has_hiscongames();
  inline void set_has_hismaxscore();
  inline void clear_has_hismaxscore();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 uid_;
  ::google::protobuf::uint64 room_id_;
  ::google::protobuf::uint32 room_seat_;
  ::google::protobuf::uint32 room_card_;
  bool disconnect_;
  bool robotplaying_;
  ::google::protobuf::uint32 hiscongames_;
  ::google::protobuf::uint32 hismaxscore_;
  friend void  protobuf_AddDesc_msg_5frole_2eproto();
  friend void protobuf_AssignDesc_msg_5frole_2eproto();
  friend void protobuf_ShutdownFile_msg_5frole_2eproto();

  void InitAsDefaultInstance();
  static SyncRoleToWs* default_instance_;
};
// -------------------------------------------------------------------

class CardinfoReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.CardinfoReq) */ {
 public:
  CardinfoReq();
  virtual ~CardinfoReq();

  CardinfoReq(const CardinfoReq& from);

  inline CardinfoReq& operator=(const CardinfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CardinfoReq& default_instance();

  void Swap(CardinfoReq* other);

  // implements Message ----------------------------------------------

  inline CardinfoReq* New() const { return New(NULL); }

  CardinfoReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CardinfoReq& from);
  void MergeFrom(const CardinfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CardinfoReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 do_type = 1;
  bool has_do_type() const;
  void clear_do_type();
  static const int kDoTypeFieldNumber = 1;
  ::google::protobuf::uint32 do_type() const;
  void set_do_type(::google::protobuf::uint32 value);

  // optional string readname = 2;
  bool has_readname() const;
  void clear_readname();
  static const int kReadnameFieldNumber = 2;
  const ::std::string& readname() const;
  void set_readname(const ::std::string& value);
  void set_readname(const char* value);
  void set_readname(const char* value, size_t size);
  ::std::string* mutable_readname();
  ::std::string* release_readname();
  void set_allocated_readname(::std::string* readname);

  // optional string readcard = 3;
  bool has_readcard() const;
  void clear_readcard();
  static const int kReadcardFieldNumber = 3;
  const ::std::string& readcard() const;
  void set_readcard(const ::std::string& value);
  void set_readcard(const char* value);
  void set_readcard(const char* value, size_t size);
  ::std::string* mutable_readcard();
  ::std::string* release_readcard();
  void set_allocated_readcard(::std::string* readcard);

  // @@protoc_insertion_point(class_scope:msg_maj.CardinfoReq)
 private:
  inline void set_has_do_type();
  inline void clear_has_do_type();
  inline void set_has_readname();
  inline void clear_has_readname();
  inline void set_has_readcard();
  inline void clear_has_readcard();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr readname_;
  ::google::protobuf::internal::ArenaStringPtr readcard_;
  ::google::protobuf::uint32 do_type_;
  friend void  protobuf_AddDesc_msg_5frole_2eproto();
  friend void protobuf_AssignDesc_msg_5frole_2eproto();
  friend void protobuf_ShutdownFile_msg_5frole_2eproto();

  void InitAsDefaultInstance();
  static CardinfoReq* default_instance_;
};
// -------------------------------------------------------------------

class NotifyLoseGame : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.NotifyLoseGame) */ {
 public:
  NotifyLoseGame();
  virtual ~NotifyLoseGame();

  NotifyLoseGame(const NotifyLoseGame& from);

  inline NotifyLoseGame& operator=(const NotifyLoseGame& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyLoseGame& default_instance();

  void Swap(NotifyLoseGame* other);

  // implements Message ----------------------------------------------

  inline NotifyLoseGame* New() const { return New(NULL); }

  NotifyLoseGame* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyLoseGame& from);
  void MergeFrom(const NotifyLoseGame& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NotifyLoseGame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 level = 1;
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 1;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // optional uint32 time = 2;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 2;
  ::google::protobuf::uint32 time() const;
  void set_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:msg_maj.NotifyLoseGame)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 time_;
  friend void  protobuf_AddDesc_msg_5frole_2eproto();
  friend void protobuf_AssignDesc_msg_5frole_2eproto();
  friend void protobuf_ShutdownFile_msg_5frole_2eproto();

  void InitAsDefaultInstance();
  static NotifyLoseGame* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// SettingReq

// required uint32 sound = 1;
inline bool SettingReq::has_sound() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SettingReq::set_has_sound() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SettingReq::clear_has_sound() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SettingReq::clear_sound() {
  sound_ = 0u;
  clear_has_sound();
}
inline ::google::protobuf::uint32 SettingReq::sound() const {
  // @@protoc_insertion_point(field_get:msg_maj.SettingReq.sound)
  return sound_;
}
inline void SettingReq::set_sound(::google::protobuf::uint32 value) {
  set_has_sound();
  sound_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.SettingReq.sound)
}

// required uint32 music = 2;
inline bool SettingReq::has_music() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SettingReq::set_has_music() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SettingReq::clear_has_music() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SettingReq::clear_music() {
  music_ = 0u;
  clear_has_music();
}
inline ::google::protobuf::uint32 SettingReq::music() const {
  // @@protoc_insertion_point(field_get:msg_maj.SettingReq.music)
  return music_;
}
inline void SettingReq::set_music(::google::protobuf::uint32 value) {
  set_has_music();
  music_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.SettingReq.music)
}

// required bool buzzes = 3;
inline bool SettingReq::has_buzzes() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SettingReq::set_has_buzzes() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SettingReq::clear_has_buzzes() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SettingReq::clear_buzzes() {
  buzzes_ = false;
  clear_has_buzzes();
}
inline bool SettingReq::buzzes() const {
  // @@protoc_insertion_point(field_get:msg_maj.SettingReq.buzzes)
  return buzzes_;
}
inline void SettingReq::set_buzzes(bool value) {
  set_has_buzzes();
  buzzes_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.SettingReq.buzzes)
}

// -------------------------------------------------------------------

// SettingResp

// required uint32 sound = 1;
inline bool SettingResp::has_sound() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SettingResp::set_has_sound() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SettingResp::clear_has_sound() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SettingResp::clear_sound() {
  sound_ = 0u;
  clear_has_sound();
}
inline ::google::protobuf::uint32 SettingResp::sound() const {
  // @@protoc_insertion_point(field_get:msg_maj.SettingResp.sound)
  return sound_;
}
inline void SettingResp::set_sound(::google::protobuf::uint32 value) {
  set_has_sound();
  sound_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.SettingResp.sound)
}

// required uint32 music = 2;
inline bool SettingResp::has_music() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SettingResp::set_has_music() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SettingResp::clear_has_music() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SettingResp::clear_music() {
  music_ = 0u;
  clear_has_music();
}
inline ::google::protobuf::uint32 SettingResp::music() const {
  // @@protoc_insertion_point(field_get:msg_maj.SettingResp.music)
  return music_;
}
inline void SettingResp::set_music(::google::protobuf::uint32 value) {
  set_has_music();
  music_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.SettingResp.music)
}

// required bool buzzes = 3;
inline bool SettingResp::has_buzzes() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SettingResp::set_has_buzzes() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SettingResp::clear_has_buzzes() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SettingResp::clear_buzzes() {
  buzzes_ = false;
  clear_has_buzzes();
}
inline bool SettingResp::buzzes() const {
  // @@protoc_insertion_point(field_get:msg_maj.SettingResp.buzzes)
  return buzzes_;
}
inline void SettingResp::set_buzzes(bool value) {
  set_has_buzzes();
  buzzes_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.SettingResp.buzzes)
}

// -------------------------------------------------------------------

// SetLogoReq

// required uint32 logo_icon = 1;
inline bool SetLogoReq::has_logo_icon() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetLogoReq::set_has_logo_icon() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetLogoReq::clear_has_logo_icon() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetLogoReq::clear_logo_icon() {
  logo_icon_ = 0u;
  clear_has_logo_icon();
}
inline ::google::protobuf::uint32 SetLogoReq::logo_icon() const {
  // @@protoc_insertion_point(field_get:msg_maj.SetLogoReq.logo_icon)
  return logo_icon_;
}
inline void SetLogoReq::set_logo_icon(::google::protobuf::uint32 value) {
  set_has_logo_icon();
  logo_icon_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.SetLogoReq.logo_icon)
}

// -------------------------------------------------------------------

// SetLogoResp

// required uint32 logo_icon = 1;
inline bool SetLogoResp::has_logo_icon() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetLogoResp::set_has_logo_icon() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetLogoResp::clear_has_logo_icon() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetLogoResp::clear_logo_icon() {
  logo_icon_ = 0u;
  clear_has_logo_icon();
}
inline ::google::protobuf::uint32 SetLogoResp::logo_icon() const {
  // @@protoc_insertion_point(field_get:msg_maj.SetLogoResp.logo_icon)
  return logo_icon_;
}
inline void SetLogoResp::set_logo_icon(::google::protobuf::uint32 value) {
  set_has_logo_icon();
  logo_icon_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.SetLogoResp.logo_icon)
}

// -------------------------------------------------------------------

// GetTitleListReq

// repeated .msg_maj.Title title = 1;
inline int GetTitleListReq::title_size() const {
  return title_.size();
}
inline void GetTitleListReq::clear_title() {
  title_.Clear();
}
inline const ::msg_maj::Title& GetTitleListReq::title(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.GetTitleListReq.title)
  return title_.Get(index);
}
inline ::msg_maj::Title* GetTitleListReq::mutable_title(int index) {
  // @@protoc_insertion_point(field_mutable:msg_maj.GetTitleListReq.title)
  return title_.Mutable(index);
}
inline ::msg_maj::Title* GetTitleListReq::add_title() {
  // @@protoc_insertion_point(field_add:msg_maj.GetTitleListReq.title)
  return title_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::msg_maj::Title >*
GetTitleListReq::mutable_title() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.GetTitleListReq.title)
  return &title_;
}
inline const ::google::protobuf::RepeatedPtrField< ::msg_maj::Title >&
GetTitleListReq::title() const {
  // @@protoc_insertion_point(field_list:msg_maj.GetTitleListReq.title)
  return title_;
}

// -------------------------------------------------------------------

// Title

// required uint32 id = 1;
inline bool Title::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Title::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Title::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Title::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 Title::id() const {
  // @@protoc_insertion_point(field_get:msg_maj.Title.id)
  return id_;
}
inline void Title::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.Title.id)
}

// required string title = 2;
inline bool Title::has_title() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Title::set_has_title() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Title::clear_has_title() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Title::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
inline const ::std::string& Title::title() const {
  // @@protoc_insertion_point(field_get:msg_maj.Title.title)
  return title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Title::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.Title.title)
}
inline void Title::set_title(const char* value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.Title.title)
}
inline void Title::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.Title.title)
}
inline ::std::string* Title::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:msg_maj.Title.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Title::release_title() {
  // @@protoc_insertion_point(field_release:msg_maj.Title.title)
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Title::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.Title.title)
}

// -------------------------------------------------------------------

// GetTitleListResp

// -------------------------------------------------------------------

// SetTitleReq

// required uint32 id = 1;
inline bool SetTitleReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetTitleReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetTitleReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetTitleReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 SetTitleReq::id() const {
  // @@protoc_insertion_point(field_get:msg_maj.SetTitleReq.id)
  return id_;
}
inline void SetTitleReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.SetTitleReq.id)
}

// -------------------------------------------------------------------

// SetTitleResp

// -------------------------------------------------------------------

// PlayerInfoReq

// required uint64 uid = 1;
inline bool PlayerInfoReq::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerInfoReq::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerInfoReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerInfoReq::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 PlayerInfoReq::uid() const {
  // @@protoc_insertion_point(field_get:msg_maj.PlayerInfoReq.uid)
  return uid_;
}
inline void PlayerInfoReq::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.PlayerInfoReq.uid)
}

// -------------------------------------------------------------------

// PlayerInfoResp

// required .msg_maj.RoleC role = 1;
inline bool PlayerInfoResp::has_role() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerInfoResp::set_has_role() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerInfoResp::clear_has_role() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerInfoResp::clear_role() {
  if (role_ != NULL) role_->::msg_maj::RoleC::Clear();
  clear_has_role();
}
inline const ::msg_maj::RoleC& PlayerInfoResp::role() const {
  // @@protoc_insertion_point(field_get:msg_maj.PlayerInfoResp.role)
  return role_ != NULL ? *role_ : *default_instance_->role_;
}
inline ::msg_maj::RoleC* PlayerInfoResp::mutable_role() {
  set_has_role();
  if (role_ == NULL) {
    role_ = new ::msg_maj::RoleC;
  }
  // @@protoc_insertion_point(field_mutable:msg_maj.PlayerInfoResp.role)
  return role_;
}
inline ::msg_maj::RoleC* PlayerInfoResp::release_role() {
  // @@protoc_insertion_point(field_release:msg_maj.PlayerInfoResp.role)
  clear_has_role();
  ::msg_maj::RoleC* temp = role_;
  role_ = NULL;
  return temp;
}
inline void PlayerInfoResp::set_allocated_role(::msg_maj::RoleC* role) {
  delete role_;
  role_ = role;
  if (role) {
    set_has_role();
  } else {
    clear_has_role();
  }
  // @@protoc_insertion_point(field_set_allocated:msg_maj.PlayerInfoResp.role)
}

// -------------------------------------------------------------------

// Data

// optional uint64 reset_time = 1;
inline bool Data::has_reset_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Data::set_has_reset_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Data::clear_has_reset_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Data::clear_reset_time() {
  reset_time_ = GOOGLE_ULONGLONG(0);
  clear_has_reset_time();
}
inline ::google::protobuf::uint64 Data::reset_time() const {
  // @@protoc_insertion_point(field_get:msg_maj.Data.reset_time)
  return reset_time_;
}
inline void Data::set_reset_time(::google::protobuf::uint64 value) {
  set_has_reset_time();
  reset_time_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.Data.reset_time)
}

// optional uint32 first_show_status = 2;
inline bool Data::has_first_show_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Data::set_has_first_show_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Data::clear_has_first_show_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Data::clear_first_show_status() {
  first_show_status_ = 0u;
  clear_has_first_show_status();
}
inline ::google::protobuf::uint32 Data::first_show_status() const {
  // @@protoc_insertion_point(field_get:msg_maj.Data.first_show_status)
  return first_show_status_;
}
inline void Data::set_first_show_status(::google::protobuf::uint32 value) {
  set_has_first_show_status();
  first_show_status_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.Data.first_show_status)
}

// optional uint32 has_inv_friend_num = 3;
inline bool Data::has_has_inv_friend_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Data::set_has_has_inv_friend_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Data::clear_has_has_inv_friend_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Data::clear_has_inv_friend_num() {
  has_inv_friend_num_ = 0u;
  clear_has_has_inv_friend_num();
}
inline ::google::protobuf::uint32 Data::has_inv_friend_num() const {
  // @@protoc_insertion_point(field_get:msg_maj.Data.has_inv_friend_num)
  return has_inv_friend_num_;
}
inline void Data::set_has_inv_friend_num(::google::protobuf::uint32 value) {
  set_has_has_inv_friend_num();
  has_inv_friend_num_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.Data.has_inv_friend_num)
}

// optional uint32 has_get_room_card = 4;
inline bool Data::has_has_get_room_card() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Data::set_has_has_get_room_card() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Data::clear_has_has_get_room_card() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Data::clear_has_get_room_card() {
  has_get_room_card_ = 0u;
  clear_has_has_get_room_card();
}
inline ::google::protobuf::uint32 Data::has_get_room_card() const {
  // @@protoc_insertion_point(field_get:msg_maj.Data.has_get_room_card)
  return has_get_room_card_;
}
inline void Data::set_has_get_room_card(::google::protobuf::uint32 value) {
  set_has_has_get_room_card();
  has_get_room_card_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.Data.has_get_room_card)
}

// optional uint32 can_get_room_card = 5;
inline bool Data::has_can_get_room_card() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Data::set_has_can_get_room_card() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Data::clear_has_can_get_room_card() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Data::clear_can_get_room_card() {
  can_get_room_card_ = 0u;
  clear_has_can_get_room_card();
}
inline ::google::protobuf::uint32 Data::can_get_room_card() const {
  // @@protoc_insertion_point(field_get:msg_maj.Data.can_get_room_card)
  return can_get_room_card_;
}
inline void Data::set_can_get_room_card(::google::protobuf::uint32 value) {
  set_has_can_get_room_card();
  can_get_room_card_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.Data.can_get_room_card)
}

// optional uint32 be_invitation_id = 6;
inline bool Data::has_be_invitation_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Data::set_has_be_invitation_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Data::clear_has_be_invitation_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Data::clear_be_invitation_id() {
  be_invitation_id_ = 0u;
  clear_has_be_invitation_id();
}
inline ::google::protobuf::uint32 Data::be_invitation_id() const {
  // @@protoc_insertion_point(field_get:msg_maj.Data.be_invitation_id)
  return be_invitation_id_;
}
inline void Data::set_be_invitation_id(::google::protobuf::uint32 value) {
  set_has_be_invitation_id();
  be_invitation_id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.Data.be_invitation_id)
}

// optional uint32 play_games = 7;
inline bool Data::has_play_games() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Data::set_has_play_games() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Data::clear_has_play_games() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Data::clear_play_games() {
  play_games_ = 0u;
  clear_has_play_games();
}
inline ::google::protobuf::uint32 Data::play_games() const {
  // @@protoc_insertion_point(field_get:msg_maj.Data.play_games)
  return play_games_;
}
inline void Data::set_play_games(::google::protobuf::uint32 value) {
  set_has_play_games();
  play_games_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.Data.play_games)
}

// optional uint32 recv_reward_status = 8;
inline bool Data::has_recv_reward_status() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Data::set_has_recv_reward_status() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Data::clear_has_recv_reward_status() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Data::clear_recv_reward_status() {
  recv_reward_status_ = 0u;
  clear_has_recv_reward_status();
}
inline ::google::protobuf::uint32 Data::recv_reward_status() const {
  // @@protoc_insertion_point(field_get:msg_maj.Data.recv_reward_status)
  return recv_reward_status_;
}
inline void Data::set_recv_reward_status(::google::protobuf::uint32 value) {
  set_has_recv_reward_status();
  recv_reward_status_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.Data.recv_reward_status)
}

// -------------------------------------------------------------------

// Role

// optional uint64 id = 1;
inline bool Role::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Role::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Role::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Role::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 Role::id() const {
  // @@protoc_insertion_point(field_get:msg_maj.Role.id)
  return id_;
}
inline void Role::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.Role.id)
}

// optional string account = 2;
inline bool Role::has_account() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Role::set_has_account() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Role::clear_has_account() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Role::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
inline const ::std::string& Role::account() const {
  // @@protoc_insertion_point(field_get:msg_maj.Role.account)
  return account_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Role::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.Role.account)
}
inline void Role::set_account(const char* value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.Role.account)
}
inline void Role::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.Role.account)
}
inline ::std::string* Role::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:msg_maj.Role.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Role::release_account() {
  // @@protoc_insertion_point(field_release:msg_maj.Role.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Role::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.Role.account)
}

// optional string nickname = 3;
inline bool Role::has_nickname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Role::set_has_nickname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Role::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Role::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& Role::nickname() const {
  // @@protoc_insertion_point(field_get:msg_maj.Role.nickname)
  return nickname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Role::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.Role.nickname)
}
inline void Role::set_nickname(const char* value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.Role.nickname)
}
inline void Role::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.Role.nickname)
}
inline ::std::string* Role::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:msg_maj.Role.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Role::release_nickname() {
  // @@protoc_insertion_point(field_release:msg_maj.Role.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Role::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.Role.nickname)
}

// optional uint32 level = 4;
inline bool Role::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Role::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Role::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Role::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 Role::level() const {
  // @@protoc_insertion_point(field_get:msg_maj.Role.level)
  return level_;
}
inline void Role::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.Role.level)
}

// optional string logo_icon = 5;
inline bool Role::has_logo_icon() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Role::set_has_logo_icon() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Role::clear_has_logo_icon() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Role::clear_logo_icon() {
  logo_icon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_logo_icon();
}
inline const ::std::string& Role::logo_icon() const {
  // @@protoc_insertion_point(field_get:msg_maj.Role.logo_icon)
  return logo_icon_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Role::set_logo_icon(const ::std::string& value) {
  set_has_logo_icon();
  logo_icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.Role.logo_icon)
}
inline void Role::set_logo_icon(const char* value) {
  set_has_logo_icon();
  logo_icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.Role.logo_icon)
}
inline void Role::set_logo_icon(const char* value, size_t size) {
  set_has_logo_icon();
  logo_icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.Role.logo_icon)
}
inline ::std::string* Role::mutable_logo_icon() {
  set_has_logo_icon();
  // @@protoc_insertion_point(field_mutable:msg_maj.Role.logo_icon)
  return logo_icon_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Role::release_logo_icon() {
  // @@protoc_insertion_point(field_release:msg_maj.Role.logo_icon)
  clear_has_logo_icon();
  return logo_icon_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Role::set_allocated_logo_icon(::std::string* logo_icon) {
  if (logo_icon != NULL) {
    set_has_logo_icon();
  } else {
    clear_has_logo_icon();
  }
  logo_icon_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), logo_icon);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.Role.logo_icon)
}

// optional uint32 title = 6;
inline bool Role::has_title() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Role::set_has_title() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Role::clear_has_title() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Role::clear_title() {
  title_ = 0u;
  clear_has_title();
}
inline ::google::protobuf::uint32 Role::title() const {
  // @@protoc_insertion_point(field_get:msg_maj.Role.title)
  return title_;
}
inline void Role::set_title(::google::protobuf::uint32 value) {
  set_has_title();
  title_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.Role.title)
}

// optional uint32 diamond = 7;
inline bool Role::has_diamond() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Role::set_has_diamond() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Role::clear_has_diamond() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Role::clear_diamond() {
  diamond_ = 0u;
  clear_has_diamond();
}
inline ::google::protobuf::uint32 Role::diamond() const {
  // @@protoc_insertion_point(field_get:msg_maj.Role.diamond)
  return diamond_;
}
inline void Role::set_diamond(::google::protobuf::uint32 value) {
  set_has_diamond();
  diamond_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.Role.diamond)
}

// optional uint32 coin = 8;
inline bool Role::has_coin() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Role::set_has_coin() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Role::clear_has_coin() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Role::clear_coin() {
  coin_ = 0u;
  clear_has_coin();
}
inline ::google::protobuf::uint32 Role::coin() const {
  // @@protoc_insertion_point(field_get:msg_maj.Role.coin)
  return coin_;
}
inline void Role::set_coin(::google::protobuf::uint32 value) {
  set_has_coin();
  coin_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.Role.coin)
}

// optional uint32 sexual = 9;
inline bool Role::has_sexual() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Role::set_has_sexual() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Role::clear_has_sexual() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Role::clear_sexual() {
  sexual_ = 0u;
  clear_has_sexual();
}
inline ::google::protobuf::uint32 Role::sexual() const {
  // @@protoc_insertion_point(field_get:msg_maj.Role.sexual)
  return sexual_;
}
inline void Role::set_sexual(::google::protobuf::uint32 value) {
  set_has_sexual();
  sexual_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.Role.sexual)
}

// optional uint32 room_card = 10;
inline bool Role::has_room_card() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Role::set_has_room_card() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Role::clear_has_room_card() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Role::clear_room_card() {
  room_card_ = 0u;
  clear_has_room_card();
}
inline ::google::protobuf::uint32 Role::room_card() const {
  // @@protoc_insertion_point(field_get:msg_maj.Role.room_card)
  return room_card_;
}
inline void Role::set_room_card(::google::protobuf::uint32 value) {
  set_has_room_card();
  room_card_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.Role.room_card)
}

// optional uint32 total_games = 11;
inline bool Role::has_total_games() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Role::set_has_total_games() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Role::clear_has_total_games() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Role::clear_total_games() {
  total_games_ = 0u;
  clear_has_total_games();
}
inline ::google::protobuf::uint32 Role::total_games() const {
  // @@protoc_insertion_point(field_get:msg_maj.Role.total_games)
  return total_games_;
}
inline void Role::set_total_games(::google::protobuf::uint32 value) {
  set_has_total_games();
  total_games_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.Role.total_games)
}

// optional uint32 win_games = 12;
inline bool Role::has_win_games() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Role::set_has_win_games() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Role::clear_has_win_games() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Role::clear_win_games() {
  win_games_ = 0u;
  clear_has_win_games();
}
inline ::google::protobuf::uint32 Role::win_games() const {
  // @@protoc_insertion_point(field_get:msg_maj.Role.win_games)
  return win_games_;
}
inline void Role::set_win_games(::google::protobuf::uint32 value) {
  set_has_win_games();
  win_games_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.Role.win_games)
}

// optional uint32 con_games = 13;
inline bool Role::has_con_games() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Role::set_has_con_games() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Role::clear_has_con_games() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Role::clear_con_games() {
  con_games_ = 0u;
  clear_has_con_games();
}
inline ::google::protobuf::uint32 Role::con_games() const {
  // @@protoc_insertion_point(field_get:msg_maj.Role.con_games)
  return con_games_;
}
inline void Role::set_con_games(::google::protobuf::uint32 value) {
  set_has_con_games();
  con_games_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.Role.con_games)
}

// optional uint32 his_max_score = 14;
inline bool Role::has_his_max_score() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Role::set_has_his_max_score() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Role::clear_has_his_max_score() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Role::clear_his_max_score() {
  his_max_score_ = 0u;
  clear_has_his_max_score();
}
inline ::google::protobuf::uint32 Role::his_max_score() const {
  // @@protoc_insertion_point(field_get:msg_maj.Role.his_max_score)
  return his_max_score_;
}
inline void Role::set_his_max_score(::google::protobuf::uint32 value) {
  set_has_his_max_score();
  his_max_score_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.Role.his_max_score)
}

// optional uint32 his_max_con = 15;
inline bool Role::has_his_max_con() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void Role::set_has_his_max_con() {
  _has_bits_[0] |= 0x00004000u;
}
inline void Role::clear_has_his_max_con() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void Role::clear_his_max_con() {
  his_max_con_ = 0u;
  clear_has_his_max_con();
}
inline ::google::protobuf::uint32 Role::his_max_con() const {
  // @@protoc_insertion_point(field_get:msg_maj.Role.his_max_con)
  return his_max_con_;
}
inline void Role::set_his_max_con(::google::protobuf::uint32 value) {
  set_has_his_max_con();
  his_max_con_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.Role.his_max_con)
}

// optional uint32 week_max_score = 16;
inline bool Role::has_week_max_score() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void Role::set_has_week_max_score() {
  _has_bits_[0] |= 0x00008000u;
}
inline void Role::clear_has_week_max_score() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void Role::clear_week_max_score() {
  week_max_score_ = 0u;
  clear_has_week_max_score();
}
inline ::google::protobuf::uint32 Role::week_max_score() const {
  // @@protoc_insertion_point(field_get:msg_maj.Role.week_max_score)
  return week_max_score_;
}
inline void Role::set_week_max_score(::google::protobuf::uint32 value) {
  set_has_week_max_score();
  week_max_score_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.Role.week_max_score)
}

// optional uint64 top_wins_ymd = 17;
inline bool Role::has_top_wins_ymd() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void Role::set_has_top_wins_ymd() {
  _has_bits_[0] |= 0x00010000u;
}
inline void Role::clear_has_top_wins_ymd() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void Role::clear_top_wins_ymd() {
  top_wins_ymd_ = GOOGLE_ULONGLONG(0);
  clear_has_top_wins_ymd();
}
inline ::google::protobuf::uint64 Role::top_wins_ymd() const {
  // @@protoc_insertion_point(field_get:msg_maj.Role.top_wins_ymd)
  return top_wins_ymd_;
}
inline void Role::set_top_wins_ymd(::google::protobuf::uint64 value) {
  set_has_top_wins_ymd();
  top_wins_ymd_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.Role.top_wins_ymd)
}

// optional int32 top_wins_total = 18;
inline bool Role::has_top_wins_total() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void Role::set_has_top_wins_total() {
  _has_bits_[0] |= 0x00020000u;
}
inline void Role::clear_has_top_wins_total() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void Role::clear_top_wins_total() {
  top_wins_total_ = 0;
  clear_has_top_wins_total();
}
inline ::google::protobuf::int32 Role::top_wins_total() const {
  // @@protoc_insertion_point(field_get:msg_maj.Role.top_wins_total)
  return top_wins_total_;
}
inline void Role::set_top_wins_total(::google::protobuf::int32 value) {
  set_has_top_wins_total();
  top_wins_total_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.Role.top_wins_total)
}

// optional uint64 top_score_ymd = 19;
inline bool Role::has_top_score_ymd() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void Role::set_has_top_score_ymd() {
  _has_bits_[0] |= 0x00040000u;
}
inline void Role::clear_has_top_score_ymd() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void Role::clear_top_score_ymd() {
  top_score_ymd_ = GOOGLE_ULONGLONG(0);
  clear_has_top_score_ymd();
}
inline ::google::protobuf::uint64 Role::top_score_ymd() const {
  // @@protoc_insertion_point(field_get:msg_maj.Role.top_score_ymd)
  return top_score_ymd_;
}
inline void Role::set_top_score_ymd(::google::protobuf::uint64 value) {
  set_has_top_score_ymd();
  top_score_ymd_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.Role.top_score_ymd)
}

// optional int32 top_score_total = 20;
inline bool Role::has_top_score_total() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void Role::set_has_top_score_total() {
  _has_bits_[0] |= 0x00080000u;
}
inline void Role::clear_has_top_score_total() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void Role::clear_top_score_total() {
  top_score_total_ = 0;
  clear_has_top_score_total();
}
inline ::google::protobuf::int32 Role::top_score_total() const {
  // @@protoc_insertion_point(field_get:msg_maj.Role.top_score_total)
  return top_score_total_;
}
inline void Role::set_top_score_total(::google::protobuf::int32 value) {
  set_has_top_score_total();
  top_score_total_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.Role.top_score_total)
}

// optional uint64 blocktime = 21;
inline bool Role::has_blocktime() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void Role::set_has_blocktime() {
  _has_bits_[0] |= 0x00100000u;
}
inline void Role::clear_has_blocktime() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void Role::clear_blocktime() {
  blocktime_ = GOOGLE_ULONGLONG(0);
  clear_has_blocktime();
}
inline ::google::protobuf::uint64 Role::blocktime() const {
  // @@protoc_insertion_point(field_get:msg_maj.Role.blocktime)
  return blocktime_;
}
inline void Role::set_blocktime(::google::protobuf::uint64 value) {
  set_has_blocktime();
  blocktime_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.Role.blocktime)
}

// optional uint32 today_play_num = 22;
inline bool Role::has_today_play_num() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void Role::set_has_today_play_num() {
  _has_bits_[0] |= 0x00200000u;
}
inline void Role::clear_has_today_play_num() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void Role::clear_today_play_num() {
  today_play_num_ = 0u;
  clear_has_today_play_num();
}
inline ::google::protobuf::uint32 Role::today_play_num() const {
  // @@protoc_insertion_point(field_get:msg_maj.Role.today_play_num)
  return today_play_num_;
}
inline void Role::set_today_play_num(::google::protobuf::uint32 value) {
  set_has_today_play_num();
  today_play_num_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.Role.today_play_num)
}

// optional string readname = 23;
inline bool Role::has_readname() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void Role::set_has_readname() {
  _has_bits_[0] |= 0x00400000u;
}
inline void Role::clear_has_readname() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void Role::clear_readname() {
  readname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_readname();
}
inline const ::std::string& Role::readname() const {
  // @@protoc_insertion_point(field_get:msg_maj.Role.readname)
  return readname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Role::set_readname(const ::std::string& value) {
  set_has_readname();
  readname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.Role.readname)
}
inline void Role::set_readname(const char* value) {
  set_has_readname();
  readname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.Role.readname)
}
inline void Role::set_readname(const char* value, size_t size) {
  set_has_readname();
  readname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.Role.readname)
}
inline ::std::string* Role::mutable_readname() {
  set_has_readname();
  // @@protoc_insertion_point(field_mutable:msg_maj.Role.readname)
  return readname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Role::release_readname() {
  // @@protoc_insertion_point(field_release:msg_maj.Role.readname)
  clear_has_readname();
  return readname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Role::set_allocated_readname(::std::string* readname) {
  if (readname != NULL) {
    set_has_readname();
  } else {
    clear_has_readname();
  }
  readname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), readname);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.Role.readname)
}

// optional string readcard = 24;
inline bool Role::has_readcard() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void Role::set_has_readcard() {
  _has_bits_[0] |= 0x00800000u;
}
inline void Role::clear_has_readcard() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void Role::clear_readcard() {
  readcard_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_readcard();
}
inline const ::std::string& Role::readcard() const {
  // @@protoc_insertion_point(field_get:msg_maj.Role.readcard)
  return readcard_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Role::set_readcard(const ::std::string& value) {
  set_has_readcard();
  readcard_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.Role.readcard)
}
inline void Role::set_readcard(const char* value) {
  set_has_readcard();
  readcard_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.Role.readcard)
}
inline void Role::set_readcard(const char* value, size_t size) {
  set_has_readcard();
  readcard_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.Role.readcard)
}
inline ::std::string* Role::mutable_readcard() {
  set_has_readcard();
  // @@protoc_insertion_point(field_mutable:msg_maj.Role.readcard)
  return readcard_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Role::release_readcard() {
  // @@protoc_insertion_point(field_release:msg_maj.Role.readcard)
  clear_has_readcard();
  return readcard_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Role::set_allocated_readcard(::std::string* readcard) {
  if (readcard != NULL) {
    set_has_readcard();
  } else {
    clear_has_readcard();
  }
  readcard_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), readcard);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.Role.readcard)
}

// optional uint64 last_game_end = 25;
inline bool Role::has_last_game_end() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void Role::set_has_last_game_end() {
  _has_bits_[0] |= 0x01000000u;
}
inline void Role::clear_has_last_game_end() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void Role::clear_last_game_end() {
  last_game_end_ = GOOGLE_ULONGLONG(0);
  clear_has_last_game_end();
}
inline ::google::protobuf::uint64 Role::last_game_end() const {
  // @@protoc_insertion_point(field_get:msg_maj.Role.last_game_end)
  return last_game_end_;
}
inline void Role::set_last_game_end(::google::protobuf::uint64 value) {
  set_has_last_game_end();
  last_game_end_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.Role.last_game_end)
}

// optional uint64 login_time = 26;
inline bool Role::has_login_time() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void Role::set_has_login_time() {
  _has_bits_[0] |= 0x02000000u;
}
inline void Role::clear_has_login_time() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void Role::clear_login_time() {
  login_time_ = GOOGLE_ULONGLONG(0);
  clear_has_login_time();
}
inline ::google::protobuf::uint64 Role::login_time() const {
  // @@protoc_insertion_point(field_get:msg_maj.Role.login_time)
  return login_time_;
}
inline void Role::set_login_time(::google::protobuf::uint64 value) {
  set_has_login_time();
  login_time_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.Role.login_time)
}

// optional string ip = 27;
inline bool Role::has_ip() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void Role::set_has_ip() {
  _has_bits_[0] |= 0x04000000u;
}
inline void Role::clear_has_ip() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void Role::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip();
}
inline const ::std::string& Role::ip() const {
  // @@protoc_insertion_point(field_get:msg_maj.Role.ip)
  return ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Role::set_ip(const ::std::string& value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.Role.ip)
}
inline void Role::set_ip(const char* value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.Role.ip)
}
inline void Role::set_ip(const char* value, size_t size) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.Role.ip)
}
inline ::std::string* Role::mutable_ip() {
  set_has_ip();
  // @@protoc_insertion_point(field_mutable:msg_maj.Role.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Role::release_ip() {
  // @@protoc_insertion_point(field_release:msg_maj.Role.ip)
  clear_has_ip();
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Role::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    set_has_ip();
  } else {
    clear_has_ip();
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.Role.ip)
}

// optional .msg_maj.Data data = 99;
inline bool Role::has_data() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void Role::set_has_data() {
  _has_bits_[0] |= 0x08000000u;
}
inline void Role::clear_has_data() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void Role::clear_data() {
  if (data_ != NULL) data_->::msg_maj::Data::Clear();
  clear_has_data();
}
inline const ::msg_maj::Data& Role::data() const {
  // @@protoc_insertion_point(field_get:msg_maj.Role.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::msg_maj::Data* Role::mutable_data() {
  set_has_data();
  if (data_ == NULL) {
    data_ = new ::msg_maj::Data;
  }
  // @@protoc_insertion_point(field_mutable:msg_maj.Role.data)
  return data_;
}
inline ::msg_maj::Data* Role::release_data() {
  // @@protoc_insertion_point(field_release:msg_maj.Role.data)
  clear_has_data();
  ::msg_maj::Data* temp = data_;
  data_ = NULL;
  return temp;
}
inline void Role::set_allocated_data(::msg_maj::Data* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:msg_maj.Role.data)
}

// -------------------------------------------------------------------

// RoleOff

// optional uint64 id = 1;
inline bool RoleOff::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleOff::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleOff::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleOff::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 RoleOff::id() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleOff.id)
  return id_;
}
inline void RoleOff::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RoleOff.id)
}

// optional string account = 2;
inline bool RoleOff::has_account() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoleOff::set_has_account() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoleOff::clear_has_account() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoleOff::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
inline const ::std::string& RoleOff::account() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleOff.account)
  return account_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoleOff::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.RoleOff.account)
}
inline void RoleOff::set_account(const char* value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.RoleOff.account)
}
inline void RoleOff::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.RoleOff.account)
}
inline ::std::string* RoleOff::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:msg_maj.RoleOff.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RoleOff::release_account() {
  // @@protoc_insertion_point(field_release:msg_maj.RoleOff.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoleOff::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.RoleOff.account)
}

// optional string nickname = 3;
inline bool RoleOff::has_nickname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoleOff::set_has_nickname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoleOff::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoleOff::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& RoleOff::nickname() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleOff.nickname)
  return nickname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoleOff::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.RoleOff.nickname)
}
inline void RoleOff::set_nickname(const char* value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.RoleOff.nickname)
}
inline void RoleOff::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.RoleOff.nickname)
}
inline ::std::string* RoleOff::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:msg_maj.RoleOff.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RoleOff::release_nickname() {
  // @@protoc_insertion_point(field_release:msg_maj.RoleOff.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoleOff::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.RoleOff.nickname)
}

// optional uint32 level = 4;
inline bool RoleOff::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RoleOff::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RoleOff::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RoleOff::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 RoleOff::level() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleOff.level)
  return level_;
}
inline void RoleOff::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RoleOff.level)
}

// optional string logo_icon = 5;
inline bool RoleOff::has_logo_icon() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RoleOff::set_has_logo_icon() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RoleOff::clear_has_logo_icon() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RoleOff::clear_logo_icon() {
  logo_icon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_logo_icon();
}
inline const ::std::string& RoleOff::logo_icon() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleOff.logo_icon)
  return logo_icon_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoleOff::set_logo_icon(const ::std::string& value) {
  set_has_logo_icon();
  logo_icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.RoleOff.logo_icon)
}
inline void RoleOff::set_logo_icon(const char* value) {
  set_has_logo_icon();
  logo_icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.RoleOff.logo_icon)
}
inline void RoleOff::set_logo_icon(const char* value, size_t size) {
  set_has_logo_icon();
  logo_icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.RoleOff.logo_icon)
}
inline ::std::string* RoleOff::mutable_logo_icon() {
  set_has_logo_icon();
  // @@protoc_insertion_point(field_mutable:msg_maj.RoleOff.logo_icon)
  return logo_icon_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RoleOff::release_logo_icon() {
  // @@protoc_insertion_point(field_release:msg_maj.RoleOff.logo_icon)
  clear_has_logo_icon();
  return logo_icon_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoleOff::set_allocated_logo_icon(::std::string* logo_icon) {
  if (logo_icon != NULL) {
    set_has_logo_icon();
  } else {
    clear_has_logo_icon();
  }
  logo_icon_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), logo_icon);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.RoleOff.logo_icon)
}

// optional uint32 title = 6;
inline bool RoleOff::has_title() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RoleOff::set_has_title() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RoleOff::clear_has_title() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RoleOff::clear_title() {
  title_ = 0u;
  clear_has_title();
}
inline ::google::protobuf::uint32 RoleOff::title() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleOff.title)
  return title_;
}
inline void RoleOff::set_title(::google::protobuf::uint32 value) {
  set_has_title();
  title_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RoleOff.title)
}

// optional uint32 diamond = 7;
inline bool RoleOff::has_diamond() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RoleOff::set_has_diamond() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RoleOff::clear_has_diamond() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RoleOff::clear_diamond() {
  diamond_ = 0u;
  clear_has_diamond();
}
inline ::google::protobuf::uint32 RoleOff::diamond() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleOff.diamond)
  return diamond_;
}
inline void RoleOff::set_diamond(::google::protobuf::uint32 value) {
  set_has_diamond();
  diamond_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RoleOff.diamond)
}

// optional uint32 coin = 8;
inline bool RoleOff::has_coin() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RoleOff::set_has_coin() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RoleOff::clear_has_coin() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RoleOff::clear_coin() {
  coin_ = 0u;
  clear_has_coin();
}
inline ::google::protobuf::uint32 RoleOff::coin() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleOff.coin)
  return coin_;
}
inline void RoleOff::set_coin(::google::protobuf::uint32 value) {
  set_has_coin();
  coin_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RoleOff.coin)
}

// optional uint32 sexual = 9;
inline bool RoleOff::has_sexual() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RoleOff::set_has_sexual() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RoleOff::clear_has_sexual() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RoleOff::clear_sexual() {
  sexual_ = 0u;
  clear_has_sexual();
}
inline ::google::protobuf::uint32 RoleOff::sexual() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleOff.sexual)
  return sexual_;
}
inline void RoleOff::set_sexual(::google::protobuf::uint32 value) {
  set_has_sexual();
  sexual_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RoleOff.sexual)
}

// optional uint32 room_card = 10;
inline bool RoleOff::has_room_card() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void RoleOff::set_has_room_card() {
  _has_bits_[0] |= 0x00000200u;
}
inline void RoleOff::clear_has_room_card() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void RoleOff::clear_room_card() {
  room_card_ = 0u;
  clear_has_room_card();
}
inline ::google::protobuf::uint32 RoleOff::room_card() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleOff.room_card)
  return room_card_;
}
inline void RoleOff::set_room_card(::google::protobuf::uint32 value) {
  set_has_room_card();
  room_card_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RoleOff.room_card)
}

// optional uint32 total_games = 11;
inline bool RoleOff::has_total_games() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void RoleOff::set_has_total_games() {
  _has_bits_[0] |= 0x00000400u;
}
inline void RoleOff::clear_has_total_games() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void RoleOff::clear_total_games() {
  total_games_ = 0u;
  clear_has_total_games();
}
inline ::google::protobuf::uint32 RoleOff::total_games() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleOff.total_games)
  return total_games_;
}
inline void RoleOff::set_total_games(::google::protobuf::uint32 value) {
  set_has_total_games();
  total_games_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RoleOff.total_games)
}

// optional uint32 win_games = 12;
inline bool RoleOff::has_win_games() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void RoleOff::set_has_win_games() {
  _has_bits_[0] |= 0x00000800u;
}
inline void RoleOff::clear_has_win_games() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void RoleOff::clear_win_games() {
  win_games_ = 0u;
  clear_has_win_games();
}
inline ::google::protobuf::uint32 RoleOff::win_games() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleOff.win_games)
  return win_games_;
}
inline void RoleOff::set_win_games(::google::protobuf::uint32 value) {
  set_has_win_games();
  win_games_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RoleOff.win_games)
}

// optional uint32 con_games = 13;
inline bool RoleOff::has_con_games() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void RoleOff::set_has_con_games() {
  _has_bits_[0] |= 0x00001000u;
}
inline void RoleOff::clear_has_con_games() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void RoleOff::clear_con_games() {
  con_games_ = 0u;
  clear_has_con_games();
}
inline ::google::protobuf::uint32 RoleOff::con_games() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleOff.con_games)
  return con_games_;
}
inline void RoleOff::set_con_games(::google::protobuf::uint32 value) {
  set_has_con_games();
  con_games_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RoleOff.con_games)
}

// optional uint32 his_max_score = 14;
inline bool RoleOff::has_his_max_score() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void RoleOff::set_has_his_max_score() {
  _has_bits_[0] |= 0x00002000u;
}
inline void RoleOff::clear_has_his_max_score() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void RoleOff::clear_his_max_score() {
  his_max_score_ = 0u;
  clear_has_his_max_score();
}
inline ::google::protobuf::uint32 RoleOff::his_max_score() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleOff.his_max_score)
  return his_max_score_;
}
inline void RoleOff::set_his_max_score(::google::protobuf::uint32 value) {
  set_has_his_max_score();
  his_max_score_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RoleOff.his_max_score)
}

// optional uint32 his_max_con = 15;
inline bool RoleOff::has_his_max_con() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void RoleOff::set_has_his_max_con() {
  _has_bits_[0] |= 0x00004000u;
}
inline void RoleOff::clear_has_his_max_con() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void RoleOff::clear_his_max_con() {
  his_max_con_ = 0u;
  clear_has_his_max_con();
}
inline ::google::protobuf::uint32 RoleOff::his_max_con() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleOff.his_max_con)
  return his_max_con_;
}
inline void RoleOff::set_his_max_con(::google::protobuf::uint32 value) {
  set_has_his_max_con();
  his_max_con_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RoleOff.his_max_con)
}

// optional uint32 week_max_score = 16;
inline bool RoleOff::has_week_max_score() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void RoleOff::set_has_week_max_score() {
  _has_bits_[0] |= 0x00008000u;
}
inline void RoleOff::clear_has_week_max_score() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void RoleOff::clear_week_max_score() {
  week_max_score_ = 0u;
  clear_has_week_max_score();
}
inline ::google::protobuf::uint32 RoleOff::week_max_score() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleOff.week_max_score)
  return week_max_score_;
}
inline void RoleOff::set_week_max_score(::google::protobuf::uint32 value) {
  set_has_week_max_score();
  week_max_score_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RoleOff.week_max_score)
}

// optional uint64 top_wins_ymd = 17;
inline bool RoleOff::has_top_wins_ymd() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void RoleOff::set_has_top_wins_ymd() {
  _has_bits_[0] |= 0x00010000u;
}
inline void RoleOff::clear_has_top_wins_ymd() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void RoleOff::clear_top_wins_ymd() {
  top_wins_ymd_ = GOOGLE_ULONGLONG(0);
  clear_has_top_wins_ymd();
}
inline ::google::protobuf::uint64 RoleOff::top_wins_ymd() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleOff.top_wins_ymd)
  return top_wins_ymd_;
}
inline void RoleOff::set_top_wins_ymd(::google::protobuf::uint64 value) {
  set_has_top_wins_ymd();
  top_wins_ymd_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RoleOff.top_wins_ymd)
}

// optional int32 top_wins_total = 18;
inline bool RoleOff::has_top_wins_total() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void RoleOff::set_has_top_wins_total() {
  _has_bits_[0] |= 0x00020000u;
}
inline void RoleOff::clear_has_top_wins_total() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void RoleOff::clear_top_wins_total() {
  top_wins_total_ = 0;
  clear_has_top_wins_total();
}
inline ::google::protobuf::int32 RoleOff::top_wins_total() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleOff.top_wins_total)
  return top_wins_total_;
}
inline void RoleOff::set_top_wins_total(::google::protobuf::int32 value) {
  set_has_top_wins_total();
  top_wins_total_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RoleOff.top_wins_total)
}

// optional uint64 top_score_ymd = 19;
inline bool RoleOff::has_top_score_ymd() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void RoleOff::set_has_top_score_ymd() {
  _has_bits_[0] |= 0x00040000u;
}
inline void RoleOff::clear_has_top_score_ymd() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void RoleOff::clear_top_score_ymd() {
  top_score_ymd_ = GOOGLE_ULONGLONG(0);
  clear_has_top_score_ymd();
}
inline ::google::protobuf::uint64 RoleOff::top_score_ymd() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleOff.top_score_ymd)
  return top_score_ymd_;
}
inline void RoleOff::set_top_score_ymd(::google::protobuf::uint64 value) {
  set_has_top_score_ymd();
  top_score_ymd_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RoleOff.top_score_ymd)
}

// optional int32 top_score_total = 20;
inline bool RoleOff::has_top_score_total() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void RoleOff::set_has_top_score_total() {
  _has_bits_[0] |= 0x00080000u;
}
inline void RoleOff::clear_has_top_score_total() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void RoleOff::clear_top_score_total() {
  top_score_total_ = 0;
  clear_has_top_score_total();
}
inline ::google::protobuf::int32 RoleOff::top_score_total() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleOff.top_score_total)
  return top_score_total_;
}
inline void RoleOff::set_top_score_total(::google::protobuf::int32 value) {
  set_has_top_score_total();
  top_score_total_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RoleOff.top_score_total)
}

// optional uint64 blocktime = 21;
inline bool RoleOff::has_blocktime() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void RoleOff::set_has_blocktime() {
  _has_bits_[0] |= 0x00100000u;
}
inline void RoleOff::clear_has_blocktime() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void RoleOff::clear_blocktime() {
  blocktime_ = GOOGLE_ULONGLONG(0);
  clear_has_blocktime();
}
inline ::google::protobuf::uint64 RoleOff::blocktime() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleOff.blocktime)
  return blocktime_;
}
inline void RoleOff::set_blocktime(::google::protobuf::uint64 value) {
  set_has_blocktime();
  blocktime_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RoleOff.blocktime)
}

// optional uint32 today_play_num = 22;
inline bool RoleOff::has_today_play_num() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void RoleOff::set_has_today_play_num() {
  _has_bits_[0] |= 0x00200000u;
}
inline void RoleOff::clear_has_today_play_num() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void RoleOff::clear_today_play_num() {
  today_play_num_ = 0u;
  clear_has_today_play_num();
}
inline ::google::protobuf::uint32 RoleOff::today_play_num() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleOff.today_play_num)
  return today_play_num_;
}
inline void RoleOff::set_today_play_num(::google::protobuf::uint32 value) {
  set_has_today_play_num();
  today_play_num_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RoleOff.today_play_num)
}

// optional string readname = 23;
inline bool RoleOff::has_readname() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void RoleOff::set_has_readname() {
  _has_bits_[0] |= 0x00400000u;
}
inline void RoleOff::clear_has_readname() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void RoleOff::clear_readname() {
  readname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_readname();
}
inline const ::std::string& RoleOff::readname() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleOff.readname)
  return readname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoleOff::set_readname(const ::std::string& value) {
  set_has_readname();
  readname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.RoleOff.readname)
}
inline void RoleOff::set_readname(const char* value) {
  set_has_readname();
  readname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.RoleOff.readname)
}
inline void RoleOff::set_readname(const char* value, size_t size) {
  set_has_readname();
  readname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.RoleOff.readname)
}
inline ::std::string* RoleOff::mutable_readname() {
  set_has_readname();
  // @@protoc_insertion_point(field_mutable:msg_maj.RoleOff.readname)
  return readname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RoleOff::release_readname() {
  // @@protoc_insertion_point(field_release:msg_maj.RoleOff.readname)
  clear_has_readname();
  return readname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoleOff::set_allocated_readname(::std::string* readname) {
  if (readname != NULL) {
    set_has_readname();
  } else {
    clear_has_readname();
  }
  readname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), readname);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.RoleOff.readname)
}

// optional string readcard = 24;
inline bool RoleOff::has_readcard() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void RoleOff::set_has_readcard() {
  _has_bits_[0] |= 0x00800000u;
}
inline void RoleOff::clear_has_readcard() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void RoleOff::clear_readcard() {
  readcard_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_readcard();
}
inline const ::std::string& RoleOff::readcard() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleOff.readcard)
  return readcard_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoleOff::set_readcard(const ::std::string& value) {
  set_has_readcard();
  readcard_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.RoleOff.readcard)
}
inline void RoleOff::set_readcard(const char* value) {
  set_has_readcard();
  readcard_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.RoleOff.readcard)
}
inline void RoleOff::set_readcard(const char* value, size_t size) {
  set_has_readcard();
  readcard_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.RoleOff.readcard)
}
inline ::std::string* RoleOff::mutable_readcard() {
  set_has_readcard();
  // @@protoc_insertion_point(field_mutable:msg_maj.RoleOff.readcard)
  return readcard_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RoleOff::release_readcard() {
  // @@protoc_insertion_point(field_release:msg_maj.RoleOff.readcard)
  clear_has_readcard();
  return readcard_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoleOff::set_allocated_readcard(::std::string* readcard) {
  if (readcard != NULL) {
    set_has_readcard();
  } else {
    clear_has_readcard();
  }
  readcard_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), readcard);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.RoleOff.readcard)
}

// optional uint64 last_game_end = 25;
inline bool RoleOff::has_last_game_end() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void RoleOff::set_has_last_game_end() {
  _has_bits_[0] |= 0x01000000u;
}
inline void RoleOff::clear_has_last_game_end() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void RoleOff::clear_last_game_end() {
  last_game_end_ = GOOGLE_ULONGLONG(0);
  clear_has_last_game_end();
}
inline ::google::protobuf::uint64 RoleOff::last_game_end() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleOff.last_game_end)
  return last_game_end_;
}
inline void RoleOff::set_last_game_end(::google::protobuf::uint64 value) {
  set_has_last_game_end();
  last_game_end_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RoleOff.last_game_end)
}

// optional uint64 login_time = 26;
inline bool RoleOff::has_login_time() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void RoleOff::set_has_login_time() {
  _has_bits_[0] |= 0x02000000u;
}
inline void RoleOff::clear_has_login_time() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void RoleOff::clear_login_time() {
  login_time_ = GOOGLE_ULONGLONG(0);
  clear_has_login_time();
}
inline ::google::protobuf::uint64 RoleOff::login_time() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleOff.login_time)
  return login_time_;
}
inline void RoleOff::set_login_time(::google::protobuf::uint64 value) {
  set_has_login_time();
  login_time_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RoleOff.login_time)
}

// optional string ip = 27;
inline bool RoleOff::has_ip() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void RoleOff::set_has_ip() {
  _has_bits_[0] |= 0x04000000u;
}
inline void RoleOff::clear_has_ip() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void RoleOff::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip();
}
inline const ::std::string& RoleOff::ip() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleOff.ip)
  return ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoleOff::set_ip(const ::std::string& value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.RoleOff.ip)
}
inline void RoleOff::set_ip(const char* value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.RoleOff.ip)
}
inline void RoleOff::set_ip(const char* value, size_t size) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.RoleOff.ip)
}
inline ::std::string* RoleOff::mutable_ip() {
  set_has_ip();
  // @@protoc_insertion_point(field_mutable:msg_maj.RoleOff.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RoleOff::release_ip() {
  // @@protoc_insertion_point(field_release:msg_maj.RoleOff.ip)
  clear_has_ip();
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoleOff::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    set_has_ip();
  } else {
    clear_has_ip();
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.RoleOff.ip)
}

// optional .msg_maj.Data data = 99;
inline bool RoleOff::has_data() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void RoleOff::set_has_data() {
  _has_bits_[0] |= 0x08000000u;
}
inline void RoleOff::clear_has_data() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void RoleOff::clear_data() {
  if (data_ != NULL) data_->::msg_maj::Data::Clear();
  clear_has_data();
}
inline const ::msg_maj::Data& RoleOff::data() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleOff.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::msg_maj::Data* RoleOff::mutable_data() {
  set_has_data();
  if (data_ == NULL) {
    data_ = new ::msg_maj::Data;
  }
  // @@protoc_insertion_point(field_mutable:msg_maj.RoleOff.data)
  return data_;
}
inline ::msg_maj::Data* RoleOff::release_data() {
  // @@protoc_insertion_point(field_release:msg_maj.RoleOff.data)
  clear_has_data();
  ::msg_maj::Data* temp = data_;
  data_ = NULL;
  return temp;
}
inline void RoleOff::set_allocated_data(::msg_maj::Data* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:msg_maj.RoleOff.data)
}

// -------------------------------------------------------------------

// RoleWs

// optional uint64 id = 1;
inline bool RoleWs::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleWs::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleWs::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleWs::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 RoleWs::id() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleWs.id)
  return id_;
}
inline void RoleWs::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RoleWs.id)
}

// optional string account = 2;
inline bool RoleWs::has_account() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoleWs::set_has_account() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoleWs::clear_has_account() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoleWs::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
inline const ::std::string& RoleWs::account() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleWs.account)
  return account_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoleWs::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.RoleWs.account)
}
inline void RoleWs::set_account(const char* value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.RoleWs.account)
}
inline void RoleWs::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.RoleWs.account)
}
inline ::std::string* RoleWs::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:msg_maj.RoleWs.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RoleWs::release_account() {
  // @@protoc_insertion_point(field_release:msg_maj.RoleWs.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoleWs::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.RoleWs.account)
}

// optional string nickname = 3;
inline bool RoleWs::has_nickname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoleWs::set_has_nickname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoleWs::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoleWs::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& RoleWs::nickname() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleWs.nickname)
  return nickname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoleWs::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.RoleWs.nickname)
}
inline void RoleWs::set_nickname(const char* value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.RoleWs.nickname)
}
inline void RoleWs::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.RoleWs.nickname)
}
inline ::std::string* RoleWs::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:msg_maj.RoleWs.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RoleWs::release_nickname() {
  // @@protoc_insertion_point(field_release:msg_maj.RoleWs.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoleWs::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.RoleWs.nickname)
}

// optional string logo_icon = 4;
inline bool RoleWs::has_logo_icon() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RoleWs::set_has_logo_icon() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RoleWs::clear_has_logo_icon() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RoleWs::clear_logo_icon() {
  logo_icon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_logo_icon();
}
inline const ::std::string& RoleWs::logo_icon() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleWs.logo_icon)
  return logo_icon_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoleWs::set_logo_icon(const ::std::string& value) {
  set_has_logo_icon();
  logo_icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.RoleWs.logo_icon)
}
inline void RoleWs::set_logo_icon(const char* value) {
  set_has_logo_icon();
  logo_icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.RoleWs.logo_icon)
}
inline void RoleWs::set_logo_icon(const char* value, size_t size) {
  set_has_logo_icon();
  logo_icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.RoleWs.logo_icon)
}
inline ::std::string* RoleWs::mutable_logo_icon() {
  set_has_logo_icon();
  // @@protoc_insertion_point(field_mutable:msg_maj.RoleWs.logo_icon)
  return logo_icon_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RoleWs::release_logo_icon() {
  // @@protoc_insertion_point(field_release:msg_maj.RoleWs.logo_icon)
  clear_has_logo_icon();
  return logo_icon_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoleWs::set_allocated_logo_icon(::std::string* logo_icon) {
  if (logo_icon != NULL) {
    set_has_logo_icon();
  } else {
    clear_has_logo_icon();
  }
  logo_icon_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), logo_icon);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.RoleWs.logo_icon)
}

// optional uint32 room_card = 5;
inline bool RoleWs::has_room_card() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RoleWs::set_has_room_card() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RoleWs::clear_has_room_card() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RoleWs::clear_room_card() {
  room_card_ = 0u;
  clear_has_room_card();
}
inline ::google::protobuf::uint32 RoleWs::room_card() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleWs.room_card)
  return room_card_;
}
inline void RoleWs::set_room_card(::google::protobuf::uint32 value) {
  set_has_room_card();
  room_card_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RoleWs.room_card)
}

// optional uint32 total_games = 6;
inline bool RoleWs::has_total_games() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RoleWs::set_has_total_games() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RoleWs::clear_has_total_games() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RoleWs::clear_total_games() {
  total_games_ = 0u;
  clear_has_total_games();
}
inline ::google::protobuf::uint32 RoleWs::total_games() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleWs.total_games)
  return total_games_;
}
inline void RoleWs::set_total_games(::google::protobuf::uint32 value) {
  set_has_total_games();
  total_games_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RoleWs.total_games)
}

// optional uint32 win_games = 7;
inline bool RoleWs::has_win_games() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RoleWs::set_has_win_games() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RoleWs::clear_has_win_games() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RoleWs::clear_win_games() {
  win_games_ = 0u;
  clear_has_win_games();
}
inline ::google::protobuf::uint32 RoleWs::win_games() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleWs.win_games)
  return win_games_;
}
inline void RoleWs::set_win_games(::google::protobuf::uint32 value) {
  set_has_win_games();
  win_games_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RoleWs.win_games)
}

// optional uint32 his_max_con = 8;
inline bool RoleWs::has_his_max_con() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RoleWs::set_has_his_max_con() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RoleWs::clear_has_his_max_con() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RoleWs::clear_his_max_con() {
  his_max_con_ = 0u;
  clear_has_his_max_con();
}
inline ::google::protobuf::uint32 RoleWs::his_max_con() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleWs.his_max_con)
  return his_max_con_;
}
inline void RoleWs::set_his_max_con(::google::protobuf::uint32 value) {
  set_has_his_max_con();
  his_max_con_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RoleWs.his_max_con)
}

// optional uint32 his_max_score = 9;
inline bool RoleWs::has_his_max_score() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RoleWs::set_has_his_max_score() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RoleWs::clear_has_his_max_score() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RoleWs::clear_his_max_score() {
  his_max_score_ = 0u;
  clear_has_his_max_score();
}
inline ::google::protobuf::uint32 RoleWs::his_max_score() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleWs.his_max_score)
  return his_max_score_;
}
inline void RoleWs::set_his_max_score(::google::protobuf::uint32 value) {
  set_has_his_max_score();
  his_max_score_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RoleWs.his_max_score)
}

// optional int32 top_score_total = 10;
inline bool RoleWs::has_top_score_total() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void RoleWs::set_has_top_score_total() {
  _has_bits_[0] |= 0x00000200u;
}
inline void RoleWs::clear_has_top_score_total() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void RoleWs::clear_top_score_total() {
  top_score_total_ = 0;
  clear_has_top_score_total();
}
inline ::google::protobuf::int32 RoleWs::top_score_total() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleWs.top_score_total)
  return top_score_total_;
}
inline void RoleWs::set_top_score_total(::google::protobuf::int32 value) {
  set_has_top_score_total();
  top_score_total_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RoleWs.top_score_total)
}

// -------------------------------------------------------------------

// RoleFep

// optional uint64 id = 1;
inline bool RoleFep::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleFep::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleFep::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleFep::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 RoleFep::id() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleFep.id)
  return id_;
}
inline void RoleFep::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RoleFep.id)
}

// optional uint64 sessionid = 2;
inline bool RoleFep::has_sessionid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoleFep::set_has_sessionid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoleFep::clear_has_sessionid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoleFep::clear_sessionid() {
  sessionid_ = GOOGLE_ULONGLONG(0);
  clear_has_sessionid();
}
inline ::google::protobuf::uint64 RoleFep::sessionid() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleFep.sessionid)
  return sessionid_;
}
inline void RoleFep::set_sessionid(::google::protobuf::uint64 value) {
  set_has_sessionid();
  sessionid_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RoleFep.sessionid)
}

// optional uint32 serverid = 3;
inline bool RoleFep::has_serverid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoleFep::set_has_serverid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoleFep::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoleFep::clear_serverid() {
  serverid_ = 0u;
  clear_has_serverid();
}
inline ::google::protobuf::uint32 RoleFep::serverid() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleFep.serverid)
  return serverid_;
}
inline void RoleFep::set_serverid(::google::protobuf::uint32 value) {
  set_has_serverid();
  serverid_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RoleFep.serverid)
}

// -------------------------------------------------------------------

// RoleC

// optional uint64 id = 1;
inline bool RoleC::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleC::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleC::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleC::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 RoleC::id() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleC.id)
  return id_;
}
inline void RoleC::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RoleC.id)
}

// optional string nickname = 2;
inline bool RoleC::has_nickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoleC::set_has_nickname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoleC::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoleC::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& RoleC::nickname() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleC.nickname)
  return nickname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoleC::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.RoleC.nickname)
}
inline void RoleC::set_nickname(const char* value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.RoleC.nickname)
}
inline void RoleC::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.RoleC.nickname)
}
inline ::std::string* RoleC::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:msg_maj.RoleC.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RoleC::release_nickname() {
  // @@protoc_insertion_point(field_release:msg_maj.RoleC.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoleC::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.RoleC.nickname)
}

// optional string logo_icon = 3;
inline bool RoleC::has_logo_icon() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoleC::set_has_logo_icon() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoleC::clear_has_logo_icon() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoleC::clear_logo_icon() {
  logo_icon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_logo_icon();
}
inline const ::std::string& RoleC::logo_icon() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleC.logo_icon)
  return logo_icon_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoleC::set_logo_icon(const ::std::string& value) {
  set_has_logo_icon();
  logo_icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.RoleC.logo_icon)
}
inline void RoleC::set_logo_icon(const char* value) {
  set_has_logo_icon();
  logo_icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.RoleC.logo_icon)
}
inline void RoleC::set_logo_icon(const char* value, size_t size) {
  set_has_logo_icon();
  logo_icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.RoleC.logo_icon)
}
inline ::std::string* RoleC::mutable_logo_icon() {
  set_has_logo_icon();
  // @@protoc_insertion_point(field_mutable:msg_maj.RoleC.logo_icon)
  return logo_icon_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RoleC::release_logo_icon() {
  // @@protoc_insertion_point(field_release:msg_maj.RoleC.logo_icon)
  clear_has_logo_icon();
  return logo_icon_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoleC::set_allocated_logo_icon(::std::string* logo_icon) {
  if (logo_icon != NULL) {
    set_has_logo_icon();
  } else {
    clear_has_logo_icon();
  }
  logo_icon_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), logo_icon);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.RoleC.logo_icon)
}

// optional uint32 sexual = 4;
inline bool RoleC::has_sexual() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RoleC::set_has_sexual() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RoleC::clear_has_sexual() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RoleC::clear_sexual() {
  sexual_ = 0u;
  clear_has_sexual();
}
inline ::google::protobuf::uint32 RoleC::sexual() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleC.sexual)
  return sexual_;
}
inline void RoleC::set_sexual(::google::protobuf::uint32 value) {
  set_has_sexual();
  sexual_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RoleC.sexual)
}

// optional uint32 room_card = 5;
inline bool RoleC::has_room_card() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RoleC::set_has_room_card() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RoleC::clear_has_room_card() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RoleC::clear_room_card() {
  room_card_ = 0u;
  clear_has_room_card();
}
inline ::google::protobuf::uint32 RoleC::room_card() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleC.room_card)
  return room_card_;
}
inline void RoleC::set_room_card(::google::protobuf::uint32 value) {
  set_has_room_card();
  room_card_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RoleC.room_card)
}

// optional uint32 total_games = 6;
inline bool RoleC::has_total_games() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RoleC::set_has_total_games() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RoleC::clear_has_total_games() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RoleC::clear_total_games() {
  total_games_ = 0u;
  clear_has_total_games();
}
inline ::google::protobuf::uint32 RoleC::total_games() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleC.total_games)
  return total_games_;
}
inline void RoleC::set_total_games(::google::protobuf::uint32 value) {
  set_has_total_games();
  total_games_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RoleC.total_games)
}

// optional uint32 win_games = 7;
inline bool RoleC::has_win_games() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RoleC::set_has_win_games() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RoleC::clear_has_win_games() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RoleC::clear_win_games() {
  win_games_ = 0u;
  clear_has_win_games();
}
inline ::google::protobuf::uint32 RoleC::win_games() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleC.win_games)
  return win_games_;
}
inline void RoleC::set_win_games(::google::protobuf::uint32 value) {
  set_has_win_games();
  win_games_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RoleC.win_games)
}

// optional uint32 his_con_games = 8;
inline bool RoleC::has_his_con_games() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RoleC::set_has_his_con_games() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RoleC::clear_has_his_con_games() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RoleC::clear_his_con_games() {
  his_con_games_ = 0u;
  clear_has_his_con_games();
}
inline ::google::protobuf::uint32 RoleC::his_con_games() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleC.his_con_games)
  return his_con_games_;
}
inline void RoleC::set_his_con_games(::google::protobuf::uint32 value) {
  set_has_his_con_games();
  his_con_games_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RoleC.his_con_games)
}

// optional uint32 his_max_score = 9;
inline bool RoleC::has_his_max_score() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RoleC::set_has_his_max_score() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RoleC::clear_has_his_max_score() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RoleC::clear_his_max_score() {
  his_max_score_ = 0u;
  clear_has_his_max_score();
}
inline ::google::protobuf::uint32 RoleC::his_max_score() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleC.his_max_score)
  return his_max_score_;
}
inline void RoleC::set_his_max_score(::google::protobuf::uint32 value) {
  set_has_his_max_score();
  his_max_score_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RoleC.his_max_score)
}

// optional int32 top_score_total = 10;
inline bool RoleC::has_top_score_total() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void RoleC::set_has_top_score_total() {
  _has_bits_[0] |= 0x00000200u;
}
inline void RoleC::clear_has_top_score_total() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void RoleC::clear_top_score_total() {
  top_score_total_ = 0;
  clear_has_top_score_total();
}
inline ::google::protobuf::int32 RoleC::top_score_total() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleC.top_score_total)
  return top_score_total_;
}
inline void RoleC::set_top_score_total(::google::protobuf::int32 value) {
  set_has_top_score_total();
  top_score_total_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RoleC.top_score_total)
}

// optional string address = 11;
inline bool RoleC::has_address() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void RoleC::set_has_address() {
  _has_bits_[0] |= 0x00000400u;
}
inline void RoleC::clear_has_address() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void RoleC::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_address();
}
inline const ::std::string& RoleC::address() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleC.address)
  return address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoleC::set_address(const ::std::string& value) {
  set_has_address();
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.RoleC.address)
}
inline void RoleC::set_address(const char* value) {
  set_has_address();
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.RoleC.address)
}
inline void RoleC::set_address(const char* value, size_t size) {
  set_has_address();
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.RoleC.address)
}
inline ::std::string* RoleC::mutable_address() {
  set_has_address();
  // @@protoc_insertion_point(field_mutable:msg_maj.RoleC.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RoleC::release_address() {
  // @@protoc_insertion_point(field_release:msg_maj.RoleC.address)
  clear_has_address();
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoleC::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    set_has_address();
  } else {
    clear_has_address();
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.RoleC.address)
}

// -------------------------------------------------------------------

// RoomCardData

// optional uint32 room_card = 1;
inline bool RoomCardData::has_room_card() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoomCardData::set_has_room_card() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoomCardData::clear_has_room_card() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoomCardData::clear_room_card() {
  room_card_ = 0u;
  clear_has_room_card();
}
inline ::google::protobuf::uint32 RoomCardData::room_card() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoomCardData.room_card)
  return room_card_;
}
inline void RoomCardData::set_room_card(::google::protobuf::uint32 value) {
  set_has_room_card();
  room_card_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RoomCardData.room_card)
}

// -------------------------------------------------------------------

// UpdateRoleData

// optional .msg_maj.RoomCardData room_card_data = 1;
inline bool UpdateRoleData::has_room_card_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateRoleData::set_has_room_card_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateRoleData::clear_has_room_card_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateRoleData::clear_room_card_data() {
  if (room_card_data_ != NULL) room_card_data_->::msg_maj::RoomCardData::Clear();
  clear_has_room_card_data();
}
inline const ::msg_maj::RoomCardData& UpdateRoleData::room_card_data() const {
  // @@protoc_insertion_point(field_get:msg_maj.UpdateRoleData.room_card_data)
  return room_card_data_ != NULL ? *room_card_data_ : *default_instance_->room_card_data_;
}
inline ::msg_maj::RoomCardData* UpdateRoleData::mutable_room_card_data() {
  set_has_room_card_data();
  if (room_card_data_ == NULL) {
    room_card_data_ = new ::msg_maj::RoomCardData;
  }
  // @@protoc_insertion_point(field_mutable:msg_maj.UpdateRoleData.room_card_data)
  return room_card_data_;
}
inline ::msg_maj::RoomCardData* UpdateRoleData::release_room_card_data() {
  // @@protoc_insertion_point(field_release:msg_maj.UpdateRoleData.room_card_data)
  clear_has_room_card_data();
  ::msg_maj::RoomCardData* temp = room_card_data_;
  room_card_data_ = NULL;
  return temp;
}
inline void UpdateRoleData::set_allocated_room_card_data(::msg_maj::RoomCardData* room_card_data) {
  delete room_card_data_;
  room_card_data_ = room_card_data;
  if (room_card_data) {
    set_has_room_card_data();
  } else {
    clear_has_room_card_data();
  }
  // @@protoc_insertion_point(field_set_allocated:msg_maj.UpdateRoleData.room_card_data)
}

// -------------------------------------------------------------------

// MoneyLog

// required uint64 log_id = 1;
inline bool MoneyLog::has_log_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MoneyLog::set_has_log_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MoneyLog::clear_has_log_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MoneyLog::clear_log_id() {
  log_id_ = GOOGLE_ULONGLONG(0);
  clear_has_log_id();
}
inline ::google::protobuf::uint64 MoneyLog::log_id() const {
  // @@protoc_insertion_point(field_get:msg_maj.MoneyLog.log_id)
  return log_id_;
}
inline void MoneyLog::set_log_id(::google::protobuf::uint64 value) {
  set_has_log_id();
  log_id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.MoneyLog.log_id)
}

// required int32 money_type = 2;
inline bool MoneyLog::has_money_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MoneyLog::set_has_money_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MoneyLog::clear_has_money_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MoneyLog::clear_money_type() {
  money_type_ = 0;
  clear_has_money_type();
}
inline ::google::protobuf::int32 MoneyLog::money_type() const {
  // @@protoc_insertion_point(field_get:msg_maj.MoneyLog.money_type)
  return money_type_;
}
inline void MoneyLog::set_money_type(::google::protobuf::int32 value) {
  set_has_money_type();
  money_type_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.MoneyLog.money_type)
}

// required int32 money_num = 3;
inline bool MoneyLog::has_money_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MoneyLog::set_has_money_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MoneyLog::clear_has_money_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MoneyLog::clear_money_num() {
  money_num_ = 0;
  clear_has_money_num();
}
inline ::google::protobuf::int32 MoneyLog::money_num() const {
  // @@protoc_insertion_point(field_get:msg_maj.MoneyLog.money_num)
  return money_num_;
}
inline void MoneyLog::set_money_num(::google::protobuf::int32 value) {
  set_has_money_num();
  money_num_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.MoneyLog.money_num)
}

// required int32 log_type = 4;
inline bool MoneyLog::has_log_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MoneyLog::set_has_log_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MoneyLog::clear_has_log_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MoneyLog::clear_log_type() {
  log_type_ = 0;
  clear_has_log_type();
}
inline ::google::protobuf::int32 MoneyLog::log_type() const {
  // @@protoc_insertion_point(field_get:msg_maj.MoneyLog.log_type)
  return log_type_;
}
inline void MoneyLog::set_log_type(::google::protobuf::int32 value) {
  set_has_log_type();
  log_type_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.MoneyLog.log_type)
}

// required uint64 char_id = 6;
inline bool MoneyLog::has_char_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MoneyLog::set_has_char_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MoneyLog::clear_has_char_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MoneyLog::clear_char_id() {
  char_id_ = GOOGLE_ULONGLONG(0);
  clear_has_char_id();
}
inline ::google::protobuf::uint64 MoneyLog::char_id() const {
  // @@protoc_insertion_point(field_get:msg_maj.MoneyLog.char_id)
  return char_id_;
}
inline void MoneyLog::set_char_id(::google::protobuf::uint64 value) {
  set_has_char_id();
  char_id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.MoneyLog.char_id)
}

// required uint64 log_time = 7;
inline bool MoneyLog::has_log_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MoneyLog::set_has_log_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MoneyLog::clear_has_log_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MoneyLog::clear_log_time() {
  log_time_ = GOOGLE_ULONGLONG(0);
  clear_has_log_time();
}
inline ::google::protobuf::uint64 MoneyLog::log_time() const {
  // @@protoc_insertion_point(field_get:msg_maj.MoneyLog.log_time)
  return log_time_;
}
inline void MoneyLog::set_log_time(::google::protobuf::uint64 value) {
  set_has_log_time();
  log_time_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.MoneyLog.log_time)
}

// -------------------------------------------------------------------

// GpsUploadReq

// required double longitude = 1;
inline bool GpsUploadReq::has_longitude() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GpsUploadReq::set_has_longitude() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GpsUploadReq::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GpsUploadReq::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
inline double GpsUploadReq::longitude() const {
  // @@protoc_insertion_point(field_get:msg_maj.GpsUploadReq.longitude)
  return longitude_;
}
inline void GpsUploadReq::set_longitude(double value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.GpsUploadReq.longitude)
}

// required double latitude = 2;
inline bool GpsUploadReq::has_latitude() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GpsUploadReq::set_has_latitude() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GpsUploadReq::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GpsUploadReq::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
inline double GpsUploadReq::latitude() const {
  // @@protoc_insertion_point(field_get:msg_maj.GpsUploadReq.latitude)
  return latitude_;
}
inline void GpsUploadReq::set_latitude(double value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.GpsUploadReq.latitude)
}

// required string address = 3;
inline bool GpsUploadReq::has_address() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GpsUploadReq::set_has_address() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GpsUploadReq::clear_has_address() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GpsUploadReq::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_address();
}
inline const ::std::string& GpsUploadReq::address() const {
  // @@protoc_insertion_point(field_get:msg_maj.GpsUploadReq.address)
  return address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GpsUploadReq::set_address(const ::std::string& value) {
  set_has_address();
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.GpsUploadReq.address)
}
inline void GpsUploadReq::set_address(const char* value) {
  set_has_address();
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.GpsUploadReq.address)
}
inline void GpsUploadReq::set_address(const char* value, size_t size) {
  set_has_address();
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.GpsUploadReq.address)
}
inline ::std::string* GpsUploadReq::mutable_address() {
  set_has_address();
  // @@protoc_insertion_point(field_mutable:msg_maj.GpsUploadReq.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GpsUploadReq::release_address() {
  // @@protoc_insertion_point(field_release:msg_maj.GpsUploadReq.address)
  clear_has_address();
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GpsUploadReq::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    set_has_address();
  } else {
    clear_has_address();
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.GpsUploadReq.address)
}

// -------------------------------------------------------------------

// UpdateRoleReq

// -------------------------------------------------------------------

// SyncRoleToWs

// required uint64 uid = 1;
inline bool SyncRoleToWs::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SyncRoleToWs::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SyncRoleToWs::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SyncRoleToWs::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 SyncRoleToWs::uid() const {
  // @@protoc_insertion_point(field_get:msg_maj.SyncRoleToWs.uid)
  return uid_;
}
inline void SyncRoleToWs::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.SyncRoleToWs.uid)
}

// required uint64 room_id = 2;
inline bool SyncRoleToWs::has_room_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SyncRoleToWs::set_has_room_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SyncRoleToWs::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SyncRoleToWs::clear_room_id() {
  room_id_ = GOOGLE_ULONGLONG(0);
  clear_has_room_id();
}
inline ::google::protobuf::uint64 SyncRoleToWs::room_id() const {
  // @@protoc_insertion_point(field_get:msg_maj.SyncRoleToWs.room_id)
  return room_id_;
}
inline void SyncRoleToWs::set_room_id(::google::protobuf::uint64 value) {
  set_has_room_id();
  room_id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.SyncRoleToWs.room_id)
}

// required uint32 room_seat = 3;
inline bool SyncRoleToWs::has_room_seat() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SyncRoleToWs::set_has_room_seat() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SyncRoleToWs::clear_has_room_seat() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SyncRoleToWs::clear_room_seat() {
  room_seat_ = 0u;
  clear_has_room_seat();
}
inline ::google::protobuf::uint32 SyncRoleToWs::room_seat() const {
  // @@protoc_insertion_point(field_get:msg_maj.SyncRoleToWs.room_seat)
  return room_seat_;
}
inline void SyncRoleToWs::set_room_seat(::google::protobuf::uint32 value) {
  set_has_room_seat();
  room_seat_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.SyncRoleToWs.room_seat)
}

// required uint32 room_card = 4;
inline bool SyncRoleToWs::has_room_card() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SyncRoleToWs::set_has_room_card() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SyncRoleToWs::clear_has_room_card() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SyncRoleToWs::clear_room_card() {
  room_card_ = 0u;
  clear_has_room_card();
}
inline ::google::protobuf::uint32 SyncRoleToWs::room_card() const {
  // @@protoc_insertion_point(field_get:msg_maj.SyncRoleToWs.room_card)
  return room_card_;
}
inline void SyncRoleToWs::set_room_card(::google::protobuf::uint32 value) {
  set_has_room_card();
  room_card_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.SyncRoleToWs.room_card)
}

// required bool disconnect = 5;
inline bool SyncRoleToWs::has_disconnect() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SyncRoleToWs::set_has_disconnect() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SyncRoleToWs::clear_has_disconnect() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SyncRoleToWs::clear_disconnect() {
  disconnect_ = false;
  clear_has_disconnect();
}
inline bool SyncRoleToWs::disconnect() const {
  // @@protoc_insertion_point(field_get:msg_maj.SyncRoleToWs.disconnect)
  return disconnect_;
}
inline void SyncRoleToWs::set_disconnect(bool value) {
  set_has_disconnect();
  disconnect_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.SyncRoleToWs.disconnect)
}

// required bool robotPlaying = 6;
inline bool SyncRoleToWs::has_robotplaying() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SyncRoleToWs::set_has_robotplaying() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SyncRoleToWs::clear_has_robotplaying() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SyncRoleToWs::clear_robotplaying() {
  robotplaying_ = false;
  clear_has_robotplaying();
}
inline bool SyncRoleToWs::robotplaying() const {
  // @@protoc_insertion_point(field_get:msg_maj.SyncRoleToWs.robotPlaying)
  return robotplaying_;
}
inline void SyncRoleToWs::set_robotplaying(bool value) {
  set_has_robotplaying();
  robotplaying_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.SyncRoleToWs.robotPlaying)
}

// required uint32 hisConGames = 7;
inline bool SyncRoleToWs::has_hiscongames() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SyncRoleToWs::set_has_hiscongames() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SyncRoleToWs::clear_has_hiscongames() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SyncRoleToWs::clear_hiscongames() {
  hiscongames_ = 0u;
  clear_has_hiscongames();
}
inline ::google::protobuf::uint32 SyncRoleToWs::hiscongames() const {
  // @@protoc_insertion_point(field_get:msg_maj.SyncRoleToWs.hisConGames)
  return hiscongames_;
}
inline void SyncRoleToWs::set_hiscongames(::google::protobuf::uint32 value) {
  set_has_hiscongames();
  hiscongames_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.SyncRoleToWs.hisConGames)
}

// required uint32 hisMaxScore = 8;
inline bool SyncRoleToWs::has_hismaxscore() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SyncRoleToWs::set_has_hismaxscore() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SyncRoleToWs::clear_has_hismaxscore() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SyncRoleToWs::clear_hismaxscore() {
  hismaxscore_ = 0u;
  clear_has_hismaxscore();
}
inline ::google::protobuf::uint32 SyncRoleToWs::hismaxscore() const {
  // @@protoc_insertion_point(field_get:msg_maj.SyncRoleToWs.hisMaxScore)
  return hismaxscore_;
}
inline void SyncRoleToWs::set_hismaxscore(::google::protobuf::uint32 value) {
  set_has_hismaxscore();
  hismaxscore_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.SyncRoleToWs.hisMaxScore)
}

// -------------------------------------------------------------------

// CardinfoReq

// optional uint32 do_type = 1;
inline bool CardinfoReq::has_do_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CardinfoReq::set_has_do_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CardinfoReq::clear_has_do_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CardinfoReq::clear_do_type() {
  do_type_ = 0u;
  clear_has_do_type();
}
inline ::google::protobuf::uint32 CardinfoReq::do_type() const {
  // @@protoc_insertion_point(field_get:msg_maj.CardinfoReq.do_type)
  return do_type_;
}
inline void CardinfoReq::set_do_type(::google::protobuf::uint32 value) {
  set_has_do_type();
  do_type_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.CardinfoReq.do_type)
}

// optional string readname = 2;
inline bool CardinfoReq::has_readname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CardinfoReq::set_has_readname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CardinfoReq::clear_has_readname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CardinfoReq::clear_readname() {
  readname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_readname();
}
inline const ::std::string& CardinfoReq::readname() const {
  // @@protoc_insertion_point(field_get:msg_maj.CardinfoReq.readname)
  return readname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CardinfoReq::set_readname(const ::std::string& value) {
  set_has_readname();
  readname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.CardinfoReq.readname)
}
inline void CardinfoReq::set_readname(const char* value) {
  set_has_readname();
  readname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.CardinfoReq.readname)
}
inline void CardinfoReq::set_readname(const char* value, size_t size) {
  set_has_readname();
  readname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.CardinfoReq.readname)
}
inline ::std::string* CardinfoReq::mutable_readname() {
  set_has_readname();
  // @@protoc_insertion_point(field_mutable:msg_maj.CardinfoReq.readname)
  return readname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CardinfoReq::release_readname() {
  // @@protoc_insertion_point(field_release:msg_maj.CardinfoReq.readname)
  clear_has_readname();
  return readname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CardinfoReq::set_allocated_readname(::std::string* readname) {
  if (readname != NULL) {
    set_has_readname();
  } else {
    clear_has_readname();
  }
  readname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), readname);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.CardinfoReq.readname)
}

// optional string readcard = 3;
inline bool CardinfoReq::has_readcard() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CardinfoReq::set_has_readcard() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CardinfoReq::clear_has_readcard() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CardinfoReq::clear_readcard() {
  readcard_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_readcard();
}
inline const ::std::string& CardinfoReq::readcard() const {
  // @@protoc_insertion_point(field_get:msg_maj.CardinfoReq.readcard)
  return readcard_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CardinfoReq::set_readcard(const ::std::string& value) {
  set_has_readcard();
  readcard_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.CardinfoReq.readcard)
}
inline void CardinfoReq::set_readcard(const char* value) {
  set_has_readcard();
  readcard_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.CardinfoReq.readcard)
}
inline void CardinfoReq::set_readcard(const char* value, size_t size) {
  set_has_readcard();
  readcard_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.CardinfoReq.readcard)
}
inline ::std::string* CardinfoReq::mutable_readcard() {
  set_has_readcard();
  // @@protoc_insertion_point(field_mutable:msg_maj.CardinfoReq.readcard)
  return readcard_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CardinfoReq::release_readcard() {
  // @@protoc_insertion_point(field_release:msg_maj.CardinfoReq.readcard)
  clear_has_readcard();
  return readcard_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CardinfoReq::set_allocated_readcard(::std::string* readcard) {
  if (readcard != NULL) {
    set_has_readcard();
  } else {
    clear_has_readcard();
  }
  readcard_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), readcard);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.CardinfoReq.readcard)
}

// -------------------------------------------------------------------

// NotifyLoseGame

// optional uint32 level = 1;
inline bool NotifyLoseGame::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyLoseGame::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyLoseGame::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyLoseGame::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 NotifyLoseGame::level() const {
  // @@protoc_insertion_point(field_get:msg_maj.NotifyLoseGame.level)
  return level_;
}
inline void NotifyLoseGame::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.NotifyLoseGame.level)
}

// optional uint32 time = 2;
inline bool NotifyLoseGame::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyLoseGame::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyLoseGame::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyLoseGame::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 NotifyLoseGame::time() const {
  // @@protoc_insertion_point(field_get:msg_maj.NotifyLoseGame.time)
  return time_;
}
inline void NotifyLoseGame::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.NotifyLoseGame.time)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace msg_maj

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::msg_maj::c_cmd_role> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg_maj::c_cmd_role>() {
  return ::msg_maj::c_cmd_role_descriptor();
}
template <> struct is_proto_enum< ::msg_maj::money_type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg_maj::money_type>() {
  return ::msg_maj::money_type_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_msg_5frole_2eproto__INCLUDED
