// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_mail.proto

#ifndef PROTOBUF_msg_5fmail_2eproto__INCLUDED
#define PROTOBUF_msg_5fmail_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace msg_maj {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_msg_5fmail_2eproto();
void protobuf_AssignDesc_msg_5fmail_2eproto();
void protobuf_ShutdownFile_msg_5fmail_2eproto();

class MailListReq;
class MailListResp;
class MailOptReq;
class MailRecordC;
class MailRecordS;
class MailSystemLogS;

enum opt_type_mail {
  opt_t_read = 1,
  opt_t_fetch = 2,
  opt_t_delete = 3
};
bool opt_type_mail_IsValid(int value);
const opt_type_mail opt_type_mail_MIN = opt_t_read;
const opt_type_mail opt_type_mail_MAX = opt_t_delete;
const int opt_type_mail_ARRAYSIZE = opt_type_mail_MAX + 1;

const ::google::protobuf::EnumDescriptor* opt_type_mail_descriptor();
inline const ::std::string& opt_type_mail_Name(opt_type_mail value) {
  return ::google::protobuf::internal::NameOfEnum(
    opt_type_mail_descriptor(), value);
}
inline bool opt_type_mail_Parse(
    const ::std::string& name, opt_type_mail* value) {
  return ::google::protobuf::internal::ParseNamedEnum<opt_type_mail>(
    opt_type_mail_descriptor(), name, value);
}
enum mark_type {
  mark_t_unread = 1,
  mark_t_readed = 2,
  mark_t_deleted = 3
};
bool mark_type_IsValid(int value);
const mark_type mark_type_MIN = mark_t_unread;
const mark_type mark_type_MAX = mark_t_deleted;
const int mark_type_ARRAYSIZE = mark_type_MAX + 1;

const ::google::protobuf::EnumDescriptor* mark_type_descriptor();
inline const ::std::string& mark_type_Name(mark_type value) {
  return ::google::protobuf::internal::NameOfEnum(
    mark_type_descriptor(), value);
}
inline bool mark_type_Parse(
    const ::std::string& name, mark_type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<mark_type>(
    mark_type_descriptor(), name, value);
}
enum mail_type {
  mail_t_system_one = 1,
  mail_t_system_all = 2
};
bool mail_type_IsValid(int value);
const mail_type mail_type_MIN = mail_t_system_one;
const mail_type mail_type_MAX = mail_t_system_all;
const int mail_type_ARRAYSIZE = mail_type_MAX + 1;

const ::google::protobuf::EnumDescriptor* mail_type_descriptor();
inline const ::std::string& mail_type_Name(mail_type value) {
  return ::google::protobuf::internal::NameOfEnum(
    mail_type_descriptor(), value);
}
inline bool mail_type_Parse(
    const ::std::string& name, mail_type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<mail_type>(
    mail_type_descriptor(), name, value);
}
enum from_type {
  from_t_list = 1,
  from_t_add = 2
};
bool from_type_IsValid(int value);
const from_type from_type_MIN = from_t_list;
const from_type from_type_MAX = from_t_add;
const int from_type_ARRAYSIZE = from_type_MAX + 1;

const ::google::protobuf::EnumDescriptor* from_type_descriptor();
inline const ::std::string& from_type_Name(from_type value) {
  return ::google::protobuf::internal::NameOfEnum(
    from_type_descriptor(), value);
}
inline bool from_type_Parse(
    const ::std::string& name, from_type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<from_type>(
    from_type_descriptor(), name, value);
}
// ===================================================================

class MailListReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.MailListReq) */ {
 public:
  MailListReq();
  virtual ~MailListReq();

  MailListReq(const MailListReq& from);

  inline MailListReq& operator=(const MailListReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MailListReq& default_instance();

  void Swap(MailListReq* other);

  // implements Message ----------------------------------------------

  inline MailListReq* New() const { return New(NULL); }

  MailListReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MailListReq& from);
  void MergeFrom(const MailListReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MailListReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 start_index = 1;
  bool has_start_index() const;
  void clear_start_index();
  static const int kStartIndexFieldNumber = 1;
  ::google::protobuf::uint64 start_index() const;
  void set_start_index(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:msg_maj.MailListReq)
 private:
  inline void set_has_start_index();
  inline void clear_has_start_index();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 start_index_;
  friend void  protobuf_AddDesc_msg_5fmail_2eproto();
  friend void protobuf_AssignDesc_msg_5fmail_2eproto();
  friend void protobuf_ShutdownFile_msg_5fmail_2eproto();

  void InitAsDefaultInstance();
  static MailListReq* default_instance_;
};
// -------------------------------------------------------------------

class MailListResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.MailListResp) */ {
 public:
  MailListResp();
  virtual ~MailListResp();

  MailListResp(const MailListResp& from);

  inline MailListResp& operator=(const MailListResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MailListResp& default_instance();

  void Swap(MailListResp* other);

  // implements Message ----------------------------------------------

  inline MailListResp* New() const { return New(NULL); }

  MailListResp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MailListResp& from);
  void MergeFrom(const MailListResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MailListResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .msg_maj.from_type type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::msg_maj::from_type type() const;
  void set_type(::msg_maj::from_type value);

  // repeated .msg_maj.MailRecordC record_list = 2;
  int record_list_size() const;
  void clear_record_list();
  static const int kRecordListFieldNumber = 2;
  const ::msg_maj::MailRecordC& record_list(int index) const;
  ::msg_maj::MailRecordC* mutable_record_list(int index);
  ::msg_maj::MailRecordC* add_record_list();
  ::google::protobuf::RepeatedPtrField< ::msg_maj::MailRecordC >*
      mutable_record_list();
  const ::google::protobuf::RepeatedPtrField< ::msg_maj::MailRecordC >&
      record_list() const;

  // @@protoc_insertion_point(class_scope:msg_maj.MailListResp)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::msg_maj::MailRecordC > record_list_;
  int type_;
  friend void  protobuf_AddDesc_msg_5fmail_2eproto();
  friend void protobuf_AssignDesc_msg_5fmail_2eproto();
  friend void protobuf_ShutdownFile_msg_5fmail_2eproto();

  void InitAsDefaultInstance();
  static MailListResp* default_instance_;
};
// -------------------------------------------------------------------

class MailOptReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.MailOptReq) */ {
 public:
  MailOptReq();
  virtual ~MailOptReq();

  MailOptReq(const MailOptReq& from);

  inline MailOptReq& operator=(const MailOptReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MailOptReq& default_instance();

  void Swap(MailOptReq* other);

  // implements Message ----------------------------------------------

  inline MailOptReq* New() const { return New(NULL); }

  MailOptReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MailOptReq& from);
  void MergeFrom(const MailOptReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MailOptReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // required .msg_maj.opt_type_mail opt = 2;
  bool has_opt() const;
  void clear_opt();
  static const int kOptFieldNumber = 2;
  ::msg_maj::opt_type_mail opt() const;
  void set_opt(::msg_maj::opt_type_mail value);

  // @@protoc_insertion_point(class_scope:msg_maj.MailOptReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_opt();
  inline void clear_has_opt();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 id_;
  int opt_;
  friend void  protobuf_AddDesc_msg_5fmail_2eproto();
  friend void protobuf_AssignDesc_msg_5fmail_2eproto();
  friend void protobuf_ShutdownFile_msg_5fmail_2eproto();

  void InitAsDefaultInstance();
  static MailOptReq* default_instance_;
};
// -------------------------------------------------------------------

class MailRecordC : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.MailRecordC) */ {
 public:
  MailRecordC();
  virtual ~MailRecordC();

  MailRecordC(const MailRecordC& from);

  inline MailRecordC& operator=(const MailRecordC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MailRecordC& default_instance();

  void Swap(MailRecordC* other);

  // implements Message ----------------------------------------------

  inline MailRecordC* New() const { return New(NULL); }

  MailRecordC* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MailRecordC& from);
  void MergeFrom(const MailRecordC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MailRecordC* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // required .msg_maj.mail_type type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::msg_maj::mail_type type() const;
  void set_type(::msg_maj::mail_type value);

  // required string from_name = 3;
  bool has_from_name() const;
  void clear_from_name();
  static const int kFromNameFieldNumber = 3;
  const ::std::string& from_name() const;
  void set_from_name(const ::std::string& value);
  void set_from_name(const char* value);
  void set_from_name(const char* value, size_t size);
  ::std::string* mutable_from_name();
  ::std::string* release_from_name();
  void set_allocated_from_name(::std::string* from_name);

  // required string title = 4;
  bool has_title() const;
  void clear_title();
  static const int kTitleFieldNumber = 4;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // required string content = 5;
  bool has_content() const;
  void clear_content();
  static const int kContentFieldNumber = 5;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // required int32 room_cards = 6;
  bool has_room_cards() const;
  void clear_room_cards();
  static const int kRoomCardsFieldNumber = 6;
  ::google::protobuf::int32 room_cards() const;
  void set_room_cards(::google::protobuf::int32 value);

  // required .msg_maj.mark_type mark = 7;
  bool has_mark() const;
  void clear_mark();
  static const int kMarkFieldNumber = 7;
  ::msg_maj::mark_type mark() const;
  void set_mark(::msg_maj::mark_type value);

  // required uint64 create_time = 8;
  bool has_create_time() const;
  void clear_create_time();
  static const int kCreateTimeFieldNumber = 8;
  ::google::protobuf::uint64 create_time() const;
  void set_create_time(::google::protobuf::uint64 value);

  // required uint64 fetch_time = 9;
  bool has_fetch_time() const;
  void clear_fetch_time();
  static const int kFetchTimeFieldNumber = 9;
  ::google::protobuf::uint64 fetch_time() const;
  void set_fetch_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:msg_maj.MailRecordC)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_from_name();
  inline void clear_has_from_name();
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_content();
  inline void clear_has_content();
  inline void set_has_room_cards();
  inline void clear_has_room_cards();
  inline void set_has_mark();
  inline void clear_has_mark();
  inline void set_has_create_time();
  inline void clear_has_create_time();
  inline void set_has_fetch_time();
  inline void clear_has_fetch_time();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::internal::ArenaStringPtr from_name_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  int type_;
  ::google::protobuf::int32 room_cards_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::uint64 create_time_;
  ::google::protobuf::uint64 fetch_time_;
  int mark_;
  friend void  protobuf_AddDesc_msg_5fmail_2eproto();
  friend void protobuf_AssignDesc_msg_5fmail_2eproto();
  friend void protobuf_ShutdownFile_msg_5fmail_2eproto();

  void InitAsDefaultInstance();
  static MailRecordC* default_instance_;
};
// -------------------------------------------------------------------

class MailRecordS : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.MailRecordS) */ {
 public:
  MailRecordS();
  virtual ~MailRecordS();

  MailRecordS(const MailRecordS& from);

  inline MailRecordS& operator=(const MailRecordS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MailRecordS& default_instance();

  void Swap(MailRecordS* other);

  // implements Message ----------------------------------------------

  inline MailRecordS* New() const { return New(NULL); }

  MailRecordS* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MailRecordS& from);
  void MergeFrom(const MailRecordS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MailRecordS* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // required int32 type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // required uint64 from_id = 3;
  bool has_from_id() const;
  void clear_from_id();
  static const int kFromIdFieldNumber = 3;
  ::google::protobuf::uint64 from_id() const;
  void set_from_id(::google::protobuf::uint64 value);

  // required string from_name = 4;
  bool has_from_name() const;
  void clear_from_name();
  static const int kFromNameFieldNumber = 4;
  const ::std::string& from_name() const;
  void set_from_name(const ::std::string& value);
  void set_from_name(const char* value);
  void set_from_name(const char* value, size_t size);
  ::std::string* mutable_from_name();
  ::std::string* release_from_name();
  void set_allocated_from_name(::std::string* from_name);

  // required uint64 to_id = 5;
  bool has_to_id() const;
  void clear_to_id();
  static const int kToIdFieldNumber = 5;
  ::google::protobuf::uint64 to_id() const;
  void set_to_id(::google::protobuf::uint64 value);

  // required string to_name = 6;
  bool has_to_name() const;
  void clear_to_name();
  static const int kToNameFieldNumber = 6;
  const ::std::string& to_name() const;
  void set_to_name(const ::std::string& value);
  void set_to_name(const char* value);
  void set_to_name(const char* value, size_t size);
  ::std::string* mutable_to_name();
  ::std::string* release_to_name();
  void set_allocated_to_name(::std::string* to_name);

  // required string title = 7;
  bool has_title() const;
  void clear_title();
  static const int kTitleFieldNumber = 7;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // required string content = 8;
  bool has_content() const;
  void clear_content();
  static const int kContentFieldNumber = 8;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // required int32 room_cards = 9;
  bool has_room_cards() const;
  void clear_room_cards();
  static const int kRoomCardsFieldNumber = 9;
  ::google::protobuf::int32 room_cards() const;
  void set_room_cards(::google::protobuf::int32 value);

  // required int32 mark = 10;
  bool has_mark() const;
  void clear_mark();
  static const int kMarkFieldNumber = 10;
  ::google::protobuf::int32 mark() const;
  void set_mark(::google::protobuf::int32 value);

  // required uint64 create_time = 11;
  bool has_create_time() const;
  void clear_create_time();
  static const int kCreateTimeFieldNumber = 11;
  ::google::protobuf::uint64 create_time() const;
  void set_create_time(::google::protobuf::uint64 value);

  // required uint32 fetch_time = 12;
  bool has_fetch_time() const;
  void clear_fetch_time();
  static const int kFetchTimeFieldNumber = 12;
  ::google::protobuf::uint32 fetch_time() const;
  void set_fetch_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:msg_maj.MailRecordS)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_from_id();
  inline void clear_has_from_id();
  inline void set_has_from_name();
  inline void clear_has_from_name();
  inline void set_has_to_id();
  inline void clear_has_to_id();
  inline void set_has_to_name();
  inline void clear_has_to_name();
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_content();
  inline void clear_has_content();
  inline void set_has_room_cards();
  inline void clear_has_room_cards();
  inline void set_has_mark();
  inline void clear_has_mark();
  inline void set_has_create_time();
  inline void clear_has_create_time();
  inline void set_has_fetch_time();
  inline void clear_has_fetch_time();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint64 from_id_;
  ::google::protobuf::internal::ArenaStringPtr from_name_;
  ::google::protobuf::uint64 to_id_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 room_cards_;
  ::google::protobuf::internal::ArenaStringPtr to_name_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::uint64 create_time_;
  ::google::protobuf::int32 mark_;
  ::google::protobuf::uint32 fetch_time_;
  friend void  protobuf_AddDesc_msg_5fmail_2eproto();
  friend void protobuf_AssignDesc_msg_5fmail_2eproto();
  friend void protobuf_ShutdownFile_msg_5fmail_2eproto();

  void InitAsDefaultInstance();
  static MailRecordS* default_instance_;
};
// -------------------------------------------------------------------

class MailSystemLogS : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.MailSystemLogS) */ {
 public:
  MailSystemLogS();
  virtual ~MailSystemLogS();

  MailSystemLogS(const MailSystemLogS& from);

  inline MailSystemLogS& operator=(const MailSystemLogS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MailSystemLogS& default_instance();

  void Swap(MailSystemLogS* other);

  // implements Message ----------------------------------------------

  inline MailSystemLogS* New() const { return New(NULL); }

  MailSystemLogS* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MailSystemLogS& from);
  void MergeFrom(const MailSystemLogS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MailSystemLogS* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // required uint64 mail_id = 2;
  bool has_mail_id() const;
  void clear_mail_id();
  static const int kMailIdFieldNumber = 2;
  ::google::protobuf::uint64 mail_id() const;
  void set_mail_id(::google::protobuf::uint64 value);

  // required uint64 uid = 3;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 3;
  ::google::protobuf::uint64 uid() const;
  void set_uid(::google::protobuf::uint64 value);

  // required int32 mark = 4;
  bool has_mark() const;
  void clear_mark();
  static const int kMarkFieldNumber = 4;
  ::google::protobuf::int32 mark() const;
  void set_mark(::google::protobuf::int32 value);

  // required uint64 create_time = 5;
  bool has_create_time() const;
  void clear_create_time();
  static const int kCreateTimeFieldNumber = 5;
  ::google::protobuf::uint64 create_time() const;
  void set_create_time(::google::protobuf::uint64 value);

  // required uint32 fetch_time = 6;
  bool has_fetch_time() const;
  void clear_fetch_time();
  static const int kFetchTimeFieldNumber = 6;
  ::google::protobuf::uint32 fetch_time() const;
  void set_fetch_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:msg_maj.MailSystemLogS)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_mail_id();
  inline void clear_has_mail_id();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_mark();
  inline void clear_has_mark();
  inline void set_has_create_time();
  inline void clear_has_create_time();
  inline void set_has_fetch_time();
  inline void clear_has_fetch_time();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint64 mail_id_;
  ::google::protobuf::uint64 uid_;
  ::google::protobuf::uint64 create_time_;
  ::google::protobuf::int32 mark_;
  ::google::protobuf::uint32 fetch_time_;
  friend void  protobuf_AddDesc_msg_5fmail_2eproto();
  friend void protobuf_AssignDesc_msg_5fmail_2eproto();
  friend void protobuf_ShutdownFile_msg_5fmail_2eproto();

  void InitAsDefaultInstance();
  static MailSystemLogS* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// MailListReq

// required uint64 start_index = 1;
inline bool MailListReq::has_start_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MailListReq::set_has_start_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MailListReq::clear_has_start_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MailListReq::clear_start_index() {
  start_index_ = GOOGLE_ULONGLONG(0);
  clear_has_start_index();
}
inline ::google::protobuf::uint64 MailListReq::start_index() const {
  // @@protoc_insertion_point(field_get:msg_maj.MailListReq.start_index)
  return start_index_;
}
inline void MailListReq::set_start_index(::google::protobuf::uint64 value) {
  set_has_start_index();
  start_index_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.MailListReq.start_index)
}

// -------------------------------------------------------------------

// MailListResp

// required .msg_maj.from_type type = 1;
inline bool MailListResp::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MailListResp::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MailListResp::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MailListResp::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::msg_maj::from_type MailListResp::type() const {
  // @@protoc_insertion_point(field_get:msg_maj.MailListResp.type)
  return static_cast< ::msg_maj::from_type >(type_);
}
inline void MailListResp::set_type(::msg_maj::from_type value) {
  assert(::msg_maj::from_type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.MailListResp.type)
}

// repeated .msg_maj.MailRecordC record_list = 2;
inline int MailListResp::record_list_size() const {
  return record_list_.size();
}
inline void MailListResp::clear_record_list() {
  record_list_.Clear();
}
inline const ::msg_maj::MailRecordC& MailListResp::record_list(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.MailListResp.record_list)
  return record_list_.Get(index);
}
inline ::msg_maj::MailRecordC* MailListResp::mutable_record_list(int index) {
  // @@protoc_insertion_point(field_mutable:msg_maj.MailListResp.record_list)
  return record_list_.Mutable(index);
}
inline ::msg_maj::MailRecordC* MailListResp::add_record_list() {
  // @@protoc_insertion_point(field_add:msg_maj.MailListResp.record_list)
  return record_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::msg_maj::MailRecordC >*
MailListResp::mutable_record_list() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.MailListResp.record_list)
  return &record_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::msg_maj::MailRecordC >&
MailListResp::record_list() const {
  // @@protoc_insertion_point(field_list:msg_maj.MailListResp.record_list)
  return record_list_;
}

// -------------------------------------------------------------------

// MailOptReq

// required uint64 id = 1;
inline bool MailOptReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MailOptReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MailOptReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MailOptReq::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 MailOptReq::id() const {
  // @@protoc_insertion_point(field_get:msg_maj.MailOptReq.id)
  return id_;
}
inline void MailOptReq::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.MailOptReq.id)
}

// required .msg_maj.opt_type_mail opt = 2;
inline bool MailOptReq::has_opt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MailOptReq::set_has_opt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MailOptReq::clear_has_opt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MailOptReq::clear_opt() {
  opt_ = 1;
  clear_has_opt();
}
inline ::msg_maj::opt_type_mail MailOptReq::opt() const {
  // @@protoc_insertion_point(field_get:msg_maj.MailOptReq.opt)
  return static_cast< ::msg_maj::opt_type_mail >(opt_);
}
inline void MailOptReq::set_opt(::msg_maj::opt_type_mail value) {
  assert(::msg_maj::opt_type_mail_IsValid(value));
  set_has_opt();
  opt_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.MailOptReq.opt)
}

// -------------------------------------------------------------------

// MailRecordC

// required uint64 id = 1;
inline bool MailRecordC::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MailRecordC::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MailRecordC::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MailRecordC::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 MailRecordC::id() const {
  // @@protoc_insertion_point(field_get:msg_maj.MailRecordC.id)
  return id_;
}
inline void MailRecordC::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.MailRecordC.id)
}

// required .msg_maj.mail_type type = 2;
inline bool MailRecordC::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MailRecordC::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MailRecordC::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MailRecordC::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::msg_maj::mail_type MailRecordC::type() const {
  // @@protoc_insertion_point(field_get:msg_maj.MailRecordC.type)
  return static_cast< ::msg_maj::mail_type >(type_);
}
inline void MailRecordC::set_type(::msg_maj::mail_type value) {
  assert(::msg_maj::mail_type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.MailRecordC.type)
}

// required string from_name = 3;
inline bool MailRecordC::has_from_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MailRecordC::set_has_from_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MailRecordC::clear_has_from_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MailRecordC::clear_from_name() {
  from_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_from_name();
}
inline const ::std::string& MailRecordC::from_name() const {
  // @@protoc_insertion_point(field_get:msg_maj.MailRecordC.from_name)
  return from_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MailRecordC::set_from_name(const ::std::string& value) {
  set_has_from_name();
  from_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.MailRecordC.from_name)
}
inline void MailRecordC::set_from_name(const char* value) {
  set_has_from_name();
  from_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.MailRecordC.from_name)
}
inline void MailRecordC::set_from_name(const char* value, size_t size) {
  set_has_from_name();
  from_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.MailRecordC.from_name)
}
inline ::std::string* MailRecordC::mutable_from_name() {
  set_has_from_name();
  // @@protoc_insertion_point(field_mutable:msg_maj.MailRecordC.from_name)
  return from_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MailRecordC::release_from_name() {
  // @@protoc_insertion_point(field_release:msg_maj.MailRecordC.from_name)
  clear_has_from_name();
  return from_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MailRecordC::set_allocated_from_name(::std::string* from_name) {
  if (from_name != NULL) {
    set_has_from_name();
  } else {
    clear_has_from_name();
  }
  from_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from_name);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.MailRecordC.from_name)
}

// required string title = 4;
inline bool MailRecordC::has_title() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MailRecordC::set_has_title() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MailRecordC::clear_has_title() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MailRecordC::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
inline const ::std::string& MailRecordC::title() const {
  // @@protoc_insertion_point(field_get:msg_maj.MailRecordC.title)
  return title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MailRecordC::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.MailRecordC.title)
}
inline void MailRecordC::set_title(const char* value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.MailRecordC.title)
}
inline void MailRecordC::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.MailRecordC.title)
}
inline ::std::string* MailRecordC::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:msg_maj.MailRecordC.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MailRecordC::release_title() {
  // @@protoc_insertion_point(field_release:msg_maj.MailRecordC.title)
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MailRecordC::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.MailRecordC.title)
}

// required string content = 5;
inline bool MailRecordC::has_content() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MailRecordC::set_has_content() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MailRecordC::clear_has_content() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MailRecordC::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
inline const ::std::string& MailRecordC::content() const {
  // @@protoc_insertion_point(field_get:msg_maj.MailRecordC.content)
  return content_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MailRecordC::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.MailRecordC.content)
}
inline void MailRecordC::set_content(const char* value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.MailRecordC.content)
}
inline void MailRecordC::set_content(const char* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.MailRecordC.content)
}
inline ::std::string* MailRecordC::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:msg_maj.MailRecordC.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MailRecordC::release_content() {
  // @@protoc_insertion_point(field_release:msg_maj.MailRecordC.content)
  clear_has_content();
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MailRecordC::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.MailRecordC.content)
}

// required int32 room_cards = 6;
inline bool MailRecordC::has_room_cards() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MailRecordC::set_has_room_cards() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MailRecordC::clear_has_room_cards() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MailRecordC::clear_room_cards() {
  room_cards_ = 0;
  clear_has_room_cards();
}
inline ::google::protobuf::int32 MailRecordC::room_cards() const {
  // @@protoc_insertion_point(field_get:msg_maj.MailRecordC.room_cards)
  return room_cards_;
}
inline void MailRecordC::set_room_cards(::google::protobuf::int32 value) {
  set_has_room_cards();
  room_cards_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.MailRecordC.room_cards)
}

// required .msg_maj.mark_type mark = 7;
inline bool MailRecordC::has_mark() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MailRecordC::set_has_mark() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MailRecordC::clear_has_mark() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MailRecordC::clear_mark() {
  mark_ = 1;
  clear_has_mark();
}
inline ::msg_maj::mark_type MailRecordC::mark() const {
  // @@protoc_insertion_point(field_get:msg_maj.MailRecordC.mark)
  return static_cast< ::msg_maj::mark_type >(mark_);
}
inline void MailRecordC::set_mark(::msg_maj::mark_type value) {
  assert(::msg_maj::mark_type_IsValid(value));
  set_has_mark();
  mark_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.MailRecordC.mark)
}

// required uint64 create_time = 8;
inline bool MailRecordC::has_create_time() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MailRecordC::set_has_create_time() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MailRecordC::clear_has_create_time() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MailRecordC::clear_create_time() {
  create_time_ = GOOGLE_ULONGLONG(0);
  clear_has_create_time();
}
inline ::google::protobuf::uint64 MailRecordC::create_time() const {
  // @@protoc_insertion_point(field_get:msg_maj.MailRecordC.create_time)
  return create_time_;
}
inline void MailRecordC::set_create_time(::google::protobuf::uint64 value) {
  set_has_create_time();
  create_time_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.MailRecordC.create_time)
}

// required uint64 fetch_time = 9;
inline bool MailRecordC::has_fetch_time() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void MailRecordC::set_has_fetch_time() {
  _has_bits_[0] |= 0x00000100u;
}
inline void MailRecordC::clear_has_fetch_time() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void MailRecordC::clear_fetch_time() {
  fetch_time_ = GOOGLE_ULONGLONG(0);
  clear_has_fetch_time();
}
inline ::google::protobuf::uint64 MailRecordC::fetch_time() const {
  // @@protoc_insertion_point(field_get:msg_maj.MailRecordC.fetch_time)
  return fetch_time_;
}
inline void MailRecordC::set_fetch_time(::google::protobuf::uint64 value) {
  set_has_fetch_time();
  fetch_time_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.MailRecordC.fetch_time)
}

// -------------------------------------------------------------------

// MailRecordS

// required uint64 id = 1;
inline bool MailRecordS::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MailRecordS::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MailRecordS::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MailRecordS::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 MailRecordS::id() const {
  // @@protoc_insertion_point(field_get:msg_maj.MailRecordS.id)
  return id_;
}
inline void MailRecordS::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.MailRecordS.id)
}

// required int32 type = 2;
inline bool MailRecordS::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MailRecordS::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MailRecordS::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MailRecordS::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 MailRecordS::type() const {
  // @@protoc_insertion_point(field_get:msg_maj.MailRecordS.type)
  return type_;
}
inline void MailRecordS::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.MailRecordS.type)
}

// required uint64 from_id = 3;
inline bool MailRecordS::has_from_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MailRecordS::set_has_from_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MailRecordS::clear_has_from_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MailRecordS::clear_from_id() {
  from_id_ = GOOGLE_ULONGLONG(0);
  clear_has_from_id();
}
inline ::google::protobuf::uint64 MailRecordS::from_id() const {
  // @@protoc_insertion_point(field_get:msg_maj.MailRecordS.from_id)
  return from_id_;
}
inline void MailRecordS::set_from_id(::google::protobuf::uint64 value) {
  set_has_from_id();
  from_id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.MailRecordS.from_id)
}

// required string from_name = 4;
inline bool MailRecordS::has_from_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MailRecordS::set_has_from_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MailRecordS::clear_has_from_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MailRecordS::clear_from_name() {
  from_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_from_name();
}
inline const ::std::string& MailRecordS::from_name() const {
  // @@protoc_insertion_point(field_get:msg_maj.MailRecordS.from_name)
  return from_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MailRecordS::set_from_name(const ::std::string& value) {
  set_has_from_name();
  from_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.MailRecordS.from_name)
}
inline void MailRecordS::set_from_name(const char* value) {
  set_has_from_name();
  from_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.MailRecordS.from_name)
}
inline void MailRecordS::set_from_name(const char* value, size_t size) {
  set_has_from_name();
  from_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.MailRecordS.from_name)
}
inline ::std::string* MailRecordS::mutable_from_name() {
  set_has_from_name();
  // @@protoc_insertion_point(field_mutable:msg_maj.MailRecordS.from_name)
  return from_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MailRecordS::release_from_name() {
  // @@protoc_insertion_point(field_release:msg_maj.MailRecordS.from_name)
  clear_has_from_name();
  return from_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MailRecordS::set_allocated_from_name(::std::string* from_name) {
  if (from_name != NULL) {
    set_has_from_name();
  } else {
    clear_has_from_name();
  }
  from_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from_name);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.MailRecordS.from_name)
}

// required uint64 to_id = 5;
inline bool MailRecordS::has_to_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MailRecordS::set_has_to_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MailRecordS::clear_has_to_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MailRecordS::clear_to_id() {
  to_id_ = GOOGLE_ULONGLONG(0);
  clear_has_to_id();
}
inline ::google::protobuf::uint64 MailRecordS::to_id() const {
  // @@protoc_insertion_point(field_get:msg_maj.MailRecordS.to_id)
  return to_id_;
}
inline void MailRecordS::set_to_id(::google::protobuf::uint64 value) {
  set_has_to_id();
  to_id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.MailRecordS.to_id)
}

// required string to_name = 6;
inline bool MailRecordS::has_to_name() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MailRecordS::set_has_to_name() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MailRecordS::clear_has_to_name() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MailRecordS::clear_to_name() {
  to_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_to_name();
}
inline const ::std::string& MailRecordS::to_name() const {
  // @@protoc_insertion_point(field_get:msg_maj.MailRecordS.to_name)
  return to_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MailRecordS::set_to_name(const ::std::string& value) {
  set_has_to_name();
  to_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.MailRecordS.to_name)
}
inline void MailRecordS::set_to_name(const char* value) {
  set_has_to_name();
  to_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.MailRecordS.to_name)
}
inline void MailRecordS::set_to_name(const char* value, size_t size) {
  set_has_to_name();
  to_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.MailRecordS.to_name)
}
inline ::std::string* MailRecordS::mutable_to_name() {
  set_has_to_name();
  // @@protoc_insertion_point(field_mutable:msg_maj.MailRecordS.to_name)
  return to_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MailRecordS::release_to_name() {
  // @@protoc_insertion_point(field_release:msg_maj.MailRecordS.to_name)
  clear_has_to_name();
  return to_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MailRecordS::set_allocated_to_name(::std::string* to_name) {
  if (to_name != NULL) {
    set_has_to_name();
  } else {
    clear_has_to_name();
  }
  to_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to_name);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.MailRecordS.to_name)
}

// required string title = 7;
inline bool MailRecordS::has_title() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MailRecordS::set_has_title() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MailRecordS::clear_has_title() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MailRecordS::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
inline const ::std::string& MailRecordS::title() const {
  // @@protoc_insertion_point(field_get:msg_maj.MailRecordS.title)
  return title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MailRecordS::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.MailRecordS.title)
}
inline void MailRecordS::set_title(const char* value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.MailRecordS.title)
}
inline void MailRecordS::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.MailRecordS.title)
}
inline ::std::string* MailRecordS::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:msg_maj.MailRecordS.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MailRecordS::release_title() {
  // @@protoc_insertion_point(field_release:msg_maj.MailRecordS.title)
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MailRecordS::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.MailRecordS.title)
}

// required string content = 8;
inline bool MailRecordS::has_content() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MailRecordS::set_has_content() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MailRecordS::clear_has_content() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MailRecordS::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
inline const ::std::string& MailRecordS::content() const {
  // @@protoc_insertion_point(field_get:msg_maj.MailRecordS.content)
  return content_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MailRecordS::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.MailRecordS.content)
}
inline void MailRecordS::set_content(const char* value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.MailRecordS.content)
}
inline void MailRecordS::set_content(const char* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.MailRecordS.content)
}
inline ::std::string* MailRecordS::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:msg_maj.MailRecordS.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MailRecordS::release_content() {
  // @@protoc_insertion_point(field_release:msg_maj.MailRecordS.content)
  clear_has_content();
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MailRecordS::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.MailRecordS.content)
}

// required int32 room_cards = 9;
inline bool MailRecordS::has_room_cards() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void MailRecordS::set_has_room_cards() {
  _has_bits_[0] |= 0x00000100u;
}
inline void MailRecordS::clear_has_room_cards() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void MailRecordS::clear_room_cards() {
  room_cards_ = 0;
  clear_has_room_cards();
}
inline ::google::protobuf::int32 MailRecordS::room_cards() const {
  // @@protoc_insertion_point(field_get:msg_maj.MailRecordS.room_cards)
  return room_cards_;
}
inline void MailRecordS::set_room_cards(::google::protobuf::int32 value) {
  set_has_room_cards();
  room_cards_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.MailRecordS.room_cards)
}

// required int32 mark = 10;
inline bool MailRecordS::has_mark() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void MailRecordS::set_has_mark() {
  _has_bits_[0] |= 0x00000200u;
}
inline void MailRecordS::clear_has_mark() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void MailRecordS::clear_mark() {
  mark_ = 0;
  clear_has_mark();
}
inline ::google::protobuf::int32 MailRecordS::mark() const {
  // @@protoc_insertion_point(field_get:msg_maj.MailRecordS.mark)
  return mark_;
}
inline void MailRecordS::set_mark(::google::protobuf::int32 value) {
  set_has_mark();
  mark_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.MailRecordS.mark)
}

// required uint64 create_time = 11;
inline bool MailRecordS::has_create_time() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void MailRecordS::set_has_create_time() {
  _has_bits_[0] |= 0x00000400u;
}
inline void MailRecordS::clear_has_create_time() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void MailRecordS::clear_create_time() {
  create_time_ = GOOGLE_ULONGLONG(0);
  clear_has_create_time();
}
inline ::google::protobuf::uint64 MailRecordS::create_time() const {
  // @@protoc_insertion_point(field_get:msg_maj.MailRecordS.create_time)
  return create_time_;
}
inline void MailRecordS::set_create_time(::google::protobuf::uint64 value) {
  set_has_create_time();
  create_time_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.MailRecordS.create_time)
}

// required uint32 fetch_time = 12;
inline bool MailRecordS::has_fetch_time() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void MailRecordS::set_has_fetch_time() {
  _has_bits_[0] |= 0x00000800u;
}
inline void MailRecordS::clear_has_fetch_time() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void MailRecordS::clear_fetch_time() {
  fetch_time_ = 0u;
  clear_has_fetch_time();
}
inline ::google::protobuf::uint32 MailRecordS::fetch_time() const {
  // @@protoc_insertion_point(field_get:msg_maj.MailRecordS.fetch_time)
  return fetch_time_;
}
inline void MailRecordS::set_fetch_time(::google::protobuf::uint32 value) {
  set_has_fetch_time();
  fetch_time_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.MailRecordS.fetch_time)
}

// -------------------------------------------------------------------

// MailSystemLogS

// required uint64 id = 1;
inline bool MailSystemLogS::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MailSystemLogS::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MailSystemLogS::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MailSystemLogS::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 MailSystemLogS::id() const {
  // @@protoc_insertion_point(field_get:msg_maj.MailSystemLogS.id)
  return id_;
}
inline void MailSystemLogS::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.MailSystemLogS.id)
}

// required uint64 mail_id = 2;
inline bool MailSystemLogS::has_mail_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MailSystemLogS::set_has_mail_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MailSystemLogS::clear_has_mail_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MailSystemLogS::clear_mail_id() {
  mail_id_ = GOOGLE_ULONGLONG(0);
  clear_has_mail_id();
}
inline ::google::protobuf::uint64 MailSystemLogS::mail_id() const {
  // @@protoc_insertion_point(field_get:msg_maj.MailSystemLogS.mail_id)
  return mail_id_;
}
inline void MailSystemLogS::set_mail_id(::google::protobuf::uint64 value) {
  set_has_mail_id();
  mail_id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.MailSystemLogS.mail_id)
}

// required uint64 uid = 3;
inline bool MailSystemLogS::has_uid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MailSystemLogS::set_has_uid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MailSystemLogS::clear_has_uid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MailSystemLogS::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 MailSystemLogS::uid() const {
  // @@protoc_insertion_point(field_get:msg_maj.MailSystemLogS.uid)
  return uid_;
}
inline void MailSystemLogS::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.MailSystemLogS.uid)
}

// required int32 mark = 4;
inline bool MailSystemLogS::has_mark() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MailSystemLogS::set_has_mark() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MailSystemLogS::clear_has_mark() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MailSystemLogS::clear_mark() {
  mark_ = 0;
  clear_has_mark();
}
inline ::google::protobuf::int32 MailSystemLogS::mark() const {
  // @@protoc_insertion_point(field_get:msg_maj.MailSystemLogS.mark)
  return mark_;
}
inline void MailSystemLogS::set_mark(::google::protobuf::int32 value) {
  set_has_mark();
  mark_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.MailSystemLogS.mark)
}

// required uint64 create_time = 5;
inline bool MailSystemLogS::has_create_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MailSystemLogS::set_has_create_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MailSystemLogS::clear_has_create_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MailSystemLogS::clear_create_time() {
  create_time_ = GOOGLE_ULONGLONG(0);
  clear_has_create_time();
}
inline ::google::protobuf::uint64 MailSystemLogS::create_time() const {
  // @@protoc_insertion_point(field_get:msg_maj.MailSystemLogS.create_time)
  return create_time_;
}
inline void MailSystemLogS::set_create_time(::google::protobuf::uint64 value) {
  set_has_create_time();
  create_time_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.MailSystemLogS.create_time)
}

// required uint32 fetch_time = 6;
inline bool MailSystemLogS::has_fetch_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MailSystemLogS::set_has_fetch_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MailSystemLogS::clear_has_fetch_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MailSystemLogS::clear_fetch_time() {
  fetch_time_ = 0u;
  clear_has_fetch_time();
}
inline ::google::protobuf::uint32 MailSystemLogS::fetch_time() const {
  // @@protoc_insertion_point(field_get:msg_maj.MailSystemLogS.fetch_time)
  return fetch_time_;
}
inline void MailSystemLogS::set_fetch_time(::google::protobuf::uint32 value) {
  set_has_fetch_time();
  fetch_time_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.MailSystemLogS.fetch_time)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace msg_maj

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::msg_maj::opt_type_mail> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg_maj::opt_type_mail>() {
  return ::msg_maj::opt_type_mail_descriptor();
}
template <> struct is_proto_enum< ::msg_maj::mark_type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg_maj::mark_type>() {
  return ::msg_maj::mark_type_descriptor();
}
template <> struct is_proto_enum< ::msg_maj::mail_type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg_maj::mail_type>() {
  return ::msg_maj::mail_type_descriptor();
}
template <> struct is_proto_enum< ::msg_maj::from_type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg_maj::from_type>() {
  return ::msg_maj::from_type_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_msg_5fmail_2eproto__INCLUDED
