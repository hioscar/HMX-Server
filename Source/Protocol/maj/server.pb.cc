// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "server.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace fogs {
namespace proto {
namespace msg {

namespace {

const ::google::protobuf::Descriptor* HandshakeRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HandshakeRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* HandshakeResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HandshakeResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* DisConnectionRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DisConnectionRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* DisConnectionResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DisConnectionResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* HeartbeatRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HeartbeatRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* HeartbeatResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HeartbeatResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* ServerInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ServerInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* AddConnectionRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AddConnectionRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* AddConnectionResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AddConnectionResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* SessionDisConnectReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SessionDisConnectReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* SessionDisConnectResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SessionDisConnectResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateServerInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateServerInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* AddSessionIP_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AddSessionIP_reflection_ = NULL;
const ::google::protobuf::Descriptor* SessionAccountName_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SessionAccountName_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateRoomInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateRoomInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateSessionConn_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateSessionConn_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateServerPersons_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateServerPersons_reflection_ = NULL;
const ::google::protobuf::Descriptor* NotifyOnConnection_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifyOnConnection_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReloadConfigForm_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReloadConfigForm_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResetPlayerData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResetPlayerData_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* RoomStatus_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_server_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_server_2eproto() {
  protobuf_AddDesc_server_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "server.proto");
  GOOGLE_CHECK(file != NULL);
  HandshakeRequest_descriptor_ = file->message_type(0);
  static const int HandshakeRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HandshakeRequest, server_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HandshakeRequest, server_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HandshakeRequest, server_ip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HandshakeRequest, server_port_),
  };
  HandshakeRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HandshakeRequest_descriptor_,
      HandshakeRequest::default_instance_,
      HandshakeRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HandshakeRequest, _has_bits_[0]),
      -1,
      -1,
      sizeof(HandshakeRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HandshakeRequest, _internal_metadata_),
      -1);
  HandshakeResponse_descriptor_ = file->message_type(1);
  static const int HandshakeResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HandshakeResponse, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HandshakeResponse, server_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HandshakeResponse, server_id_),
  };
  HandshakeResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HandshakeResponse_descriptor_,
      HandshakeResponse::default_instance_,
      HandshakeResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HandshakeResponse, _has_bits_[0]),
      -1,
      -1,
      sizeof(HandshakeResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HandshakeResponse, _internal_metadata_),
      -1);
  DisConnectionRequest_descriptor_ = file->message_type(2);
  static const int DisConnectionRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DisConnectionRequest, server_id_),
  };
  DisConnectionRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DisConnectionRequest_descriptor_,
      DisConnectionRequest::default_instance_,
      DisConnectionRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DisConnectionRequest, _has_bits_[0]),
      -1,
      -1,
      sizeof(DisConnectionRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DisConnectionRequest, _internal_metadata_),
      -1);
  DisConnectionResponse_descriptor_ = file->message_type(3);
  static const int DisConnectionResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DisConnectionResponse, result_),
  };
  DisConnectionResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DisConnectionResponse_descriptor_,
      DisConnectionResponse::default_instance_,
      DisConnectionResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DisConnectionResponse, _has_bits_[0]),
      -1,
      -1,
      sizeof(DisConnectionResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DisConnectionResponse, _internal_metadata_),
      -1);
  HeartbeatRequest_descriptor_ = file->message_type(4);
  static const int HeartbeatRequest_offsets_[1] = {
  };
  HeartbeatRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HeartbeatRequest_descriptor_,
      HeartbeatRequest::default_instance_,
      HeartbeatRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartbeatRequest, _has_bits_[0]),
      -1,
      -1,
      sizeof(HeartbeatRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartbeatRequest, _internal_metadata_),
      -1);
  HeartbeatResponse_descriptor_ = file->message_type(5);
  static const int HeartbeatResponse_offsets_[1] = {
  };
  HeartbeatResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HeartbeatResponse_descriptor_,
      HeartbeatResponse::default_instance_,
      HeartbeatResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartbeatResponse, _has_bits_[0]),
      -1,
      -1,
      sizeof(HeartbeatResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartbeatResponse, _internal_metadata_),
      -1);
  ServerInfo_descriptor_ = file->message_type(6);
  static const int ServerInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerInfo, server_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerInfo, server_ip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerInfo, server_port_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerInfo, server_persons_),
  };
  ServerInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ServerInfo_descriptor_,
      ServerInfo::default_instance_,
      ServerInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(ServerInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerInfo, _internal_metadata_),
      -1);
  AddConnectionRequest_descriptor_ = file->message_type(7);
  static const int AddConnectionRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddConnectionRequest, server_info_),
  };
  AddConnectionRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AddConnectionRequest_descriptor_,
      AddConnectionRequest::default_instance_,
      AddConnectionRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddConnectionRequest, _has_bits_[0]),
      -1,
      -1,
      sizeof(AddConnectionRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddConnectionRequest, _internal_metadata_),
      -1);
  AddConnectionResponse_descriptor_ = file->message_type(8);
  static const int AddConnectionResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddConnectionResponse, result_),
  };
  AddConnectionResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AddConnectionResponse_descriptor_,
      AddConnectionResponse::default_instance_,
      AddConnectionResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddConnectionResponse, _has_bits_[0]),
      -1,
      -1,
      sizeof(AddConnectionResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddConnectionResponse, _internal_metadata_),
      -1);
  SessionDisConnectReq_descriptor_ = file->message_type(9);
  static const int SessionDisConnectReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SessionDisConnectReq, session_id_),
  };
  SessionDisConnectReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SessionDisConnectReq_descriptor_,
      SessionDisConnectReq::default_instance_,
      SessionDisConnectReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SessionDisConnectReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(SessionDisConnectReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SessionDisConnectReq, _internal_metadata_),
      -1);
  SessionDisConnectResp_descriptor_ = file->message_type(10);
  static const int SessionDisConnectResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SessionDisConnectResp, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SessionDisConnectResp, session_id_),
  };
  SessionDisConnectResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SessionDisConnectResp_descriptor_,
      SessionDisConnectResp::default_instance_,
      SessionDisConnectResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SessionDisConnectResp, _has_bits_[0]),
      -1,
      -1,
      sizeof(SessionDisConnectResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SessionDisConnectResp, _internal_metadata_),
      -1);
  UpdateServerInfo_descriptor_ = file->message_type(11);
  static const int UpdateServerInfo_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateServerInfo, server_info_),
  };
  UpdateServerInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UpdateServerInfo_descriptor_,
      UpdateServerInfo::default_instance_,
      UpdateServerInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateServerInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(UpdateServerInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateServerInfo, _internal_metadata_),
      -1);
  AddSessionIP_descriptor_ = file->message_type(12);
  static const int AddSessionIP_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddSessionIP, session_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddSessionIP, ip_),
  };
  AddSessionIP_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AddSessionIP_descriptor_,
      AddSessionIP::default_instance_,
      AddSessionIP_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddSessionIP, _has_bits_[0]),
      -1,
      -1,
      sizeof(AddSessionIP),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddSessionIP, _internal_metadata_),
      -1);
  SessionAccountName_descriptor_ = file->message_type(13);
  static const int SessionAccountName_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SessionAccountName, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SessionAccountName, account_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SessionAccountName, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SessionAccountName, icon_addr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SessionAccountName, share_user_id_),
  };
  SessionAccountName_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SessionAccountName_descriptor_,
      SessionAccountName::default_instance_,
      SessionAccountName_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SessionAccountName, _has_bits_[0]),
      -1,
      -1,
      sizeof(SessionAccountName),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SessionAccountName, _internal_metadata_),
      -1);
  UpdateRoomInfo_descriptor_ = file->message_type(14);
  static const int UpdateRoomInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateRoomInfo, room_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateRoomInfo, server_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateRoomInfo, room_starus_),
  };
  UpdateRoomInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UpdateRoomInfo_descriptor_,
      UpdateRoomInfo::default_instance_,
      UpdateRoomInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateRoomInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(UpdateRoomInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateRoomInfo, _internal_metadata_),
      -1);
  UpdateSessionConn_descriptor_ = file->message_type(15);
  static const int UpdateSessionConn_offsets_[1] = {
  };
  UpdateSessionConn_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UpdateSessionConn_descriptor_,
      UpdateSessionConn::default_instance_,
      UpdateSessionConn_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateSessionConn, _has_bits_[0]),
      -1,
      -1,
      sizeof(UpdateSessionConn),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateSessionConn, _internal_metadata_),
      -1);
  UpdateServerPersons_descriptor_ = file->message_type(16);
  static const int UpdateServerPersons_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateServerPersons, server_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateServerPersons, persons_),
  };
  UpdateServerPersons_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UpdateServerPersons_descriptor_,
      UpdateServerPersons::default_instance_,
      UpdateServerPersons_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateServerPersons, _has_bits_[0]),
      -1,
      -1,
      sizeof(UpdateServerPersons),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateServerPersons, _internal_metadata_),
      -1);
  NotifyOnConnection_descriptor_ = file->message_type(17);
  static const int NotifyOnConnection_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyOnConnection, server_type_),
  };
  NotifyOnConnection_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      NotifyOnConnection_descriptor_,
      NotifyOnConnection::default_instance_,
      NotifyOnConnection_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyOnConnection, _has_bits_[0]),
      -1,
      -1,
      sizeof(NotifyOnConnection),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyOnConnection, _internal_metadata_),
      -1);
  ReloadConfigForm_descriptor_ = file->message_type(18);
  static const int ReloadConfigForm_offsets_[1] = {
  };
  ReloadConfigForm_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReloadConfigForm_descriptor_,
      ReloadConfigForm::default_instance_,
      ReloadConfigForm_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReloadConfigForm, _has_bits_[0]),
      -1,
      -1,
      sizeof(ReloadConfigForm),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReloadConfigForm, _internal_metadata_),
      -1);
  ResetPlayerData_descriptor_ = file->message_type(19);
  static const int ResetPlayerData_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResetPlayerData, user_id_),
  };
  ResetPlayerData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ResetPlayerData_descriptor_,
      ResetPlayerData::default_instance_,
      ResetPlayerData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResetPlayerData, _has_bits_[0]),
      -1,
      -1,
      sizeof(ResetPlayerData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResetPlayerData, _internal_metadata_),
      -1);
  RoomStatus_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_server_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HandshakeRequest_descriptor_, &HandshakeRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HandshakeResponse_descriptor_, &HandshakeResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DisConnectionRequest_descriptor_, &DisConnectionRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DisConnectionResponse_descriptor_, &DisConnectionResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HeartbeatRequest_descriptor_, &HeartbeatRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HeartbeatResponse_descriptor_, &HeartbeatResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ServerInfo_descriptor_, &ServerInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AddConnectionRequest_descriptor_, &AddConnectionRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AddConnectionResponse_descriptor_, &AddConnectionResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SessionDisConnectReq_descriptor_, &SessionDisConnectReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SessionDisConnectResp_descriptor_, &SessionDisConnectResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UpdateServerInfo_descriptor_, &UpdateServerInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AddSessionIP_descriptor_, &AddSessionIP::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SessionAccountName_descriptor_, &SessionAccountName::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UpdateRoomInfo_descriptor_, &UpdateRoomInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UpdateSessionConn_descriptor_, &UpdateSessionConn::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UpdateServerPersons_descriptor_, &UpdateServerPersons::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      NotifyOnConnection_descriptor_, &NotifyOnConnection::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReloadConfigForm_descriptor_, &ReloadConfigForm::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ResetPlayerData_descriptor_, &ResetPlayerData::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_server_2eproto() {
  delete HandshakeRequest::default_instance_;
  delete HandshakeRequest_reflection_;
  delete HandshakeResponse::default_instance_;
  delete HandshakeResponse_reflection_;
  delete DisConnectionRequest::default_instance_;
  delete DisConnectionRequest_reflection_;
  delete DisConnectionResponse::default_instance_;
  delete DisConnectionResponse_reflection_;
  delete HeartbeatRequest::default_instance_;
  delete HeartbeatRequest_reflection_;
  delete HeartbeatResponse::default_instance_;
  delete HeartbeatResponse_reflection_;
  delete ServerInfo::default_instance_;
  delete ServerInfo_reflection_;
  delete AddConnectionRequest::default_instance_;
  delete AddConnectionRequest_reflection_;
  delete AddConnectionResponse::default_instance_;
  delete AddConnectionResponse_reflection_;
  delete SessionDisConnectReq::default_instance_;
  delete SessionDisConnectReq_reflection_;
  delete SessionDisConnectResp::default_instance_;
  delete SessionDisConnectResp_reflection_;
  delete UpdateServerInfo::default_instance_;
  delete UpdateServerInfo_reflection_;
  delete AddSessionIP::default_instance_;
  delete AddSessionIP_reflection_;
  delete SessionAccountName::default_instance_;
  delete SessionAccountName_reflection_;
  delete UpdateRoomInfo::default_instance_;
  delete UpdateRoomInfo_reflection_;
  delete UpdateSessionConn::default_instance_;
  delete UpdateSessionConn_reflection_;
  delete UpdateServerPersons::default_instance_;
  delete UpdateServerPersons_reflection_;
  delete NotifyOnConnection::default_instance_;
  delete NotifyOnConnection_reflection_;
  delete ReloadConfigForm::default_instance_;
  delete ReloadConfigForm_reflection_;
  delete ResetPlayerData::default_instance_;
  delete ResetPlayerData_reflection_;
}

void protobuf_AddDesc_server_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_server_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014server.proto\022\016fogs.proto.msg\"b\n\020Handsh"
    "akeRequest\022\023\n\013server_name\030\001 \001(\t\022\021\n\tserve"
    "r_id\030\002 \001(\r\022\021\n\tserver_ip\030\003 \001(\t\022\023\n\013server_"
    "port\030\004 \001(\r\"K\n\021HandshakeResponse\022\016\n\006resul"
    "t\030\001 \001(\005\022\023\n\013server_name\030\002 \001(\t\022\021\n\tserver_i"
    "d\030\003 \001(\r\")\n\024DisConnectionRequest\022\021\n\tserve"
    "r_id\030\001 \001(\r\"\'\n\025DisConnectionResponse\022\016\n\006r"
    "esult\030\001 \001(\005\"\022\n\020HeartbeatRequest\"\023\n\021Heart"
    "beatResponse\"_\n\nServerInfo\022\021\n\tserver_id\030"
    "\001 \001(\r\022\021\n\tserver_ip\030\002 \001(\t\022\023\n\013server_port\030"
    "\003 \001(\r\022\026\n\016server_persons\030\004 \001(\r\"G\n\024AddConn"
    "ectionRequest\022/\n\013server_info\030\001 \001(\0132\032.fog"
    "s.proto.msg.ServerInfo\"\'\n\025AddConnectionR"
    "esponse\022\016\n\006result\030\001 \001(\005\"*\n\024SessionDisCon"
    "nectReq\022\022\n\nsession_id\030\001 \001(\r\";\n\025SessionDi"
    "sConnectResp\022\016\n\006result\030\001 \001(\005\022\022\n\nsession_"
    "id\030\002 \001(\r\"C\n\020UpdateServerInfo\022/\n\013server_i"
    "nfo\030\001 \001(\0132\032.fogs.proto.msg.ServerInfo\".\n"
    "\014AddSessionIP\022\022\n\nsession_id\030\001 \001(\r\022\n\n\002ip\030"
    "\002 \001(\t\"n\n\022SessionAccountName\022\017\n\007user_id\030\001"
    " \001(\r\022\017\n\007account\030\002 \001(\t\022\014\n\004name\030\003 \001(\t\022\021\n\ti"
    "con_addr\030\004 \001(\t\022\025\n\rshare_user_id\030\005 \001(\r\"e\n"
    "\016UpdateRoomInfo\022\017\n\007room_id\030\001 \001(\r\022\021\n\tserv"
    "er_id\030\002 \001(\r\022/\n\013room_starus\030\003 \002(\0162\032.fogs."
    "proto.msg.RoomStatus\"\023\n\021UpdateSessionCon"
    "n\"9\n\023UpdateServerPersons\022\021\n\tserver_id\030\001 "
    "\001(\r\022\017\n\007persons\030\002 \001(\r\")\n\022NotifyOnConnecti"
    "on\022\023\n\013server_type\030\001 \001(\r\"\022\n\020ReloadConfigF"
    "orm\"\"\n\017ResetPlayerData\022\017\n\007user_id\030\001 \001(\r*"
    "7\n\nRoomStatus\022\023\n\017RoomStatus_Open\020\001\022\024\n\020Ro"
    "omStatus_Close\020\002", 1216);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "server.proto", &protobuf_RegisterTypes);
  HandshakeRequest::default_instance_ = new HandshakeRequest();
  HandshakeResponse::default_instance_ = new HandshakeResponse();
  DisConnectionRequest::default_instance_ = new DisConnectionRequest();
  DisConnectionResponse::default_instance_ = new DisConnectionResponse();
  HeartbeatRequest::default_instance_ = new HeartbeatRequest();
  HeartbeatResponse::default_instance_ = new HeartbeatResponse();
  ServerInfo::default_instance_ = new ServerInfo();
  AddConnectionRequest::default_instance_ = new AddConnectionRequest();
  AddConnectionResponse::default_instance_ = new AddConnectionResponse();
  SessionDisConnectReq::default_instance_ = new SessionDisConnectReq();
  SessionDisConnectResp::default_instance_ = new SessionDisConnectResp();
  UpdateServerInfo::default_instance_ = new UpdateServerInfo();
  AddSessionIP::default_instance_ = new AddSessionIP();
  SessionAccountName::default_instance_ = new SessionAccountName();
  UpdateRoomInfo::default_instance_ = new UpdateRoomInfo();
  UpdateSessionConn::default_instance_ = new UpdateSessionConn();
  UpdateServerPersons::default_instance_ = new UpdateServerPersons();
  NotifyOnConnection::default_instance_ = new NotifyOnConnection();
  ReloadConfigForm::default_instance_ = new ReloadConfigForm();
  ResetPlayerData::default_instance_ = new ResetPlayerData();
  HandshakeRequest::default_instance_->InitAsDefaultInstance();
  HandshakeResponse::default_instance_->InitAsDefaultInstance();
  DisConnectionRequest::default_instance_->InitAsDefaultInstance();
  DisConnectionResponse::default_instance_->InitAsDefaultInstance();
  HeartbeatRequest::default_instance_->InitAsDefaultInstance();
  HeartbeatResponse::default_instance_->InitAsDefaultInstance();
  ServerInfo::default_instance_->InitAsDefaultInstance();
  AddConnectionRequest::default_instance_->InitAsDefaultInstance();
  AddConnectionResponse::default_instance_->InitAsDefaultInstance();
  SessionDisConnectReq::default_instance_->InitAsDefaultInstance();
  SessionDisConnectResp::default_instance_->InitAsDefaultInstance();
  UpdateServerInfo::default_instance_->InitAsDefaultInstance();
  AddSessionIP::default_instance_->InitAsDefaultInstance();
  SessionAccountName::default_instance_->InitAsDefaultInstance();
  UpdateRoomInfo::default_instance_->InitAsDefaultInstance();
  UpdateSessionConn::default_instance_->InitAsDefaultInstance();
  UpdateServerPersons::default_instance_->InitAsDefaultInstance();
  NotifyOnConnection::default_instance_->InitAsDefaultInstance();
  ReloadConfigForm::default_instance_->InitAsDefaultInstance();
  ResetPlayerData::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_server_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_server_2eproto {
  StaticDescriptorInitializer_server_2eproto() {
    protobuf_AddDesc_server_2eproto();
  }
} static_descriptor_initializer_server_2eproto_;
const ::google::protobuf::EnumDescriptor* RoomStatus_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoomStatus_descriptor_;
}
bool RoomStatus_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HandshakeRequest::kServerNameFieldNumber;
const int HandshakeRequest::kServerIdFieldNumber;
const int HandshakeRequest::kServerIpFieldNumber;
const int HandshakeRequest::kServerPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HandshakeRequest::HandshakeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.HandshakeRequest)
}

void HandshakeRequest::InitAsDefaultInstance() {
}

HandshakeRequest::HandshakeRequest(const HandshakeRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.HandshakeRequest)
}

void HandshakeRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  server_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_id_ = 0u;
  server_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_port_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HandshakeRequest::~HandshakeRequest() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.HandshakeRequest)
  SharedDtor();
}

void HandshakeRequest::SharedDtor() {
  server_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void HandshakeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HandshakeRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HandshakeRequest_descriptor_;
}

const HandshakeRequest& HandshakeRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2eproto();
  return *default_instance_;
}

HandshakeRequest* HandshakeRequest::default_instance_ = NULL;

HandshakeRequest* HandshakeRequest::New(::google::protobuf::Arena* arena) const {
  HandshakeRequest* n = new HandshakeRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HandshakeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.HandshakeRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(HandshakeRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<HandshakeRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 15u) {
    ZR_(server_id_, server_port_);
    if (has_server_name()) {
      server_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_server_ip()) {
      server_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool HandshakeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.HandshakeRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string server_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->server_name().data(), this->server_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fogs.proto.msg.HandshakeRequest.server_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_server_id;
        break;
      }

      // optional uint32 server_id = 2;
      case 2: {
        if (tag == 16) {
         parse_server_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_id_)));
          set_has_server_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_server_ip;
        break;
      }

      // optional string server_ip = 3;
      case 3: {
        if (tag == 26) {
         parse_server_ip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_ip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->server_ip().data(), this->server_ip().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fogs.proto.msg.HandshakeRequest.server_ip");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_server_port;
        break;
      }

      // optional uint32 server_port = 4;
      case 4: {
        if (tag == 32) {
         parse_server_port:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_port_)));
          set_has_server_port();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.HandshakeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.HandshakeRequest)
  return false;
#undef DO_
}

void HandshakeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.HandshakeRequest)
  // optional string server_name = 1;
  if (has_server_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->server_name().data(), this->server_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fogs.proto.msg.HandshakeRequest.server_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->server_name(), output);
  }

  // optional uint32 server_id = 2;
  if (has_server_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->server_id(), output);
  }

  // optional string server_ip = 3;
  if (has_server_ip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->server_ip().data(), this->server_ip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fogs.proto.msg.HandshakeRequest.server_ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->server_ip(), output);
  }

  // optional uint32 server_port = 4;
  if (has_server_port()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->server_port(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.HandshakeRequest)
}

::google::protobuf::uint8* HandshakeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.HandshakeRequest)
  // optional string server_name = 1;
  if (has_server_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->server_name().data(), this->server_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fogs.proto.msg.HandshakeRequest.server_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->server_name(), target);
  }

  // optional uint32 server_id = 2;
  if (has_server_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->server_id(), target);
  }

  // optional string server_ip = 3;
  if (has_server_ip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->server_ip().data(), this->server_ip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fogs.proto.msg.HandshakeRequest.server_ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->server_ip(), target);
  }

  // optional uint32 server_port = 4;
  if (has_server_port()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->server_port(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.HandshakeRequest)
  return target;
}

int HandshakeRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.HandshakeRequest)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 15u) {
    // optional string server_name = 1;
    if (has_server_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->server_name());
    }

    // optional uint32 server_id = 2;
    if (has_server_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->server_id());
    }

    // optional string server_ip = 3;
    if (has_server_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->server_ip());
    }

    // optional uint32 server_port = 4;
    if (has_server_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->server_port());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HandshakeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.HandshakeRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const HandshakeRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const HandshakeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.HandshakeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.HandshakeRequest)
    MergeFrom(*source);
  }
}

void HandshakeRequest::MergeFrom(const HandshakeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.HandshakeRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_server_name()) {
      set_has_server_name();
      server_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_name_);
    }
    if (from.has_server_id()) {
      set_server_id(from.server_id());
    }
    if (from.has_server_ip()) {
      set_has_server_ip();
      server_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_ip_);
    }
    if (from.has_server_port()) {
      set_server_port(from.server_port());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void HandshakeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.HandshakeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HandshakeRequest::CopyFrom(const HandshakeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.HandshakeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HandshakeRequest::IsInitialized() const {

  return true;
}

void HandshakeRequest::Swap(HandshakeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HandshakeRequest::InternalSwap(HandshakeRequest* other) {
  server_name_.Swap(&other->server_name_);
  std::swap(server_id_, other->server_id_);
  server_ip_.Swap(&other->server_ip_);
  std::swap(server_port_, other->server_port_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HandshakeRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HandshakeRequest_descriptor_;
  metadata.reflection = HandshakeRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HandshakeRequest

// optional string server_name = 1;
bool HandshakeRequest::has_server_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void HandshakeRequest::set_has_server_name() {
  _has_bits_[0] |= 0x00000001u;
}
void HandshakeRequest::clear_has_server_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void HandshakeRequest::clear_server_name() {
  server_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_server_name();
}
 const ::std::string& HandshakeRequest::server_name() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.HandshakeRequest.server_name)
  return server_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HandshakeRequest::set_server_name(const ::std::string& value) {
  set_has_server_name();
  server_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fogs.proto.msg.HandshakeRequest.server_name)
}
 void HandshakeRequest::set_server_name(const char* value) {
  set_has_server_name();
  server_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fogs.proto.msg.HandshakeRequest.server_name)
}
 void HandshakeRequest::set_server_name(const char* value, size_t size) {
  set_has_server_name();
  server_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fogs.proto.msg.HandshakeRequest.server_name)
}
 ::std::string* HandshakeRequest::mutable_server_name() {
  set_has_server_name();
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.HandshakeRequest.server_name)
  return server_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* HandshakeRequest::release_server_name() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.HandshakeRequest.server_name)
  clear_has_server_name();
  return server_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HandshakeRequest::set_allocated_server_name(::std::string* server_name) {
  if (server_name != NULL) {
    set_has_server_name();
  } else {
    clear_has_server_name();
  }
  server_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), server_name);
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.HandshakeRequest.server_name)
}

// optional uint32 server_id = 2;
bool HandshakeRequest::has_server_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void HandshakeRequest::set_has_server_id() {
  _has_bits_[0] |= 0x00000002u;
}
void HandshakeRequest::clear_has_server_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void HandshakeRequest::clear_server_id() {
  server_id_ = 0u;
  clear_has_server_id();
}
 ::google::protobuf::uint32 HandshakeRequest::server_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.HandshakeRequest.server_id)
  return server_id_;
}
 void HandshakeRequest::set_server_id(::google::protobuf::uint32 value) {
  set_has_server_id();
  server_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.HandshakeRequest.server_id)
}

// optional string server_ip = 3;
bool HandshakeRequest::has_server_ip() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void HandshakeRequest::set_has_server_ip() {
  _has_bits_[0] |= 0x00000004u;
}
void HandshakeRequest::clear_has_server_ip() {
  _has_bits_[0] &= ~0x00000004u;
}
void HandshakeRequest::clear_server_ip() {
  server_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_server_ip();
}
 const ::std::string& HandshakeRequest::server_ip() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.HandshakeRequest.server_ip)
  return server_ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HandshakeRequest::set_server_ip(const ::std::string& value) {
  set_has_server_ip();
  server_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fogs.proto.msg.HandshakeRequest.server_ip)
}
 void HandshakeRequest::set_server_ip(const char* value) {
  set_has_server_ip();
  server_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fogs.proto.msg.HandshakeRequest.server_ip)
}
 void HandshakeRequest::set_server_ip(const char* value, size_t size) {
  set_has_server_ip();
  server_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fogs.proto.msg.HandshakeRequest.server_ip)
}
 ::std::string* HandshakeRequest::mutable_server_ip() {
  set_has_server_ip();
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.HandshakeRequest.server_ip)
  return server_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* HandshakeRequest::release_server_ip() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.HandshakeRequest.server_ip)
  clear_has_server_ip();
  return server_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HandshakeRequest::set_allocated_server_ip(::std::string* server_ip) {
  if (server_ip != NULL) {
    set_has_server_ip();
  } else {
    clear_has_server_ip();
  }
  server_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), server_ip);
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.HandshakeRequest.server_ip)
}

// optional uint32 server_port = 4;
bool HandshakeRequest::has_server_port() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void HandshakeRequest::set_has_server_port() {
  _has_bits_[0] |= 0x00000008u;
}
void HandshakeRequest::clear_has_server_port() {
  _has_bits_[0] &= ~0x00000008u;
}
void HandshakeRequest::clear_server_port() {
  server_port_ = 0u;
  clear_has_server_port();
}
 ::google::protobuf::uint32 HandshakeRequest::server_port() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.HandshakeRequest.server_port)
  return server_port_;
}
 void HandshakeRequest::set_server_port(::google::protobuf::uint32 value) {
  set_has_server_port();
  server_port_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.HandshakeRequest.server_port)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HandshakeResponse::kResultFieldNumber;
const int HandshakeResponse::kServerNameFieldNumber;
const int HandshakeResponse::kServerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HandshakeResponse::HandshakeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.HandshakeResponse)
}

void HandshakeResponse::InitAsDefaultInstance() {
}

HandshakeResponse::HandshakeResponse(const HandshakeResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.HandshakeResponse)
}

void HandshakeResponse::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  result_ = 0;
  server_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HandshakeResponse::~HandshakeResponse() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.HandshakeResponse)
  SharedDtor();
}

void HandshakeResponse::SharedDtor() {
  server_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void HandshakeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HandshakeResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HandshakeResponse_descriptor_;
}

const HandshakeResponse& HandshakeResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2eproto();
  return *default_instance_;
}

HandshakeResponse* HandshakeResponse::default_instance_ = NULL;

HandshakeResponse* HandshakeResponse::New(::google::protobuf::Arena* arena) const {
  HandshakeResponse* n = new HandshakeResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HandshakeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.HandshakeResponse)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(HandshakeResponse, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<HandshakeResponse*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 7u) {
    ZR_(result_, server_id_);
    if (has_server_name()) {
      server_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool HandshakeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.HandshakeResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_server_name;
        break;
      }

      // optional string server_name = 2;
      case 2: {
        if (tag == 18) {
         parse_server_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->server_name().data(), this->server_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fogs.proto.msg.HandshakeResponse.server_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_server_id;
        break;
      }

      // optional uint32 server_id = 3;
      case 3: {
        if (tag == 24) {
         parse_server_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_id_)));
          set_has_server_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.HandshakeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.HandshakeResponse)
  return false;
#undef DO_
}

void HandshakeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.HandshakeResponse)
  // optional int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional string server_name = 2;
  if (has_server_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->server_name().data(), this->server_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fogs.proto.msg.HandshakeResponse.server_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->server_name(), output);
  }

  // optional uint32 server_id = 3;
  if (has_server_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->server_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.HandshakeResponse)
}

::google::protobuf::uint8* HandshakeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.HandshakeResponse)
  // optional int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional string server_name = 2;
  if (has_server_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->server_name().data(), this->server_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fogs.proto.msg.HandshakeResponse.server_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->server_name(), target);
  }

  // optional uint32 server_id = 3;
  if (has_server_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->server_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.HandshakeResponse)
  return target;
}

int HandshakeResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.HandshakeResponse)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional string server_name = 2;
    if (has_server_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->server_name());
    }

    // optional uint32 server_id = 3;
    if (has_server_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->server_id());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HandshakeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.HandshakeResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const HandshakeResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const HandshakeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.HandshakeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.HandshakeResponse)
    MergeFrom(*source);
  }
}

void HandshakeResponse::MergeFrom(const HandshakeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.HandshakeResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_server_name()) {
      set_has_server_name();
      server_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_name_);
    }
    if (from.has_server_id()) {
      set_server_id(from.server_id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void HandshakeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.HandshakeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HandshakeResponse::CopyFrom(const HandshakeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.HandshakeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HandshakeResponse::IsInitialized() const {

  return true;
}

void HandshakeResponse::Swap(HandshakeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HandshakeResponse::InternalSwap(HandshakeResponse* other) {
  std::swap(result_, other->result_);
  server_name_.Swap(&other->server_name_);
  std::swap(server_id_, other->server_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HandshakeResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HandshakeResponse_descriptor_;
  metadata.reflection = HandshakeResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HandshakeResponse

// optional int32 result = 1;
bool HandshakeResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void HandshakeResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void HandshakeResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void HandshakeResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
 ::google::protobuf::int32 HandshakeResponse::result() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.HandshakeResponse.result)
  return result_;
}
 void HandshakeResponse::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.HandshakeResponse.result)
}

// optional string server_name = 2;
bool HandshakeResponse::has_server_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void HandshakeResponse::set_has_server_name() {
  _has_bits_[0] |= 0x00000002u;
}
void HandshakeResponse::clear_has_server_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void HandshakeResponse::clear_server_name() {
  server_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_server_name();
}
 const ::std::string& HandshakeResponse::server_name() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.HandshakeResponse.server_name)
  return server_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HandshakeResponse::set_server_name(const ::std::string& value) {
  set_has_server_name();
  server_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fogs.proto.msg.HandshakeResponse.server_name)
}
 void HandshakeResponse::set_server_name(const char* value) {
  set_has_server_name();
  server_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fogs.proto.msg.HandshakeResponse.server_name)
}
 void HandshakeResponse::set_server_name(const char* value, size_t size) {
  set_has_server_name();
  server_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fogs.proto.msg.HandshakeResponse.server_name)
}
 ::std::string* HandshakeResponse::mutable_server_name() {
  set_has_server_name();
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.HandshakeResponse.server_name)
  return server_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* HandshakeResponse::release_server_name() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.HandshakeResponse.server_name)
  clear_has_server_name();
  return server_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HandshakeResponse::set_allocated_server_name(::std::string* server_name) {
  if (server_name != NULL) {
    set_has_server_name();
  } else {
    clear_has_server_name();
  }
  server_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), server_name);
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.HandshakeResponse.server_name)
}

// optional uint32 server_id = 3;
bool HandshakeResponse::has_server_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void HandshakeResponse::set_has_server_id() {
  _has_bits_[0] |= 0x00000004u;
}
void HandshakeResponse::clear_has_server_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void HandshakeResponse::clear_server_id() {
  server_id_ = 0u;
  clear_has_server_id();
}
 ::google::protobuf::uint32 HandshakeResponse::server_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.HandshakeResponse.server_id)
  return server_id_;
}
 void HandshakeResponse::set_server_id(::google::protobuf::uint32 value) {
  set_has_server_id();
  server_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.HandshakeResponse.server_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DisConnectionRequest::kServerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DisConnectionRequest::DisConnectionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.DisConnectionRequest)
}

void DisConnectionRequest::InitAsDefaultInstance() {
}

DisConnectionRequest::DisConnectionRequest(const DisConnectionRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.DisConnectionRequest)
}

void DisConnectionRequest::SharedCtor() {
  _cached_size_ = 0;
  server_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DisConnectionRequest::~DisConnectionRequest() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.DisConnectionRequest)
  SharedDtor();
}

void DisConnectionRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DisConnectionRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DisConnectionRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DisConnectionRequest_descriptor_;
}

const DisConnectionRequest& DisConnectionRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2eproto();
  return *default_instance_;
}

DisConnectionRequest* DisConnectionRequest::default_instance_ = NULL;

DisConnectionRequest* DisConnectionRequest::New(::google::protobuf::Arena* arena) const {
  DisConnectionRequest* n = new DisConnectionRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DisConnectionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.DisConnectionRequest)
  server_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DisConnectionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.DisConnectionRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 server_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_id_)));
          set_has_server_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.DisConnectionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.DisConnectionRequest)
  return false;
#undef DO_
}

void DisConnectionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.DisConnectionRequest)
  // optional uint32 server_id = 1;
  if (has_server_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->server_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.DisConnectionRequest)
}

::google::protobuf::uint8* DisConnectionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.DisConnectionRequest)
  // optional uint32 server_id = 1;
  if (has_server_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->server_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.DisConnectionRequest)
  return target;
}

int DisConnectionRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.DisConnectionRequest)
  int total_size = 0;

  // optional uint32 server_id = 1;
  if (has_server_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->server_id());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DisConnectionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.DisConnectionRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DisConnectionRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DisConnectionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.DisConnectionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.DisConnectionRequest)
    MergeFrom(*source);
  }
}

void DisConnectionRequest::MergeFrom(const DisConnectionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.DisConnectionRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_server_id()) {
      set_server_id(from.server_id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void DisConnectionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.DisConnectionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DisConnectionRequest::CopyFrom(const DisConnectionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.DisConnectionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisConnectionRequest::IsInitialized() const {

  return true;
}

void DisConnectionRequest::Swap(DisConnectionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DisConnectionRequest::InternalSwap(DisConnectionRequest* other) {
  std::swap(server_id_, other->server_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DisConnectionRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DisConnectionRequest_descriptor_;
  metadata.reflection = DisConnectionRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DisConnectionRequest

// optional uint32 server_id = 1;
bool DisConnectionRequest::has_server_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DisConnectionRequest::set_has_server_id() {
  _has_bits_[0] |= 0x00000001u;
}
void DisConnectionRequest::clear_has_server_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void DisConnectionRequest::clear_server_id() {
  server_id_ = 0u;
  clear_has_server_id();
}
 ::google::protobuf::uint32 DisConnectionRequest::server_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.DisConnectionRequest.server_id)
  return server_id_;
}
 void DisConnectionRequest::set_server_id(::google::protobuf::uint32 value) {
  set_has_server_id();
  server_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.DisConnectionRequest.server_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DisConnectionResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DisConnectionResponse::DisConnectionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.DisConnectionResponse)
}

void DisConnectionResponse::InitAsDefaultInstance() {
}

DisConnectionResponse::DisConnectionResponse(const DisConnectionResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.DisConnectionResponse)
}

void DisConnectionResponse::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DisConnectionResponse::~DisConnectionResponse() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.DisConnectionResponse)
  SharedDtor();
}

void DisConnectionResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DisConnectionResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DisConnectionResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DisConnectionResponse_descriptor_;
}

const DisConnectionResponse& DisConnectionResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2eproto();
  return *default_instance_;
}

DisConnectionResponse* DisConnectionResponse::default_instance_ = NULL;

DisConnectionResponse* DisConnectionResponse::New(::google::protobuf::Arena* arena) const {
  DisConnectionResponse* n = new DisConnectionResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DisConnectionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.DisConnectionResponse)
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DisConnectionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.DisConnectionResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.DisConnectionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.DisConnectionResponse)
  return false;
#undef DO_
}

void DisConnectionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.DisConnectionResponse)
  // optional int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.DisConnectionResponse)
}

::google::protobuf::uint8* DisConnectionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.DisConnectionResponse)
  // optional int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.DisConnectionResponse)
  return target;
}

int DisConnectionResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.DisConnectionResponse)
  int total_size = 0;

  // optional int32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DisConnectionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.DisConnectionResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DisConnectionResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DisConnectionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.DisConnectionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.DisConnectionResponse)
    MergeFrom(*source);
  }
}

void DisConnectionResponse::MergeFrom(const DisConnectionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.DisConnectionResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void DisConnectionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.DisConnectionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DisConnectionResponse::CopyFrom(const DisConnectionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.DisConnectionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisConnectionResponse::IsInitialized() const {

  return true;
}

void DisConnectionResponse::Swap(DisConnectionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DisConnectionResponse::InternalSwap(DisConnectionResponse* other) {
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DisConnectionResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DisConnectionResponse_descriptor_;
  metadata.reflection = DisConnectionResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DisConnectionResponse

// optional int32 result = 1;
bool DisConnectionResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DisConnectionResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void DisConnectionResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void DisConnectionResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
 ::google::protobuf::int32 DisConnectionResponse::result() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.DisConnectionResponse.result)
  return result_;
}
 void DisConnectionResponse::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.DisConnectionResponse.result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HeartbeatRequest::HeartbeatRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.HeartbeatRequest)
}

void HeartbeatRequest::InitAsDefaultInstance() {
}

HeartbeatRequest::HeartbeatRequest(const HeartbeatRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.HeartbeatRequest)
}

void HeartbeatRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HeartbeatRequest::~HeartbeatRequest() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.HeartbeatRequest)
  SharedDtor();
}

void HeartbeatRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HeartbeatRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeartbeatRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HeartbeatRequest_descriptor_;
}

const HeartbeatRequest& HeartbeatRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2eproto();
  return *default_instance_;
}

HeartbeatRequest* HeartbeatRequest::default_instance_ = NULL;

HeartbeatRequest* HeartbeatRequest::New(::google::protobuf::Arena* arena) const {
  HeartbeatRequest* n = new HeartbeatRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HeartbeatRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.HeartbeatRequest)
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool HeartbeatRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.HeartbeatRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.HeartbeatRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.HeartbeatRequest)
  return false;
#undef DO_
}

void HeartbeatRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.HeartbeatRequest)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.HeartbeatRequest)
}

::google::protobuf::uint8* HeartbeatRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.HeartbeatRequest)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.HeartbeatRequest)
  return target;
}

int HeartbeatRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.HeartbeatRequest)
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeartbeatRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.HeartbeatRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const HeartbeatRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const HeartbeatRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.HeartbeatRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.HeartbeatRequest)
    MergeFrom(*source);
  }
}

void HeartbeatRequest::MergeFrom(const HeartbeatRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.HeartbeatRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void HeartbeatRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.HeartbeatRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeartbeatRequest::CopyFrom(const HeartbeatRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.HeartbeatRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeartbeatRequest::IsInitialized() const {

  return true;
}

void HeartbeatRequest::Swap(HeartbeatRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HeartbeatRequest::InternalSwap(HeartbeatRequest* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HeartbeatRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HeartbeatRequest_descriptor_;
  metadata.reflection = HeartbeatRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HeartbeatRequest

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HeartbeatResponse::HeartbeatResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.HeartbeatResponse)
}

void HeartbeatResponse::InitAsDefaultInstance() {
}

HeartbeatResponse::HeartbeatResponse(const HeartbeatResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.HeartbeatResponse)
}

void HeartbeatResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HeartbeatResponse::~HeartbeatResponse() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.HeartbeatResponse)
  SharedDtor();
}

void HeartbeatResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HeartbeatResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeartbeatResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HeartbeatResponse_descriptor_;
}

const HeartbeatResponse& HeartbeatResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2eproto();
  return *default_instance_;
}

HeartbeatResponse* HeartbeatResponse::default_instance_ = NULL;

HeartbeatResponse* HeartbeatResponse::New(::google::protobuf::Arena* arena) const {
  HeartbeatResponse* n = new HeartbeatResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HeartbeatResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.HeartbeatResponse)
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool HeartbeatResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.HeartbeatResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.HeartbeatResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.HeartbeatResponse)
  return false;
#undef DO_
}

void HeartbeatResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.HeartbeatResponse)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.HeartbeatResponse)
}

::google::protobuf::uint8* HeartbeatResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.HeartbeatResponse)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.HeartbeatResponse)
  return target;
}

int HeartbeatResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.HeartbeatResponse)
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeartbeatResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.HeartbeatResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const HeartbeatResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const HeartbeatResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.HeartbeatResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.HeartbeatResponse)
    MergeFrom(*source);
  }
}

void HeartbeatResponse::MergeFrom(const HeartbeatResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.HeartbeatResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void HeartbeatResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.HeartbeatResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeartbeatResponse::CopyFrom(const HeartbeatResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.HeartbeatResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeartbeatResponse::IsInitialized() const {

  return true;
}

void HeartbeatResponse::Swap(HeartbeatResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HeartbeatResponse::InternalSwap(HeartbeatResponse* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HeartbeatResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HeartbeatResponse_descriptor_;
  metadata.reflection = HeartbeatResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HeartbeatResponse

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerInfo::kServerIdFieldNumber;
const int ServerInfo::kServerIpFieldNumber;
const int ServerInfo::kServerPortFieldNumber;
const int ServerInfo::kServerPersonsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerInfo::ServerInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.ServerInfo)
}

void ServerInfo::InitAsDefaultInstance() {
}

ServerInfo::ServerInfo(const ServerInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.ServerInfo)
}

void ServerInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  server_id_ = 0u;
  server_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_port_ = 0u;
  server_persons_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ServerInfo::~ServerInfo() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.ServerInfo)
  SharedDtor();
}

void ServerInfo::SharedDtor() {
  server_ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ServerInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServerInfo_descriptor_;
}

const ServerInfo& ServerInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2eproto();
  return *default_instance_;
}

ServerInfo* ServerInfo::default_instance_ = NULL;

ServerInfo* ServerInfo::New(::google::protobuf::Arena* arena) const {
  ServerInfo* n = new ServerInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.ServerInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ServerInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ServerInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 15u) {
    ZR_(server_id_, server_persons_);
    if (has_server_ip()) {
      server_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ServerInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.ServerInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 server_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_id_)));
          set_has_server_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_server_ip;
        break;
      }

      // optional string server_ip = 2;
      case 2: {
        if (tag == 18) {
         parse_server_ip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_ip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->server_ip().data(), this->server_ip().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fogs.proto.msg.ServerInfo.server_ip");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_server_port;
        break;
      }

      // optional uint32 server_port = 3;
      case 3: {
        if (tag == 24) {
         parse_server_port:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_port_)));
          set_has_server_port();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_server_persons;
        break;
      }

      // optional uint32 server_persons = 4;
      case 4: {
        if (tag == 32) {
         parse_server_persons:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_persons_)));
          set_has_server_persons();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.ServerInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.ServerInfo)
  return false;
#undef DO_
}

void ServerInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.ServerInfo)
  // optional uint32 server_id = 1;
  if (has_server_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->server_id(), output);
  }

  // optional string server_ip = 2;
  if (has_server_ip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->server_ip().data(), this->server_ip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fogs.proto.msg.ServerInfo.server_ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->server_ip(), output);
  }

  // optional uint32 server_port = 3;
  if (has_server_port()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->server_port(), output);
  }

  // optional uint32 server_persons = 4;
  if (has_server_persons()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->server_persons(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.ServerInfo)
}

::google::protobuf::uint8* ServerInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.ServerInfo)
  // optional uint32 server_id = 1;
  if (has_server_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->server_id(), target);
  }

  // optional string server_ip = 2;
  if (has_server_ip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->server_ip().data(), this->server_ip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fogs.proto.msg.ServerInfo.server_ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->server_ip(), target);
  }

  // optional uint32 server_port = 3;
  if (has_server_port()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->server_port(), target);
  }

  // optional uint32 server_persons = 4;
  if (has_server_persons()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->server_persons(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.ServerInfo)
  return target;
}

int ServerInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.ServerInfo)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 15u) {
    // optional uint32 server_id = 1;
    if (has_server_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->server_id());
    }

    // optional string server_ip = 2;
    if (has_server_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->server_ip());
    }

    // optional uint32 server_port = 3;
    if (has_server_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->server_port());
    }

    // optional uint32 server_persons = 4;
    if (has_server_persons()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->server_persons());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.ServerInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ServerInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.ServerInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.ServerInfo)
    MergeFrom(*source);
  }
}

void ServerInfo::MergeFrom(const ServerInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.ServerInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_server_id()) {
      set_server_id(from.server_id());
    }
    if (from.has_server_ip()) {
      set_has_server_ip();
      server_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_ip_);
    }
    if (from.has_server_port()) {
      set_server_port(from.server_port());
    }
    if (from.has_server_persons()) {
      set_server_persons(from.server_persons());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ServerInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.ServerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerInfo::CopyFrom(const ServerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.ServerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerInfo::IsInitialized() const {

  return true;
}

void ServerInfo::Swap(ServerInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerInfo::InternalSwap(ServerInfo* other) {
  std::swap(server_id_, other->server_id_);
  server_ip_.Swap(&other->server_ip_);
  std::swap(server_port_, other->server_port_);
  std::swap(server_persons_, other->server_persons_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ServerInfo_descriptor_;
  metadata.reflection = ServerInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerInfo

// optional uint32 server_id = 1;
bool ServerInfo::has_server_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ServerInfo::set_has_server_id() {
  _has_bits_[0] |= 0x00000001u;
}
void ServerInfo::clear_has_server_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void ServerInfo::clear_server_id() {
  server_id_ = 0u;
  clear_has_server_id();
}
 ::google::protobuf::uint32 ServerInfo::server_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.ServerInfo.server_id)
  return server_id_;
}
 void ServerInfo::set_server_id(::google::protobuf::uint32 value) {
  set_has_server_id();
  server_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.ServerInfo.server_id)
}

// optional string server_ip = 2;
bool ServerInfo::has_server_ip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ServerInfo::set_has_server_ip() {
  _has_bits_[0] |= 0x00000002u;
}
void ServerInfo::clear_has_server_ip() {
  _has_bits_[0] &= ~0x00000002u;
}
void ServerInfo::clear_server_ip() {
  server_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_server_ip();
}
 const ::std::string& ServerInfo::server_ip() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.ServerInfo.server_ip)
  return server_ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ServerInfo::set_server_ip(const ::std::string& value) {
  set_has_server_ip();
  server_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fogs.proto.msg.ServerInfo.server_ip)
}
 void ServerInfo::set_server_ip(const char* value) {
  set_has_server_ip();
  server_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fogs.proto.msg.ServerInfo.server_ip)
}
 void ServerInfo::set_server_ip(const char* value, size_t size) {
  set_has_server_ip();
  server_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fogs.proto.msg.ServerInfo.server_ip)
}
 ::std::string* ServerInfo::mutable_server_ip() {
  set_has_server_ip();
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.ServerInfo.server_ip)
  return server_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ServerInfo::release_server_ip() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.ServerInfo.server_ip)
  clear_has_server_ip();
  return server_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ServerInfo::set_allocated_server_ip(::std::string* server_ip) {
  if (server_ip != NULL) {
    set_has_server_ip();
  } else {
    clear_has_server_ip();
  }
  server_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), server_ip);
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.ServerInfo.server_ip)
}

// optional uint32 server_port = 3;
bool ServerInfo::has_server_port() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ServerInfo::set_has_server_port() {
  _has_bits_[0] |= 0x00000004u;
}
void ServerInfo::clear_has_server_port() {
  _has_bits_[0] &= ~0x00000004u;
}
void ServerInfo::clear_server_port() {
  server_port_ = 0u;
  clear_has_server_port();
}
 ::google::protobuf::uint32 ServerInfo::server_port() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.ServerInfo.server_port)
  return server_port_;
}
 void ServerInfo::set_server_port(::google::protobuf::uint32 value) {
  set_has_server_port();
  server_port_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.ServerInfo.server_port)
}

// optional uint32 server_persons = 4;
bool ServerInfo::has_server_persons() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ServerInfo::set_has_server_persons() {
  _has_bits_[0] |= 0x00000008u;
}
void ServerInfo::clear_has_server_persons() {
  _has_bits_[0] &= ~0x00000008u;
}
void ServerInfo::clear_server_persons() {
  server_persons_ = 0u;
  clear_has_server_persons();
}
 ::google::protobuf::uint32 ServerInfo::server_persons() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.ServerInfo.server_persons)
  return server_persons_;
}
 void ServerInfo::set_server_persons(::google::protobuf::uint32 value) {
  set_has_server_persons();
  server_persons_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.ServerInfo.server_persons)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddConnectionRequest::kServerInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddConnectionRequest::AddConnectionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.AddConnectionRequest)
}

void AddConnectionRequest::InitAsDefaultInstance() {
  server_info_ = const_cast< ::fogs::proto::msg::ServerInfo*>(&::fogs::proto::msg::ServerInfo::default_instance());
}

AddConnectionRequest::AddConnectionRequest(const AddConnectionRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.AddConnectionRequest)
}

void AddConnectionRequest::SharedCtor() {
  _cached_size_ = 0;
  server_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AddConnectionRequest::~AddConnectionRequest() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.AddConnectionRequest)
  SharedDtor();
}

void AddConnectionRequest::SharedDtor() {
  if (this != default_instance_) {
    delete server_info_;
  }
}

void AddConnectionRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddConnectionRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AddConnectionRequest_descriptor_;
}

const AddConnectionRequest& AddConnectionRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2eproto();
  return *default_instance_;
}

AddConnectionRequest* AddConnectionRequest::default_instance_ = NULL;

AddConnectionRequest* AddConnectionRequest::New(::google::protobuf::Arena* arena) const {
  AddConnectionRequest* n = new AddConnectionRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddConnectionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.AddConnectionRequest)
  if (has_server_info()) {
    if (server_info_ != NULL) server_info_->::fogs::proto::msg::ServerInfo::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool AddConnectionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.AddConnectionRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .fogs.proto.msg.ServerInfo server_info = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_server_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.AddConnectionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.AddConnectionRequest)
  return false;
#undef DO_
}

void AddConnectionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.AddConnectionRequest)
  // optional .fogs.proto.msg.ServerInfo server_info = 1;
  if (has_server_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->server_info_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.AddConnectionRequest)
}

::google::protobuf::uint8* AddConnectionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.AddConnectionRequest)
  // optional .fogs.proto.msg.ServerInfo server_info = 1;
  if (has_server_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->server_info_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.AddConnectionRequest)
  return target;
}

int AddConnectionRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.AddConnectionRequest)
  int total_size = 0;

  // optional .fogs.proto.msg.ServerInfo server_info = 1;
  if (has_server_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->server_info_);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddConnectionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.AddConnectionRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AddConnectionRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AddConnectionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.AddConnectionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.AddConnectionRequest)
    MergeFrom(*source);
  }
}

void AddConnectionRequest::MergeFrom(const AddConnectionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.AddConnectionRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_server_info()) {
      mutable_server_info()->::fogs::proto::msg::ServerInfo::MergeFrom(from.server_info());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void AddConnectionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.AddConnectionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddConnectionRequest::CopyFrom(const AddConnectionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.AddConnectionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddConnectionRequest::IsInitialized() const {

  return true;
}

void AddConnectionRequest::Swap(AddConnectionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddConnectionRequest::InternalSwap(AddConnectionRequest* other) {
  std::swap(server_info_, other->server_info_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddConnectionRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AddConnectionRequest_descriptor_;
  metadata.reflection = AddConnectionRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddConnectionRequest

// optional .fogs.proto.msg.ServerInfo server_info = 1;
bool AddConnectionRequest::has_server_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AddConnectionRequest::set_has_server_info() {
  _has_bits_[0] |= 0x00000001u;
}
void AddConnectionRequest::clear_has_server_info() {
  _has_bits_[0] &= ~0x00000001u;
}
void AddConnectionRequest::clear_server_info() {
  if (server_info_ != NULL) server_info_->::fogs::proto::msg::ServerInfo::Clear();
  clear_has_server_info();
}
const ::fogs::proto::msg::ServerInfo& AddConnectionRequest::server_info() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.AddConnectionRequest.server_info)
  return server_info_ != NULL ? *server_info_ : *default_instance_->server_info_;
}
::fogs::proto::msg::ServerInfo* AddConnectionRequest::mutable_server_info() {
  set_has_server_info();
  if (server_info_ == NULL) {
    server_info_ = new ::fogs::proto::msg::ServerInfo;
  }
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.AddConnectionRequest.server_info)
  return server_info_;
}
::fogs::proto::msg::ServerInfo* AddConnectionRequest::release_server_info() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.AddConnectionRequest.server_info)
  clear_has_server_info();
  ::fogs::proto::msg::ServerInfo* temp = server_info_;
  server_info_ = NULL;
  return temp;
}
void AddConnectionRequest::set_allocated_server_info(::fogs::proto::msg::ServerInfo* server_info) {
  delete server_info_;
  server_info_ = server_info;
  if (server_info) {
    set_has_server_info();
  } else {
    clear_has_server_info();
  }
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.AddConnectionRequest.server_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddConnectionResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddConnectionResponse::AddConnectionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.AddConnectionResponse)
}

void AddConnectionResponse::InitAsDefaultInstance() {
}

AddConnectionResponse::AddConnectionResponse(const AddConnectionResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.AddConnectionResponse)
}

void AddConnectionResponse::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AddConnectionResponse::~AddConnectionResponse() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.AddConnectionResponse)
  SharedDtor();
}

void AddConnectionResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AddConnectionResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddConnectionResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AddConnectionResponse_descriptor_;
}

const AddConnectionResponse& AddConnectionResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2eproto();
  return *default_instance_;
}

AddConnectionResponse* AddConnectionResponse::default_instance_ = NULL;

AddConnectionResponse* AddConnectionResponse::New(::google::protobuf::Arena* arena) const {
  AddConnectionResponse* n = new AddConnectionResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddConnectionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.AddConnectionResponse)
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool AddConnectionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.AddConnectionResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.AddConnectionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.AddConnectionResponse)
  return false;
#undef DO_
}

void AddConnectionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.AddConnectionResponse)
  // optional int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.AddConnectionResponse)
}

::google::protobuf::uint8* AddConnectionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.AddConnectionResponse)
  // optional int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.AddConnectionResponse)
  return target;
}

int AddConnectionResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.AddConnectionResponse)
  int total_size = 0;

  // optional int32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddConnectionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.AddConnectionResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AddConnectionResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AddConnectionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.AddConnectionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.AddConnectionResponse)
    MergeFrom(*source);
  }
}

void AddConnectionResponse::MergeFrom(const AddConnectionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.AddConnectionResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void AddConnectionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.AddConnectionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddConnectionResponse::CopyFrom(const AddConnectionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.AddConnectionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddConnectionResponse::IsInitialized() const {

  return true;
}

void AddConnectionResponse::Swap(AddConnectionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddConnectionResponse::InternalSwap(AddConnectionResponse* other) {
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddConnectionResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AddConnectionResponse_descriptor_;
  metadata.reflection = AddConnectionResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddConnectionResponse

// optional int32 result = 1;
bool AddConnectionResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AddConnectionResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void AddConnectionResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void AddConnectionResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
 ::google::protobuf::int32 AddConnectionResponse::result() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.AddConnectionResponse.result)
  return result_;
}
 void AddConnectionResponse::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.AddConnectionResponse.result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SessionDisConnectReq::kSessionIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SessionDisConnectReq::SessionDisConnectReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.SessionDisConnectReq)
}

void SessionDisConnectReq::InitAsDefaultInstance() {
}

SessionDisConnectReq::SessionDisConnectReq(const SessionDisConnectReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.SessionDisConnectReq)
}

void SessionDisConnectReq::SharedCtor() {
  _cached_size_ = 0;
  session_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SessionDisConnectReq::~SessionDisConnectReq() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.SessionDisConnectReq)
  SharedDtor();
}

void SessionDisConnectReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SessionDisConnectReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SessionDisConnectReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SessionDisConnectReq_descriptor_;
}

const SessionDisConnectReq& SessionDisConnectReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2eproto();
  return *default_instance_;
}

SessionDisConnectReq* SessionDisConnectReq::default_instance_ = NULL;

SessionDisConnectReq* SessionDisConnectReq::New(::google::protobuf::Arena* arena) const {
  SessionDisConnectReq* n = new SessionDisConnectReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SessionDisConnectReq::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.SessionDisConnectReq)
  session_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SessionDisConnectReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.SessionDisConnectReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 session_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &session_id_)));
          set_has_session_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.SessionDisConnectReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.SessionDisConnectReq)
  return false;
#undef DO_
}

void SessionDisConnectReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.SessionDisConnectReq)
  // optional uint32 session_id = 1;
  if (has_session_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->session_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.SessionDisConnectReq)
}

::google::protobuf::uint8* SessionDisConnectReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.SessionDisConnectReq)
  // optional uint32 session_id = 1;
  if (has_session_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->session_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.SessionDisConnectReq)
  return target;
}

int SessionDisConnectReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.SessionDisConnectReq)
  int total_size = 0;

  // optional uint32 session_id = 1;
  if (has_session_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->session_id());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SessionDisConnectReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.SessionDisConnectReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SessionDisConnectReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SessionDisConnectReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.SessionDisConnectReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.SessionDisConnectReq)
    MergeFrom(*source);
  }
}

void SessionDisConnectReq::MergeFrom(const SessionDisConnectReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.SessionDisConnectReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_session_id()) {
      set_session_id(from.session_id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SessionDisConnectReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.SessionDisConnectReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SessionDisConnectReq::CopyFrom(const SessionDisConnectReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.SessionDisConnectReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SessionDisConnectReq::IsInitialized() const {

  return true;
}

void SessionDisConnectReq::Swap(SessionDisConnectReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SessionDisConnectReq::InternalSwap(SessionDisConnectReq* other) {
  std::swap(session_id_, other->session_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SessionDisConnectReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SessionDisConnectReq_descriptor_;
  metadata.reflection = SessionDisConnectReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SessionDisConnectReq

// optional uint32 session_id = 1;
bool SessionDisConnectReq::has_session_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SessionDisConnectReq::set_has_session_id() {
  _has_bits_[0] |= 0x00000001u;
}
void SessionDisConnectReq::clear_has_session_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void SessionDisConnectReq::clear_session_id() {
  session_id_ = 0u;
  clear_has_session_id();
}
 ::google::protobuf::uint32 SessionDisConnectReq::session_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.SessionDisConnectReq.session_id)
  return session_id_;
}
 void SessionDisConnectReq::set_session_id(::google::protobuf::uint32 value) {
  set_has_session_id();
  session_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.SessionDisConnectReq.session_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SessionDisConnectResp::kResultFieldNumber;
const int SessionDisConnectResp::kSessionIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SessionDisConnectResp::SessionDisConnectResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.SessionDisConnectResp)
}

void SessionDisConnectResp::InitAsDefaultInstance() {
}

SessionDisConnectResp::SessionDisConnectResp(const SessionDisConnectResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.SessionDisConnectResp)
}

void SessionDisConnectResp::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  session_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SessionDisConnectResp::~SessionDisConnectResp() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.SessionDisConnectResp)
  SharedDtor();
}

void SessionDisConnectResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SessionDisConnectResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SessionDisConnectResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SessionDisConnectResp_descriptor_;
}

const SessionDisConnectResp& SessionDisConnectResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2eproto();
  return *default_instance_;
}

SessionDisConnectResp* SessionDisConnectResp::default_instance_ = NULL;

SessionDisConnectResp* SessionDisConnectResp::New(::google::protobuf::Arena* arena) const {
  SessionDisConnectResp* n = new SessionDisConnectResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SessionDisConnectResp::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.SessionDisConnectResp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(SessionDisConnectResp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SessionDisConnectResp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(result_, session_id_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SessionDisConnectResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.SessionDisConnectResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_session_id;
        break;
      }

      // optional uint32 session_id = 2;
      case 2: {
        if (tag == 16) {
         parse_session_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &session_id_)));
          set_has_session_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.SessionDisConnectResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.SessionDisConnectResp)
  return false;
#undef DO_
}

void SessionDisConnectResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.SessionDisConnectResp)
  // optional int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional uint32 session_id = 2;
  if (has_session_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->session_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.SessionDisConnectResp)
}

::google::protobuf::uint8* SessionDisConnectResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.SessionDisConnectResp)
  // optional int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional uint32 session_id = 2;
  if (has_session_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->session_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.SessionDisConnectResp)
  return target;
}

int SessionDisConnectResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.SessionDisConnectResp)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional uint32 session_id = 2;
    if (has_session_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->session_id());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SessionDisConnectResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.SessionDisConnectResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SessionDisConnectResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SessionDisConnectResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.SessionDisConnectResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.SessionDisConnectResp)
    MergeFrom(*source);
  }
}

void SessionDisConnectResp::MergeFrom(const SessionDisConnectResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.SessionDisConnectResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_session_id()) {
      set_session_id(from.session_id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SessionDisConnectResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.SessionDisConnectResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SessionDisConnectResp::CopyFrom(const SessionDisConnectResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.SessionDisConnectResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SessionDisConnectResp::IsInitialized() const {

  return true;
}

void SessionDisConnectResp::Swap(SessionDisConnectResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SessionDisConnectResp::InternalSwap(SessionDisConnectResp* other) {
  std::swap(result_, other->result_);
  std::swap(session_id_, other->session_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SessionDisConnectResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SessionDisConnectResp_descriptor_;
  metadata.reflection = SessionDisConnectResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SessionDisConnectResp

// optional int32 result = 1;
bool SessionDisConnectResp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SessionDisConnectResp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void SessionDisConnectResp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void SessionDisConnectResp::clear_result() {
  result_ = 0;
  clear_has_result();
}
 ::google::protobuf::int32 SessionDisConnectResp::result() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.SessionDisConnectResp.result)
  return result_;
}
 void SessionDisConnectResp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.SessionDisConnectResp.result)
}

// optional uint32 session_id = 2;
bool SessionDisConnectResp::has_session_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SessionDisConnectResp::set_has_session_id() {
  _has_bits_[0] |= 0x00000002u;
}
void SessionDisConnectResp::clear_has_session_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void SessionDisConnectResp::clear_session_id() {
  session_id_ = 0u;
  clear_has_session_id();
}
 ::google::protobuf::uint32 SessionDisConnectResp::session_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.SessionDisConnectResp.session_id)
  return session_id_;
}
 void SessionDisConnectResp::set_session_id(::google::protobuf::uint32 value) {
  set_has_session_id();
  session_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.SessionDisConnectResp.session_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateServerInfo::kServerInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateServerInfo::UpdateServerInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.UpdateServerInfo)
}

void UpdateServerInfo::InitAsDefaultInstance() {
  server_info_ = const_cast< ::fogs::proto::msg::ServerInfo*>(&::fogs::proto::msg::ServerInfo::default_instance());
}

UpdateServerInfo::UpdateServerInfo(const UpdateServerInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.UpdateServerInfo)
}

void UpdateServerInfo::SharedCtor() {
  _cached_size_ = 0;
  server_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpdateServerInfo::~UpdateServerInfo() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.UpdateServerInfo)
  SharedDtor();
}

void UpdateServerInfo::SharedDtor() {
  if (this != default_instance_) {
    delete server_info_;
  }
}

void UpdateServerInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateServerInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateServerInfo_descriptor_;
}

const UpdateServerInfo& UpdateServerInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2eproto();
  return *default_instance_;
}

UpdateServerInfo* UpdateServerInfo::default_instance_ = NULL;

UpdateServerInfo* UpdateServerInfo::New(::google::protobuf::Arena* arena) const {
  UpdateServerInfo* n = new UpdateServerInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateServerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.UpdateServerInfo)
  if (has_server_info()) {
    if (server_info_ != NULL) server_info_->::fogs::proto::msg::ServerInfo::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool UpdateServerInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.UpdateServerInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .fogs.proto.msg.ServerInfo server_info = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_server_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.UpdateServerInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.UpdateServerInfo)
  return false;
#undef DO_
}

void UpdateServerInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.UpdateServerInfo)
  // optional .fogs.proto.msg.ServerInfo server_info = 1;
  if (has_server_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->server_info_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.UpdateServerInfo)
}

::google::protobuf::uint8* UpdateServerInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.UpdateServerInfo)
  // optional .fogs.proto.msg.ServerInfo server_info = 1;
  if (has_server_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->server_info_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.UpdateServerInfo)
  return target;
}

int UpdateServerInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.UpdateServerInfo)
  int total_size = 0;

  // optional .fogs.proto.msg.ServerInfo server_info = 1;
  if (has_server_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->server_info_);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateServerInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.UpdateServerInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const UpdateServerInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateServerInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.UpdateServerInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.UpdateServerInfo)
    MergeFrom(*source);
  }
}

void UpdateServerInfo::MergeFrom(const UpdateServerInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.UpdateServerInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_server_info()) {
      mutable_server_info()->::fogs::proto::msg::ServerInfo::MergeFrom(from.server_info());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void UpdateServerInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.UpdateServerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateServerInfo::CopyFrom(const UpdateServerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.UpdateServerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateServerInfo::IsInitialized() const {

  return true;
}

void UpdateServerInfo::Swap(UpdateServerInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateServerInfo::InternalSwap(UpdateServerInfo* other) {
  std::swap(server_info_, other->server_info_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateServerInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateServerInfo_descriptor_;
  metadata.reflection = UpdateServerInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdateServerInfo

// optional .fogs.proto.msg.ServerInfo server_info = 1;
bool UpdateServerInfo::has_server_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UpdateServerInfo::set_has_server_info() {
  _has_bits_[0] |= 0x00000001u;
}
void UpdateServerInfo::clear_has_server_info() {
  _has_bits_[0] &= ~0x00000001u;
}
void UpdateServerInfo::clear_server_info() {
  if (server_info_ != NULL) server_info_->::fogs::proto::msg::ServerInfo::Clear();
  clear_has_server_info();
}
const ::fogs::proto::msg::ServerInfo& UpdateServerInfo::server_info() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.UpdateServerInfo.server_info)
  return server_info_ != NULL ? *server_info_ : *default_instance_->server_info_;
}
::fogs::proto::msg::ServerInfo* UpdateServerInfo::mutable_server_info() {
  set_has_server_info();
  if (server_info_ == NULL) {
    server_info_ = new ::fogs::proto::msg::ServerInfo;
  }
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.UpdateServerInfo.server_info)
  return server_info_;
}
::fogs::proto::msg::ServerInfo* UpdateServerInfo::release_server_info() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.UpdateServerInfo.server_info)
  clear_has_server_info();
  ::fogs::proto::msg::ServerInfo* temp = server_info_;
  server_info_ = NULL;
  return temp;
}
void UpdateServerInfo::set_allocated_server_info(::fogs::proto::msg::ServerInfo* server_info) {
  delete server_info_;
  server_info_ = server_info;
  if (server_info) {
    set_has_server_info();
  } else {
    clear_has_server_info();
  }
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.UpdateServerInfo.server_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddSessionIP::kSessionIdFieldNumber;
const int AddSessionIP::kIpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddSessionIP::AddSessionIP()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.AddSessionIP)
}

void AddSessionIP::InitAsDefaultInstance() {
}

AddSessionIP::AddSessionIP(const AddSessionIP& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.AddSessionIP)
}

void AddSessionIP::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  session_id_ = 0u;
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AddSessionIP::~AddSessionIP() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.AddSessionIP)
  SharedDtor();
}

void AddSessionIP::SharedDtor() {
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void AddSessionIP::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddSessionIP::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AddSessionIP_descriptor_;
}

const AddSessionIP& AddSessionIP::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2eproto();
  return *default_instance_;
}

AddSessionIP* AddSessionIP::default_instance_ = NULL;

AddSessionIP* AddSessionIP::New(::google::protobuf::Arena* arena) const {
  AddSessionIP* n = new AddSessionIP;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddSessionIP::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.AddSessionIP)
  if (_has_bits_[0 / 32] & 3u) {
    session_id_ = 0u;
    if (has_ip()) {
      ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool AddSessionIP::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.AddSessionIP)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 session_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &session_id_)));
          set_has_session_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ip;
        break;
      }

      // optional string ip = 2;
      case 2: {
        if (tag == 18) {
         parse_ip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ip().data(), this->ip().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fogs.proto.msg.AddSessionIP.ip");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.AddSessionIP)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.AddSessionIP)
  return false;
#undef DO_
}

void AddSessionIP::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.AddSessionIP)
  // optional uint32 session_id = 1;
  if (has_session_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->session_id(), output);
  }

  // optional string ip = 2;
  if (has_ip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fogs.proto.msg.AddSessionIP.ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->ip(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.AddSessionIP)
}

::google::protobuf::uint8* AddSessionIP::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.AddSessionIP)
  // optional uint32 session_id = 1;
  if (has_session_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->session_id(), target);
  }

  // optional string ip = 2;
  if (has_ip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fogs.proto.msg.AddSessionIP.ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->ip(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.AddSessionIP)
  return target;
}

int AddSessionIP::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.AddSessionIP)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 session_id = 1;
    if (has_session_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->session_id());
    }

    // optional string ip = 2;
    if (has_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ip());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddSessionIP::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.AddSessionIP)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AddSessionIP* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AddSessionIP>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.AddSessionIP)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.AddSessionIP)
    MergeFrom(*source);
  }
}

void AddSessionIP::MergeFrom(const AddSessionIP& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.AddSessionIP)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_session_id()) {
      set_session_id(from.session_id());
    }
    if (from.has_ip()) {
      set_has_ip();
      ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void AddSessionIP::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.AddSessionIP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddSessionIP::CopyFrom(const AddSessionIP& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.AddSessionIP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddSessionIP::IsInitialized() const {

  return true;
}

void AddSessionIP::Swap(AddSessionIP* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddSessionIP::InternalSwap(AddSessionIP* other) {
  std::swap(session_id_, other->session_id_);
  ip_.Swap(&other->ip_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddSessionIP::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AddSessionIP_descriptor_;
  metadata.reflection = AddSessionIP_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddSessionIP

// optional uint32 session_id = 1;
bool AddSessionIP::has_session_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AddSessionIP::set_has_session_id() {
  _has_bits_[0] |= 0x00000001u;
}
void AddSessionIP::clear_has_session_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void AddSessionIP::clear_session_id() {
  session_id_ = 0u;
  clear_has_session_id();
}
 ::google::protobuf::uint32 AddSessionIP::session_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.AddSessionIP.session_id)
  return session_id_;
}
 void AddSessionIP::set_session_id(::google::protobuf::uint32 value) {
  set_has_session_id();
  session_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.AddSessionIP.session_id)
}

// optional string ip = 2;
bool AddSessionIP::has_ip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AddSessionIP::set_has_ip() {
  _has_bits_[0] |= 0x00000002u;
}
void AddSessionIP::clear_has_ip() {
  _has_bits_[0] &= ~0x00000002u;
}
void AddSessionIP::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip();
}
 const ::std::string& AddSessionIP::ip() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.AddSessionIP.ip)
  return ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AddSessionIP::set_ip(const ::std::string& value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fogs.proto.msg.AddSessionIP.ip)
}
 void AddSessionIP::set_ip(const char* value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fogs.proto.msg.AddSessionIP.ip)
}
 void AddSessionIP::set_ip(const char* value, size_t size) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fogs.proto.msg.AddSessionIP.ip)
}
 ::std::string* AddSessionIP::mutable_ip() {
  set_has_ip();
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.AddSessionIP.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AddSessionIP::release_ip() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.AddSessionIP.ip)
  clear_has_ip();
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AddSessionIP::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    set_has_ip();
  } else {
    clear_has_ip();
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.AddSessionIP.ip)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SessionAccountName::kUserIdFieldNumber;
const int SessionAccountName::kAccountFieldNumber;
const int SessionAccountName::kNameFieldNumber;
const int SessionAccountName::kIconAddrFieldNumber;
const int SessionAccountName::kShareUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SessionAccountName::SessionAccountName()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.SessionAccountName)
}

void SessionAccountName::InitAsDefaultInstance() {
}

SessionAccountName::SessionAccountName(const SessionAccountName& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.SessionAccountName)
}

void SessionAccountName::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  user_id_ = 0u;
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  share_user_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SessionAccountName::~SessionAccountName() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.SessionAccountName)
  SharedDtor();
}

void SessionAccountName::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void SessionAccountName::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SessionAccountName::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SessionAccountName_descriptor_;
}

const SessionAccountName& SessionAccountName::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2eproto();
  return *default_instance_;
}

SessionAccountName* SessionAccountName::default_instance_ = NULL;

SessionAccountName* SessionAccountName::New(::google::protobuf::Arena* arena) const {
  SessionAccountName* n = new SessionAccountName;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SessionAccountName::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.SessionAccountName)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(SessionAccountName, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SessionAccountName*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31u) {
    ZR_(user_id_, share_user_id_);
    if (has_account()) {
      account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_icon_addr()) {
      icon_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SessionAccountName::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.SessionAccountName)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 user_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
          set_has_user_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_account;
        break;
      }

      // optional string account = 2;
      case 2: {
        if (tag == 18) {
         parse_account:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account().data(), this->account().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fogs.proto.msg.SessionAccountName.account");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_name;
        break;
      }

      // optional string name = 3;
      case 3: {
        if (tag == 26) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fogs.proto.msg.SessionAccountName.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_icon_addr;
        break;
      }

      // optional string icon_addr = 4;
      case 4: {
        if (tag == 34) {
         parse_icon_addr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_icon_addr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->icon_addr().data(), this->icon_addr().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fogs.proto.msg.SessionAccountName.icon_addr");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_share_user_id;
        break;
      }

      // optional uint32 share_user_id = 5;
      case 5: {
        if (tag == 40) {
         parse_share_user_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &share_user_id_)));
          set_has_share_user_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.SessionAccountName)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.SessionAccountName)
  return false;
#undef DO_
}

void SessionAccountName::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.SessionAccountName)
  // optional uint32 user_id = 1;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // optional string account = 2;
  if (has_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fogs.proto.msg.SessionAccountName.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->account(), output);
  }

  // optional string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fogs.proto.msg.SessionAccountName.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // optional string icon_addr = 4;
  if (has_icon_addr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->icon_addr().data(), this->icon_addr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fogs.proto.msg.SessionAccountName.icon_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->icon_addr(), output);
  }

  // optional uint32 share_user_id = 5;
  if (has_share_user_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->share_user_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.SessionAccountName)
}

::google::protobuf::uint8* SessionAccountName::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.SessionAccountName)
  // optional uint32 user_id = 1;
  if (has_user_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // optional string account = 2;
  if (has_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fogs.proto.msg.SessionAccountName.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->account(), target);
  }

  // optional string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fogs.proto.msg.SessionAccountName.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // optional string icon_addr = 4;
  if (has_icon_addr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->icon_addr().data(), this->icon_addr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fogs.proto.msg.SessionAccountName.icon_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->icon_addr(), target);
  }

  // optional uint32 share_user_id = 5;
  if (has_share_user_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->share_user_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.SessionAccountName)
  return target;
}

int SessionAccountName::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.SessionAccountName)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 31u) {
    // optional uint32 user_id = 1;
    if (has_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->user_id());
    }

    // optional string account = 2;
    if (has_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account());
    }

    // optional string name = 3;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string icon_addr = 4;
    if (has_icon_addr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->icon_addr());
    }

    // optional uint32 share_user_id = 5;
    if (has_share_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->share_user_id());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SessionAccountName::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.SessionAccountName)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SessionAccountName* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SessionAccountName>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.SessionAccountName)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.SessionAccountName)
    MergeFrom(*source);
  }
}

void SessionAccountName::MergeFrom(const SessionAccountName& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.SessionAccountName)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_user_id()) {
      set_user_id(from.user_id());
    }
    if (from.has_account()) {
      set_has_account();
      account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_icon_addr()) {
      set_has_icon_addr();
      icon_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.icon_addr_);
    }
    if (from.has_share_user_id()) {
      set_share_user_id(from.share_user_id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SessionAccountName::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.SessionAccountName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SessionAccountName::CopyFrom(const SessionAccountName& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.SessionAccountName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SessionAccountName::IsInitialized() const {

  return true;
}

void SessionAccountName::Swap(SessionAccountName* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SessionAccountName::InternalSwap(SessionAccountName* other) {
  std::swap(user_id_, other->user_id_);
  account_.Swap(&other->account_);
  name_.Swap(&other->name_);
  icon_addr_.Swap(&other->icon_addr_);
  std::swap(share_user_id_, other->share_user_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SessionAccountName::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SessionAccountName_descriptor_;
  metadata.reflection = SessionAccountName_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SessionAccountName

// optional uint32 user_id = 1;
bool SessionAccountName::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SessionAccountName::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
void SessionAccountName::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void SessionAccountName::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
 ::google::protobuf::uint32 SessionAccountName::user_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.SessionAccountName.user_id)
  return user_id_;
}
 void SessionAccountName::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.SessionAccountName.user_id)
}

// optional string account = 2;
bool SessionAccountName::has_account() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SessionAccountName::set_has_account() {
  _has_bits_[0] |= 0x00000002u;
}
void SessionAccountName::clear_has_account() {
  _has_bits_[0] &= ~0x00000002u;
}
void SessionAccountName::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
 const ::std::string& SessionAccountName::account() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.SessionAccountName.account)
  return account_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SessionAccountName::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fogs.proto.msg.SessionAccountName.account)
}
 void SessionAccountName::set_account(const char* value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fogs.proto.msg.SessionAccountName.account)
}
 void SessionAccountName::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fogs.proto.msg.SessionAccountName.account)
}
 ::std::string* SessionAccountName::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.SessionAccountName.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SessionAccountName::release_account() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.SessionAccountName.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SessionAccountName::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.SessionAccountName.account)
}

// optional string name = 3;
bool SessionAccountName::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SessionAccountName::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
void SessionAccountName::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
void SessionAccountName::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& SessionAccountName::name() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.SessionAccountName.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SessionAccountName::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fogs.proto.msg.SessionAccountName.name)
}
 void SessionAccountName::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fogs.proto.msg.SessionAccountName.name)
}
 void SessionAccountName::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fogs.proto.msg.SessionAccountName.name)
}
 ::std::string* SessionAccountName::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.SessionAccountName.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SessionAccountName::release_name() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.SessionAccountName.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SessionAccountName::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.SessionAccountName.name)
}

// optional string icon_addr = 4;
bool SessionAccountName::has_icon_addr() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SessionAccountName::set_has_icon_addr() {
  _has_bits_[0] |= 0x00000008u;
}
void SessionAccountName::clear_has_icon_addr() {
  _has_bits_[0] &= ~0x00000008u;
}
void SessionAccountName::clear_icon_addr() {
  icon_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_icon_addr();
}
 const ::std::string& SessionAccountName::icon_addr() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.SessionAccountName.icon_addr)
  return icon_addr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SessionAccountName::set_icon_addr(const ::std::string& value) {
  set_has_icon_addr();
  icon_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fogs.proto.msg.SessionAccountName.icon_addr)
}
 void SessionAccountName::set_icon_addr(const char* value) {
  set_has_icon_addr();
  icon_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fogs.proto.msg.SessionAccountName.icon_addr)
}
 void SessionAccountName::set_icon_addr(const char* value, size_t size) {
  set_has_icon_addr();
  icon_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fogs.proto.msg.SessionAccountName.icon_addr)
}
 ::std::string* SessionAccountName::mutable_icon_addr() {
  set_has_icon_addr();
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.SessionAccountName.icon_addr)
  return icon_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SessionAccountName::release_icon_addr() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.SessionAccountName.icon_addr)
  clear_has_icon_addr();
  return icon_addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SessionAccountName::set_allocated_icon_addr(::std::string* icon_addr) {
  if (icon_addr != NULL) {
    set_has_icon_addr();
  } else {
    clear_has_icon_addr();
  }
  icon_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), icon_addr);
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.SessionAccountName.icon_addr)
}

// optional uint32 share_user_id = 5;
bool SessionAccountName::has_share_user_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void SessionAccountName::set_has_share_user_id() {
  _has_bits_[0] |= 0x00000010u;
}
void SessionAccountName::clear_has_share_user_id() {
  _has_bits_[0] &= ~0x00000010u;
}
void SessionAccountName::clear_share_user_id() {
  share_user_id_ = 0u;
  clear_has_share_user_id();
}
 ::google::protobuf::uint32 SessionAccountName::share_user_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.SessionAccountName.share_user_id)
  return share_user_id_;
}
 void SessionAccountName::set_share_user_id(::google::protobuf::uint32 value) {
  set_has_share_user_id();
  share_user_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.SessionAccountName.share_user_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateRoomInfo::kRoomIdFieldNumber;
const int UpdateRoomInfo::kServerIdFieldNumber;
const int UpdateRoomInfo::kRoomStarusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateRoomInfo::UpdateRoomInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.UpdateRoomInfo)
}

void UpdateRoomInfo::InitAsDefaultInstance() {
}

UpdateRoomInfo::UpdateRoomInfo(const UpdateRoomInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.UpdateRoomInfo)
}

void UpdateRoomInfo::SharedCtor() {
  _cached_size_ = 0;
  room_id_ = 0u;
  server_id_ = 0u;
  room_starus_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpdateRoomInfo::~UpdateRoomInfo() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.UpdateRoomInfo)
  SharedDtor();
}

void UpdateRoomInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UpdateRoomInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateRoomInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateRoomInfo_descriptor_;
}

const UpdateRoomInfo& UpdateRoomInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2eproto();
  return *default_instance_;
}

UpdateRoomInfo* UpdateRoomInfo::default_instance_ = NULL;

UpdateRoomInfo* UpdateRoomInfo::New(::google::protobuf::Arena* arena) const {
  UpdateRoomInfo* n = new UpdateRoomInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateRoomInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.UpdateRoomInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(UpdateRoomInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<UpdateRoomInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 7u) {
    ZR_(room_id_, server_id_);
    room_starus_ = 1;
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool UpdateRoomInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.UpdateRoomInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 room_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &room_id_)));
          set_has_room_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_server_id;
        break;
      }

      // optional uint32 server_id = 2;
      case 2: {
        if (tag == 16) {
         parse_server_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_id_)));
          set_has_server_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_room_starus;
        break;
      }

      // required .fogs.proto.msg.RoomStatus room_starus = 3;
      case 3: {
        if (tag == 24) {
         parse_room_starus:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::fogs::proto::msg::RoomStatus_IsValid(value)) {
            set_room_starus(static_cast< ::fogs::proto::msg::RoomStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.UpdateRoomInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.UpdateRoomInfo)
  return false;
#undef DO_
}

void UpdateRoomInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.UpdateRoomInfo)
  // optional uint32 room_id = 1;
  if (has_room_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->room_id(), output);
  }

  // optional uint32 server_id = 2;
  if (has_server_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->server_id(), output);
  }

  // required .fogs.proto.msg.RoomStatus room_starus = 3;
  if (has_room_starus()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->room_starus(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.UpdateRoomInfo)
}

::google::protobuf::uint8* UpdateRoomInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.UpdateRoomInfo)
  // optional uint32 room_id = 1;
  if (has_room_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->room_id(), target);
  }

  // optional uint32 server_id = 2;
  if (has_server_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->server_id(), target);
  }

  // required .fogs.proto.msg.RoomStatus room_starus = 3;
  if (has_room_starus()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->room_starus(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.UpdateRoomInfo)
  return target;
}

int UpdateRoomInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.UpdateRoomInfo)
  int total_size = 0;

  // required .fogs.proto.msg.RoomStatus room_starus = 3;
  if (has_room_starus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->room_starus());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 room_id = 1;
    if (has_room_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->room_id());
    }

    // optional uint32 server_id = 2;
    if (has_server_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->server_id());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateRoomInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.UpdateRoomInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const UpdateRoomInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateRoomInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.UpdateRoomInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.UpdateRoomInfo)
    MergeFrom(*source);
  }
}

void UpdateRoomInfo::MergeFrom(const UpdateRoomInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.UpdateRoomInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_room_id()) {
      set_room_id(from.room_id());
    }
    if (from.has_server_id()) {
      set_server_id(from.server_id());
    }
    if (from.has_room_starus()) {
      set_room_starus(from.room_starus());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void UpdateRoomInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.UpdateRoomInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateRoomInfo::CopyFrom(const UpdateRoomInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.UpdateRoomInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateRoomInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;

  return true;
}

void UpdateRoomInfo::Swap(UpdateRoomInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateRoomInfo::InternalSwap(UpdateRoomInfo* other) {
  std::swap(room_id_, other->room_id_);
  std::swap(server_id_, other->server_id_);
  std::swap(room_starus_, other->room_starus_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateRoomInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateRoomInfo_descriptor_;
  metadata.reflection = UpdateRoomInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdateRoomInfo

// optional uint32 room_id = 1;
bool UpdateRoomInfo::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UpdateRoomInfo::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
void UpdateRoomInfo::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void UpdateRoomInfo::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
 ::google::protobuf::uint32 UpdateRoomInfo::room_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.UpdateRoomInfo.room_id)
  return room_id_;
}
 void UpdateRoomInfo::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.UpdateRoomInfo.room_id)
}

// optional uint32 server_id = 2;
bool UpdateRoomInfo::has_server_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void UpdateRoomInfo::set_has_server_id() {
  _has_bits_[0] |= 0x00000002u;
}
void UpdateRoomInfo::clear_has_server_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void UpdateRoomInfo::clear_server_id() {
  server_id_ = 0u;
  clear_has_server_id();
}
 ::google::protobuf::uint32 UpdateRoomInfo::server_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.UpdateRoomInfo.server_id)
  return server_id_;
}
 void UpdateRoomInfo::set_server_id(::google::protobuf::uint32 value) {
  set_has_server_id();
  server_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.UpdateRoomInfo.server_id)
}

// required .fogs.proto.msg.RoomStatus room_starus = 3;
bool UpdateRoomInfo::has_room_starus() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void UpdateRoomInfo::set_has_room_starus() {
  _has_bits_[0] |= 0x00000004u;
}
void UpdateRoomInfo::clear_has_room_starus() {
  _has_bits_[0] &= ~0x00000004u;
}
void UpdateRoomInfo::clear_room_starus() {
  room_starus_ = 1;
  clear_has_room_starus();
}
 ::fogs::proto::msg::RoomStatus UpdateRoomInfo::room_starus() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.UpdateRoomInfo.room_starus)
  return static_cast< ::fogs::proto::msg::RoomStatus >(room_starus_);
}
 void UpdateRoomInfo::set_room_starus(::fogs::proto::msg::RoomStatus value) {
  assert(::fogs::proto::msg::RoomStatus_IsValid(value));
  set_has_room_starus();
  room_starus_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.UpdateRoomInfo.room_starus)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateSessionConn::UpdateSessionConn()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.UpdateSessionConn)
}

void UpdateSessionConn::InitAsDefaultInstance() {
}

UpdateSessionConn::UpdateSessionConn(const UpdateSessionConn& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.UpdateSessionConn)
}

void UpdateSessionConn::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpdateSessionConn::~UpdateSessionConn() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.UpdateSessionConn)
  SharedDtor();
}

void UpdateSessionConn::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UpdateSessionConn::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateSessionConn::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateSessionConn_descriptor_;
}

const UpdateSessionConn& UpdateSessionConn::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2eproto();
  return *default_instance_;
}

UpdateSessionConn* UpdateSessionConn::default_instance_ = NULL;

UpdateSessionConn* UpdateSessionConn::New(::google::protobuf::Arena* arena) const {
  UpdateSessionConn* n = new UpdateSessionConn;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateSessionConn::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.UpdateSessionConn)
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool UpdateSessionConn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.UpdateSessionConn)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.UpdateSessionConn)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.UpdateSessionConn)
  return false;
#undef DO_
}

void UpdateSessionConn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.UpdateSessionConn)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.UpdateSessionConn)
}

::google::protobuf::uint8* UpdateSessionConn::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.UpdateSessionConn)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.UpdateSessionConn)
  return target;
}

int UpdateSessionConn::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.UpdateSessionConn)
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateSessionConn::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.UpdateSessionConn)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const UpdateSessionConn* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateSessionConn>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.UpdateSessionConn)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.UpdateSessionConn)
    MergeFrom(*source);
  }
}

void UpdateSessionConn::MergeFrom(const UpdateSessionConn& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.UpdateSessionConn)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void UpdateSessionConn::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.UpdateSessionConn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateSessionConn::CopyFrom(const UpdateSessionConn& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.UpdateSessionConn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateSessionConn::IsInitialized() const {

  return true;
}

void UpdateSessionConn::Swap(UpdateSessionConn* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateSessionConn::InternalSwap(UpdateSessionConn* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateSessionConn::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateSessionConn_descriptor_;
  metadata.reflection = UpdateSessionConn_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdateSessionConn

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateServerPersons::kServerIdFieldNumber;
const int UpdateServerPersons::kPersonsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateServerPersons::UpdateServerPersons()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.UpdateServerPersons)
}

void UpdateServerPersons::InitAsDefaultInstance() {
}

UpdateServerPersons::UpdateServerPersons(const UpdateServerPersons& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.UpdateServerPersons)
}

void UpdateServerPersons::SharedCtor() {
  _cached_size_ = 0;
  server_id_ = 0u;
  persons_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpdateServerPersons::~UpdateServerPersons() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.UpdateServerPersons)
  SharedDtor();
}

void UpdateServerPersons::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UpdateServerPersons::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateServerPersons::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateServerPersons_descriptor_;
}

const UpdateServerPersons& UpdateServerPersons::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2eproto();
  return *default_instance_;
}

UpdateServerPersons* UpdateServerPersons::default_instance_ = NULL;

UpdateServerPersons* UpdateServerPersons::New(::google::protobuf::Arena* arena) const {
  UpdateServerPersons* n = new UpdateServerPersons;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateServerPersons::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.UpdateServerPersons)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(UpdateServerPersons, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<UpdateServerPersons*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(server_id_, persons_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool UpdateServerPersons::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.UpdateServerPersons)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 server_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_id_)));
          set_has_server_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_persons;
        break;
      }

      // optional uint32 persons = 2;
      case 2: {
        if (tag == 16) {
         parse_persons:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &persons_)));
          set_has_persons();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.UpdateServerPersons)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.UpdateServerPersons)
  return false;
#undef DO_
}

void UpdateServerPersons::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.UpdateServerPersons)
  // optional uint32 server_id = 1;
  if (has_server_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->server_id(), output);
  }

  // optional uint32 persons = 2;
  if (has_persons()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->persons(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.UpdateServerPersons)
}

::google::protobuf::uint8* UpdateServerPersons::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.UpdateServerPersons)
  // optional uint32 server_id = 1;
  if (has_server_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->server_id(), target);
  }

  // optional uint32 persons = 2;
  if (has_persons()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->persons(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.UpdateServerPersons)
  return target;
}

int UpdateServerPersons::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.UpdateServerPersons)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 server_id = 1;
    if (has_server_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->server_id());
    }

    // optional uint32 persons = 2;
    if (has_persons()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->persons());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateServerPersons::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.UpdateServerPersons)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const UpdateServerPersons* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateServerPersons>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.UpdateServerPersons)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.UpdateServerPersons)
    MergeFrom(*source);
  }
}

void UpdateServerPersons::MergeFrom(const UpdateServerPersons& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.UpdateServerPersons)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_server_id()) {
      set_server_id(from.server_id());
    }
    if (from.has_persons()) {
      set_persons(from.persons());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void UpdateServerPersons::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.UpdateServerPersons)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateServerPersons::CopyFrom(const UpdateServerPersons& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.UpdateServerPersons)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateServerPersons::IsInitialized() const {

  return true;
}

void UpdateServerPersons::Swap(UpdateServerPersons* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateServerPersons::InternalSwap(UpdateServerPersons* other) {
  std::swap(server_id_, other->server_id_);
  std::swap(persons_, other->persons_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateServerPersons::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateServerPersons_descriptor_;
  metadata.reflection = UpdateServerPersons_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdateServerPersons

// optional uint32 server_id = 1;
bool UpdateServerPersons::has_server_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UpdateServerPersons::set_has_server_id() {
  _has_bits_[0] |= 0x00000001u;
}
void UpdateServerPersons::clear_has_server_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void UpdateServerPersons::clear_server_id() {
  server_id_ = 0u;
  clear_has_server_id();
}
 ::google::protobuf::uint32 UpdateServerPersons::server_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.UpdateServerPersons.server_id)
  return server_id_;
}
 void UpdateServerPersons::set_server_id(::google::protobuf::uint32 value) {
  set_has_server_id();
  server_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.UpdateServerPersons.server_id)
}

// optional uint32 persons = 2;
bool UpdateServerPersons::has_persons() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void UpdateServerPersons::set_has_persons() {
  _has_bits_[0] |= 0x00000002u;
}
void UpdateServerPersons::clear_has_persons() {
  _has_bits_[0] &= ~0x00000002u;
}
void UpdateServerPersons::clear_persons() {
  persons_ = 0u;
  clear_has_persons();
}
 ::google::protobuf::uint32 UpdateServerPersons::persons() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.UpdateServerPersons.persons)
  return persons_;
}
 void UpdateServerPersons::set_persons(::google::protobuf::uint32 value) {
  set_has_persons();
  persons_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.UpdateServerPersons.persons)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NotifyOnConnection::kServerTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NotifyOnConnection::NotifyOnConnection()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.NotifyOnConnection)
}

void NotifyOnConnection::InitAsDefaultInstance() {
}

NotifyOnConnection::NotifyOnConnection(const NotifyOnConnection& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.NotifyOnConnection)
}

void NotifyOnConnection::SharedCtor() {
  _cached_size_ = 0;
  server_type_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotifyOnConnection::~NotifyOnConnection() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.NotifyOnConnection)
  SharedDtor();
}

void NotifyOnConnection::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NotifyOnConnection::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifyOnConnection::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifyOnConnection_descriptor_;
}

const NotifyOnConnection& NotifyOnConnection::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2eproto();
  return *default_instance_;
}

NotifyOnConnection* NotifyOnConnection::default_instance_ = NULL;

NotifyOnConnection* NotifyOnConnection::New(::google::protobuf::Arena* arena) const {
  NotifyOnConnection* n = new NotifyOnConnection;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NotifyOnConnection::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.NotifyOnConnection)
  server_type_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool NotifyOnConnection::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.NotifyOnConnection)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 server_type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_type_)));
          set_has_server_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.NotifyOnConnection)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.NotifyOnConnection)
  return false;
#undef DO_
}

void NotifyOnConnection::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.NotifyOnConnection)
  // optional uint32 server_type = 1;
  if (has_server_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->server_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.NotifyOnConnection)
}

::google::protobuf::uint8* NotifyOnConnection::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.NotifyOnConnection)
  // optional uint32 server_type = 1;
  if (has_server_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->server_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.NotifyOnConnection)
  return target;
}

int NotifyOnConnection::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.NotifyOnConnection)
  int total_size = 0;

  // optional uint32 server_type = 1;
  if (has_server_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->server_type());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifyOnConnection::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.NotifyOnConnection)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const NotifyOnConnection* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const NotifyOnConnection>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.NotifyOnConnection)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.NotifyOnConnection)
    MergeFrom(*source);
  }
}

void NotifyOnConnection::MergeFrom(const NotifyOnConnection& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.NotifyOnConnection)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_server_type()) {
      set_server_type(from.server_type());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void NotifyOnConnection::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.NotifyOnConnection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyOnConnection::CopyFrom(const NotifyOnConnection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.NotifyOnConnection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyOnConnection::IsInitialized() const {

  return true;
}

void NotifyOnConnection::Swap(NotifyOnConnection* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NotifyOnConnection::InternalSwap(NotifyOnConnection* other) {
  std::swap(server_type_, other->server_type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NotifyOnConnection::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifyOnConnection_descriptor_;
  metadata.reflection = NotifyOnConnection_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NotifyOnConnection

// optional uint32 server_type = 1;
bool NotifyOnConnection::has_server_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void NotifyOnConnection::set_has_server_type() {
  _has_bits_[0] |= 0x00000001u;
}
void NotifyOnConnection::clear_has_server_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void NotifyOnConnection::clear_server_type() {
  server_type_ = 0u;
  clear_has_server_type();
}
 ::google::protobuf::uint32 NotifyOnConnection::server_type() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.NotifyOnConnection.server_type)
  return server_type_;
}
 void NotifyOnConnection::set_server_type(::google::protobuf::uint32 value) {
  set_has_server_type();
  server_type_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.NotifyOnConnection.server_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReloadConfigForm::ReloadConfigForm()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.ReloadConfigForm)
}

void ReloadConfigForm::InitAsDefaultInstance() {
}

ReloadConfigForm::ReloadConfigForm(const ReloadConfigForm& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.ReloadConfigForm)
}

void ReloadConfigForm::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReloadConfigForm::~ReloadConfigForm() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.ReloadConfigForm)
  SharedDtor();
}

void ReloadConfigForm::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ReloadConfigForm::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReloadConfigForm::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReloadConfigForm_descriptor_;
}

const ReloadConfigForm& ReloadConfigForm::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2eproto();
  return *default_instance_;
}

ReloadConfigForm* ReloadConfigForm::default_instance_ = NULL;

ReloadConfigForm* ReloadConfigForm::New(::google::protobuf::Arena* arena) const {
  ReloadConfigForm* n = new ReloadConfigForm;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReloadConfigForm::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.ReloadConfigForm)
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ReloadConfigForm::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.ReloadConfigForm)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.ReloadConfigForm)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.ReloadConfigForm)
  return false;
#undef DO_
}

void ReloadConfigForm::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.ReloadConfigForm)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.ReloadConfigForm)
}

::google::protobuf::uint8* ReloadConfigForm::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.ReloadConfigForm)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.ReloadConfigForm)
  return target;
}

int ReloadConfigForm::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.ReloadConfigForm)
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReloadConfigForm::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.ReloadConfigForm)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ReloadConfigForm* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ReloadConfigForm>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.ReloadConfigForm)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.ReloadConfigForm)
    MergeFrom(*source);
  }
}

void ReloadConfigForm::MergeFrom(const ReloadConfigForm& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.ReloadConfigForm)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ReloadConfigForm::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.ReloadConfigForm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReloadConfigForm::CopyFrom(const ReloadConfigForm& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.ReloadConfigForm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReloadConfigForm::IsInitialized() const {

  return true;
}

void ReloadConfigForm::Swap(ReloadConfigForm* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReloadConfigForm::InternalSwap(ReloadConfigForm* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReloadConfigForm::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReloadConfigForm_descriptor_;
  metadata.reflection = ReloadConfigForm_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReloadConfigForm

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResetPlayerData::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResetPlayerData::ResetPlayerData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.ResetPlayerData)
}

void ResetPlayerData::InitAsDefaultInstance() {
}

ResetPlayerData::ResetPlayerData(const ResetPlayerData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.ResetPlayerData)
}

void ResetPlayerData::SharedCtor() {
  _cached_size_ = 0;
  user_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResetPlayerData::~ResetPlayerData() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.ResetPlayerData)
  SharedDtor();
}

void ResetPlayerData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ResetPlayerData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResetPlayerData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResetPlayerData_descriptor_;
}

const ResetPlayerData& ResetPlayerData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2eproto();
  return *default_instance_;
}

ResetPlayerData* ResetPlayerData::default_instance_ = NULL;

ResetPlayerData* ResetPlayerData::New(::google::protobuf::Arena* arena) const {
  ResetPlayerData* n = new ResetPlayerData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResetPlayerData::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.ResetPlayerData)
  user_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ResetPlayerData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.ResetPlayerData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 user_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
          set_has_user_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.ResetPlayerData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.ResetPlayerData)
  return false;
#undef DO_
}

void ResetPlayerData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.ResetPlayerData)
  // optional uint32 user_id = 1;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.ResetPlayerData)
}

::google::protobuf::uint8* ResetPlayerData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.ResetPlayerData)
  // optional uint32 user_id = 1;
  if (has_user_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.ResetPlayerData)
  return target;
}

int ResetPlayerData::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.ResetPlayerData)
  int total_size = 0;

  // optional uint32 user_id = 1;
  if (has_user_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResetPlayerData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.ResetPlayerData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ResetPlayerData* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ResetPlayerData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.ResetPlayerData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.ResetPlayerData)
    MergeFrom(*source);
  }
}

void ResetPlayerData::MergeFrom(const ResetPlayerData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.ResetPlayerData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_user_id()) {
      set_user_id(from.user_id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ResetPlayerData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.ResetPlayerData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResetPlayerData::CopyFrom(const ResetPlayerData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.ResetPlayerData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetPlayerData::IsInitialized() const {

  return true;
}

void ResetPlayerData::Swap(ResetPlayerData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResetPlayerData::InternalSwap(ResetPlayerData* other) {
  std::swap(user_id_, other->user_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResetPlayerData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResetPlayerData_descriptor_;
  metadata.reflection = ResetPlayerData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResetPlayerData

// optional uint32 user_id = 1;
bool ResetPlayerData::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ResetPlayerData::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
void ResetPlayerData::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void ResetPlayerData::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
 ::google::protobuf::uint32 ResetPlayerData::user_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.ResetPlayerData.user_id)
  return user_id_;
}
 void ResetPlayerData::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.ResetPlayerData.user_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace msg
}  // namespace proto
}  // namespace fogs

// @@protoc_insertion_point(global_scope)
