// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_event.proto

#ifndef PROTOBUF_msg_5fevent_2eproto__INCLUDED
#define PROTOBUF_msg_5fevent_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace msg_event {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_msg_5fevent_2eproto();
void protobuf_AssignDesc_msg_5fevent_2eproto();
void protobuf_ShutdownFile_msg_5fevent_2eproto();

class AddFriend;
class EventWrap;
class InviteGame;
class NoticeListResp;
class NoticeS;
class RespAddFriend;
class RespInviteGame;
class TipResp;
class UpdateEventList;

enum c_cmd_event {
  update_event_list = 1,
  add_friend = 2,
  invite_game = 4,
  resp_invite_game = 5,
  notice_list_resp = 6,
  mail_list_req = 7,
  mail_list_resp = 8,
  mail_opt_req = 9,
  mail_opt_resp = 10,
  tip_nt_resp = 11
};
bool c_cmd_event_IsValid(int value);
const c_cmd_event c_cmd_event_MIN = update_event_list;
const c_cmd_event c_cmd_event_MAX = tip_nt_resp;
const int c_cmd_event_ARRAYSIZE = c_cmd_event_MAX + 1;

const ::google::protobuf::EnumDescriptor* c_cmd_event_descriptor();
inline const ::std::string& c_cmd_event_Name(c_cmd_event value) {
  return ::google::protobuf::internal::NameOfEnum(
    c_cmd_event_descriptor(), value);
}
inline bool c_cmd_event_Parse(
    const ::std::string& name, c_cmd_event* value) {
  return ::google::protobuf::internal::ParseNamedEnum<c_cmd_event>(
    c_cmd_event_descriptor(), name, value);
}
enum opt_type_event {
  opt_t_all_list = 1,
  opt_t_new_one = 2
};
bool opt_type_event_IsValid(int value);
const opt_type_event opt_type_event_MIN = opt_t_all_list;
const opt_type_event opt_type_event_MAX = opt_t_new_one;
const int opt_type_event_ARRAYSIZE = opt_type_event_MAX + 1;

const ::google::protobuf::EnumDescriptor* opt_type_event_descriptor();
inline const ::std::string& opt_type_event_Name(opt_type_event value) {
  return ::google::protobuf::internal::NameOfEnum(
    opt_type_event_descriptor(), value);
}
inline bool opt_type_event_Parse(
    const ::std::string& name, opt_type_event* value) {
  return ::google::protobuf::internal::ParseNamedEnum<opt_type_event>(
    opt_type_event_descriptor(), name, value);
}
enum tip_type {
  tip_t_version = 1,
  tip_t_exit = 2,
  tip_t_needconn = 3,
  tip_t_disconn = 4,
  tip_t_accbad = 5,
  tip_t_acclogined = 6,
  tip_t_weixinfail = 7,
  tip_t_qqfail = 8,
  tip_t_accchange = 9,
  tip_t_roomcard_notenough = 10,
  tip_t_roomid_fail = 11,
  tip_t_room_full = 12,
  tip_t_room_join = 13,
  tip_t_room_exit = 14,
  tip_t_room_disconn = 15,
  tip_t_room_reconn = 16,
  tip_t_room_startbtn = 17,
  tip_t_room_refusebtn = 18,
  tip_t_room_disband = 19,
  tip_t_room_kicked = 20,
  tip_t_room_apply_disband = 21,
  tip_t_room_disbanded = 22,
  tip_t_room_disconn_disband = 23,
  tip_t_room_apple_disband_must = 24,
  tip_t_room_quick_msg_must = 25,
  tip_t_donwload_fail = 26
};
bool tip_type_IsValid(int value);
const tip_type tip_type_MIN = tip_t_version;
const tip_type tip_type_MAX = tip_t_donwload_fail;
const int tip_type_ARRAYSIZE = tip_type_MAX + 1;

const ::google::protobuf::EnumDescriptor* tip_type_descriptor();
inline const ::std::string& tip_type_Name(tip_type value) {
  return ::google::protobuf::internal::NameOfEnum(
    tip_type_descriptor(), value);
}
inline bool tip_type_Parse(
    const ::std::string& name, tip_type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<tip_type>(
    tip_type_descriptor(), name, value);
}
// ===================================================================

class AddFriend : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_event.AddFriend) */ {
 public:
  AddFriend();
  virtual ~AddFriend();

  AddFriend(const AddFriend& from);

  inline AddFriend& operator=(const AddFriend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddFriend& default_instance();

  void Swap(AddFriend* other);

  // implements Message ----------------------------------------------

  inline AddFriend* New() const { return New(NULL); }

  AddFriend* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddFriend& from);
  void MergeFrom(const AddFriend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AddFriend* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint64 uid() const;
  void set_uid(::google::protobuf::uint64 value);

  // required string nickname = 2;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNicknameFieldNumber = 2;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // required uint32 mail_id = 3;
  bool has_mail_id() const;
  void clear_mail_id();
  static const int kMailIdFieldNumber = 3;
  ::google::protobuf::uint32 mail_id() const;
  void set_mail_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:msg_event.AddFriend)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_nickname();
  inline void clear_has_nickname();
  inline void set_has_mail_id();
  inline void clear_has_mail_id();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 uid_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::uint32 mail_id_;
  friend void  protobuf_AddDesc_msg_5fevent_2eproto();
  friend void protobuf_AssignDesc_msg_5fevent_2eproto();
  friend void protobuf_ShutdownFile_msg_5fevent_2eproto();

  void InitAsDefaultInstance();
  static AddFriend* default_instance_;
};
// -------------------------------------------------------------------

class RespAddFriend : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_event.RespAddFriend) */ {
 public:
  RespAddFriend();
  virtual ~RespAddFriend();

  RespAddFriend(const RespAddFriend& from);

  inline RespAddFriend& operator=(const RespAddFriend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RespAddFriend& default_instance();

  void Swap(RespAddFriend* other);

  // implements Message ----------------------------------------------

  inline RespAddFriend* New() const { return New(NULL); }

  RespAddFriend* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RespAddFriend& from);
  void MergeFrom(const RespAddFriend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RespAddFriend* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 mail_id = 1;
  bool has_mail_id() const;
  void clear_mail_id();
  static const int kMailIdFieldNumber = 1;
  ::google::protobuf::uint32 mail_id() const;
  void set_mail_id(::google::protobuf::uint32 value);

  // required bool accept = 2;
  bool has_accept() const;
  void clear_accept();
  static const int kAcceptFieldNumber = 2;
  bool accept() const;
  void set_accept(bool value);

  // @@protoc_insertion_point(class_scope:msg_event.RespAddFriend)
 private:
  inline void set_has_mail_id();
  inline void clear_has_mail_id();
  inline void set_has_accept();
  inline void clear_has_accept();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 mail_id_;
  bool accept_;
  friend void  protobuf_AddDesc_msg_5fevent_2eproto();
  friend void protobuf_AssignDesc_msg_5fevent_2eproto();
  friend void protobuf_ShutdownFile_msg_5fevent_2eproto();

  void InitAsDefaultInstance();
  static RespAddFriend* default_instance_;
};
// -------------------------------------------------------------------

class InviteGame : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_event.InviteGame) */ {
 public:
  InviteGame();
  virtual ~InviteGame();

  InviteGame(const InviteGame& from);

  inline InviteGame& operator=(const InviteGame& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InviteGame& default_instance();

  void Swap(InviteGame* other);

  // implements Message ----------------------------------------------

  inline InviteGame* New() const { return New(NULL); }

  InviteGame* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InviteGame& from);
  void MergeFrom(const InviteGame& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InviteGame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint64 uid() const;
  void set_uid(::google::protobuf::uint64 value);

  // required string nickname = 2;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNicknameFieldNumber = 2;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // required uint32 room_no = 3;
  bool has_room_no() const;
  void clear_room_no();
  static const int kRoomNoFieldNumber = 3;
  ::google::protobuf::uint32 room_no() const;
  void set_room_no(::google::protobuf::uint32 value);

  // required uint32 mail_id = 4;
  bool has_mail_id() const;
  void clear_mail_id();
  static const int kMailIdFieldNumber = 4;
  ::google::protobuf::uint32 mail_id() const;
  void set_mail_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:msg_event.InviteGame)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_nickname();
  inline void clear_has_nickname();
  inline void set_has_room_no();
  inline void clear_has_room_no();
  inline void set_has_mail_id();
  inline void clear_has_mail_id();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 uid_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::uint32 room_no_;
  ::google::protobuf::uint32 mail_id_;
  friend void  protobuf_AddDesc_msg_5fevent_2eproto();
  friend void protobuf_AssignDesc_msg_5fevent_2eproto();
  friend void protobuf_ShutdownFile_msg_5fevent_2eproto();

  void InitAsDefaultInstance();
  static InviteGame* default_instance_;
};
// -------------------------------------------------------------------

class RespInviteGame : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_event.RespInviteGame) */ {
 public:
  RespInviteGame();
  virtual ~RespInviteGame();

  RespInviteGame(const RespInviteGame& from);

  inline RespInviteGame& operator=(const RespInviteGame& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RespInviteGame& default_instance();

  void Swap(RespInviteGame* other);

  // implements Message ----------------------------------------------

  inline RespInviteGame* New() const { return New(NULL); }

  RespInviteGame* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RespInviteGame& from);
  void MergeFrom(const RespInviteGame& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RespInviteGame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 mail_id = 1;
  bool has_mail_id() const;
  void clear_mail_id();
  static const int kMailIdFieldNumber = 1;
  ::google::protobuf::uint32 mail_id() const;
  void set_mail_id(::google::protobuf::uint32 value);

  // required bool accept = 2;
  bool has_accept() const;
  void clear_accept();
  static const int kAcceptFieldNumber = 2;
  bool accept() const;
  void set_accept(bool value);

  // @@protoc_insertion_point(class_scope:msg_event.RespInviteGame)
 private:
  inline void set_has_mail_id();
  inline void clear_has_mail_id();
  inline void set_has_accept();
  inline void clear_has_accept();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 mail_id_;
  bool accept_;
  friend void  protobuf_AddDesc_msg_5fevent_2eproto();
  friend void protobuf_AssignDesc_msg_5fevent_2eproto();
  friend void protobuf_ShutdownFile_msg_5fevent_2eproto();

  void InitAsDefaultInstance();
  static RespInviteGame* default_instance_;
};
// -------------------------------------------------------------------

class UpdateEventList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_event.UpdateEventList) */ {
 public:
  UpdateEventList();
  virtual ~UpdateEventList();

  UpdateEventList(const UpdateEventList& from);

  inline UpdateEventList& operator=(const UpdateEventList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateEventList& default_instance();

  void Swap(UpdateEventList* other);

  // implements Message ----------------------------------------------

  inline UpdateEventList* New() const { return New(NULL); }

  UpdateEventList* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateEventList& from);
  void MergeFrom(const UpdateEventList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UpdateEventList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .msg_event.EventWrap events = 1;
  int events_size() const;
  void clear_events();
  static const int kEventsFieldNumber = 1;
  const ::msg_event::EventWrap& events(int index) const;
  ::msg_event::EventWrap* mutable_events(int index);
  ::msg_event::EventWrap* add_events();
  ::google::protobuf::RepeatedPtrField< ::msg_event::EventWrap >*
      mutable_events();
  const ::google::protobuf::RepeatedPtrField< ::msg_event::EventWrap >&
      events() const;

  // @@protoc_insertion_point(class_scope:msg_event.UpdateEventList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::msg_event::EventWrap > events_;
  friend void  protobuf_AddDesc_msg_5fevent_2eproto();
  friend void protobuf_AssignDesc_msg_5fevent_2eproto();
  friend void protobuf_ShutdownFile_msg_5fevent_2eproto();

  void InitAsDefaultInstance();
  static UpdateEventList* default_instance_;
};
// -------------------------------------------------------------------

class EventWrap : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_event.EventWrap) */ {
 public:
  EventWrap();
  virtual ~EventWrap();

  EventWrap(const EventWrap& from);

  inline EventWrap& operator=(const EventWrap& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EventWrap& default_instance();

  void Swap(EventWrap* other);

  // implements Message ----------------------------------------------

  inline EventWrap* New() const { return New(NULL); }

  EventWrap* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EventWrap& from);
  void MergeFrom(const EventWrap& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EventWrap* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .msg_event.AddFriend add_friend = 1;
  bool has_add_friend() const;
  void clear_add_friend();
  static const int kAddFriendFieldNumber = 1;
  const ::msg_event::AddFriend& add_friend() const;
  ::msg_event::AddFriend* mutable_add_friend();
  ::msg_event::AddFriend* release_add_friend();
  void set_allocated_add_friend(::msg_event::AddFriend* add_friend);

  // optional .msg_event.InviteGame invite_game = 2;
  bool has_invite_game() const;
  void clear_invite_game();
  static const int kInviteGameFieldNumber = 2;
  const ::msg_event::InviteGame& invite_game() const;
  ::msg_event::InviteGame* mutable_invite_game();
  ::msg_event::InviteGame* release_invite_game();
  void set_allocated_invite_game(::msg_event::InviteGame* invite_game);

  // @@protoc_insertion_point(class_scope:msg_event.EventWrap)
 private:
  inline void set_has_add_friend();
  inline void clear_has_add_friend();
  inline void set_has_invite_game();
  inline void clear_has_invite_game();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg_event::AddFriend* add_friend_;
  ::msg_event::InviteGame* invite_game_;
  friend void  protobuf_AddDesc_msg_5fevent_2eproto();
  friend void protobuf_AssignDesc_msg_5fevent_2eproto();
  friend void protobuf_ShutdownFile_msg_5fevent_2eproto();

  void InitAsDefaultInstance();
  static EventWrap* default_instance_;
};
// -------------------------------------------------------------------

class NoticeListResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_event.NoticeListResp) */ {
 public:
  NoticeListResp();
  virtual ~NoticeListResp();

  NoticeListResp(const NoticeListResp& from);

  inline NoticeListResp& operator=(const NoticeListResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NoticeListResp& default_instance();

  void Swap(NoticeListResp* other);

  // implements Message ----------------------------------------------

  inline NoticeListResp* New() const { return New(NULL); }

  NoticeListResp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NoticeListResp& from);
  void MergeFrom(const NoticeListResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NoticeListResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .msg_event.opt_type_event type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::msg_event::opt_type_event type() const;
  void set_type(::msg_event::opt_type_event value);

  // repeated .msg_event.NoticeS notice_list = 2;
  int notice_list_size() const;
  void clear_notice_list();
  static const int kNoticeListFieldNumber = 2;
  const ::msg_event::NoticeS& notice_list(int index) const;
  ::msg_event::NoticeS* mutable_notice_list(int index);
  ::msg_event::NoticeS* add_notice_list();
  ::google::protobuf::RepeatedPtrField< ::msg_event::NoticeS >*
      mutable_notice_list();
  const ::google::protobuf::RepeatedPtrField< ::msg_event::NoticeS >&
      notice_list() const;

  // @@protoc_insertion_point(class_scope:msg_event.NoticeListResp)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::msg_event::NoticeS > notice_list_;
  int type_;
  friend void  protobuf_AddDesc_msg_5fevent_2eproto();
  friend void protobuf_AssignDesc_msg_5fevent_2eproto();
  friend void protobuf_ShutdownFile_msg_5fevent_2eproto();

  void InitAsDefaultInstance();
  static NoticeListResp* default_instance_;
};
// -------------------------------------------------------------------

class NoticeS : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_event.NoticeS) */ {
 public:
  NoticeS();
  virtual ~NoticeS();

  NoticeS(const NoticeS& from);

  inline NoticeS& operator=(const NoticeS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NoticeS& default_instance();

  void Swap(NoticeS* other);

  // implements Message ----------------------------------------------

  inline NoticeS* New() const { return New(NULL); }

  NoticeS* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NoticeS& from);
  void MergeFrom(const NoticeS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NoticeS* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // required string content = 2;
  bool has_content() const;
  void clear_content();
  static const int kContentFieldNumber = 2;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // required uint64 begin_time = 3;
  bool has_begin_time() const;
  void clear_begin_time();
  static const int kBeginTimeFieldNumber = 3;
  ::google::protobuf::uint64 begin_time() const;
  void set_begin_time(::google::protobuf::uint64 value);

  // required uint64 break_time = 4;
  bool has_break_time() const;
  void clear_break_time();
  static const int kBreakTimeFieldNumber = 4;
  ::google::protobuf::uint64 break_time() const;
  void set_break_time(::google::protobuf::uint64 value);

  // required uint32 minute_time = 5;
  bool has_minute_time() const;
  void clear_minute_time();
  static const int kMinuteTimeFieldNumber = 5;
  ::google::protobuf::uint32 minute_time() const;
  void set_minute_time(::google::protobuf::uint32 value);

  // required uint32 sort_level = 6;
  bool has_sort_level() const;
  void clear_sort_level();
  static const int kSortLevelFieldNumber = 6;
  ::google::protobuf::uint32 sort_level() const;
  void set_sort_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:msg_event.NoticeS)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_content();
  inline void clear_has_content();
  inline void set_has_begin_time();
  inline void clear_has_begin_time();
  inline void set_has_break_time();
  inline void clear_has_break_time();
  inline void set_has_minute_time();
  inline void clear_has_minute_time();
  inline void set_has_sort_level();
  inline void clear_has_sort_level();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::uint64 begin_time_;
  ::google::protobuf::uint64 break_time_;
  ::google::protobuf::uint32 minute_time_;
  ::google::protobuf::uint32 sort_level_;
  friend void  protobuf_AddDesc_msg_5fevent_2eproto();
  friend void protobuf_AssignDesc_msg_5fevent_2eproto();
  friend void protobuf_ShutdownFile_msg_5fevent_2eproto();

  void InitAsDefaultInstance();
  static NoticeS* default_instance_;
};
// -------------------------------------------------------------------

class TipResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_event.TipResp) */ {
 public:
  TipResp();
  virtual ~TipResp();

  TipResp(const TipResp& from);

  inline TipResp& operator=(const TipResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TipResp& default_instance();

  void Swap(TipResp* other);

  // implements Message ----------------------------------------------

  inline TipResp* New() const { return New(NULL); }

  TipResp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TipResp& from);
  void MergeFrom(const TipResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TipResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .msg_event.tip_type type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::msg_event::tip_type type() const;
  void set_type(::msg_event::tip_type value);

  // optional string args = 2;
  bool has_args() const;
  void clear_args();
  static const int kArgsFieldNumber = 2;
  const ::std::string& args() const;
  void set_args(const ::std::string& value);
  void set_args(const char* value);
  void set_args(const char* value, size_t size);
  ::std::string* mutable_args();
  ::std::string* release_args();
  void set_allocated_args(::std::string* args);

  // @@protoc_insertion_point(class_scope:msg_event.TipResp)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_args();
  inline void clear_has_args();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr args_;
  int type_;
  friend void  protobuf_AddDesc_msg_5fevent_2eproto();
  friend void protobuf_AssignDesc_msg_5fevent_2eproto();
  friend void protobuf_ShutdownFile_msg_5fevent_2eproto();

  void InitAsDefaultInstance();
  static TipResp* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// AddFriend

// required uint64 uid = 1;
inline bool AddFriend::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddFriend::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddFriend::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddFriend::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 AddFriend::uid() const {
  // @@protoc_insertion_point(field_get:msg_event.AddFriend.uid)
  return uid_;
}
inline void AddFriend::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:msg_event.AddFriend.uid)
}

// required string nickname = 2;
inline bool AddFriend::has_nickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddFriend::set_has_nickname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddFriend::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddFriend::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& AddFriend::nickname() const {
  // @@protoc_insertion_point(field_get:msg_event.AddFriend.nickname)
  return nickname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddFriend::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_event.AddFriend.nickname)
}
inline void AddFriend::set_nickname(const char* value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_event.AddFriend.nickname)
}
inline void AddFriend::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_event.AddFriend.nickname)
}
inline ::std::string* AddFriend::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:msg_event.AddFriend.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddFriend::release_nickname() {
  // @@protoc_insertion_point(field_release:msg_event.AddFriend.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddFriend::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:msg_event.AddFriend.nickname)
}

// required uint32 mail_id = 3;
inline bool AddFriend::has_mail_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AddFriend::set_has_mail_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AddFriend::clear_has_mail_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AddFriend::clear_mail_id() {
  mail_id_ = 0u;
  clear_has_mail_id();
}
inline ::google::protobuf::uint32 AddFriend::mail_id() const {
  // @@protoc_insertion_point(field_get:msg_event.AddFriend.mail_id)
  return mail_id_;
}
inline void AddFriend::set_mail_id(::google::protobuf::uint32 value) {
  set_has_mail_id();
  mail_id_ = value;
  // @@protoc_insertion_point(field_set:msg_event.AddFriend.mail_id)
}

// -------------------------------------------------------------------

// RespAddFriend

// required uint32 mail_id = 1;
inline bool RespAddFriend::has_mail_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RespAddFriend::set_has_mail_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RespAddFriend::clear_has_mail_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RespAddFriend::clear_mail_id() {
  mail_id_ = 0u;
  clear_has_mail_id();
}
inline ::google::protobuf::uint32 RespAddFriend::mail_id() const {
  // @@protoc_insertion_point(field_get:msg_event.RespAddFriend.mail_id)
  return mail_id_;
}
inline void RespAddFriend::set_mail_id(::google::protobuf::uint32 value) {
  set_has_mail_id();
  mail_id_ = value;
  // @@protoc_insertion_point(field_set:msg_event.RespAddFriend.mail_id)
}

// required bool accept = 2;
inline bool RespAddFriend::has_accept() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RespAddFriend::set_has_accept() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RespAddFriend::clear_has_accept() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RespAddFriend::clear_accept() {
  accept_ = false;
  clear_has_accept();
}
inline bool RespAddFriend::accept() const {
  // @@protoc_insertion_point(field_get:msg_event.RespAddFriend.accept)
  return accept_;
}
inline void RespAddFriend::set_accept(bool value) {
  set_has_accept();
  accept_ = value;
  // @@protoc_insertion_point(field_set:msg_event.RespAddFriend.accept)
}

// -------------------------------------------------------------------

// InviteGame

// required uint64 uid = 1;
inline bool InviteGame::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InviteGame::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InviteGame::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InviteGame::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 InviteGame::uid() const {
  // @@protoc_insertion_point(field_get:msg_event.InviteGame.uid)
  return uid_;
}
inline void InviteGame::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:msg_event.InviteGame.uid)
}

// required string nickname = 2;
inline bool InviteGame::has_nickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InviteGame::set_has_nickname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InviteGame::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InviteGame::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& InviteGame::nickname() const {
  // @@protoc_insertion_point(field_get:msg_event.InviteGame.nickname)
  return nickname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InviteGame::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_event.InviteGame.nickname)
}
inline void InviteGame::set_nickname(const char* value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_event.InviteGame.nickname)
}
inline void InviteGame::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_event.InviteGame.nickname)
}
inline ::std::string* InviteGame::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:msg_event.InviteGame.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InviteGame::release_nickname() {
  // @@protoc_insertion_point(field_release:msg_event.InviteGame.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InviteGame::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:msg_event.InviteGame.nickname)
}

// required uint32 room_no = 3;
inline bool InviteGame::has_room_no() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InviteGame::set_has_room_no() {
  _has_bits_[0] |= 0x00000004u;
}
inline void InviteGame::clear_has_room_no() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void InviteGame::clear_room_no() {
  room_no_ = 0u;
  clear_has_room_no();
}
inline ::google::protobuf::uint32 InviteGame::room_no() const {
  // @@protoc_insertion_point(field_get:msg_event.InviteGame.room_no)
  return room_no_;
}
inline void InviteGame::set_room_no(::google::protobuf::uint32 value) {
  set_has_room_no();
  room_no_ = value;
  // @@protoc_insertion_point(field_set:msg_event.InviteGame.room_no)
}

// required uint32 mail_id = 4;
inline bool InviteGame::has_mail_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void InviteGame::set_has_mail_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void InviteGame::clear_has_mail_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void InviteGame::clear_mail_id() {
  mail_id_ = 0u;
  clear_has_mail_id();
}
inline ::google::protobuf::uint32 InviteGame::mail_id() const {
  // @@protoc_insertion_point(field_get:msg_event.InviteGame.mail_id)
  return mail_id_;
}
inline void InviteGame::set_mail_id(::google::protobuf::uint32 value) {
  set_has_mail_id();
  mail_id_ = value;
  // @@protoc_insertion_point(field_set:msg_event.InviteGame.mail_id)
}

// -------------------------------------------------------------------

// RespInviteGame

// required uint32 mail_id = 1;
inline bool RespInviteGame::has_mail_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RespInviteGame::set_has_mail_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RespInviteGame::clear_has_mail_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RespInviteGame::clear_mail_id() {
  mail_id_ = 0u;
  clear_has_mail_id();
}
inline ::google::protobuf::uint32 RespInviteGame::mail_id() const {
  // @@protoc_insertion_point(field_get:msg_event.RespInviteGame.mail_id)
  return mail_id_;
}
inline void RespInviteGame::set_mail_id(::google::protobuf::uint32 value) {
  set_has_mail_id();
  mail_id_ = value;
  // @@protoc_insertion_point(field_set:msg_event.RespInviteGame.mail_id)
}

// required bool accept = 2;
inline bool RespInviteGame::has_accept() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RespInviteGame::set_has_accept() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RespInviteGame::clear_has_accept() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RespInviteGame::clear_accept() {
  accept_ = false;
  clear_has_accept();
}
inline bool RespInviteGame::accept() const {
  // @@protoc_insertion_point(field_get:msg_event.RespInviteGame.accept)
  return accept_;
}
inline void RespInviteGame::set_accept(bool value) {
  set_has_accept();
  accept_ = value;
  // @@protoc_insertion_point(field_set:msg_event.RespInviteGame.accept)
}

// -------------------------------------------------------------------

// UpdateEventList

// repeated .msg_event.EventWrap events = 1;
inline int UpdateEventList::events_size() const {
  return events_.size();
}
inline void UpdateEventList::clear_events() {
  events_.Clear();
}
inline const ::msg_event::EventWrap& UpdateEventList::events(int index) const {
  // @@protoc_insertion_point(field_get:msg_event.UpdateEventList.events)
  return events_.Get(index);
}
inline ::msg_event::EventWrap* UpdateEventList::mutable_events(int index) {
  // @@protoc_insertion_point(field_mutable:msg_event.UpdateEventList.events)
  return events_.Mutable(index);
}
inline ::msg_event::EventWrap* UpdateEventList::add_events() {
  // @@protoc_insertion_point(field_add:msg_event.UpdateEventList.events)
  return events_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::msg_event::EventWrap >*
UpdateEventList::mutable_events() {
  // @@protoc_insertion_point(field_mutable_list:msg_event.UpdateEventList.events)
  return &events_;
}
inline const ::google::protobuf::RepeatedPtrField< ::msg_event::EventWrap >&
UpdateEventList::events() const {
  // @@protoc_insertion_point(field_list:msg_event.UpdateEventList.events)
  return events_;
}

// -------------------------------------------------------------------

// EventWrap

// optional .msg_event.AddFriend add_friend = 1;
inline bool EventWrap::has_add_friend() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EventWrap::set_has_add_friend() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EventWrap::clear_has_add_friend() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EventWrap::clear_add_friend() {
  if (add_friend_ != NULL) add_friend_->::msg_event::AddFriend::Clear();
  clear_has_add_friend();
}
inline const ::msg_event::AddFriend& EventWrap::add_friend() const {
  // @@protoc_insertion_point(field_get:msg_event.EventWrap.add_friend)
  return add_friend_ != NULL ? *add_friend_ : *default_instance_->add_friend_;
}
inline ::msg_event::AddFriend* EventWrap::mutable_add_friend() {
  set_has_add_friend();
  if (add_friend_ == NULL) {
    add_friend_ = new ::msg_event::AddFriend;
  }
  // @@protoc_insertion_point(field_mutable:msg_event.EventWrap.add_friend)
  return add_friend_;
}
inline ::msg_event::AddFriend* EventWrap::release_add_friend() {
  // @@protoc_insertion_point(field_release:msg_event.EventWrap.add_friend)
  clear_has_add_friend();
  ::msg_event::AddFriend* temp = add_friend_;
  add_friend_ = NULL;
  return temp;
}
inline void EventWrap::set_allocated_add_friend(::msg_event::AddFriend* add_friend) {
  delete add_friend_;
  add_friend_ = add_friend;
  if (add_friend) {
    set_has_add_friend();
  } else {
    clear_has_add_friend();
  }
  // @@protoc_insertion_point(field_set_allocated:msg_event.EventWrap.add_friend)
}

// optional .msg_event.InviteGame invite_game = 2;
inline bool EventWrap::has_invite_game() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EventWrap::set_has_invite_game() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EventWrap::clear_has_invite_game() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EventWrap::clear_invite_game() {
  if (invite_game_ != NULL) invite_game_->::msg_event::InviteGame::Clear();
  clear_has_invite_game();
}
inline const ::msg_event::InviteGame& EventWrap::invite_game() const {
  // @@protoc_insertion_point(field_get:msg_event.EventWrap.invite_game)
  return invite_game_ != NULL ? *invite_game_ : *default_instance_->invite_game_;
}
inline ::msg_event::InviteGame* EventWrap::mutable_invite_game() {
  set_has_invite_game();
  if (invite_game_ == NULL) {
    invite_game_ = new ::msg_event::InviteGame;
  }
  // @@protoc_insertion_point(field_mutable:msg_event.EventWrap.invite_game)
  return invite_game_;
}
inline ::msg_event::InviteGame* EventWrap::release_invite_game() {
  // @@protoc_insertion_point(field_release:msg_event.EventWrap.invite_game)
  clear_has_invite_game();
  ::msg_event::InviteGame* temp = invite_game_;
  invite_game_ = NULL;
  return temp;
}
inline void EventWrap::set_allocated_invite_game(::msg_event::InviteGame* invite_game) {
  delete invite_game_;
  invite_game_ = invite_game;
  if (invite_game) {
    set_has_invite_game();
  } else {
    clear_has_invite_game();
  }
  // @@protoc_insertion_point(field_set_allocated:msg_event.EventWrap.invite_game)
}

// -------------------------------------------------------------------

// NoticeListResp

// required .msg_event.opt_type_event type = 1;
inline bool NoticeListResp::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NoticeListResp::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NoticeListResp::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NoticeListResp::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::msg_event::opt_type_event NoticeListResp::type() const {
  // @@protoc_insertion_point(field_get:msg_event.NoticeListResp.type)
  return static_cast< ::msg_event::opt_type_event >(type_);
}
inline void NoticeListResp::set_type(::msg_event::opt_type_event value) {
  assert(::msg_event::opt_type_event_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:msg_event.NoticeListResp.type)
}

// repeated .msg_event.NoticeS notice_list = 2;
inline int NoticeListResp::notice_list_size() const {
  return notice_list_.size();
}
inline void NoticeListResp::clear_notice_list() {
  notice_list_.Clear();
}
inline const ::msg_event::NoticeS& NoticeListResp::notice_list(int index) const {
  // @@protoc_insertion_point(field_get:msg_event.NoticeListResp.notice_list)
  return notice_list_.Get(index);
}
inline ::msg_event::NoticeS* NoticeListResp::mutable_notice_list(int index) {
  // @@protoc_insertion_point(field_mutable:msg_event.NoticeListResp.notice_list)
  return notice_list_.Mutable(index);
}
inline ::msg_event::NoticeS* NoticeListResp::add_notice_list() {
  // @@protoc_insertion_point(field_add:msg_event.NoticeListResp.notice_list)
  return notice_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::msg_event::NoticeS >*
NoticeListResp::mutable_notice_list() {
  // @@protoc_insertion_point(field_mutable_list:msg_event.NoticeListResp.notice_list)
  return &notice_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::msg_event::NoticeS >&
NoticeListResp::notice_list() const {
  // @@protoc_insertion_point(field_list:msg_event.NoticeListResp.notice_list)
  return notice_list_;
}

// -------------------------------------------------------------------

// NoticeS

// required uint64 id = 1;
inline bool NoticeS::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NoticeS::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NoticeS::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NoticeS::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 NoticeS::id() const {
  // @@protoc_insertion_point(field_get:msg_event.NoticeS.id)
  return id_;
}
inline void NoticeS::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:msg_event.NoticeS.id)
}

// required string content = 2;
inline bool NoticeS::has_content() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NoticeS::set_has_content() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NoticeS::clear_has_content() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NoticeS::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
inline const ::std::string& NoticeS::content() const {
  // @@protoc_insertion_point(field_get:msg_event.NoticeS.content)
  return content_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NoticeS::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_event.NoticeS.content)
}
inline void NoticeS::set_content(const char* value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_event.NoticeS.content)
}
inline void NoticeS::set_content(const char* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_event.NoticeS.content)
}
inline ::std::string* NoticeS::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:msg_event.NoticeS.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NoticeS::release_content() {
  // @@protoc_insertion_point(field_release:msg_event.NoticeS.content)
  clear_has_content();
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NoticeS::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:msg_event.NoticeS.content)
}

// required uint64 begin_time = 3;
inline bool NoticeS::has_begin_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NoticeS::set_has_begin_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NoticeS::clear_has_begin_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NoticeS::clear_begin_time() {
  begin_time_ = GOOGLE_ULONGLONG(0);
  clear_has_begin_time();
}
inline ::google::protobuf::uint64 NoticeS::begin_time() const {
  // @@protoc_insertion_point(field_get:msg_event.NoticeS.begin_time)
  return begin_time_;
}
inline void NoticeS::set_begin_time(::google::protobuf::uint64 value) {
  set_has_begin_time();
  begin_time_ = value;
  // @@protoc_insertion_point(field_set:msg_event.NoticeS.begin_time)
}

// required uint64 break_time = 4;
inline bool NoticeS::has_break_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NoticeS::set_has_break_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NoticeS::clear_has_break_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NoticeS::clear_break_time() {
  break_time_ = GOOGLE_ULONGLONG(0);
  clear_has_break_time();
}
inline ::google::protobuf::uint64 NoticeS::break_time() const {
  // @@protoc_insertion_point(field_get:msg_event.NoticeS.break_time)
  return break_time_;
}
inline void NoticeS::set_break_time(::google::protobuf::uint64 value) {
  set_has_break_time();
  break_time_ = value;
  // @@protoc_insertion_point(field_set:msg_event.NoticeS.break_time)
}

// required uint32 minute_time = 5;
inline bool NoticeS::has_minute_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NoticeS::set_has_minute_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NoticeS::clear_has_minute_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NoticeS::clear_minute_time() {
  minute_time_ = 0u;
  clear_has_minute_time();
}
inline ::google::protobuf::uint32 NoticeS::minute_time() const {
  // @@protoc_insertion_point(field_get:msg_event.NoticeS.minute_time)
  return minute_time_;
}
inline void NoticeS::set_minute_time(::google::protobuf::uint32 value) {
  set_has_minute_time();
  minute_time_ = value;
  // @@protoc_insertion_point(field_set:msg_event.NoticeS.minute_time)
}

// required uint32 sort_level = 6;
inline bool NoticeS::has_sort_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void NoticeS::set_has_sort_level() {
  _has_bits_[0] |= 0x00000020u;
}
inline void NoticeS::clear_has_sort_level() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void NoticeS::clear_sort_level() {
  sort_level_ = 0u;
  clear_has_sort_level();
}
inline ::google::protobuf::uint32 NoticeS::sort_level() const {
  // @@protoc_insertion_point(field_get:msg_event.NoticeS.sort_level)
  return sort_level_;
}
inline void NoticeS::set_sort_level(::google::protobuf::uint32 value) {
  set_has_sort_level();
  sort_level_ = value;
  // @@protoc_insertion_point(field_set:msg_event.NoticeS.sort_level)
}

// -------------------------------------------------------------------

// TipResp

// required .msg_event.tip_type type = 1;
inline bool TipResp::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TipResp::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TipResp::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TipResp::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::msg_event::tip_type TipResp::type() const {
  // @@protoc_insertion_point(field_get:msg_event.TipResp.type)
  return static_cast< ::msg_event::tip_type >(type_);
}
inline void TipResp::set_type(::msg_event::tip_type value) {
  assert(::msg_event::tip_type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:msg_event.TipResp.type)
}

// optional string args = 2;
inline bool TipResp::has_args() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TipResp::set_has_args() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TipResp::clear_has_args() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TipResp::clear_args() {
  args_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_args();
}
inline const ::std::string& TipResp::args() const {
  // @@protoc_insertion_point(field_get:msg_event.TipResp.args)
  return args_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TipResp::set_args(const ::std::string& value) {
  set_has_args();
  args_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_event.TipResp.args)
}
inline void TipResp::set_args(const char* value) {
  set_has_args();
  args_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_event.TipResp.args)
}
inline void TipResp::set_args(const char* value, size_t size) {
  set_has_args();
  args_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_event.TipResp.args)
}
inline ::std::string* TipResp::mutable_args() {
  set_has_args();
  // @@protoc_insertion_point(field_mutable:msg_event.TipResp.args)
  return args_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TipResp::release_args() {
  // @@protoc_insertion_point(field_release:msg_event.TipResp.args)
  clear_has_args();
  return args_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TipResp::set_allocated_args(::std::string* args) {
  if (args != NULL) {
    set_has_args();
  } else {
    clear_has_args();
  }
  args_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), args);
  // @@protoc_insertion_point(field_set_allocated:msg_event.TipResp.args)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace msg_event

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::msg_event::c_cmd_event> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg_event::c_cmd_event>() {
  return ::msg_event::c_cmd_event_descriptor();
}
template <> struct is_proto_enum< ::msg_event::opt_type_event> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg_event::opt_type_event>() {
  return ::msg_event::opt_type_event_descriptor();
}
template <> struct is_proto_enum< ::msg_event::tip_type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg_event::tip_type>() {
  return ::msg_event::tip_type_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_msg_5fevent_2eproto__INCLUDED
