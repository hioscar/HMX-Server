// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_history.proto

#ifndef PROTOBUF_msg_5fhistory_2eproto__INCLUDED
#define PROTOBUF_msg_5fhistory_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "msg_maj.pb.h"
#include "msg_room.pb.h"
// @@protoc_insertion_point(includes)

namespace msg_maj {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_msg_5fhistory_2eproto();
void protobuf_AssignDesc_msg_5fhistory_2eproto();
void protobuf_ShutdownFile_msg_5fhistory_2eproto();

class HistoryInnReq;
class HistoryInnResp;
class HistoryListReq;
class HistoryListResp;
class HistoryRecord;
class HistoryRecordS;
class HistoryRoomReq;
class HistoryRoomResp;
class InnRecord;
class InnRecordListS;
class InnRecordS;
class InnReplayActionListS;
class InnReplayActionS;
class ReplayAction;
class ReplayReq;
class ReplayResp;
class RoleInfoListS;
class RoleInfoS;
class SeatTotalS;
class SeatTotalScore;
class SeatTotalScoreS;

enum c_cmd_hist {
  history_list_req = 1,
  history_list_resp = 2,
  replay_req = 3,
  replay_resp = 4,
  history_room_req = 5,
  history_room_resp = 6,
  history_inn_req = 7,
  history_inn_resp = 8
};
bool c_cmd_hist_IsValid(int value);
const c_cmd_hist c_cmd_hist_MIN = history_list_req;
const c_cmd_hist c_cmd_hist_MAX = history_inn_resp;
const int c_cmd_hist_ARRAYSIZE = c_cmd_hist_MAX + 1;

const ::google::protobuf::EnumDescriptor* c_cmd_hist_descriptor();
inline const ::std::string& c_cmd_hist_Name(c_cmd_hist value) {
  return ::google::protobuf::internal::NameOfEnum(
    c_cmd_hist_descriptor(), value);
}
inline bool c_cmd_hist_Parse(
    const ::std::string& name, c_cmd_hist* value) {
  return ::google::protobuf::internal::ParseNamedEnum<c_cmd_hist>(
    c_cmd_hist_descriptor(), name, value);
}
enum req_type {
  room_list = 1,
  total_list = 2
};
bool req_type_IsValid(int value);
const req_type req_type_MIN = room_list;
const req_type req_type_MAX = total_list;
const int req_type_ARRAYSIZE = req_type_MAX + 1;

const ::google::protobuf::EnumDescriptor* req_type_descriptor();
inline const ::std::string& req_type_Name(req_type value) {
  return ::google::protobuf::internal::NameOfEnum(
    req_type_descriptor(), value);
}
inline bool req_type_Parse(
    const ::std::string& name, req_type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<req_type>(
    req_type_descriptor(), name, value);
}
// ===================================================================

class HistoryListReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.HistoryListReq) */ {
 public:
  HistoryListReq();
  virtual ~HistoryListReq();

  HistoryListReq(const HistoryListReq& from);

  inline HistoryListReq& operator=(const HistoryListReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HistoryListReq& default_instance();

  void Swap(HistoryListReq* other);

  // implements Message ----------------------------------------------

  inline HistoryListReq* New() const { return New(NULL); }

  HistoryListReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HistoryListReq& from);
  void MergeFrom(const HistoryListReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HistoryListReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .msg_maj.req_type type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::msg_maj::req_type type() const;
  void set_type(::msg_maj::req_type value);

  // required uint64 start_index = 2;
  bool has_start_index() const;
  void clear_start_index();
  static const int kStartIndexFieldNumber = 2;
  ::google::protobuf::uint64 start_index() const;
  void set_start_index(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:msg_maj.HistoryListReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_start_index();
  inline void clear_has_start_index();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 start_index_;
  int type_;
  friend void  protobuf_AddDesc_msg_5fhistory_2eproto();
  friend void protobuf_AssignDesc_msg_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_msg_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static HistoryListReq* default_instance_;
};
// -------------------------------------------------------------------

class HistoryListResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.HistoryListResp) */ {
 public:
  HistoryListResp();
  virtual ~HistoryListResp();

  HistoryListResp(const HistoryListResp& from);

  inline HistoryListResp& operator=(const HistoryListResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HistoryListResp& default_instance();

  void Swap(HistoryListResp* other);

  // implements Message ----------------------------------------------

  inline HistoryListResp* New() const { return New(NULL); }

  HistoryListResp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HistoryListResp& from);
  void MergeFrom(const HistoryListResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HistoryListResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .msg_maj.req_type type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::msg_maj::req_type type() const;
  void set_type(::msg_maj::req_type value);

  // repeated .msg_maj.HistoryRecord record_list = 2;
  int record_list_size() const;
  void clear_record_list();
  static const int kRecordListFieldNumber = 2;
  const ::msg_maj::HistoryRecord& record_list(int index) const;
  ::msg_maj::HistoryRecord* mutable_record_list(int index);
  ::msg_maj::HistoryRecord* add_record_list();
  ::google::protobuf::RepeatedPtrField< ::msg_maj::HistoryRecord >*
      mutable_record_list();
  const ::google::protobuf::RepeatedPtrField< ::msg_maj::HistoryRecord >&
      record_list() const;

  // @@protoc_insertion_point(class_scope:msg_maj.HistoryListResp)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::msg_maj::HistoryRecord > record_list_;
  int type_;
  friend void  protobuf_AddDesc_msg_5fhistory_2eproto();
  friend void protobuf_AssignDesc_msg_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_msg_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static HistoryListResp* default_instance_;
};
// -------------------------------------------------------------------

class HistoryRoomReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.HistoryRoomReq) */ {
 public:
  HistoryRoomReq();
  virtual ~HistoryRoomReq();

  HistoryRoomReq(const HistoryRoomReq& from);

  inline HistoryRoomReq& operator=(const HistoryRoomReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HistoryRoomReq& default_instance();

  void Swap(HistoryRoomReq* other);

  // implements Message ----------------------------------------------

  inline HistoryRoomReq* New() const { return New(NULL); }

  HistoryRoomReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HistoryRoomReq& from);
  void MergeFrom(const HistoryRoomReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HistoryRoomReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .msg_maj.req_type type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::msg_maj::req_type type() const;
  void set_type(::msg_maj::req_type value);

  // required uint64 record_id = 2;
  bool has_record_id() const;
  void clear_record_id();
  static const int kRecordIdFieldNumber = 2;
  ::google::protobuf::uint64 record_id() const;
  void set_record_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:msg_maj.HistoryRoomReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_record_id();
  inline void clear_has_record_id();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 record_id_;
  int type_;
  friend void  protobuf_AddDesc_msg_5fhistory_2eproto();
  friend void protobuf_AssignDesc_msg_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_msg_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static HistoryRoomReq* default_instance_;
};
// -------------------------------------------------------------------

class HistoryRoomResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.HistoryRoomResp) */ {
 public:
  HistoryRoomResp();
  virtual ~HistoryRoomResp();

  HistoryRoomResp(const HistoryRoomResp& from);

  inline HistoryRoomResp& operator=(const HistoryRoomResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HistoryRoomResp& default_instance();

  void Swap(HistoryRoomResp* other);

  // implements Message ----------------------------------------------

  inline HistoryRoomResp* New() const { return New(NULL); }

  HistoryRoomResp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HistoryRoomResp& from);
  void MergeFrom(const HistoryRoomResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HistoryRoomResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .msg_maj.req_type type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::msg_maj::req_type type() const;
  void set_type(::msg_maj::req_type value);

  // required uint64 record_id = 2;
  bool has_record_id() const;
  void clear_record_id();
  static const int kRecordIdFieldNumber = 2;
  ::google::protobuf::uint64 record_id() const;
  void set_record_id(::google::protobuf::uint64 value);

  // required uint32 room_id = 3;
  bool has_room_id() const;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 3;
  ::google::protobuf::uint32 room_id() const;
  void set_room_id(::google::protobuf::uint32 value);

  // required .msg_maj.RoomOption option = 4;
  bool has_option() const;
  void clear_option();
  static const int kOptionFieldNumber = 4;
  const ::msg_maj::RoomOption& option() const;
  ::msg_maj::RoomOption* mutable_option();
  ::msg_maj::RoomOption* release_option();
  void set_allocated_option(::msg_maj::RoomOption* option);

  // repeated .msg_maj.InnRecord inn_list = 5;
  int inn_list_size() const;
  void clear_inn_list();
  static const int kInnListFieldNumber = 5;
  const ::msg_maj::InnRecord& inn_list(int index) const;
  ::msg_maj::InnRecord* mutable_inn_list(int index);
  ::msg_maj::InnRecord* add_inn_list();
  ::google::protobuf::RepeatedPtrField< ::msg_maj::InnRecord >*
      mutable_inn_list();
  const ::google::protobuf::RepeatedPtrField< ::msg_maj::InnRecord >&
      inn_list() const;

  // repeated .msg_maj.SeatTotalScore score_list = 6;
  int score_list_size() const;
  void clear_score_list();
  static const int kScoreListFieldNumber = 6;
  const ::msg_maj::SeatTotalScore& score_list(int index) const;
  ::msg_maj::SeatTotalScore* mutable_score_list(int index);
  ::msg_maj::SeatTotalScore* add_score_list();
  ::google::protobuf::RepeatedPtrField< ::msg_maj::SeatTotalScore >*
      mutable_score_list();
  const ::google::protobuf::RepeatedPtrField< ::msg_maj::SeatTotalScore >&
      score_list() const;

  // @@protoc_insertion_point(class_scope:msg_maj.HistoryRoomResp)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_record_id();
  inline void clear_has_record_id();
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_option();
  inline void clear_has_option();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 record_id_;
  int type_;
  ::google::protobuf::uint32 room_id_;
  ::msg_maj::RoomOption* option_;
  ::google::protobuf::RepeatedPtrField< ::msg_maj::InnRecord > inn_list_;
  ::google::protobuf::RepeatedPtrField< ::msg_maj::SeatTotalScore > score_list_;
  friend void  protobuf_AddDesc_msg_5fhistory_2eproto();
  friend void protobuf_AssignDesc_msg_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_msg_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static HistoryRoomResp* default_instance_;
};
// -------------------------------------------------------------------

class HistoryInnReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.HistoryInnReq) */ {
 public:
  HistoryInnReq();
  virtual ~HistoryInnReq();

  HistoryInnReq(const HistoryInnReq& from);

  inline HistoryInnReq& operator=(const HistoryInnReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HistoryInnReq& default_instance();

  void Swap(HistoryInnReq* other);

  // implements Message ----------------------------------------------

  inline HistoryInnReq* New() const { return New(NULL); }

  HistoryInnReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HistoryInnReq& from);
  void MergeFrom(const HistoryInnReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HistoryInnReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 record_id = 1;
  bool has_record_id() const;
  void clear_record_id();
  static const int kRecordIdFieldNumber = 1;
  ::google::protobuf::uint64 record_id() const;
  void set_record_id(::google::protobuf::uint64 value);

  // required uint32 inn_id = 2;
  bool has_inn_id() const;
  void clear_inn_id();
  static const int kInnIdFieldNumber = 2;
  ::google::protobuf::uint32 inn_id() const;
  void set_inn_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:msg_maj.HistoryInnReq)
 private:
  inline void set_has_record_id();
  inline void clear_has_record_id();
  inline void set_has_inn_id();
  inline void clear_has_inn_id();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 record_id_;
  ::google::protobuf::uint32 inn_id_;
  friend void  protobuf_AddDesc_msg_5fhistory_2eproto();
  friend void protobuf_AssignDesc_msg_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_msg_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static HistoryInnReq* default_instance_;
};
// -------------------------------------------------------------------

class HistoryInnResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.HistoryInnResp) */ {
 public:
  HistoryInnResp();
  virtual ~HistoryInnResp();

  HistoryInnResp(const HistoryInnResp& from);

  inline HistoryInnResp& operator=(const HistoryInnResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HistoryInnResp& default_instance();

  void Swap(HistoryInnResp* other);

  // implements Message ----------------------------------------------

  inline HistoryInnResp* New() const { return New(NULL); }

  HistoryInnResp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HistoryInnResp& from);
  void MergeFrom(const HistoryInnResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HistoryInnResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 record_id = 2;
  bool has_record_id() const;
  void clear_record_id();
  static const int kRecordIdFieldNumber = 2;
  ::google::protobuf::uint64 record_id() const;
  void set_record_id(::google::protobuf::uint64 value);

  // required uint32 room_id = 3;
  bool has_room_id() const;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 3;
  ::google::protobuf::uint32 room_id() const;
  void set_room_id(::google::protobuf::uint32 value);

  // required .msg_maj.RoomOption option = 4;
  bool has_option() const;
  void clear_option();
  static const int kOptionFieldNumber = 4;
  const ::msg_maj::RoomOption& option() const;
  ::msg_maj::RoomOption* mutable_option();
  ::msg_maj::RoomOption* release_option();
  void set_allocated_option(::msg_maj::RoomOption* option);

  // required .msg_maj.InnRecord inn = 5;
  bool has_inn() const;
  void clear_inn();
  static const int kInnFieldNumber = 5;
  const ::msg_maj::InnRecord& inn() const;
  ::msg_maj::InnRecord* mutable_inn();
  ::msg_maj::InnRecord* release_inn();
  void set_allocated_inn(::msg_maj::InnRecord* inn);

  // repeated .msg_maj.SeatTotalScore score_list = 6;
  int score_list_size() const;
  void clear_score_list();
  static const int kScoreListFieldNumber = 6;
  const ::msg_maj::SeatTotalScore& score_list(int index) const;
  ::msg_maj::SeatTotalScore* mutable_score_list(int index);
  ::msg_maj::SeatTotalScore* add_score_list();
  ::google::protobuf::RepeatedPtrField< ::msg_maj::SeatTotalScore >*
      mutable_score_list();
  const ::google::protobuf::RepeatedPtrField< ::msg_maj::SeatTotalScore >&
      score_list() const;

  // @@protoc_insertion_point(class_scope:msg_maj.HistoryInnResp)
 private:
  inline void set_has_record_id();
  inline void clear_has_record_id();
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_option();
  inline void clear_has_option();
  inline void set_has_inn();
  inline void clear_has_inn();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 record_id_;
  ::msg_maj::RoomOption* option_;
  ::msg_maj::InnRecord* inn_;
  ::google::protobuf::RepeatedPtrField< ::msg_maj::SeatTotalScore > score_list_;
  ::google::protobuf::uint32 room_id_;
  friend void  protobuf_AddDesc_msg_5fhistory_2eproto();
  friend void protobuf_AssignDesc_msg_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_msg_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static HistoryInnResp* default_instance_;
};
// -------------------------------------------------------------------

class ReplayReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.ReplayReq) */ {
 public:
  ReplayReq();
  virtual ~ReplayReq();

  ReplayReq(const ReplayReq& from);

  inline ReplayReq& operator=(const ReplayReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplayReq& default_instance();

  void Swap(ReplayReq* other);

  // implements Message ----------------------------------------------

  inline ReplayReq* New() const { return New(NULL); }

  ReplayReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplayReq& from);
  void MergeFrom(const ReplayReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReplayReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 record_id = 1;
  bool has_record_id() const;
  void clear_record_id();
  static const int kRecordIdFieldNumber = 1;
  ::google::protobuf::uint64 record_id() const;
  void set_record_id(::google::protobuf::uint64 value);

  // required uint32 inn_id = 2;
  bool has_inn_id() const;
  void clear_inn_id();
  static const int kInnIdFieldNumber = 2;
  ::google::protobuf::uint32 inn_id() const;
  void set_inn_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:msg_maj.ReplayReq)
 private:
  inline void set_has_record_id();
  inline void clear_has_record_id();
  inline void set_has_inn_id();
  inline void clear_has_inn_id();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 record_id_;
  ::google::protobuf::uint32 inn_id_;
  friend void  protobuf_AddDesc_msg_5fhistory_2eproto();
  friend void protobuf_AssignDesc_msg_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_msg_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static ReplayReq* default_instance_;
};
// -------------------------------------------------------------------

class ReplayResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.ReplayResp) */ {
 public:
  ReplayResp();
  virtual ~ReplayResp();

  ReplayResp(const ReplayResp& from);

  inline ReplayResp& operator=(const ReplayResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplayResp& default_instance();

  void Swap(ReplayResp* other);

  // implements Message ----------------------------------------------

  inline ReplayResp* New() const { return New(NULL); }

  ReplayResp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplayResp& from);
  void MergeFrom(const ReplayResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReplayResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .msg_maj.RoomInfo room_info = 1;
  bool has_room_info() const;
  void clear_room_info();
  static const int kRoomInfoFieldNumber = 1;
  const ::msg_maj::RoomInfo& room_info() const;
  ::msg_maj::RoomInfo* mutable_room_info();
  ::msg_maj::RoomInfo* release_room_info();
  void set_allocated_room_info(::msg_maj::RoomInfo* room_info);

  // repeated .msg_maj.RoleInfo user_info_list = 2;
  int user_info_list_size() const;
  void clear_user_info_list();
  static const int kUserInfoListFieldNumber = 2;
  const ::msg_maj::RoleInfo& user_info_list(int index) const;
  ::msg_maj::RoleInfo* mutable_user_info_list(int index);
  ::msg_maj::RoleInfo* add_user_info_list();
  ::google::protobuf::RepeatedPtrField< ::msg_maj::RoleInfo >*
      mutable_user_info_list();
  const ::google::protobuf::RepeatedPtrField< ::msg_maj::RoleInfo >&
      user_info_list() const;

  // required uint32 banker_seat = 3;
  bool has_banker_seat() const;
  void clear_banker_seat();
  static const int kBankerSeatFieldNumber = 3;
  ::google::protobuf::uint32 banker_seat() const;
  void set_banker_seat(::google::protobuf::uint32 value);

  // required uint32 dice = 4;
  bool has_dice() const;
  void clear_dice();
  static const int kDiceFieldNumber = 4;
  ::google::protobuf::uint32 dice() const;
  void set_dice(::google::protobuf::uint32 value);

  // repeated .msg_maj.SeatInfo seat_list = 5;
  int seat_list_size() const;
  void clear_seat_list();
  static const int kSeatListFieldNumber = 5;
  const ::msg_maj::SeatInfo& seat_list(int index) const;
  ::msg_maj::SeatInfo* mutable_seat_list(int index);
  ::msg_maj::SeatInfo* add_seat_list();
  ::google::protobuf::RepeatedPtrField< ::msg_maj::SeatInfo >*
      mutable_seat_list();
  const ::google::protobuf::RepeatedPtrField< ::msg_maj::SeatInfo >&
      seat_list() const;

  // repeated .msg_maj.ReplayAction action_list = 6;
  int action_list_size() const;
  void clear_action_list();
  static const int kActionListFieldNumber = 6;
  const ::msg_maj::ReplayAction& action_list(int index) const;
  ::msg_maj::ReplayAction* mutable_action_list(int index);
  ::msg_maj::ReplayAction* add_action_list();
  ::google::protobuf::RepeatedPtrField< ::msg_maj::ReplayAction >*
      mutable_action_list();
  const ::google::protobuf::RepeatedPtrField< ::msg_maj::ReplayAction >&
      action_list() const;

  // @@protoc_insertion_point(class_scope:msg_maj.ReplayResp)
 private:
  inline void set_has_room_info();
  inline void clear_has_room_info();
  inline void set_has_banker_seat();
  inline void clear_has_banker_seat();
  inline void set_has_dice();
  inline void clear_has_dice();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::msg_maj::RoomInfo* room_info_;
  ::google::protobuf::RepeatedPtrField< ::msg_maj::RoleInfo > user_info_list_;
  ::google::protobuf::uint32 banker_seat_;
  ::google::protobuf::uint32 dice_;
  ::google::protobuf::RepeatedPtrField< ::msg_maj::SeatInfo > seat_list_;
  ::google::protobuf::RepeatedPtrField< ::msg_maj::ReplayAction > action_list_;
  friend void  protobuf_AddDesc_msg_5fhistory_2eproto();
  friend void protobuf_AssignDesc_msg_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_msg_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static ReplayResp* default_instance_;
};
// -------------------------------------------------------------------

class HistoryRecord : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.HistoryRecord) */ {
 public:
  HistoryRecord();
  virtual ~HistoryRecord();

  HistoryRecord(const HistoryRecord& from);

  inline HistoryRecord& operator=(const HistoryRecord& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HistoryRecord& default_instance();

  void Swap(HistoryRecord* other);

  // implements Message ----------------------------------------------

  inline HistoryRecord* New() const { return New(NULL); }

  HistoryRecord* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HistoryRecord& from);
  void MergeFrom(const HistoryRecord& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HistoryRecord* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 record_id = 1;
  bool has_record_id() const;
  void clear_record_id();
  static const int kRecordIdFieldNumber = 1;
  ::google::protobuf::uint64 record_id() const;
  void set_record_id(::google::protobuf::uint64 value);

  // required uint32 room_id = 2;
  bool has_room_id() const;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 2;
  ::google::protobuf::uint32 room_id() const;
  void set_room_id(::google::protobuf::uint32 value);

  // required .msg_maj.RoomOption option = 3;
  bool has_option() const;
  void clear_option();
  static const int kOptionFieldNumber = 3;
  const ::msg_maj::RoomOption& option() const;
  ::msg_maj::RoomOption* mutable_option();
  ::msg_maj::RoomOption* release_option();
  void set_allocated_option(::msg_maj::RoomOption* option);

  // required uint64 time = 4;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 4;
  ::google::protobuf::uint64 time() const;
  void set_time(::google::protobuf::uint64 value);

  // repeated .msg_maj.SeatTotalScore score_list = 5;
  int score_list_size() const;
  void clear_score_list();
  static const int kScoreListFieldNumber = 5;
  const ::msg_maj::SeatTotalScore& score_list(int index) const;
  ::msg_maj::SeatTotalScore* mutable_score_list(int index);
  ::msg_maj::SeatTotalScore* add_score_list();
  ::google::protobuf::RepeatedPtrField< ::msg_maj::SeatTotalScore >*
      mutable_score_list();
  const ::google::protobuf::RepeatedPtrField< ::msg_maj::SeatTotalScore >&
      score_list() const;

  // @@protoc_insertion_point(class_scope:msg_maj.HistoryRecord)
 private:
  inline void set_has_record_id();
  inline void clear_has_record_id();
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_option();
  inline void clear_has_option();
  inline void set_has_time();
  inline void clear_has_time();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 record_id_;
  ::msg_maj::RoomOption* option_;
  ::google::protobuf::uint64 time_;
  ::google::protobuf::RepeatedPtrField< ::msg_maj::SeatTotalScore > score_list_;
  ::google::protobuf::uint32 room_id_;
  friend void  protobuf_AddDesc_msg_5fhistory_2eproto();
  friend void protobuf_AssignDesc_msg_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_msg_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static HistoryRecord* default_instance_;
};
// -------------------------------------------------------------------

class SeatTotalScore : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.SeatTotalScore) */ {
 public:
  SeatTotalScore();
  virtual ~SeatTotalScore();

  SeatTotalScore(const SeatTotalScore& from);

  inline SeatTotalScore& operator=(const SeatTotalScore& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SeatTotalScore& default_instance();

  void Swap(SeatTotalScore* other);

  // implements Message ----------------------------------------------

  inline SeatTotalScore* New() const { return New(NULL); }

  SeatTotalScore* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SeatTotalScore& from);
  void MergeFrom(const SeatTotalScore& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SeatTotalScore* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 seat_id = 1;
  bool has_seat_id() const;
  void clear_seat_id();
  static const int kSeatIdFieldNumber = 1;
  ::google::protobuf::uint32 seat_id() const;
  void set_seat_id(::google::protobuf::uint32 value);

  // required int32 score = 2;
  bool has_score() const;
  void clear_score();
  static const int kScoreFieldNumber = 2;
  ::google::protobuf::int32 score() const;
  void set_score(::google::protobuf::int32 value);

  // required string nickname = 3;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNicknameFieldNumber = 3;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // optional string actor_addr = 4;
  bool has_actor_addr() const;
  void clear_actor_addr();
  static const int kActorAddrFieldNumber = 4;
  const ::std::string& actor_addr() const;
  void set_actor_addr(const ::std::string& value);
  void set_actor_addr(const char* value);
  void set_actor_addr(const char* value, size_t size);
  ::std::string* mutable_actor_addr();
  ::std::string* release_actor_addr();
  void set_allocated_actor_addr(::std::string* actor_addr);

  // @@protoc_insertion_point(class_scope:msg_maj.SeatTotalScore)
 private:
  inline void set_has_seat_id();
  inline void clear_has_seat_id();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_nickname();
  inline void clear_has_nickname();
  inline void set_has_actor_addr();
  inline void clear_has_actor_addr();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 seat_id_;
  ::google::protobuf::int32 score_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::internal::ArenaStringPtr actor_addr_;
  friend void  protobuf_AddDesc_msg_5fhistory_2eproto();
  friend void protobuf_AssignDesc_msg_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_msg_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static SeatTotalScore* default_instance_;
};
// -------------------------------------------------------------------

class InnRecord : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.InnRecord) */ {
 public:
  InnRecord();
  virtual ~InnRecord();

  InnRecord(const InnRecord& from);

  inline InnRecord& operator=(const InnRecord& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InnRecord& default_instance();

  void Swap(InnRecord* other);

  // implements Message ----------------------------------------------

  inline InnRecord* New() const { return New(NULL); }

  InnRecord* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InnRecord& from);
  void MergeFrom(const InnRecord& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InnRecord* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 inn_id = 1;
  bool has_inn_id() const;
  void clear_inn_id();
  static const int kInnIdFieldNumber = 1;
  ::google::protobuf::uint32 inn_id() const;
  void set_inn_id(::google::protobuf::uint32 value);

  // repeated .msg_maj.GameResultSeat seat_result = 2;
  int seat_result_size() const;
  void clear_seat_result();
  static const int kSeatResultFieldNumber = 2;
  const ::msg_maj::GameResultSeat& seat_result(int index) const;
  ::msg_maj::GameResultSeat* mutable_seat_result(int index);
  ::msg_maj::GameResultSeat* add_seat_result();
  ::google::protobuf::RepeatedPtrField< ::msg_maj::GameResultSeat >*
      mutable_seat_result();
  const ::google::protobuf::RepeatedPtrField< ::msg_maj::GameResultSeat >&
      seat_result() const;

  // required uint32 banker_seat = 3;
  bool has_banker_seat() const;
  void clear_banker_seat();
  static const int kBankerSeatFieldNumber = 3;
  ::google::protobuf::uint32 banker_seat() const;
  void set_banker_seat(::google::protobuf::uint32 value);

  // required uint32 dice = 4;
  bool has_dice() const;
  void clear_dice();
  static const int kDiceFieldNumber = 4;
  ::google::protobuf::uint32 dice() const;
  void set_dice(::google::protobuf::uint32 value);

  // optional uint32 close_type = 5;
  bool has_close_type() const;
  void clear_close_type();
  static const int kCloseTypeFieldNumber = 5;
  ::google::protobuf::uint32 close_type() const;
  void set_close_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:msg_maj.InnRecord)
 private:
  inline void set_has_inn_id();
  inline void clear_has_inn_id();
  inline void set_has_banker_seat();
  inline void clear_has_banker_seat();
  inline void set_has_dice();
  inline void clear_has_dice();
  inline void set_has_close_type();
  inline void clear_has_close_type();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::msg_maj::GameResultSeat > seat_result_;
  ::google::protobuf::uint32 inn_id_;
  ::google::protobuf::uint32 banker_seat_;
  ::google::protobuf::uint32 dice_;
  ::google::protobuf::uint32 close_type_;
  friend void  protobuf_AddDesc_msg_5fhistory_2eproto();
  friend void protobuf_AssignDesc_msg_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_msg_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static InnRecord* default_instance_;
};
// -------------------------------------------------------------------

class ReplayAction : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.ReplayAction) */ {
 public:
  ReplayAction();
  virtual ~ReplayAction();

  ReplayAction(const ReplayAction& from);

  inline ReplayAction& operator=(const ReplayAction& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplayAction& default_instance();

  void Swap(ReplayAction* other);

  // implements Message ----------------------------------------------

  inline ReplayAction* New() const { return New(NULL); }

  ReplayAction* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplayAction& from);
  void MergeFrom(const ReplayAction& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReplayAction* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .msg_maj.event_type event = 1;
  bool has_event() const;
  void clear_event();
  static const int kEventFieldNumber = 1;
  ::msg_maj::event_type event() const;
  void set_event(::msg_maj::event_type value);

  // required uint32 actor_seat = 2;
  bool has_actor_seat() const;
  void clear_actor_seat();
  static const int kActorSeatFieldNumber = 2;
  ::google::protobuf::uint32 actor_seat() const;
  void set_actor_seat(::google::protobuf::uint32 value);

  // optional int32 victim_seat = 3;
  bool has_victim_seat() const;
  void clear_victim_seat();
  static const int kVictimSeatFieldNumber = 3;
  ::google::protobuf::int32 victim_seat() const;
  void set_victim_seat(::google::protobuf::int32 value);

  // optional .msg_maj.HuInfo hu_info = 4;
  bool has_hu_info() const;
  void clear_hu_info();
  static const int kHuInfoFieldNumber = 4;
  const ::msg_maj::HuInfo& hu_info() const;
  ::msg_maj::HuInfo* mutable_hu_info();
  ::msg_maj::HuInfo* release_hu_info();
  void set_allocated_hu_info(::msg_maj::HuInfo* hu_info);

  // repeated uint32 event_tile_list = 5;
  int event_tile_list_size() const;
  void clear_event_tile_list();
  static const int kEventTileListFieldNumber = 5;
  ::google::protobuf::uint32 event_tile_list(int index) const;
  void set_event_tile_list(int index, ::google::protobuf::uint32 value);
  void add_event_tile_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      event_tile_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_event_tile_list();

  // optional int32 desk_tile_count = 6;
  bool has_desk_tile_count() const;
  void clear_desk_tile_count();
  static const int kDeskTileCountFieldNumber = 6;
  ::google::protobuf::int32 desk_tile_count() const;
  void set_desk_tile_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg_maj.ReplayAction)
 private:
  inline void set_has_event();
  inline void clear_has_event();
  inline void set_has_actor_seat();
  inline void clear_has_actor_seat();
  inline void set_has_victim_seat();
  inline void clear_has_victim_seat();
  inline void set_has_hu_info();
  inline void clear_has_hu_info();
  inline void set_has_desk_tile_count();
  inline void clear_has_desk_tile_count();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int event_;
  ::google::protobuf::uint32 actor_seat_;
  ::msg_maj::HuInfo* hu_info_;
  ::google::protobuf::int32 victim_seat_;
  ::google::protobuf::int32 desk_tile_count_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > event_tile_list_;
  friend void  protobuf_AddDesc_msg_5fhistory_2eproto();
  friend void protobuf_AssignDesc_msg_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_msg_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static ReplayAction* default_instance_;
};
// -------------------------------------------------------------------

class HistoryRecordS : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.HistoryRecordS) */ {
 public:
  HistoryRecordS();
  virtual ~HistoryRecordS();

  HistoryRecordS(const HistoryRecordS& from);

  inline HistoryRecordS& operator=(const HistoryRecordS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HistoryRecordS& default_instance();

  void Swap(HistoryRecordS* other);

  // implements Message ----------------------------------------------

  inline HistoryRecordS* New() const { return New(NULL); }

  HistoryRecordS* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HistoryRecordS& from);
  void MergeFrom(const HistoryRecordS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HistoryRecordS* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 record_id = 1;
  bool has_record_id() const;
  void clear_record_id();
  static const int kRecordIdFieldNumber = 1;
  ::google::protobuf::uint64 record_id() const;
  void set_record_id(::google::protobuf::uint64 value);

  // optional uint32 room_id = 2;
  bool has_room_id() const;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 2;
  ::google::protobuf::uint32 room_id() const;
  void set_room_id(::google::protobuf::uint32 value);

  // optional .msg_maj.RoomInfo room_info = 3;
  bool has_room_info() const;
  void clear_room_info();
  static const int kRoomInfoFieldNumber = 3;
  const ::msg_maj::RoomInfo& room_info() const;
  ::msg_maj::RoomInfo* mutable_room_info();
  ::msg_maj::RoomInfo* release_room_info();
  void set_allocated_room_info(::msg_maj::RoomInfo* room_info);

  // optional .msg_maj.RoleInfoListS role_info = 4;
  bool has_role_info() const;
  void clear_role_info();
  static const int kRoleInfoFieldNumber = 4;
  const ::msg_maj::RoleInfoListS& role_info() const;
  ::msg_maj::RoleInfoListS* mutable_role_info();
  ::msg_maj::RoleInfoListS* release_role_info();
  void set_allocated_role_info(::msg_maj::RoleInfoListS* role_info);

  // optional uint64 time = 5;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 5;
  ::google::protobuf::uint64 time() const;
  void set_time(::google::protobuf::uint64 value);

  // optional .msg_maj.InnRecordListS innrecord = 6;
  bool has_innrecord() const;
  void clear_innrecord();
  static const int kInnrecordFieldNumber = 6;
  const ::msg_maj::InnRecordListS& innrecord() const;
  ::msg_maj::InnRecordListS* mutable_innrecord();
  ::msg_maj::InnRecordListS* release_innrecord();
  void set_allocated_innrecord(::msg_maj::InnRecordListS* innrecord);

  // optional .msg_maj.SeatTotalS seat_total = 7;
  bool has_seat_total() const;
  void clear_seat_total();
  static const int kSeatTotalFieldNumber = 7;
  const ::msg_maj::SeatTotalS& seat_total() const;
  ::msg_maj::SeatTotalS* mutable_seat_total();
  ::msg_maj::SeatTotalS* release_seat_total();
  void set_allocated_seat_total(::msg_maj::SeatTotalS* seat_total);

  // optional .msg_maj.InnReplayActionListS inn_replay = 8;
  bool has_inn_replay() const;
  void clear_inn_replay();
  static const int kInnReplayFieldNumber = 8;
  const ::msg_maj::InnReplayActionListS& inn_replay() const;
  ::msg_maj::InnReplayActionListS* mutable_inn_replay();
  ::msg_maj::InnReplayActionListS* release_inn_replay();
  void set_allocated_inn_replay(::msg_maj::InnReplayActionListS* inn_replay);

  // @@protoc_insertion_point(class_scope:msg_maj.HistoryRecordS)
 private:
  inline void set_has_record_id();
  inline void clear_has_record_id();
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_room_info();
  inline void clear_has_room_info();
  inline void set_has_role_info();
  inline void clear_has_role_info();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_innrecord();
  inline void clear_has_innrecord();
  inline void set_has_seat_total();
  inline void clear_has_seat_total();
  inline void set_has_inn_replay();
  inline void clear_has_inn_replay();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 record_id_;
  ::msg_maj::RoomInfo* room_info_;
  ::msg_maj::RoleInfoListS* role_info_;
  ::google::protobuf::uint64 time_;
  ::msg_maj::InnRecordListS* innrecord_;
  ::msg_maj::SeatTotalS* seat_total_;
  ::msg_maj::InnReplayActionListS* inn_replay_;
  ::google::protobuf::uint32 room_id_;
  friend void  protobuf_AddDesc_msg_5fhistory_2eproto();
  friend void protobuf_AssignDesc_msg_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_msg_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static HistoryRecordS* default_instance_;
};
// -------------------------------------------------------------------

class RoleInfoListS : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.RoleInfoListS) */ {
 public:
  RoleInfoListS();
  virtual ~RoleInfoListS();

  RoleInfoListS(const RoleInfoListS& from);

  inline RoleInfoListS& operator=(const RoleInfoListS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleInfoListS& default_instance();

  void Swap(RoleInfoListS* other);

  // implements Message ----------------------------------------------

  inline RoleInfoListS* New() const { return New(NULL); }

  RoleInfoListS* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleInfoListS& from);
  void MergeFrom(const RoleInfoListS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RoleInfoListS* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .msg_maj.RoleInfoS role_list = 1;
  int role_list_size() const;
  void clear_role_list();
  static const int kRoleListFieldNumber = 1;
  const ::msg_maj::RoleInfoS& role_list(int index) const;
  ::msg_maj::RoleInfoS* mutable_role_list(int index);
  ::msg_maj::RoleInfoS* add_role_list();
  ::google::protobuf::RepeatedPtrField< ::msg_maj::RoleInfoS >*
      mutable_role_list();
  const ::google::protobuf::RepeatedPtrField< ::msg_maj::RoleInfoS >&
      role_list() const;

  // @@protoc_insertion_point(class_scope:msg_maj.RoleInfoListS)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::msg_maj::RoleInfoS > role_list_;
  friend void  protobuf_AddDesc_msg_5fhistory_2eproto();
  friend void protobuf_AssignDesc_msg_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_msg_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static RoleInfoListS* default_instance_;
};
// -------------------------------------------------------------------

class RoleInfoS : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.RoleInfoS) */ {
 public:
  RoleInfoS();
  virtual ~RoleInfoS();

  RoleInfoS(const RoleInfoS& from);

  inline RoleInfoS& operator=(const RoleInfoS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleInfoS& default_instance();

  void Swap(RoleInfoS* other);

  // implements Message ----------------------------------------------

  inline RoleInfoS* New() const { return New(NULL); }

  RoleInfoS* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleInfoS& from);
  void MergeFrom(const RoleInfoS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RoleInfoS* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 seat = 1;
  bool has_seat() const;
  void clear_seat();
  static const int kSeatFieldNumber = 1;
  ::google::protobuf::uint32 seat() const;
  void set_seat(::google::protobuf::uint32 value);

  // required uint64 uid = 2;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 2;
  ::google::protobuf::uint64 uid() const;
  void set_uid(::google::protobuf::uint64 value);

  // required string nick = 3;
  bool has_nick() const;
  void clear_nick();
  static const int kNickFieldNumber = 3;
  const ::std::string& nick() const;
  void set_nick(const ::std::string& value);
  void set_nick(const char* value);
  void set_nick(const char* value, size_t size);
  ::std::string* mutable_nick();
  ::std::string* release_nick();
  void set_allocated_nick(::std::string* nick);

  // optional string actor_addr = 4;
  bool has_actor_addr() const;
  void clear_actor_addr();
  static const int kActorAddrFieldNumber = 4;
  const ::std::string& actor_addr() const;
  void set_actor_addr(const ::std::string& value);
  void set_actor_addr(const char* value);
  void set_actor_addr(const char* value, size_t size);
  ::std::string* mutable_actor_addr();
  ::std::string* release_actor_addr();
  void set_allocated_actor_addr(::std::string* actor_addr);

  // @@protoc_insertion_point(class_scope:msg_maj.RoleInfoS)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_nick();
  inline void clear_has_nick();
  inline void set_has_actor_addr();
  inline void clear_has_actor_addr();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 uid_;
  ::google::protobuf::internal::ArenaStringPtr nick_;
  ::google::protobuf::internal::ArenaStringPtr actor_addr_;
  ::google::protobuf::uint32 seat_;
  friend void  protobuf_AddDesc_msg_5fhistory_2eproto();
  friend void protobuf_AssignDesc_msg_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_msg_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static RoleInfoS* default_instance_;
};
// -------------------------------------------------------------------

class InnRecordListS : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.InnRecordListS) */ {
 public:
  InnRecordListS();
  virtual ~InnRecordListS();

  InnRecordListS(const InnRecordListS& from);

  inline InnRecordListS& operator=(const InnRecordListS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InnRecordListS& default_instance();

  void Swap(InnRecordListS* other);

  // implements Message ----------------------------------------------

  inline InnRecordListS* New() const { return New(NULL); }

  InnRecordListS* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InnRecordListS& from);
  void MergeFrom(const InnRecordListS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InnRecordListS* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .msg_maj.InnRecordS inn_list = 1;
  int inn_list_size() const;
  void clear_inn_list();
  static const int kInnListFieldNumber = 1;
  const ::msg_maj::InnRecordS& inn_list(int index) const;
  ::msg_maj::InnRecordS* mutable_inn_list(int index);
  ::msg_maj::InnRecordS* add_inn_list();
  ::google::protobuf::RepeatedPtrField< ::msg_maj::InnRecordS >*
      mutable_inn_list();
  const ::google::protobuf::RepeatedPtrField< ::msg_maj::InnRecordS >&
      inn_list() const;

  // @@protoc_insertion_point(class_scope:msg_maj.InnRecordListS)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::msg_maj::InnRecordS > inn_list_;
  friend void  protobuf_AddDesc_msg_5fhistory_2eproto();
  friend void protobuf_AssignDesc_msg_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_msg_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static InnRecordListS* default_instance_;
};
// -------------------------------------------------------------------

class InnReplayActionListS : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.InnReplayActionListS) */ {
 public:
  InnReplayActionListS();
  virtual ~InnReplayActionListS();

  InnReplayActionListS(const InnReplayActionListS& from);

  inline InnReplayActionListS& operator=(const InnReplayActionListS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InnReplayActionListS& default_instance();

  void Swap(InnReplayActionListS* other);

  // implements Message ----------------------------------------------

  inline InnReplayActionListS* New() const { return New(NULL); }

  InnReplayActionListS* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InnReplayActionListS& from);
  void MergeFrom(const InnReplayActionListS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InnReplayActionListS* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .msg_maj.InnReplayActionS replay_list = 1;
  int replay_list_size() const;
  void clear_replay_list();
  static const int kReplayListFieldNumber = 1;
  const ::msg_maj::InnReplayActionS& replay_list(int index) const;
  ::msg_maj::InnReplayActionS* mutable_replay_list(int index);
  ::msg_maj::InnReplayActionS* add_replay_list();
  ::google::protobuf::RepeatedPtrField< ::msg_maj::InnReplayActionS >*
      mutable_replay_list();
  const ::google::protobuf::RepeatedPtrField< ::msg_maj::InnReplayActionS >&
      replay_list() const;

  // @@protoc_insertion_point(class_scope:msg_maj.InnReplayActionListS)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::msg_maj::InnReplayActionS > replay_list_;
  friend void  protobuf_AddDesc_msg_5fhistory_2eproto();
  friend void protobuf_AssignDesc_msg_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_msg_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static InnReplayActionListS* default_instance_;
};
// -------------------------------------------------------------------

class InnRecordS : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.InnRecordS) */ {
 public:
  InnRecordS();
  virtual ~InnRecordS();

  InnRecordS(const InnRecordS& from);

  inline InnRecordS& operator=(const InnRecordS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InnRecordS& default_instance();

  void Swap(InnRecordS* other);

  // implements Message ----------------------------------------------

  inline InnRecordS* New() const { return New(NULL); }

  InnRecordS* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InnRecordS& from);
  void MergeFrom(const InnRecordS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InnRecordS* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 inn_id = 1;
  bool has_inn_id() const;
  void clear_inn_id();
  static const int kInnIdFieldNumber = 1;
  ::google::protobuf::int32 inn_id() const;
  void set_inn_id(::google::protobuf::int32 value);

  // required uint32 banker_seat = 2;
  bool has_banker_seat() const;
  void clear_banker_seat();
  static const int kBankerSeatFieldNumber = 2;
  ::google::protobuf::uint32 banker_seat() const;
  void set_banker_seat(::google::protobuf::uint32 value);

  // required uint32 dice = 3;
  bool has_dice() const;
  void clear_dice();
  static const int kDiceFieldNumber = 3;
  ::google::protobuf::uint32 dice() const;
  void set_dice(::google::protobuf::uint32 value);

  // repeated .msg_maj.SeatInfo seat_info = 4;
  int seat_info_size() const;
  void clear_seat_info();
  static const int kSeatInfoFieldNumber = 4;
  const ::msg_maj::SeatInfo& seat_info(int index) const;
  ::msg_maj::SeatInfo* mutable_seat_info(int index);
  ::msg_maj::SeatInfo* add_seat_info();
  ::google::protobuf::RepeatedPtrField< ::msg_maj::SeatInfo >*
      mutable_seat_info();
  const ::google::protobuf::RepeatedPtrField< ::msg_maj::SeatInfo >&
      seat_info() const;

  // repeated .msg_maj.GameResultSeat seat_result = 5;
  int seat_result_size() const;
  void clear_seat_result();
  static const int kSeatResultFieldNumber = 5;
  const ::msg_maj::GameResultSeat& seat_result(int index) const;
  ::msg_maj::GameResultSeat* mutable_seat_result(int index);
  ::msg_maj::GameResultSeat* add_seat_result();
  ::google::protobuf::RepeatedPtrField< ::msg_maj::GameResultSeat >*
      mutable_seat_result();
  const ::google::protobuf::RepeatedPtrField< ::msg_maj::GameResultSeat >&
      seat_result() const;

  // optional int32 close_type = 6;
  bool has_close_type() const;
  void clear_close_type();
  static const int kCloseTypeFieldNumber = 6;
  ::google::protobuf::int32 close_type() const;
  void set_close_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg_maj.InnRecordS)
 private:
  inline void set_has_inn_id();
  inline void clear_has_inn_id();
  inline void set_has_banker_seat();
  inline void clear_has_banker_seat();
  inline void set_has_dice();
  inline void clear_has_dice();
  inline void set_has_close_type();
  inline void clear_has_close_type();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 inn_id_;
  ::google::protobuf::uint32 banker_seat_;
  ::google::protobuf::RepeatedPtrField< ::msg_maj::SeatInfo > seat_info_;
  ::google::protobuf::uint32 dice_;
  ::google::protobuf::int32 close_type_;
  ::google::protobuf::RepeatedPtrField< ::msg_maj::GameResultSeat > seat_result_;
  friend void  protobuf_AddDesc_msg_5fhistory_2eproto();
  friend void protobuf_AssignDesc_msg_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_msg_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static InnRecordS* default_instance_;
};
// -------------------------------------------------------------------

class InnReplayActionS : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.InnReplayActionS) */ {
 public:
  InnReplayActionS();
  virtual ~InnReplayActionS();

  InnReplayActionS(const InnReplayActionS& from);

  inline InnReplayActionS& operator=(const InnReplayActionS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InnReplayActionS& default_instance();

  void Swap(InnReplayActionS* other);

  // implements Message ----------------------------------------------

  inline InnReplayActionS* New() const { return New(NULL); }

  InnReplayActionS* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InnReplayActionS& from);
  void MergeFrom(const InnReplayActionS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InnReplayActionS* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 inn_id = 1;
  bool has_inn_id() const;
  void clear_inn_id();
  static const int kInnIdFieldNumber = 1;
  ::google::protobuf::int32 inn_id() const;
  void set_inn_id(::google::protobuf::int32 value);

  // repeated .msg_maj.ReplayAction replay_list = 2;
  int replay_list_size() const;
  void clear_replay_list();
  static const int kReplayListFieldNumber = 2;
  const ::msg_maj::ReplayAction& replay_list(int index) const;
  ::msg_maj::ReplayAction* mutable_replay_list(int index);
  ::msg_maj::ReplayAction* add_replay_list();
  ::google::protobuf::RepeatedPtrField< ::msg_maj::ReplayAction >*
      mutable_replay_list();
  const ::google::protobuf::RepeatedPtrField< ::msg_maj::ReplayAction >&
      replay_list() const;

  // @@protoc_insertion_point(class_scope:msg_maj.InnReplayActionS)
 private:
  inline void set_has_inn_id();
  inline void clear_has_inn_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::msg_maj::ReplayAction > replay_list_;
  ::google::protobuf::int32 inn_id_;
  friend void  protobuf_AddDesc_msg_5fhistory_2eproto();
  friend void protobuf_AssignDesc_msg_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_msg_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static InnReplayActionS* default_instance_;
};
// -------------------------------------------------------------------

class SeatTotalS : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.SeatTotalS) */ {
 public:
  SeatTotalS();
  virtual ~SeatTotalS();

  SeatTotalS(const SeatTotalS& from);

  inline SeatTotalS& operator=(const SeatTotalS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SeatTotalS& default_instance();

  void Swap(SeatTotalS* other);

  // implements Message ----------------------------------------------

  inline SeatTotalS* New() const { return New(NULL); }

  SeatTotalS* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SeatTotalS& from);
  void MergeFrom(const SeatTotalS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SeatTotalS* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .msg_maj.SeatTotalScoreS score_list = 1;
  int score_list_size() const;
  void clear_score_list();
  static const int kScoreListFieldNumber = 1;
  const ::msg_maj::SeatTotalScoreS& score_list(int index) const;
  ::msg_maj::SeatTotalScoreS* mutable_score_list(int index);
  ::msg_maj::SeatTotalScoreS* add_score_list();
  ::google::protobuf::RepeatedPtrField< ::msg_maj::SeatTotalScoreS >*
      mutable_score_list();
  const ::google::protobuf::RepeatedPtrField< ::msg_maj::SeatTotalScoreS >&
      score_list() const;

  // @@protoc_insertion_point(class_scope:msg_maj.SeatTotalS)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::msg_maj::SeatTotalScoreS > score_list_;
  friend void  protobuf_AddDesc_msg_5fhistory_2eproto();
  friend void protobuf_AssignDesc_msg_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_msg_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static SeatTotalS* default_instance_;
};
// -------------------------------------------------------------------

class SeatTotalScoreS : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg_maj.SeatTotalScoreS) */ {
 public:
  SeatTotalScoreS();
  virtual ~SeatTotalScoreS();

  SeatTotalScoreS(const SeatTotalScoreS& from);

  inline SeatTotalScoreS& operator=(const SeatTotalScoreS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SeatTotalScoreS& default_instance();

  void Swap(SeatTotalScoreS* other);

  // implements Message ----------------------------------------------

  inline SeatTotalScoreS* New() const { return New(NULL); }

  SeatTotalScoreS* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SeatTotalScoreS& from);
  void MergeFrom(const SeatTotalScoreS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SeatTotalScoreS* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 seat_id = 1;
  bool has_seat_id() const;
  void clear_seat_id();
  static const int kSeatIdFieldNumber = 1;
  ::google::protobuf::uint32 seat_id() const;
  void set_seat_id(::google::protobuf::uint32 value);

  // required int32 score = 2;
  bool has_score() const;
  void clear_score();
  static const int kScoreFieldNumber = 2;
  ::google::protobuf::int32 score() const;
  void set_score(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg_maj.SeatTotalScoreS)
 private:
  inline void set_has_seat_id();
  inline void clear_has_seat_id();
  inline void set_has_score();
  inline void clear_has_score();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 seat_id_;
  ::google::protobuf::int32 score_;
  friend void  protobuf_AddDesc_msg_5fhistory_2eproto();
  friend void protobuf_AssignDesc_msg_5fhistory_2eproto();
  friend void protobuf_ShutdownFile_msg_5fhistory_2eproto();

  void InitAsDefaultInstance();
  static SeatTotalScoreS* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// HistoryListReq

// required .msg_maj.req_type type = 1;
inline bool HistoryListReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HistoryListReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HistoryListReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HistoryListReq::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::msg_maj::req_type HistoryListReq::type() const {
  // @@protoc_insertion_point(field_get:msg_maj.HistoryListReq.type)
  return static_cast< ::msg_maj::req_type >(type_);
}
inline void HistoryListReq::set_type(::msg_maj::req_type value) {
  assert(::msg_maj::req_type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.HistoryListReq.type)
}

// required uint64 start_index = 2;
inline bool HistoryListReq::has_start_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HistoryListReq::set_has_start_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HistoryListReq::clear_has_start_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HistoryListReq::clear_start_index() {
  start_index_ = GOOGLE_ULONGLONG(0);
  clear_has_start_index();
}
inline ::google::protobuf::uint64 HistoryListReq::start_index() const {
  // @@protoc_insertion_point(field_get:msg_maj.HistoryListReq.start_index)
  return start_index_;
}
inline void HistoryListReq::set_start_index(::google::protobuf::uint64 value) {
  set_has_start_index();
  start_index_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.HistoryListReq.start_index)
}

// -------------------------------------------------------------------

// HistoryListResp

// required .msg_maj.req_type type = 1;
inline bool HistoryListResp::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HistoryListResp::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HistoryListResp::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HistoryListResp::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::msg_maj::req_type HistoryListResp::type() const {
  // @@protoc_insertion_point(field_get:msg_maj.HistoryListResp.type)
  return static_cast< ::msg_maj::req_type >(type_);
}
inline void HistoryListResp::set_type(::msg_maj::req_type value) {
  assert(::msg_maj::req_type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.HistoryListResp.type)
}

// repeated .msg_maj.HistoryRecord record_list = 2;
inline int HistoryListResp::record_list_size() const {
  return record_list_.size();
}
inline void HistoryListResp::clear_record_list() {
  record_list_.Clear();
}
inline const ::msg_maj::HistoryRecord& HistoryListResp::record_list(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.HistoryListResp.record_list)
  return record_list_.Get(index);
}
inline ::msg_maj::HistoryRecord* HistoryListResp::mutable_record_list(int index) {
  // @@protoc_insertion_point(field_mutable:msg_maj.HistoryListResp.record_list)
  return record_list_.Mutable(index);
}
inline ::msg_maj::HistoryRecord* HistoryListResp::add_record_list() {
  // @@protoc_insertion_point(field_add:msg_maj.HistoryListResp.record_list)
  return record_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::msg_maj::HistoryRecord >*
HistoryListResp::mutable_record_list() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.HistoryListResp.record_list)
  return &record_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::msg_maj::HistoryRecord >&
HistoryListResp::record_list() const {
  // @@protoc_insertion_point(field_list:msg_maj.HistoryListResp.record_list)
  return record_list_;
}

// -------------------------------------------------------------------

// HistoryRoomReq

// required .msg_maj.req_type type = 1;
inline bool HistoryRoomReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HistoryRoomReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HistoryRoomReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HistoryRoomReq::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::msg_maj::req_type HistoryRoomReq::type() const {
  // @@protoc_insertion_point(field_get:msg_maj.HistoryRoomReq.type)
  return static_cast< ::msg_maj::req_type >(type_);
}
inline void HistoryRoomReq::set_type(::msg_maj::req_type value) {
  assert(::msg_maj::req_type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.HistoryRoomReq.type)
}

// required uint64 record_id = 2;
inline bool HistoryRoomReq::has_record_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HistoryRoomReq::set_has_record_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HistoryRoomReq::clear_has_record_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HistoryRoomReq::clear_record_id() {
  record_id_ = GOOGLE_ULONGLONG(0);
  clear_has_record_id();
}
inline ::google::protobuf::uint64 HistoryRoomReq::record_id() const {
  // @@protoc_insertion_point(field_get:msg_maj.HistoryRoomReq.record_id)
  return record_id_;
}
inline void HistoryRoomReq::set_record_id(::google::protobuf::uint64 value) {
  set_has_record_id();
  record_id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.HistoryRoomReq.record_id)
}

// -------------------------------------------------------------------

// HistoryRoomResp

// required .msg_maj.req_type type = 1;
inline bool HistoryRoomResp::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HistoryRoomResp::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HistoryRoomResp::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HistoryRoomResp::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::msg_maj::req_type HistoryRoomResp::type() const {
  // @@protoc_insertion_point(field_get:msg_maj.HistoryRoomResp.type)
  return static_cast< ::msg_maj::req_type >(type_);
}
inline void HistoryRoomResp::set_type(::msg_maj::req_type value) {
  assert(::msg_maj::req_type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.HistoryRoomResp.type)
}

// required uint64 record_id = 2;
inline bool HistoryRoomResp::has_record_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HistoryRoomResp::set_has_record_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HistoryRoomResp::clear_has_record_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HistoryRoomResp::clear_record_id() {
  record_id_ = GOOGLE_ULONGLONG(0);
  clear_has_record_id();
}
inline ::google::protobuf::uint64 HistoryRoomResp::record_id() const {
  // @@protoc_insertion_point(field_get:msg_maj.HistoryRoomResp.record_id)
  return record_id_;
}
inline void HistoryRoomResp::set_record_id(::google::protobuf::uint64 value) {
  set_has_record_id();
  record_id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.HistoryRoomResp.record_id)
}

// required uint32 room_id = 3;
inline bool HistoryRoomResp::has_room_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HistoryRoomResp::set_has_room_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HistoryRoomResp::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HistoryRoomResp::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 HistoryRoomResp::room_id() const {
  // @@protoc_insertion_point(field_get:msg_maj.HistoryRoomResp.room_id)
  return room_id_;
}
inline void HistoryRoomResp::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.HistoryRoomResp.room_id)
}

// required .msg_maj.RoomOption option = 4;
inline bool HistoryRoomResp::has_option() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HistoryRoomResp::set_has_option() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HistoryRoomResp::clear_has_option() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HistoryRoomResp::clear_option() {
  if (option_ != NULL) option_->::msg_maj::RoomOption::Clear();
  clear_has_option();
}
inline const ::msg_maj::RoomOption& HistoryRoomResp::option() const {
  // @@protoc_insertion_point(field_get:msg_maj.HistoryRoomResp.option)
  return option_ != NULL ? *option_ : *default_instance_->option_;
}
inline ::msg_maj::RoomOption* HistoryRoomResp::mutable_option() {
  set_has_option();
  if (option_ == NULL) {
    option_ = new ::msg_maj::RoomOption;
  }
  // @@protoc_insertion_point(field_mutable:msg_maj.HistoryRoomResp.option)
  return option_;
}
inline ::msg_maj::RoomOption* HistoryRoomResp::release_option() {
  // @@protoc_insertion_point(field_release:msg_maj.HistoryRoomResp.option)
  clear_has_option();
  ::msg_maj::RoomOption* temp = option_;
  option_ = NULL;
  return temp;
}
inline void HistoryRoomResp::set_allocated_option(::msg_maj::RoomOption* option) {
  delete option_;
  option_ = option;
  if (option) {
    set_has_option();
  } else {
    clear_has_option();
  }
  // @@protoc_insertion_point(field_set_allocated:msg_maj.HistoryRoomResp.option)
}

// repeated .msg_maj.InnRecord inn_list = 5;
inline int HistoryRoomResp::inn_list_size() const {
  return inn_list_.size();
}
inline void HistoryRoomResp::clear_inn_list() {
  inn_list_.Clear();
}
inline const ::msg_maj::InnRecord& HistoryRoomResp::inn_list(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.HistoryRoomResp.inn_list)
  return inn_list_.Get(index);
}
inline ::msg_maj::InnRecord* HistoryRoomResp::mutable_inn_list(int index) {
  // @@protoc_insertion_point(field_mutable:msg_maj.HistoryRoomResp.inn_list)
  return inn_list_.Mutable(index);
}
inline ::msg_maj::InnRecord* HistoryRoomResp::add_inn_list() {
  // @@protoc_insertion_point(field_add:msg_maj.HistoryRoomResp.inn_list)
  return inn_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::msg_maj::InnRecord >*
HistoryRoomResp::mutable_inn_list() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.HistoryRoomResp.inn_list)
  return &inn_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::msg_maj::InnRecord >&
HistoryRoomResp::inn_list() const {
  // @@protoc_insertion_point(field_list:msg_maj.HistoryRoomResp.inn_list)
  return inn_list_;
}

// repeated .msg_maj.SeatTotalScore score_list = 6;
inline int HistoryRoomResp::score_list_size() const {
  return score_list_.size();
}
inline void HistoryRoomResp::clear_score_list() {
  score_list_.Clear();
}
inline const ::msg_maj::SeatTotalScore& HistoryRoomResp::score_list(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.HistoryRoomResp.score_list)
  return score_list_.Get(index);
}
inline ::msg_maj::SeatTotalScore* HistoryRoomResp::mutable_score_list(int index) {
  // @@protoc_insertion_point(field_mutable:msg_maj.HistoryRoomResp.score_list)
  return score_list_.Mutable(index);
}
inline ::msg_maj::SeatTotalScore* HistoryRoomResp::add_score_list() {
  // @@protoc_insertion_point(field_add:msg_maj.HistoryRoomResp.score_list)
  return score_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::msg_maj::SeatTotalScore >*
HistoryRoomResp::mutable_score_list() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.HistoryRoomResp.score_list)
  return &score_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::msg_maj::SeatTotalScore >&
HistoryRoomResp::score_list() const {
  // @@protoc_insertion_point(field_list:msg_maj.HistoryRoomResp.score_list)
  return score_list_;
}

// -------------------------------------------------------------------

// HistoryInnReq

// required uint64 record_id = 1;
inline bool HistoryInnReq::has_record_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HistoryInnReq::set_has_record_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HistoryInnReq::clear_has_record_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HistoryInnReq::clear_record_id() {
  record_id_ = GOOGLE_ULONGLONG(0);
  clear_has_record_id();
}
inline ::google::protobuf::uint64 HistoryInnReq::record_id() const {
  // @@protoc_insertion_point(field_get:msg_maj.HistoryInnReq.record_id)
  return record_id_;
}
inline void HistoryInnReq::set_record_id(::google::protobuf::uint64 value) {
  set_has_record_id();
  record_id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.HistoryInnReq.record_id)
}

// required uint32 inn_id = 2;
inline bool HistoryInnReq::has_inn_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HistoryInnReq::set_has_inn_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HistoryInnReq::clear_has_inn_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HistoryInnReq::clear_inn_id() {
  inn_id_ = 0u;
  clear_has_inn_id();
}
inline ::google::protobuf::uint32 HistoryInnReq::inn_id() const {
  // @@protoc_insertion_point(field_get:msg_maj.HistoryInnReq.inn_id)
  return inn_id_;
}
inline void HistoryInnReq::set_inn_id(::google::protobuf::uint32 value) {
  set_has_inn_id();
  inn_id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.HistoryInnReq.inn_id)
}

// -------------------------------------------------------------------

// HistoryInnResp

// required uint64 record_id = 2;
inline bool HistoryInnResp::has_record_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HistoryInnResp::set_has_record_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HistoryInnResp::clear_has_record_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HistoryInnResp::clear_record_id() {
  record_id_ = GOOGLE_ULONGLONG(0);
  clear_has_record_id();
}
inline ::google::protobuf::uint64 HistoryInnResp::record_id() const {
  // @@protoc_insertion_point(field_get:msg_maj.HistoryInnResp.record_id)
  return record_id_;
}
inline void HistoryInnResp::set_record_id(::google::protobuf::uint64 value) {
  set_has_record_id();
  record_id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.HistoryInnResp.record_id)
}

// required uint32 room_id = 3;
inline bool HistoryInnResp::has_room_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HistoryInnResp::set_has_room_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HistoryInnResp::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HistoryInnResp::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 HistoryInnResp::room_id() const {
  // @@protoc_insertion_point(field_get:msg_maj.HistoryInnResp.room_id)
  return room_id_;
}
inline void HistoryInnResp::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.HistoryInnResp.room_id)
}

// required .msg_maj.RoomOption option = 4;
inline bool HistoryInnResp::has_option() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HistoryInnResp::set_has_option() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HistoryInnResp::clear_has_option() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HistoryInnResp::clear_option() {
  if (option_ != NULL) option_->::msg_maj::RoomOption::Clear();
  clear_has_option();
}
inline const ::msg_maj::RoomOption& HistoryInnResp::option() const {
  // @@protoc_insertion_point(field_get:msg_maj.HistoryInnResp.option)
  return option_ != NULL ? *option_ : *default_instance_->option_;
}
inline ::msg_maj::RoomOption* HistoryInnResp::mutable_option() {
  set_has_option();
  if (option_ == NULL) {
    option_ = new ::msg_maj::RoomOption;
  }
  // @@protoc_insertion_point(field_mutable:msg_maj.HistoryInnResp.option)
  return option_;
}
inline ::msg_maj::RoomOption* HistoryInnResp::release_option() {
  // @@protoc_insertion_point(field_release:msg_maj.HistoryInnResp.option)
  clear_has_option();
  ::msg_maj::RoomOption* temp = option_;
  option_ = NULL;
  return temp;
}
inline void HistoryInnResp::set_allocated_option(::msg_maj::RoomOption* option) {
  delete option_;
  option_ = option;
  if (option) {
    set_has_option();
  } else {
    clear_has_option();
  }
  // @@protoc_insertion_point(field_set_allocated:msg_maj.HistoryInnResp.option)
}

// required .msg_maj.InnRecord inn = 5;
inline bool HistoryInnResp::has_inn() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HistoryInnResp::set_has_inn() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HistoryInnResp::clear_has_inn() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HistoryInnResp::clear_inn() {
  if (inn_ != NULL) inn_->::msg_maj::InnRecord::Clear();
  clear_has_inn();
}
inline const ::msg_maj::InnRecord& HistoryInnResp::inn() const {
  // @@protoc_insertion_point(field_get:msg_maj.HistoryInnResp.inn)
  return inn_ != NULL ? *inn_ : *default_instance_->inn_;
}
inline ::msg_maj::InnRecord* HistoryInnResp::mutable_inn() {
  set_has_inn();
  if (inn_ == NULL) {
    inn_ = new ::msg_maj::InnRecord;
  }
  // @@protoc_insertion_point(field_mutable:msg_maj.HistoryInnResp.inn)
  return inn_;
}
inline ::msg_maj::InnRecord* HistoryInnResp::release_inn() {
  // @@protoc_insertion_point(field_release:msg_maj.HistoryInnResp.inn)
  clear_has_inn();
  ::msg_maj::InnRecord* temp = inn_;
  inn_ = NULL;
  return temp;
}
inline void HistoryInnResp::set_allocated_inn(::msg_maj::InnRecord* inn) {
  delete inn_;
  inn_ = inn;
  if (inn) {
    set_has_inn();
  } else {
    clear_has_inn();
  }
  // @@protoc_insertion_point(field_set_allocated:msg_maj.HistoryInnResp.inn)
}

// repeated .msg_maj.SeatTotalScore score_list = 6;
inline int HistoryInnResp::score_list_size() const {
  return score_list_.size();
}
inline void HistoryInnResp::clear_score_list() {
  score_list_.Clear();
}
inline const ::msg_maj::SeatTotalScore& HistoryInnResp::score_list(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.HistoryInnResp.score_list)
  return score_list_.Get(index);
}
inline ::msg_maj::SeatTotalScore* HistoryInnResp::mutable_score_list(int index) {
  // @@protoc_insertion_point(field_mutable:msg_maj.HistoryInnResp.score_list)
  return score_list_.Mutable(index);
}
inline ::msg_maj::SeatTotalScore* HistoryInnResp::add_score_list() {
  // @@protoc_insertion_point(field_add:msg_maj.HistoryInnResp.score_list)
  return score_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::msg_maj::SeatTotalScore >*
HistoryInnResp::mutable_score_list() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.HistoryInnResp.score_list)
  return &score_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::msg_maj::SeatTotalScore >&
HistoryInnResp::score_list() const {
  // @@protoc_insertion_point(field_list:msg_maj.HistoryInnResp.score_list)
  return score_list_;
}

// -------------------------------------------------------------------

// ReplayReq

// required uint64 record_id = 1;
inline bool ReplayReq::has_record_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReplayReq::set_has_record_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReplayReq::clear_has_record_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReplayReq::clear_record_id() {
  record_id_ = GOOGLE_ULONGLONG(0);
  clear_has_record_id();
}
inline ::google::protobuf::uint64 ReplayReq::record_id() const {
  // @@protoc_insertion_point(field_get:msg_maj.ReplayReq.record_id)
  return record_id_;
}
inline void ReplayReq::set_record_id(::google::protobuf::uint64 value) {
  set_has_record_id();
  record_id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.ReplayReq.record_id)
}

// required uint32 inn_id = 2;
inline bool ReplayReq::has_inn_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReplayReq::set_has_inn_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReplayReq::clear_has_inn_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReplayReq::clear_inn_id() {
  inn_id_ = 0u;
  clear_has_inn_id();
}
inline ::google::protobuf::uint32 ReplayReq::inn_id() const {
  // @@protoc_insertion_point(field_get:msg_maj.ReplayReq.inn_id)
  return inn_id_;
}
inline void ReplayReq::set_inn_id(::google::protobuf::uint32 value) {
  set_has_inn_id();
  inn_id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.ReplayReq.inn_id)
}

// -------------------------------------------------------------------

// ReplayResp

// required .msg_maj.RoomInfo room_info = 1;
inline bool ReplayResp::has_room_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReplayResp::set_has_room_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReplayResp::clear_has_room_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReplayResp::clear_room_info() {
  if (room_info_ != NULL) room_info_->::msg_maj::RoomInfo::Clear();
  clear_has_room_info();
}
inline const ::msg_maj::RoomInfo& ReplayResp::room_info() const {
  // @@protoc_insertion_point(field_get:msg_maj.ReplayResp.room_info)
  return room_info_ != NULL ? *room_info_ : *default_instance_->room_info_;
}
inline ::msg_maj::RoomInfo* ReplayResp::mutable_room_info() {
  set_has_room_info();
  if (room_info_ == NULL) {
    room_info_ = new ::msg_maj::RoomInfo;
  }
  // @@protoc_insertion_point(field_mutable:msg_maj.ReplayResp.room_info)
  return room_info_;
}
inline ::msg_maj::RoomInfo* ReplayResp::release_room_info() {
  // @@protoc_insertion_point(field_release:msg_maj.ReplayResp.room_info)
  clear_has_room_info();
  ::msg_maj::RoomInfo* temp = room_info_;
  room_info_ = NULL;
  return temp;
}
inline void ReplayResp::set_allocated_room_info(::msg_maj::RoomInfo* room_info) {
  delete room_info_;
  room_info_ = room_info;
  if (room_info) {
    set_has_room_info();
  } else {
    clear_has_room_info();
  }
  // @@protoc_insertion_point(field_set_allocated:msg_maj.ReplayResp.room_info)
}

// repeated .msg_maj.RoleInfo user_info_list = 2;
inline int ReplayResp::user_info_list_size() const {
  return user_info_list_.size();
}
inline void ReplayResp::clear_user_info_list() {
  user_info_list_.Clear();
}
inline const ::msg_maj::RoleInfo& ReplayResp::user_info_list(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.ReplayResp.user_info_list)
  return user_info_list_.Get(index);
}
inline ::msg_maj::RoleInfo* ReplayResp::mutable_user_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:msg_maj.ReplayResp.user_info_list)
  return user_info_list_.Mutable(index);
}
inline ::msg_maj::RoleInfo* ReplayResp::add_user_info_list() {
  // @@protoc_insertion_point(field_add:msg_maj.ReplayResp.user_info_list)
  return user_info_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::msg_maj::RoleInfo >*
ReplayResp::mutable_user_info_list() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.ReplayResp.user_info_list)
  return &user_info_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::msg_maj::RoleInfo >&
ReplayResp::user_info_list() const {
  // @@protoc_insertion_point(field_list:msg_maj.ReplayResp.user_info_list)
  return user_info_list_;
}

// required uint32 banker_seat = 3;
inline bool ReplayResp::has_banker_seat() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReplayResp::set_has_banker_seat() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReplayResp::clear_has_banker_seat() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReplayResp::clear_banker_seat() {
  banker_seat_ = 0u;
  clear_has_banker_seat();
}
inline ::google::protobuf::uint32 ReplayResp::banker_seat() const {
  // @@protoc_insertion_point(field_get:msg_maj.ReplayResp.banker_seat)
  return banker_seat_;
}
inline void ReplayResp::set_banker_seat(::google::protobuf::uint32 value) {
  set_has_banker_seat();
  banker_seat_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.ReplayResp.banker_seat)
}

// required uint32 dice = 4;
inline bool ReplayResp::has_dice() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReplayResp::set_has_dice() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReplayResp::clear_has_dice() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReplayResp::clear_dice() {
  dice_ = 0u;
  clear_has_dice();
}
inline ::google::protobuf::uint32 ReplayResp::dice() const {
  // @@protoc_insertion_point(field_get:msg_maj.ReplayResp.dice)
  return dice_;
}
inline void ReplayResp::set_dice(::google::protobuf::uint32 value) {
  set_has_dice();
  dice_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.ReplayResp.dice)
}

// repeated .msg_maj.SeatInfo seat_list = 5;
inline int ReplayResp::seat_list_size() const {
  return seat_list_.size();
}
inline void ReplayResp::clear_seat_list() {
  seat_list_.Clear();
}
inline const ::msg_maj::SeatInfo& ReplayResp::seat_list(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.ReplayResp.seat_list)
  return seat_list_.Get(index);
}
inline ::msg_maj::SeatInfo* ReplayResp::mutable_seat_list(int index) {
  // @@protoc_insertion_point(field_mutable:msg_maj.ReplayResp.seat_list)
  return seat_list_.Mutable(index);
}
inline ::msg_maj::SeatInfo* ReplayResp::add_seat_list() {
  // @@protoc_insertion_point(field_add:msg_maj.ReplayResp.seat_list)
  return seat_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::msg_maj::SeatInfo >*
ReplayResp::mutable_seat_list() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.ReplayResp.seat_list)
  return &seat_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::msg_maj::SeatInfo >&
ReplayResp::seat_list() const {
  // @@protoc_insertion_point(field_list:msg_maj.ReplayResp.seat_list)
  return seat_list_;
}

// repeated .msg_maj.ReplayAction action_list = 6;
inline int ReplayResp::action_list_size() const {
  return action_list_.size();
}
inline void ReplayResp::clear_action_list() {
  action_list_.Clear();
}
inline const ::msg_maj::ReplayAction& ReplayResp::action_list(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.ReplayResp.action_list)
  return action_list_.Get(index);
}
inline ::msg_maj::ReplayAction* ReplayResp::mutable_action_list(int index) {
  // @@protoc_insertion_point(field_mutable:msg_maj.ReplayResp.action_list)
  return action_list_.Mutable(index);
}
inline ::msg_maj::ReplayAction* ReplayResp::add_action_list() {
  // @@protoc_insertion_point(field_add:msg_maj.ReplayResp.action_list)
  return action_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::msg_maj::ReplayAction >*
ReplayResp::mutable_action_list() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.ReplayResp.action_list)
  return &action_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::msg_maj::ReplayAction >&
ReplayResp::action_list() const {
  // @@protoc_insertion_point(field_list:msg_maj.ReplayResp.action_list)
  return action_list_;
}

// -------------------------------------------------------------------

// HistoryRecord

// required uint64 record_id = 1;
inline bool HistoryRecord::has_record_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HistoryRecord::set_has_record_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HistoryRecord::clear_has_record_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HistoryRecord::clear_record_id() {
  record_id_ = GOOGLE_ULONGLONG(0);
  clear_has_record_id();
}
inline ::google::protobuf::uint64 HistoryRecord::record_id() const {
  // @@protoc_insertion_point(field_get:msg_maj.HistoryRecord.record_id)
  return record_id_;
}
inline void HistoryRecord::set_record_id(::google::protobuf::uint64 value) {
  set_has_record_id();
  record_id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.HistoryRecord.record_id)
}

// required uint32 room_id = 2;
inline bool HistoryRecord::has_room_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HistoryRecord::set_has_room_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HistoryRecord::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HistoryRecord::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 HistoryRecord::room_id() const {
  // @@protoc_insertion_point(field_get:msg_maj.HistoryRecord.room_id)
  return room_id_;
}
inline void HistoryRecord::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.HistoryRecord.room_id)
}

// required .msg_maj.RoomOption option = 3;
inline bool HistoryRecord::has_option() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HistoryRecord::set_has_option() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HistoryRecord::clear_has_option() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HistoryRecord::clear_option() {
  if (option_ != NULL) option_->::msg_maj::RoomOption::Clear();
  clear_has_option();
}
inline const ::msg_maj::RoomOption& HistoryRecord::option() const {
  // @@protoc_insertion_point(field_get:msg_maj.HistoryRecord.option)
  return option_ != NULL ? *option_ : *default_instance_->option_;
}
inline ::msg_maj::RoomOption* HistoryRecord::mutable_option() {
  set_has_option();
  if (option_ == NULL) {
    option_ = new ::msg_maj::RoomOption;
  }
  // @@protoc_insertion_point(field_mutable:msg_maj.HistoryRecord.option)
  return option_;
}
inline ::msg_maj::RoomOption* HistoryRecord::release_option() {
  // @@protoc_insertion_point(field_release:msg_maj.HistoryRecord.option)
  clear_has_option();
  ::msg_maj::RoomOption* temp = option_;
  option_ = NULL;
  return temp;
}
inline void HistoryRecord::set_allocated_option(::msg_maj::RoomOption* option) {
  delete option_;
  option_ = option;
  if (option) {
    set_has_option();
  } else {
    clear_has_option();
  }
  // @@protoc_insertion_point(field_set_allocated:msg_maj.HistoryRecord.option)
}

// required uint64 time = 4;
inline bool HistoryRecord::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HistoryRecord::set_has_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HistoryRecord::clear_has_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HistoryRecord::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::uint64 HistoryRecord::time() const {
  // @@protoc_insertion_point(field_get:msg_maj.HistoryRecord.time)
  return time_;
}
inline void HistoryRecord::set_time(::google::protobuf::uint64 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.HistoryRecord.time)
}

// repeated .msg_maj.SeatTotalScore score_list = 5;
inline int HistoryRecord::score_list_size() const {
  return score_list_.size();
}
inline void HistoryRecord::clear_score_list() {
  score_list_.Clear();
}
inline const ::msg_maj::SeatTotalScore& HistoryRecord::score_list(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.HistoryRecord.score_list)
  return score_list_.Get(index);
}
inline ::msg_maj::SeatTotalScore* HistoryRecord::mutable_score_list(int index) {
  // @@protoc_insertion_point(field_mutable:msg_maj.HistoryRecord.score_list)
  return score_list_.Mutable(index);
}
inline ::msg_maj::SeatTotalScore* HistoryRecord::add_score_list() {
  // @@protoc_insertion_point(field_add:msg_maj.HistoryRecord.score_list)
  return score_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::msg_maj::SeatTotalScore >*
HistoryRecord::mutable_score_list() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.HistoryRecord.score_list)
  return &score_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::msg_maj::SeatTotalScore >&
HistoryRecord::score_list() const {
  // @@protoc_insertion_point(field_list:msg_maj.HistoryRecord.score_list)
  return score_list_;
}

// -------------------------------------------------------------------

// SeatTotalScore

// required uint32 seat_id = 1;
inline bool SeatTotalScore::has_seat_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SeatTotalScore::set_has_seat_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SeatTotalScore::clear_has_seat_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SeatTotalScore::clear_seat_id() {
  seat_id_ = 0u;
  clear_has_seat_id();
}
inline ::google::protobuf::uint32 SeatTotalScore::seat_id() const {
  // @@protoc_insertion_point(field_get:msg_maj.SeatTotalScore.seat_id)
  return seat_id_;
}
inline void SeatTotalScore::set_seat_id(::google::protobuf::uint32 value) {
  set_has_seat_id();
  seat_id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.SeatTotalScore.seat_id)
}

// required int32 score = 2;
inline bool SeatTotalScore::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SeatTotalScore::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SeatTotalScore::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SeatTotalScore::clear_score() {
  score_ = 0;
  clear_has_score();
}
inline ::google::protobuf::int32 SeatTotalScore::score() const {
  // @@protoc_insertion_point(field_get:msg_maj.SeatTotalScore.score)
  return score_;
}
inline void SeatTotalScore::set_score(::google::protobuf::int32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.SeatTotalScore.score)
}

// required string nickname = 3;
inline bool SeatTotalScore::has_nickname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SeatTotalScore::set_has_nickname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SeatTotalScore::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SeatTotalScore::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& SeatTotalScore::nickname() const {
  // @@protoc_insertion_point(field_get:msg_maj.SeatTotalScore.nickname)
  return nickname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SeatTotalScore::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.SeatTotalScore.nickname)
}
inline void SeatTotalScore::set_nickname(const char* value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.SeatTotalScore.nickname)
}
inline void SeatTotalScore::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.SeatTotalScore.nickname)
}
inline ::std::string* SeatTotalScore::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:msg_maj.SeatTotalScore.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SeatTotalScore::release_nickname() {
  // @@protoc_insertion_point(field_release:msg_maj.SeatTotalScore.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SeatTotalScore::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.SeatTotalScore.nickname)
}

// optional string actor_addr = 4;
inline bool SeatTotalScore::has_actor_addr() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SeatTotalScore::set_has_actor_addr() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SeatTotalScore::clear_has_actor_addr() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SeatTotalScore::clear_actor_addr() {
  actor_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_actor_addr();
}
inline const ::std::string& SeatTotalScore::actor_addr() const {
  // @@protoc_insertion_point(field_get:msg_maj.SeatTotalScore.actor_addr)
  return actor_addr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SeatTotalScore::set_actor_addr(const ::std::string& value) {
  set_has_actor_addr();
  actor_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.SeatTotalScore.actor_addr)
}
inline void SeatTotalScore::set_actor_addr(const char* value) {
  set_has_actor_addr();
  actor_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.SeatTotalScore.actor_addr)
}
inline void SeatTotalScore::set_actor_addr(const char* value, size_t size) {
  set_has_actor_addr();
  actor_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.SeatTotalScore.actor_addr)
}
inline ::std::string* SeatTotalScore::mutable_actor_addr() {
  set_has_actor_addr();
  // @@protoc_insertion_point(field_mutable:msg_maj.SeatTotalScore.actor_addr)
  return actor_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SeatTotalScore::release_actor_addr() {
  // @@protoc_insertion_point(field_release:msg_maj.SeatTotalScore.actor_addr)
  clear_has_actor_addr();
  return actor_addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SeatTotalScore::set_allocated_actor_addr(::std::string* actor_addr) {
  if (actor_addr != NULL) {
    set_has_actor_addr();
  } else {
    clear_has_actor_addr();
  }
  actor_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), actor_addr);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.SeatTotalScore.actor_addr)
}

// -------------------------------------------------------------------

// InnRecord

// required uint32 inn_id = 1;
inline bool InnRecord::has_inn_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InnRecord::set_has_inn_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InnRecord::clear_has_inn_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InnRecord::clear_inn_id() {
  inn_id_ = 0u;
  clear_has_inn_id();
}
inline ::google::protobuf::uint32 InnRecord::inn_id() const {
  // @@protoc_insertion_point(field_get:msg_maj.InnRecord.inn_id)
  return inn_id_;
}
inline void InnRecord::set_inn_id(::google::protobuf::uint32 value) {
  set_has_inn_id();
  inn_id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.InnRecord.inn_id)
}

// repeated .msg_maj.GameResultSeat seat_result = 2;
inline int InnRecord::seat_result_size() const {
  return seat_result_.size();
}
inline void InnRecord::clear_seat_result() {
  seat_result_.Clear();
}
inline const ::msg_maj::GameResultSeat& InnRecord::seat_result(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.InnRecord.seat_result)
  return seat_result_.Get(index);
}
inline ::msg_maj::GameResultSeat* InnRecord::mutable_seat_result(int index) {
  // @@protoc_insertion_point(field_mutable:msg_maj.InnRecord.seat_result)
  return seat_result_.Mutable(index);
}
inline ::msg_maj::GameResultSeat* InnRecord::add_seat_result() {
  // @@protoc_insertion_point(field_add:msg_maj.InnRecord.seat_result)
  return seat_result_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::msg_maj::GameResultSeat >*
InnRecord::mutable_seat_result() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.InnRecord.seat_result)
  return &seat_result_;
}
inline const ::google::protobuf::RepeatedPtrField< ::msg_maj::GameResultSeat >&
InnRecord::seat_result() const {
  // @@protoc_insertion_point(field_list:msg_maj.InnRecord.seat_result)
  return seat_result_;
}

// required uint32 banker_seat = 3;
inline bool InnRecord::has_banker_seat() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InnRecord::set_has_banker_seat() {
  _has_bits_[0] |= 0x00000004u;
}
inline void InnRecord::clear_has_banker_seat() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void InnRecord::clear_banker_seat() {
  banker_seat_ = 0u;
  clear_has_banker_seat();
}
inline ::google::protobuf::uint32 InnRecord::banker_seat() const {
  // @@protoc_insertion_point(field_get:msg_maj.InnRecord.banker_seat)
  return banker_seat_;
}
inline void InnRecord::set_banker_seat(::google::protobuf::uint32 value) {
  set_has_banker_seat();
  banker_seat_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.InnRecord.banker_seat)
}

// required uint32 dice = 4;
inline bool InnRecord::has_dice() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void InnRecord::set_has_dice() {
  _has_bits_[0] |= 0x00000008u;
}
inline void InnRecord::clear_has_dice() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void InnRecord::clear_dice() {
  dice_ = 0u;
  clear_has_dice();
}
inline ::google::protobuf::uint32 InnRecord::dice() const {
  // @@protoc_insertion_point(field_get:msg_maj.InnRecord.dice)
  return dice_;
}
inline void InnRecord::set_dice(::google::protobuf::uint32 value) {
  set_has_dice();
  dice_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.InnRecord.dice)
}

// optional uint32 close_type = 5;
inline bool InnRecord::has_close_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void InnRecord::set_has_close_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void InnRecord::clear_has_close_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void InnRecord::clear_close_type() {
  close_type_ = 0u;
  clear_has_close_type();
}
inline ::google::protobuf::uint32 InnRecord::close_type() const {
  // @@protoc_insertion_point(field_get:msg_maj.InnRecord.close_type)
  return close_type_;
}
inline void InnRecord::set_close_type(::google::protobuf::uint32 value) {
  set_has_close_type();
  close_type_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.InnRecord.close_type)
}

// -------------------------------------------------------------------

// ReplayAction

// required .msg_maj.event_type event = 1;
inline bool ReplayAction::has_event() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReplayAction::set_has_event() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReplayAction::clear_has_event() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReplayAction::clear_event() {
  event_ = 0;
  clear_has_event();
}
inline ::msg_maj::event_type ReplayAction::event() const {
  // @@protoc_insertion_point(field_get:msg_maj.ReplayAction.event)
  return static_cast< ::msg_maj::event_type >(event_);
}
inline void ReplayAction::set_event(::msg_maj::event_type value) {
  assert(::msg_maj::event_type_IsValid(value));
  set_has_event();
  event_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.ReplayAction.event)
}

// required uint32 actor_seat = 2;
inline bool ReplayAction::has_actor_seat() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReplayAction::set_has_actor_seat() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReplayAction::clear_has_actor_seat() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReplayAction::clear_actor_seat() {
  actor_seat_ = 0u;
  clear_has_actor_seat();
}
inline ::google::protobuf::uint32 ReplayAction::actor_seat() const {
  // @@protoc_insertion_point(field_get:msg_maj.ReplayAction.actor_seat)
  return actor_seat_;
}
inline void ReplayAction::set_actor_seat(::google::protobuf::uint32 value) {
  set_has_actor_seat();
  actor_seat_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.ReplayAction.actor_seat)
}

// optional int32 victim_seat = 3;
inline bool ReplayAction::has_victim_seat() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReplayAction::set_has_victim_seat() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReplayAction::clear_has_victim_seat() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReplayAction::clear_victim_seat() {
  victim_seat_ = 0;
  clear_has_victim_seat();
}
inline ::google::protobuf::int32 ReplayAction::victim_seat() const {
  // @@protoc_insertion_point(field_get:msg_maj.ReplayAction.victim_seat)
  return victim_seat_;
}
inline void ReplayAction::set_victim_seat(::google::protobuf::int32 value) {
  set_has_victim_seat();
  victim_seat_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.ReplayAction.victim_seat)
}

// optional .msg_maj.HuInfo hu_info = 4;
inline bool ReplayAction::has_hu_info() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReplayAction::set_has_hu_info() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReplayAction::clear_has_hu_info() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReplayAction::clear_hu_info() {
  if (hu_info_ != NULL) hu_info_->::msg_maj::HuInfo::Clear();
  clear_has_hu_info();
}
inline const ::msg_maj::HuInfo& ReplayAction::hu_info() const {
  // @@protoc_insertion_point(field_get:msg_maj.ReplayAction.hu_info)
  return hu_info_ != NULL ? *hu_info_ : *default_instance_->hu_info_;
}
inline ::msg_maj::HuInfo* ReplayAction::mutable_hu_info() {
  set_has_hu_info();
  if (hu_info_ == NULL) {
    hu_info_ = new ::msg_maj::HuInfo;
  }
  // @@protoc_insertion_point(field_mutable:msg_maj.ReplayAction.hu_info)
  return hu_info_;
}
inline ::msg_maj::HuInfo* ReplayAction::release_hu_info() {
  // @@protoc_insertion_point(field_release:msg_maj.ReplayAction.hu_info)
  clear_has_hu_info();
  ::msg_maj::HuInfo* temp = hu_info_;
  hu_info_ = NULL;
  return temp;
}
inline void ReplayAction::set_allocated_hu_info(::msg_maj::HuInfo* hu_info) {
  delete hu_info_;
  hu_info_ = hu_info;
  if (hu_info) {
    set_has_hu_info();
  } else {
    clear_has_hu_info();
  }
  // @@protoc_insertion_point(field_set_allocated:msg_maj.ReplayAction.hu_info)
}

// repeated uint32 event_tile_list = 5;
inline int ReplayAction::event_tile_list_size() const {
  return event_tile_list_.size();
}
inline void ReplayAction::clear_event_tile_list() {
  event_tile_list_.Clear();
}
inline ::google::protobuf::uint32 ReplayAction::event_tile_list(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.ReplayAction.event_tile_list)
  return event_tile_list_.Get(index);
}
inline void ReplayAction::set_event_tile_list(int index, ::google::protobuf::uint32 value) {
  event_tile_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg_maj.ReplayAction.event_tile_list)
}
inline void ReplayAction::add_event_tile_list(::google::protobuf::uint32 value) {
  event_tile_list_.Add(value);
  // @@protoc_insertion_point(field_add:msg_maj.ReplayAction.event_tile_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ReplayAction::event_tile_list() const {
  // @@protoc_insertion_point(field_list:msg_maj.ReplayAction.event_tile_list)
  return event_tile_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ReplayAction::mutable_event_tile_list() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.ReplayAction.event_tile_list)
  return &event_tile_list_;
}

// optional int32 desk_tile_count = 6;
inline bool ReplayAction::has_desk_tile_count() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ReplayAction::set_has_desk_tile_count() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ReplayAction::clear_has_desk_tile_count() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ReplayAction::clear_desk_tile_count() {
  desk_tile_count_ = 0;
  clear_has_desk_tile_count();
}
inline ::google::protobuf::int32 ReplayAction::desk_tile_count() const {
  // @@protoc_insertion_point(field_get:msg_maj.ReplayAction.desk_tile_count)
  return desk_tile_count_;
}
inline void ReplayAction::set_desk_tile_count(::google::protobuf::int32 value) {
  set_has_desk_tile_count();
  desk_tile_count_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.ReplayAction.desk_tile_count)
}

// -------------------------------------------------------------------

// HistoryRecordS

// required uint64 record_id = 1;
inline bool HistoryRecordS::has_record_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HistoryRecordS::set_has_record_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HistoryRecordS::clear_has_record_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HistoryRecordS::clear_record_id() {
  record_id_ = GOOGLE_ULONGLONG(0);
  clear_has_record_id();
}
inline ::google::protobuf::uint64 HistoryRecordS::record_id() const {
  // @@protoc_insertion_point(field_get:msg_maj.HistoryRecordS.record_id)
  return record_id_;
}
inline void HistoryRecordS::set_record_id(::google::protobuf::uint64 value) {
  set_has_record_id();
  record_id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.HistoryRecordS.record_id)
}

// optional uint32 room_id = 2;
inline bool HistoryRecordS::has_room_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HistoryRecordS::set_has_room_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HistoryRecordS::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HistoryRecordS::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 HistoryRecordS::room_id() const {
  // @@protoc_insertion_point(field_get:msg_maj.HistoryRecordS.room_id)
  return room_id_;
}
inline void HistoryRecordS::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.HistoryRecordS.room_id)
}

// optional .msg_maj.RoomInfo room_info = 3;
inline bool HistoryRecordS::has_room_info() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HistoryRecordS::set_has_room_info() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HistoryRecordS::clear_has_room_info() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HistoryRecordS::clear_room_info() {
  if (room_info_ != NULL) room_info_->::msg_maj::RoomInfo::Clear();
  clear_has_room_info();
}
inline const ::msg_maj::RoomInfo& HistoryRecordS::room_info() const {
  // @@protoc_insertion_point(field_get:msg_maj.HistoryRecordS.room_info)
  return room_info_ != NULL ? *room_info_ : *default_instance_->room_info_;
}
inline ::msg_maj::RoomInfo* HistoryRecordS::mutable_room_info() {
  set_has_room_info();
  if (room_info_ == NULL) {
    room_info_ = new ::msg_maj::RoomInfo;
  }
  // @@protoc_insertion_point(field_mutable:msg_maj.HistoryRecordS.room_info)
  return room_info_;
}
inline ::msg_maj::RoomInfo* HistoryRecordS::release_room_info() {
  // @@protoc_insertion_point(field_release:msg_maj.HistoryRecordS.room_info)
  clear_has_room_info();
  ::msg_maj::RoomInfo* temp = room_info_;
  room_info_ = NULL;
  return temp;
}
inline void HistoryRecordS::set_allocated_room_info(::msg_maj::RoomInfo* room_info) {
  delete room_info_;
  room_info_ = room_info;
  if (room_info) {
    set_has_room_info();
  } else {
    clear_has_room_info();
  }
  // @@protoc_insertion_point(field_set_allocated:msg_maj.HistoryRecordS.room_info)
}

// optional .msg_maj.RoleInfoListS role_info = 4;
inline bool HistoryRecordS::has_role_info() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HistoryRecordS::set_has_role_info() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HistoryRecordS::clear_has_role_info() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HistoryRecordS::clear_role_info() {
  if (role_info_ != NULL) role_info_->::msg_maj::RoleInfoListS::Clear();
  clear_has_role_info();
}
inline const ::msg_maj::RoleInfoListS& HistoryRecordS::role_info() const {
  // @@protoc_insertion_point(field_get:msg_maj.HistoryRecordS.role_info)
  return role_info_ != NULL ? *role_info_ : *default_instance_->role_info_;
}
inline ::msg_maj::RoleInfoListS* HistoryRecordS::mutable_role_info() {
  set_has_role_info();
  if (role_info_ == NULL) {
    role_info_ = new ::msg_maj::RoleInfoListS;
  }
  // @@protoc_insertion_point(field_mutable:msg_maj.HistoryRecordS.role_info)
  return role_info_;
}
inline ::msg_maj::RoleInfoListS* HistoryRecordS::release_role_info() {
  // @@protoc_insertion_point(field_release:msg_maj.HistoryRecordS.role_info)
  clear_has_role_info();
  ::msg_maj::RoleInfoListS* temp = role_info_;
  role_info_ = NULL;
  return temp;
}
inline void HistoryRecordS::set_allocated_role_info(::msg_maj::RoleInfoListS* role_info) {
  delete role_info_;
  role_info_ = role_info;
  if (role_info) {
    set_has_role_info();
  } else {
    clear_has_role_info();
  }
  // @@protoc_insertion_point(field_set_allocated:msg_maj.HistoryRecordS.role_info)
}

// optional uint64 time = 5;
inline bool HistoryRecordS::has_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void HistoryRecordS::set_has_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void HistoryRecordS::clear_has_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void HistoryRecordS::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::uint64 HistoryRecordS::time() const {
  // @@protoc_insertion_point(field_get:msg_maj.HistoryRecordS.time)
  return time_;
}
inline void HistoryRecordS::set_time(::google::protobuf::uint64 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.HistoryRecordS.time)
}

// optional .msg_maj.InnRecordListS innrecord = 6;
inline bool HistoryRecordS::has_innrecord() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void HistoryRecordS::set_has_innrecord() {
  _has_bits_[0] |= 0x00000020u;
}
inline void HistoryRecordS::clear_has_innrecord() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void HistoryRecordS::clear_innrecord() {
  if (innrecord_ != NULL) innrecord_->::msg_maj::InnRecordListS::Clear();
  clear_has_innrecord();
}
inline const ::msg_maj::InnRecordListS& HistoryRecordS::innrecord() const {
  // @@protoc_insertion_point(field_get:msg_maj.HistoryRecordS.innrecord)
  return innrecord_ != NULL ? *innrecord_ : *default_instance_->innrecord_;
}
inline ::msg_maj::InnRecordListS* HistoryRecordS::mutable_innrecord() {
  set_has_innrecord();
  if (innrecord_ == NULL) {
    innrecord_ = new ::msg_maj::InnRecordListS;
  }
  // @@protoc_insertion_point(field_mutable:msg_maj.HistoryRecordS.innrecord)
  return innrecord_;
}
inline ::msg_maj::InnRecordListS* HistoryRecordS::release_innrecord() {
  // @@protoc_insertion_point(field_release:msg_maj.HistoryRecordS.innrecord)
  clear_has_innrecord();
  ::msg_maj::InnRecordListS* temp = innrecord_;
  innrecord_ = NULL;
  return temp;
}
inline void HistoryRecordS::set_allocated_innrecord(::msg_maj::InnRecordListS* innrecord) {
  delete innrecord_;
  innrecord_ = innrecord;
  if (innrecord) {
    set_has_innrecord();
  } else {
    clear_has_innrecord();
  }
  // @@protoc_insertion_point(field_set_allocated:msg_maj.HistoryRecordS.innrecord)
}

// optional .msg_maj.SeatTotalS seat_total = 7;
inline bool HistoryRecordS::has_seat_total() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void HistoryRecordS::set_has_seat_total() {
  _has_bits_[0] |= 0x00000040u;
}
inline void HistoryRecordS::clear_has_seat_total() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void HistoryRecordS::clear_seat_total() {
  if (seat_total_ != NULL) seat_total_->::msg_maj::SeatTotalS::Clear();
  clear_has_seat_total();
}
inline const ::msg_maj::SeatTotalS& HistoryRecordS::seat_total() const {
  // @@protoc_insertion_point(field_get:msg_maj.HistoryRecordS.seat_total)
  return seat_total_ != NULL ? *seat_total_ : *default_instance_->seat_total_;
}
inline ::msg_maj::SeatTotalS* HistoryRecordS::mutable_seat_total() {
  set_has_seat_total();
  if (seat_total_ == NULL) {
    seat_total_ = new ::msg_maj::SeatTotalS;
  }
  // @@protoc_insertion_point(field_mutable:msg_maj.HistoryRecordS.seat_total)
  return seat_total_;
}
inline ::msg_maj::SeatTotalS* HistoryRecordS::release_seat_total() {
  // @@protoc_insertion_point(field_release:msg_maj.HistoryRecordS.seat_total)
  clear_has_seat_total();
  ::msg_maj::SeatTotalS* temp = seat_total_;
  seat_total_ = NULL;
  return temp;
}
inline void HistoryRecordS::set_allocated_seat_total(::msg_maj::SeatTotalS* seat_total) {
  delete seat_total_;
  seat_total_ = seat_total;
  if (seat_total) {
    set_has_seat_total();
  } else {
    clear_has_seat_total();
  }
  // @@protoc_insertion_point(field_set_allocated:msg_maj.HistoryRecordS.seat_total)
}

// optional .msg_maj.InnReplayActionListS inn_replay = 8;
inline bool HistoryRecordS::has_inn_replay() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void HistoryRecordS::set_has_inn_replay() {
  _has_bits_[0] |= 0x00000080u;
}
inline void HistoryRecordS::clear_has_inn_replay() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void HistoryRecordS::clear_inn_replay() {
  if (inn_replay_ != NULL) inn_replay_->::msg_maj::InnReplayActionListS::Clear();
  clear_has_inn_replay();
}
inline const ::msg_maj::InnReplayActionListS& HistoryRecordS::inn_replay() const {
  // @@protoc_insertion_point(field_get:msg_maj.HistoryRecordS.inn_replay)
  return inn_replay_ != NULL ? *inn_replay_ : *default_instance_->inn_replay_;
}
inline ::msg_maj::InnReplayActionListS* HistoryRecordS::mutable_inn_replay() {
  set_has_inn_replay();
  if (inn_replay_ == NULL) {
    inn_replay_ = new ::msg_maj::InnReplayActionListS;
  }
  // @@protoc_insertion_point(field_mutable:msg_maj.HistoryRecordS.inn_replay)
  return inn_replay_;
}
inline ::msg_maj::InnReplayActionListS* HistoryRecordS::release_inn_replay() {
  // @@protoc_insertion_point(field_release:msg_maj.HistoryRecordS.inn_replay)
  clear_has_inn_replay();
  ::msg_maj::InnReplayActionListS* temp = inn_replay_;
  inn_replay_ = NULL;
  return temp;
}
inline void HistoryRecordS::set_allocated_inn_replay(::msg_maj::InnReplayActionListS* inn_replay) {
  delete inn_replay_;
  inn_replay_ = inn_replay;
  if (inn_replay) {
    set_has_inn_replay();
  } else {
    clear_has_inn_replay();
  }
  // @@protoc_insertion_point(field_set_allocated:msg_maj.HistoryRecordS.inn_replay)
}

// -------------------------------------------------------------------

// RoleInfoListS

// repeated .msg_maj.RoleInfoS role_list = 1;
inline int RoleInfoListS::role_list_size() const {
  return role_list_.size();
}
inline void RoleInfoListS::clear_role_list() {
  role_list_.Clear();
}
inline const ::msg_maj::RoleInfoS& RoleInfoListS::role_list(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleInfoListS.role_list)
  return role_list_.Get(index);
}
inline ::msg_maj::RoleInfoS* RoleInfoListS::mutable_role_list(int index) {
  // @@protoc_insertion_point(field_mutable:msg_maj.RoleInfoListS.role_list)
  return role_list_.Mutable(index);
}
inline ::msg_maj::RoleInfoS* RoleInfoListS::add_role_list() {
  // @@protoc_insertion_point(field_add:msg_maj.RoleInfoListS.role_list)
  return role_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::msg_maj::RoleInfoS >*
RoleInfoListS::mutable_role_list() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.RoleInfoListS.role_list)
  return &role_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::msg_maj::RoleInfoS >&
RoleInfoListS::role_list() const {
  // @@protoc_insertion_point(field_list:msg_maj.RoleInfoListS.role_list)
  return role_list_;
}

// -------------------------------------------------------------------

// RoleInfoS

// required uint32 seat = 1;
inline bool RoleInfoS::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleInfoS::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleInfoS::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleInfoS::clear_seat() {
  seat_ = 0u;
  clear_has_seat();
}
inline ::google::protobuf::uint32 RoleInfoS::seat() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleInfoS.seat)
  return seat_;
}
inline void RoleInfoS::set_seat(::google::protobuf::uint32 value) {
  set_has_seat();
  seat_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RoleInfoS.seat)
}

// required uint64 uid = 2;
inline bool RoleInfoS::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoleInfoS::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoleInfoS::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoleInfoS::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 RoleInfoS::uid() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleInfoS.uid)
  return uid_;
}
inline void RoleInfoS::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.RoleInfoS.uid)
}

// required string nick = 3;
inline bool RoleInfoS::has_nick() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoleInfoS::set_has_nick() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoleInfoS::clear_has_nick() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoleInfoS::clear_nick() {
  nick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nick();
}
inline const ::std::string& RoleInfoS::nick() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleInfoS.nick)
  return nick_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoleInfoS::set_nick(const ::std::string& value) {
  set_has_nick();
  nick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.RoleInfoS.nick)
}
inline void RoleInfoS::set_nick(const char* value) {
  set_has_nick();
  nick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.RoleInfoS.nick)
}
inline void RoleInfoS::set_nick(const char* value, size_t size) {
  set_has_nick();
  nick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.RoleInfoS.nick)
}
inline ::std::string* RoleInfoS::mutable_nick() {
  set_has_nick();
  // @@protoc_insertion_point(field_mutable:msg_maj.RoleInfoS.nick)
  return nick_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RoleInfoS::release_nick() {
  // @@protoc_insertion_point(field_release:msg_maj.RoleInfoS.nick)
  clear_has_nick();
  return nick_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoleInfoS::set_allocated_nick(::std::string* nick) {
  if (nick != NULL) {
    set_has_nick();
  } else {
    clear_has_nick();
  }
  nick_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nick);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.RoleInfoS.nick)
}

// optional string actor_addr = 4;
inline bool RoleInfoS::has_actor_addr() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RoleInfoS::set_has_actor_addr() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RoleInfoS::clear_has_actor_addr() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RoleInfoS::clear_actor_addr() {
  actor_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_actor_addr();
}
inline const ::std::string& RoleInfoS::actor_addr() const {
  // @@protoc_insertion_point(field_get:msg_maj.RoleInfoS.actor_addr)
  return actor_addr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoleInfoS::set_actor_addr(const ::std::string& value) {
  set_has_actor_addr();
  actor_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg_maj.RoleInfoS.actor_addr)
}
inline void RoleInfoS::set_actor_addr(const char* value) {
  set_has_actor_addr();
  actor_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg_maj.RoleInfoS.actor_addr)
}
inline void RoleInfoS::set_actor_addr(const char* value, size_t size) {
  set_has_actor_addr();
  actor_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg_maj.RoleInfoS.actor_addr)
}
inline ::std::string* RoleInfoS::mutable_actor_addr() {
  set_has_actor_addr();
  // @@protoc_insertion_point(field_mutable:msg_maj.RoleInfoS.actor_addr)
  return actor_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RoleInfoS::release_actor_addr() {
  // @@protoc_insertion_point(field_release:msg_maj.RoleInfoS.actor_addr)
  clear_has_actor_addr();
  return actor_addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoleInfoS::set_allocated_actor_addr(::std::string* actor_addr) {
  if (actor_addr != NULL) {
    set_has_actor_addr();
  } else {
    clear_has_actor_addr();
  }
  actor_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), actor_addr);
  // @@protoc_insertion_point(field_set_allocated:msg_maj.RoleInfoS.actor_addr)
}

// -------------------------------------------------------------------

// InnRecordListS

// repeated .msg_maj.InnRecordS inn_list = 1;
inline int InnRecordListS::inn_list_size() const {
  return inn_list_.size();
}
inline void InnRecordListS::clear_inn_list() {
  inn_list_.Clear();
}
inline const ::msg_maj::InnRecordS& InnRecordListS::inn_list(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.InnRecordListS.inn_list)
  return inn_list_.Get(index);
}
inline ::msg_maj::InnRecordS* InnRecordListS::mutable_inn_list(int index) {
  // @@protoc_insertion_point(field_mutable:msg_maj.InnRecordListS.inn_list)
  return inn_list_.Mutable(index);
}
inline ::msg_maj::InnRecordS* InnRecordListS::add_inn_list() {
  // @@protoc_insertion_point(field_add:msg_maj.InnRecordListS.inn_list)
  return inn_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::msg_maj::InnRecordS >*
InnRecordListS::mutable_inn_list() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.InnRecordListS.inn_list)
  return &inn_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::msg_maj::InnRecordS >&
InnRecordListS::inn_list() const {
  // @@protoc_insertion_point(field_list:msg_maj.InnRecordListS.inn_list)
  return inn_list_;
}

// -------------------------------------------------------------------

// InnReplayActionListS

// repeated .msg_maj.InnReplayActionS replay_list = 1;
inline int InnReplayActionListS::replay_list_size() const {
  return replay_list_.size();
}
inline void InnReplayActionListS::clear_replay_list() {
  replay_list_.Clear();
}
inline const ::msg_maj::InnReplayActionS& InnReplayActionListS::replay_list(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.InnReplayActionListS.replay_list)
  return replay_list_.Get(index);
}
inline ::msg_maj::InnReplayActionS* InnReplayActionListS::mutable_replay_list(int index) {
  // @@protoc_insertion_point(field_mutable:msg_maj.InnReplayActionListS.replay_list)
  return replay_list_.Mutable(index);
}
inline ::msg_maj::InnReplayActionS* InnReplayActionListS::add_replay_list() {
  // @@protoc_insertion_point(field_add:msg_maj.InnReplayActionListS.replay_list)
  return replay_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::msg_maj::InnReplayActionS >*
InnReplayActionListS::mutable_replay_list() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.InnReplayActionListS.replay_list)
  return &replay_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::msg_maj::InnReplayActionS >&
InnReplayActionListS::replay_list() const {
  // @@protoc_insertion_point(field_list:msg_maj.InnReplayActionListS.replay_list)
  return replay_list_;
}

// -------------------------------------------------------------------

// InnRecordS

// required int32 inn_id = 1;
inline bool InnRecordS::has_inn_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InnRecordS::set_has_inn_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InnRecordS::clear_has_inn_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InnRecordS::clear_inn_id() {
  inn_id_ = 0;
  clear_has_inn_id();
}
inline ::google::protobuf::int32 InnRecordS::inn_id() const {
  // @@protoc_insertion_point(field_get:msg_maj.InnRecordS.inn_id)
  return inn_id_;
}
inline void InnRecordS::set_inn_id(::google::protobuf::int32 value) {
  set_has_inn_id();
  inn_id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.InnRecordS.inn_id)
}

// required uint32 banker_seat = 2;
inline bool InnRecordS::has_banker_seat() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InnRecordS::set_has_banker_seat() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InnRecordS::clear_has_banker_seat() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InnRecordS::clear_banker_seat() {
  banker_seat_ = 0u;
  clear_has_banker_seat();
}
inline ::google::protobuf::uint32 InnRecordS::banker_seat() const {
  // @@protoc_insertion_point(field_get:msg_maj.InnRecordS.banker_seat)
  return banker_seat_;
}
inline void InnRecordS::set_banker_seat(::google::protobuf::uint32 value) {
  set_has_banker_seat();
  banker_seat_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.InnRecordS.banker_seat)
}

// required uint32 dice = 3;
inline bool InnRecordS::has_dice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InnRecordS::set_has_dice() {
  _has_bits_[0] |= 0x00000004u;
}
inline void InnRecordS::clear_has_dice() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void InnRecordS::clear_dice() {
  dice_ = 0u;
  clear_has_dice();
}
inline ::google::protobuf::uint32 InnRecordS::dice() const {
  // @@protoc_insertion_point(field_get:msg_maj.InnRecordS.dice)
  return dice_;
}
inline void InnRecordS::set_dice(::google::protobuf::uint32 value) {
  set_has_dice();
  dice_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.InnRecordS.dice)
}

// repeated .msg_maj.SeatInfo seat_info = 4;
inline int InnRecordS::seat_info_size() const {
  return seat_info_.size();
}
inline void InnRecordS::clear_seat_info() {
  seat_info_.Clear();
}
inline const ::msg_maj::SeatInfo& InnRecordS::seat_info(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.InnRecordS.seat_info)
  return seat_info_.Get(index);
}
inline ::msg_maj::SeatInfo* InnRecordS::mutable_seat_info(int index) {
  // @@protoc_insertion_point(field_mutable:msg_maj.InnRecordS.seat_info)
  return seat_info_.Mutable(index);
}
inline ::msg_maj::SeatInfo* InnRecordS::add_seat_info() {
  // @@protoc_insertion_point(field_add:msg_maj.InnRecordS.seat_info)
  return seat_info_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::msg_maj::SeatInfo >*
InnRecordS::mutable_seat_info() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.InnRecordS.seat_info)
  return &seat_info_;
}
inline const ::google::protobuf::RepeatedPtrField< ::msg_maj::SeatInfo >&
InnRecordS::seat_info() const {
  // @@protoc_insertion_point(field_list:msg_maj.InnRecordS.seat_info)
  return seat_info_;
}

// repeated .msg_maj.GameResultSeat seat_result = 5;
inline int InnRecordS::seat_result_size() const {
  return seat_result_.size();
}
inline void InnRecordS::clear_seat_result() {
  seat_result_.Clear();
}
inline const ::msg_maj::GameResultSeat& InnRecordS::seat_result(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.InnRecordS.seat_result)
  return seat_result_.Get(index);
}
inline ::msg_maj::GameResultSeat* InnRecordS::mutable_seat_result(int index) {
  // @@protoc_insertion_point(field_mutable:msg_maj.InnRecordS.seat_result)
  return seat_result_.Mutable(index);
}
inline ::msg_maj::GameResultSeat* InnRecordS::add_seat_result() {
  // @@protoc_insertion_point(field_add:msg_maj.InnRecordS.seat_result)
  return seat_result_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::msg_maj::GameResultSeat >*
InnRecordS::mutable_seat_result() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.InnRecordS.seat_result)
  return &seat_result_;
}
inline const ::google::protobuf::RepeatedPtrField< ::msg_maj::GameResultSeat >&
InnRecordS::seat_result() const {
  // @@protoc_insertion_point(field_list:msg_maj.InnRecordS.seat_result)
  return seat_result_;
}

// optional int32 close_type = 6;
inline bool InnRecordS::has_close_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void InnRecordS::set_has_close_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void InnRecordS::clear_has_close_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void InnRecordS::clear_close_type() {
  close_type_ = 0;
  clear_has_close_type();
}
inline ::google::protobuf::int32 InnRecordS::close_type() const {
  // @@protoc_insertion_point(field_get:msg_maj.InnRecordS.close_type)
  return close_type_;
}
inline void InnRecordS::set_close_type(::google::protobuf::int32 value) {
  set_has_close_type();
  close_type_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.InnRecordS.close_type)
}

// -------------------------------------------------------------------

// InnReplayActionS

// required int32 inn_id = 1;
inline bool InnReplayActionS::has_inn_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InnReplayActionS::set_has_inn_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InnReplayActionS::clear_has_inn_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InnReplayActionS::clear_inn_id() {
  inn_id_ = 0;
  clear_has_inn_id();
}
inline ::google::protobuf::int32 InnReplayActionS::inn_id() const {
  // @@protoc_insertion_point(field_get:msg_maj.InnReplayActionS.inn_id)
  return inn_id_;
}
inline void InnReplayActionS::set_inn_id(::google::protobuf::int32 value) {
  set_has_inn_id();
  inn_id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.InnReplayActionS.inn_id)
}

// repeated .msg_maj.ReplayAction replay_list = 2;
inline int InnReplayActionS::replay_list_size() const {
  return replay_list_.size();
}
inline void InnReplayActionS::clear_replay_list() {
  replay_list_.Clear();
}
inline const ::msg_maj::ReplayAction& InnReplayActionS::replay_list(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.InnReplayActionS.replay_list)
  return replay_list_.Get(index);
}
inline ::msg_maj::ReplayAction* InnReplayActionS::mutable_replay_list(int index) {
  // @@protoc_insertion_point(field_mutable:msg_maj.InnReplayActionS.replay_list)
  return replay_list_.Mutable(index);
}
inline ::msg_maj::ReplayAction* InnReplayActionS::add_replay_list() {
  // @@protoc_insertion_point(field_add:msg_maj.InnReplayActionS.replay_list)
  return replay_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::msg_maj::ReplayAction >*
InnReplayActionS::mutable_replay_list() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.InnReplayActionS.replay_list)
  return &replay_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::msg_maj::ReplayAction >&
InnReplayActionS::replay_list() const {
  // @@protoc_insertion_point(field_list:msg_maj.InnReplayActionS.replay_list)
  return replay_list_;
}

// -------------------------------------------------------------------

// SeatTotalS

// repeated .msg_maj.SeatTotalScoreS score_list = 1;
inline int SeatTotalS::score_list_size() const {
  return score_list_.size();
}
inline void SeatTotalS::clear_score_list() {
  score_list_.Clear();
}
inline const ::msg_maj::SeatTotalScoreS& SeatTotalS::score_list(int index) const {
  // @@protoc_insertion_point(field_get:msg_maj.SeatTotalS.score_list)
  return score_list_.Get(index);
}
inline ::msg_maj::SeatTotalScoreS* SeatTotalS::mutable_score_list(int index) {
  // @@protoc_insertion_point(field_mutable:msg_maj.SeatTotalS.score_list)
  return score_list_.Mutable(index);
}
inline ::msg_maj::SeatTotalScoreS* SeatTotalS::add_score_list() {
  // @@protoc_insertion_point(field_add:msg_maj.SeatTotalS.score_list)
  return score_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::msg_maj::SeatTotalScoreS >*
SeatTotalS::mutable_score_list() {
  // @@protoc_insertion_point(field_mutable_list:msg_maj.SeatTotalS.score_list)
  return &score_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::msg_maj::SeatTotalScoreS >&
SeatTotalS::score_list() const {
  // @@protoc_insertion_point(field_list:msg_maj.SeatTotalS.score_list)
  return score_list_;
}

// -------------------------------------------------------------------

// SeatTotalScoreS

// required uint32 seat_id = 1;
inline bool SeatTotalScoreS::has_seat_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SeatTotalScoreS::set_has_seat_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SeatTotalScoreS::clear_has_seat_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SeatTotalScoreS::clear_seat_id() {
  seat_id_ = 0u;
  clear_has_seat_id();
}
inline ::google::protobuf::uint32 SeatTotalScoreS::seat_id() const {
  // @@protoc_insertion_point(field_get:msg_maj.SeatTotalScoreS.seat_id)
  return seat_id_;
}
inline void SeatTotalScoreS::set_seat_id(::google::protobuf::uint32 value) {
  set_has_seat_id();
  seat_id_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.SeatTotalScoreS.seat_id)
}

// required int32 score = 2;
inline bool SeatTotalScoreS::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SeatTotalScoreS::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SeatTotalScoreS::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SeatTotalScoreS::clear_score() {
  score_ = 0;
  clear_has_score();
}
inline ::google::protobuf::int32 SeatTotalScoreS::score() const {
  // @@protoc_insertion_point(field_get:msg_maj.SeatTotalScoreS.score)
  return score_;
}
inline void SeatTotalScoreS::set_score(::google::protobuf::int32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:msg_maj.SeatTotalScoreS.score)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace msg_maj

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::msg_maj::c_cmd_hist> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg_maj::c_cmd_hist>() {
  return ::msg_maj::c_cmd_hist_descriptor();
}
template <> struct is_proto_enum< ::msg_maj::req_type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg_maj::req_type>() {
  return ::msg_maj::req_type_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_msg_5fhistory_2eproto__INCLUDED
