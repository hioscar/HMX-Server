// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server_log.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "server_log.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace fogs {
namespace proto {
namespace msg {

namespace {

const ::google::protobuf::Descriptor* MatchActInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MatchActInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* MatchUserInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MatchUserInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* HupaiTiles_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HupaiTiles_reflection_ = NULL;
const ::google::protobuf::Descriptor* VerifyPai_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  VerifyPai_reflection_ = NULL;
const ::google::protobuf::Descriptor* VerifyPaiRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  VerifyPaiRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* VerifyPaiResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  VerifyPaiResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* SaveVerifyPai_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SaveVerifyPai_reflection_ = NULL;
const ::google::protobuf::Descriptor* RobotVerifyPai_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RobotVerifyPai_reflection_ = NULL;
const ::google::protobuf::Descriptor* SaveMoneyLogRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SaveMoneyLogRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* MoneyLog_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MoneyLog_reflection_ = NULL;
const ::google::protobuf::Descriptor* RewardConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RewardConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetRewardConfigReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetRewardConfigReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetRewardConfigResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetRewardConfigResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetFreeConfigReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetFreeConfigReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetFreeConfigResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetFreeConfigResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetNotifyConfigReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetNotifyConfigReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetNotifyConfigResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetNotifyConfigResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetRoomSetConfigReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetRoomSetConfigReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetRoomSetConfigResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetRoomSetConfigResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* SaveOnlinePlayer_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SaveOnlinePlayer_reflection_ = NULL;
const ::google::protobuf::Descriptor* RoomOptionCreate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RoomOptionCreate_reflection_ = NULL;
const ::google::protobuf::Descriptor* RoomOptionEnd_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RoomOptionEnd_reflection_ = NULL;
const ::google::protobuf::Descriptor* RoomCloseLog_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RoomCloseLog_reflection_ = NULL;
const ::google::protobuf::Descriptor* ShareLog_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ShareLog_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* log_type_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_server_5flog_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_server_5flog_2eproto() {
  protobuf_AddDesc_server_5flog_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "server_log.proto");
  GOOGLE_CHECK(file != NULL);
  MatchActInfo_descriptor_ = file->message_type(0);
  static const int MatchActInfo_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchActInfo, match_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchActInfo, match_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchActInfo, match_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchActInfo, baoming_begin_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchActInfo, baoming_end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchActInfo, match_begin_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchActInfo, match_end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchActInfo, max_users_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchActInfo, need_roomcards_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchActInfo, award_roomcards_1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchActInfo, award_roomcards_2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchActInfo, award_roomcards_3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchActInfo, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchActInfo, create_time_),
  };
  MatchActInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MatchActInfo_descriptor_,
      MatchActInfo::default_instance_,
      MatchActInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchActInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(MatchActInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchActInfo, _internal_metadata_),
      -1);
  MatchUserInfo_descriptor_ = file->message_type(1);
  static const int MatchUserInfo_offsets_[35] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchUserInfo, record_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchUserInfo, record_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchUserInfo, room_no_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchUserInfo, inn_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchUserInfo, match_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchUserInfo, inn_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchUserInfo, huway_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchUserInfo, hutype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchUserInfo, huseat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchUserInfo, u_1_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchUserInfo, u_1_score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchUserInfo, u_1_total_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchUserInfo, u_1_angang_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchUserInfo, u_1_minggang_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchUserInfo, u_1_goushouggang_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchUserInfo, u_2_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchUserInfo, u_2_score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchUserInfo, u_2_total_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchUserInfo, u_2_angang_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchUserInfo, u_2_minggang_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchUserInfo, u_2_goushouggang_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchUserInfo, u_3_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchUserInfo, u_3_score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchUserInfo, u_3_total_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchUserInfo, u_3_angang_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchUserInfo, u_3_minggang_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchUserInfo, u_3_goushouggang_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchUserInfo, u_4_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchUserInfo, u_4_score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchUserInfo, u_4_total_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchUserInfo, u_4_angang_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchUserInfo, u_4_minggang_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchUserInfo, u_4_goushouggang_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchUserInfo, hupaitiles_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchUserInfo, game_type_),
  };
  MatchUserInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MatchUserInfo_descriptor_,
      MatchUserInfo::default_instance_,
      MatchUserInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchUserInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(MatchUserInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchUserInfo, _internal_metadata_),
      -1);
  HupaiTiles_descriptor_ = file->message_type(2);
  static const int HupaiTiles_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HupaiTiles, tile_list_),
  };
  HupaiTiles_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HupaiTiles_descriptor_,
      HupaiTiles::default_instance_,
      HupaiTiles_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HupaiTiles, _has_bits_[0]),
      -1,
      -1,
      sizeof(HupaiTiles),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HupaiTiles, _internal_metadata_),
      -1);
  VerifyPai_descriptor_ = file->message_type(3);
  static const int VerifyPai_offsets_[15] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyPai, pai1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyPai, pai2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyPai, pai3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyPai, pai4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyPai, pai5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyPai, pai6_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyPai, pai7_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyPai, pai8_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyPai, pai9_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyPai, pai10_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyPai, pai11_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyPai, pai12_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyPai, pai13_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyPai, pai14_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyPai, param_),
  };
  VerifyPai_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      VerifyPai_descriptor_,
      VerifyPai::default_instance_,
      VerifyPai_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyPai, _has_bits_[0]),
      -1,
      -1,
      sizeof(VerifyPai),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyPai, _internal_metadata_),
      -1);
  VerifyPaiRequest_descriptor_ = file->message_type(4);
  static const int VerifyPaiRequest_offsets_[1] = {
  };
  VerifyPaiRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      VerifyPaiRequest_descriptor_,
      VerifyPaiRequest::default_instance_,
      VerifyPaiRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyPaiRequest, _has_bits_[0]),
      -1,
      -1,
      sizeof(VerifyPaiRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyPaiRequest, _internal_metadata_),
      -1);
  VerifyPaiResponse_descriptor_ = file->message_type(5);
  static const int VerifyPaiResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyPaiResponse, verify_list_),
  };
  VerifyPaiResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      VerifyPaiResponse_descriptor_,
      VerifyPaiResponse::default_instance_,
      VerifyPaiResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyPaiResponse, _has_bits_[0]),
      -1,
      -1,
      sizeof(VerifyPaiResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyPaiResponse, _internal_metadata_),
      -1);
  SaveVerifyPai_descriptor_ = file->message_type(6);
  static const int SaveVerifyPai_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaveVerifyPai, verify_pai_),
  };
  SaveVerifyPai_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SaveVerifyPai_descriptor_,
      SaveVerifyPai::default_instance_,
      SaveVerifyPai_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaveVerifyPai, _has_bits_[0]),
      -1,
      -1,
      sizeof(SaveVerifyPai),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaveVerifyPai, _internal_metadata_),
      -1);
  RobotVerifyPai_descriptor_ = file->message_type(7);
  static const int RobotVerifyPai_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotVerifyPai, ghost_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotVerifyPai, pai_list_),
  };
  RobotVerifyPai_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RobotVerifyPai_descriptor_,
      RobotVerifyPai::default_instance_,
      RobotVerifyPai_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotVerifyPai, _has_bits_[0]),
      -1,
      -1,
      sizeof(RobotVerifyPai),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotVerifyPai, _internal_metadata_),
      -1);
  SaveMoneyLogRequest_descriptor_ = file->message_type(8);
  static const int SaveMoneyLogRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaveMoneyLogRequest, moneylog_),
  };
  SaveMoneyLogRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SaveMoneyLogRequest_descriptor_,
      SaveMoneyLogRequest::default_instance_,
      SaveMoneyLogRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaveMoneyLogRequest, _has_bits_[0]),
      -1,
      -1,
      sizeof(SaveMoneyLogRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaveMoneyLogRequest, _internal_metadata_),
      -1);
  MoneyLog_descriptor_ = file->message_type(9);
  static const int MoneyLog_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoneyLog, log_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoneyLog, log_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoneyLog, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoneyLog, room_card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoneyLog, room_total_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoneyLog, time_),
  };
  MoneyLog_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MoneyLog_descriptor_,
      MoneyLog::default_instance_,
      MoneyLog_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoneyLog, _has_bits_[0]),
      -1,
      -1,
      sizeof(MoneyLog),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoneyLog, _internal_metadata_),
      -1);
  RewardConfig_descriptor_ = file->message_type(10);
  static const int RewardConfig_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RewardConfig, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RewardConfig, room_card_),
  };
  RewardConfig_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RewardConfig_descriptor_,
      RewardConfig::default_instance_,
      RewardConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RewardConfig, _has_bits_[0]),
      -1,
      -1,
      sizeof(RewardConfig),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RewardConfig, _internal_metadata_),
      -1);
  GetRewardConfigReq_descriptor_ = file->message_type(11);
  static const int GetRewardConfigReq_offsets_[1] = {
  };
  GetRewardConfigReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetRewardConfigReq_descriptor_,
      GetRewardConfigReq::default_instance_,
      GetRewardConfigReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRewardConfigReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(GetRewardConfigReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRewardConfigReq, _internal_metadata_),
      -1);
  GetRewardConfigResp_descriptor_ = file->message_type(12);
  static const int GetRewardConfigResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRewardConfigResp, invitation_reward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRewardConfigResp, share_reward_),
  };
  GetRewardConfigResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetRewardConfigResp_descriptor_,
      GetRewardConfigResp::default_instance_,
      GetRewardConfigResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRewardConfigResp, _has_bits_[0]),
      -1,
      -1,
      sizeof(GetRewardConfigResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRewardConfigResp, _internal_metadata_),
      -1);
  GetFreeConfigReq_descriptor_ = file->message_type(13);
  static const int GetFreeConfigReq_offsets_[1] = {
  };
  GetFreeConfigReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetFreeConfigReq_descriptor_,
      GetFreeConfigReq::default_instance_,
      GetFreeConfigReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFreeConfigReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(GetFreeConfigReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFreeConfigReq, _internal_metadata_),
      -1);
  GetFreeConfigResp_descriptor_ = file->message_type(14);
  static const int GetFreeConfigResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFreeConfigResp, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFreeConfigResp, end_time_),
  };
  GetFreeConfigResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetFreeConfigResp_descriptor_,
      GetFreeConfigResp::default_instance_,
      GetFreeConfigResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFreeConfigResp, _has_bits_[0]),
      -1,
      -1,
      sizeof(GetFreeConfigResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFreeConfigResp, _internal_metadata_),
      -1);
  GetNotifyConfigReq_descriptor_ = file->message_type(15);
  static const int GetNotifyConfigReq_offsets_[1] = {
  };
  GetNotifyConfigReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetNotifyConfigReq_descriptor_,
      GetNotifyConfigReq::default_instance_,
      GetNotifyConfigReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNotifyConfigReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(GetNotifyConfigReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNotifyConfigReq, _internal_metadata_),
      -1);
  GetNotifyConfigResp_descriptor_ = file->message_type(16);
  static const int GetNotifyConfigResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNotifyConfigResp, record_),
  };
  GetNotifyConfigResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetNotifyConfigResp_descriptor_,
      GetNotifyConfigResp::default_instance_,
      GetNotifyConfigResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNotifyConfigResp, _has_bits_[0]),
      -1,
      -1,
      sizeof(GetNotifyConfigResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNotifyConfigResp, _internal_metadata_),
      -1);
  GetRoomSetConfigReq_descriptor_ = file->message_type(17);
  static const int GetRoomSetConfigReq_offsets_[1] = {
  };
  GetRoomSetConfigReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetRoomSetConfigReq_descriptor_,
      GetRoomSetConfigReq::default_instance_,
      GetRoomSetConfigReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRoomSetConfigReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(GetRoomSetConfigReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRoomSetConfigReq, _internal_metadata_),
      -1);
  GetRoomSetConfigResp_descriptor_ = file->message_type(18);
  static const int GetRoomSetConfigResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRoomSetConfigResp, start_robot_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRoomSetConfigResp, limit_time_),
  };
  GetRoomSetConfigResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetRoomSetConfigResp_descriptor_,
      GetRoomSetConfigResp::default_instance_,
      GetRoomSetConfigResp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRoomSetConfigResp, _has_bits_[0]),
      -1,
      -1,
      sizeof(GetRoomSetConfigResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRoomSetConfigResp, _internal_metadata_),
      -1);
  SaveOnlinePlayer_descriptor_ = file->message_type(19);
  static const int SaveOnlinePlayer_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaveOnlinePlayer, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaveOnlinePlayer, online_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaveOnlinePlayer, roomcard_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaveOnlinePlayer, inn_num_),
  };
  SaveOnlinePlayer_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SaveOnlinePlayer_descriptor_,
      SaveOnlinePlayer::default_instance_,
      SaveOnlinePlayer_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaveOnlinePlayer, _has_bits_[0]),
      -1,
      -1,
      sizeof(SaveOnlinePlayer),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaveOnlinePlayer, _internal_metadata_),
      -1);
  RoomOptionCreate_descriptor_ = file->message_type(20);
  static const int RoomOptionCreate_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomOptionCreate, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomOptionCreate, gameid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomOptionCreate, room_no_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomOptionCreate, create_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomOptionCreate, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomOptionCreate, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomOptionCreate, play_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomOptionCreate, person_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomOptionCreate, pay_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomOptionCreate, jushu_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomOptionCreate, score_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomOptionCreate, top_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomOptionCreate, maima_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomOptionCreate, wanfaval_),
  };
  RoomOptionCreate_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RoomOptionCreate_descriptor_,
      RoomOptionCreate::default_instance_,
      RoomOptionCreate_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomOptionCreate, _has_bits_[0]),
      -1,
      -1,
      sizeof(RoomOptionCreate),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomOptionCreate, _internal_metadata_),
      -1);
  RoomOptionEnd_descriptor_ = file->message_type(21);
  static const int RoomOptionEnd_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomOptionEnd, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomOptionEnd, end_time_),
  };
  RoomOptionEnd_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RoomOptionEnd_descriptor_,
      RoomOptionEnd::default_instance_,
      RoomOptionEnd_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomOptionEnd, _has_bits_[0]),
      -1,
      -1,
      sizeof(RoomOptionEnd),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomOptionEnd, _internal_metadata_),
      -1);
  RoomCloseLog_descriptor_ = file->message_type(22);
  static const int RoomCloseLog_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomCloseLog, room_no_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomCloseLog, room_host_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomCloseLog, close_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomCloseLog, close_time_),
  };
  RoomCloseLog_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RoomCloseLog_descriptor_,
      RoomCloseLog::default_instance_,
      RoomCloseLog_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomCloseLog, _has_bits_[0]),
      -1,
      -1,
      sizeof(RoomCloseLog),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomCloseLog, _internal_metadata_),
      -1);
  ShareLog_descriptor_ = file->message_type(23);
  static const int ShareLog_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShareLog, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShareLog, time_),
  };
  ShareLog_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ShareLog_descriptor_,
      ShareLog::default_instance_,
      ShareLog_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShareLog, _has_bits_[0]),
      -1,
      -1,
      sizeof(ShareLog),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShareLog, _internal_metadata_),
      -1);
  log_type_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_server_5flog_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MatchActInfo_descriptor_, &MatchActInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MatchUserInfo_descriptor_, &MatchUserInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HupaiTiles_descriptor_, &HupaiTiles::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      VerifyPai_descriptor_, &VerifyPai::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      VerifyPaiRequest_descriptor_, &VerifyPaiRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      VerifyPaiResponse_descriptor_, &VerifyPaiResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SaveVerifyPai_descriptor_, &SaveVerifyPai::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RobotVerifyPai_descriptor_, &RobotVerifyPai::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SaveMoneyLogRequest_descriptor_, &SaveMoneyLogRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MoneyLog_descriptor_, &MoneyLog::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RewardConfig_descriptor_, &RewardConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetRewardConfigReq_descriptor_, &GetRewardConfigReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetRewardConfigResp_descriptor_, &GetRewardConfigResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetFreeConfigReq_descriptor_, &GetFreeConfigReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetFreeConfigResp_descriptor_, &GetFreeConfigResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetNotifyConfigReq_descriptor_, &GetNotifyConfigReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetNotifyConfigResp_descriptor_, &GetNotifyConfigResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetRoomSetConfigReq_descriptor_, &GetRoomSetConfigReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetRoomSetConfigResp_descriptor_, &GetRoomSetConfigResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SaveOnlinePlayer_descriptor_, &SaveOnlinePlayer::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RoomOptionCreate_descriptor_, &RoomOptionCreate::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RoomOptionEnd_descriptor_, &RoomOptionEnd::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RoomCloseLog_descriptor_, &RoomCloseLog::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ShareLog_descriptor_, &ShareLog::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_server_5flog_2eproto() {
  delete MatchActInfo::default_instance_;
  delete MatchActInfo_reflection_;
  delete MatchUserInfo::default_instance_;
  delete MatchUserInfo_reflection_;
  delete HupaiTiles::default_instance_;
  delete HupaiTiles_reflection_;
  delete VerifyPai::default_instance_;
  delete VerifyPai_reflection_;
  delete VerifyPaiRequest::default_instance_;
  delete VerifyPaiRequest_reflection_;
  delete VerifyPaiResponse::default_instance_;
  delete VerifyPaiResponse_reflection_;
  delete SaveVerifyPai::default_instance_;
  delete SaveVerifyPai_reflection_;
  delete RobotVerifyPai::default_instance_;
  delete RobotVerifyPai_reflection_;
  delete SaveMoneyLogRequest::default_instance_;
  delete SaveMoneyLogRequest_reflection_;
  delete MoneyLog::default_instance_;
  delete MoneyLog_reflection_;
  delete RewardConfig::default_instance_;
  delete RewardConfig_reflection_;
  delete GetRewardConfigReq::default_instance_;
  delete GetRewardConfigReq_reflection_;
  delete GetRewardConfigResp::default_instance_;
  delete GetRewardConfigResp_reflection_;
  delete GetFreeConfigReq::default_instance_;
  delete GetFreeConfigReq_reflection_;
  delete GetFreeConfigResp::default_instance_;
  delete GetFreeConfigResp_reflection_;
  delete GetNotifyConfigReq::default_instance_;
  delete GetNotifyConfigReq_reflection_;
  delete GetNotifyConfigResp::default_instance_;
  delete GetNotifyConfigResp_reflection_;
  delete GetRoomSetConfigReq::default_instance_;
  delete GetRoomSetConfigReq_reflection_;
  delete GetRoomSetConfigResp::default_instance_;
  delete GetRoomSetConfigResp_reflection_;
  delete SaveOnlinePlayer::default_instance_;
  delete SaveOnlinePlayer_reflection_;
  delete RoomOptionCreate::default_instance_;
  delete RoomOptionCreate_reflection_;
  delete RoomOptionEnd::default_instance_;
  delete RoomOptionEnd_reflection_;
  delete RoomCloseLog::default_instance_;
  delete RoomCloseLog_reflection_;
  delete ShareLog::default_instance_;
  delete ShareLog_reflection_;
}

void protobuf_AddDesc_server_5flog_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_server_5flog_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::msg_event::protobuf_AddDesc_msg_5fevent_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020server_log.proto\022\016fogs.proto.msg\032\017msg_"
    "event.proto\"\321\002\n\014MatchActInfo\022\020\n\010match_id"
    "\030\001 \001(\r\022\022\n\nmatch_name\030\002 \001(\t\022\022\n\nmatch_type"
    "\030\003 \001(\r\022\032\n\022baoming_begin_time\030\004 \001(\004\022\030\n\020ba"
    "oming_end_time\030\005 \001(\004\022\030\n\020match_begin_time"
    "\030\006 \001(\004\022\026\n\016match_end_time\030\007 \001(\004\022\021\n\tmax_us"
    "ers\030\010 \001(\r\022\026\n\016need_roomcards\030\t \001(\r\022\031\n\021awa"
    "rd_roomcards_1\030\n \001(\r\022\031\n\021award_roomcards_"
    "2\030\013 \001(\r\022\031\n\021award_roomcards_3\030\014 \001(\r\022\016\n\006st"
    "atus\030\r \001(\r\022\023\n\013create_time\030\016 \001(\004\"\326\005\n\rMatc"
    "hUserInfo\022\021\n\trecord_id\030\001 \001(\004\022\023\n\013record_t"
    "ime\030\002 \001(\004\022\017\n\007room_no\030\003 \001(\r\022\016\n\006inn_id\030\004 \001"
    "(\r\022\020\n\010match_id\030\005 \001(\r\022\020\n\010inn_time\030\006 \001(\004\022\r"
    "\n\005huway\030\007 \001(\005\022\016\n\006hutype\030\010 \001(\005\022\016\n\006huseat\030"
    "\t \001(\005\022\016\n\006u_1_id\030\n \001(\004\022\021\n\tu_1_score\030\013 \001(\005"
    "\022\021\n\tu_1_total\030\014 \001(\005\022\022\n\nu_1_angang\030\r \001(\005\022"
    "\024\n\014u_1_minggang\030\016 \001(\005\022\030\n\020u_1_goushouggan"
    "g\030\017 \001(\005\022\016\n\006u_2_id\030\024 \001(\004\022\021\n\tu_2_score\030\025 \001"
    "(\005\022\021\n\tu_2_total\030\026 \001(\005\022\022\n\nu_2_angang\030\027 \001("
    "\005\022\024\n\014u_2_minggang\030\030 \001(\005\022\030\n\020u_2_goushougg"
    "ang\030\031 \001(\005\022\016\n\006u_3_id\030\036 \001(\004\022\021\n\tu_3_score\030\037"
    " \001(\005\022\021\n\tu_3_total\030  \001(\005\022\022\n\nu_3_angang\030! "
    "\001(\005\022\024\n\014u_3_minggang\030\" \001(\005\022\030\n\020u_3_goushou"
    "ggang\030# \001(\005\022\016\n\006u_4_id\030( \001(\004\022\021\n\tu_4_score"
    "\030) \001(\005\022\021\n\tu_4_total\030* \001(\005\022\022\n\nu_4_angang\030"
    "+ \001(\005\022\024\n\014u_4_minggang\030, \001(\005\022\030\n\020u_4_goush"
    "ouggang\030- \001(\005\022.\n\nhupaitiles\030. \001(\0132\032.fogs"
    ".proto.msg.HupaiTiles\022\021\n\tgame_type\030/ \001(\005"
    "\"\037\n\nHupaiTiles\022\021\n\ttile_list\030\001 \003(\r\"\343\001\n\tVe"
    "rifyPai\022\014\n\004pai1\030\001 \001(\r\022\014\n\004pai2\030\002 \001(\r\022\014\n\004p"
    "ai3\030\003 \001(\r\022\014\n\004pai4\030\004 \001(\r\022\014\n\004pai5\030\005 \001(\r\022\014\n"
    "\004pai6\030\006 \001(\r\022\014\n\004pai7\030\007 \001(\r\022\014\n\004pai8\030\010 \001(\r\022"
    "\014\n\004pai9\030\t \001(\r\022\r\n\005pai10\030\n \001(\r\022\r\n\005pai11\030\013 "
    "\001(\r\022\r\n\005pai12\030\014 \001(\r\022\r\n\005pai13\030\r \001(\r\022\r\n\005pai"
    "14\030\016 \001(\r\022\r\n\005param\030\017 \001(\t\"\022\n\020VerifyPaiRequ"
    "est\"C\n\021VerifyPaiResponse\022.\n\013verify_list\030"
    "\001 \003(\0132\031.fogs.proto.msg.VerifyPai\">\n\rSave"
    "VerifyPai\022-\n\nverify_pai\030\001 \001(\0132\031.fogs.pro"
    "to.msg.VerifyPai\"5\n\016RobotVerifyPai\022\021\n\tgh"
    "ost_num\030\001 \001(\r\022\020\n\010pai_list\030\002 \003(\r\"A\n\023SaveM"
    "oneyLogRequest\022*\n\010moneyLog\030\001 \002(\0132\030.fogs."
    "proto.msg.MoneyLog\"r\n\010MoneyLog\022\016\n\006log_id"
    "\030\001 \002(\004\022\020\n\010log_type\030\002 \002(\005\022\017\n\007user_id\030\003 \002("
    "\004\022\021\n\troom_card\030\004 \002(\005\022\022\n\nroom_total\030\005 \002(\005"
    "\022\014\n\004time\030\006 \002(\004\"-\n\014RewardConfig\022\n\n\002id\030\001 \001"
    "(\r\022\021\n\troom_card\030\002 \001(\r\"\024\n\022GetRewardConfig"
    "Req\"\202\001\n\023GetRewardConfigResp\0227\n\021invitatio"
    "n_reward\030\001 \001(\0132\034.fogs.proto.msg.RewardCo"
    "nfig\0222\n\014share_reward\030\002 \001(\0132\034.fogs.proto."
    "msg.RewardConfig\"\022\n\020GetFreeConfigReq\"9\n\021"
    "GetFreeConfigResp\022\022\n\nstart_time\030\001 \001(\004\022\020\n"
    "\010end_time\030\002 \001(\004\"\024\n\022GetNotifyConfigReq\"9\n"
    "\023GetNotifyConfigResp\022\"\n\006record\030\001 \001(\0132\022.m"
    "sg_event.NoticeS\"\025\n\023GetRoomSetConfigReq\""
    "\?\n\024GetRoomSetConfigResp\022\023\n\013start_robot\030\001"
    " \001(\005\022\022\n\nlimit_time\030\002 \001(\005\"[\n\020SaveOnlinePl"
    "ayer\022\014\n\004time\030\001 \001(\004\022\022\n\nonline_num\030\002 \001(\r\022\024"
    "\n\014roomcard_num\030\003 \001(\r\022\017\n\007inn_num\030\004 \001(\r\"\224\002"
    "\n\020RoomOptionCreate\022\n\n\002id\030\001 \001(\004\022\016\n\006gameid"
    "\030\002 \001(\004\022\017\n\007room_no\030\003 \001(\r\022\023\n\013create_time\030\004"
    " \001(\004\022\022\n\nstart_time\030\005 \001(\004\022\020\n\010end_time\030\006 \001"
    "(\004\022\021\n\tplay_type\030\007 \001(\r\022\023\n\013person_type\030\010 \001"
    "(\r\022\020\n\010pay_type\030\t \001(\r\022\022\n\njushu_type\030\n \001(\r"
    "\022\022\n\nscore_type\030\013 \001(\r\022\020\n\010top_type\030\014 \001(\r\022\022"
    "\n\nmaima_type\030\r \001(\r\022\020\n\010wanfaval\030\016 \001(\r\"-\n\r"
    "RoomOptionEnd\022\n\n\002id\030\001 \001(\004\022\020\n\010end_time\030\002 "
    "\001(\004\"Z\n\014RoomCloseLog\022\017\n\007room_no\030\001 \002(\r\022\021\n\t"
    "room_host\030\002 \002(\r\022\022\n\nclose_type\030\003 \002(\r\022\022\n\nc"
    "lose_time\030\004 \002(\004\"%\n\010ShareLog\022\013\n\003uid\030\001 \002(\004"
    "\022\014\n\004time\030\002 \002(\004*\225\002\n\010log_type\022\035\n\031log_t_roo"
    "mcard_add_charge\020\001\022\033\n\027log_t_roomcard_add"
    "_mail\020\002\022\031\n\025log_t_roomcard_add_gm\020\003\022\034\n\030lo"
    "g_t_roomcard_add_admin\020\004\022\034\n\030log_t_roomca"
    "rd_add_share\020\005\022\032\n\026log_t_roomcard_add_inv"
    "\020\006\022!\n\035log_t_roomcard_sub_startmatch\020\024\022\034\n"
    "\030log_t_roomcard_sub_admin\020\025\022\031\n\025log_t_roo"
    "mcard_sub_gm\020\026", 3054);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "server_log.proto", &protobuf_RegisterTypes);
  MatchActInfo::default_instance_ = new MatchActInfo();
  MatchUserInfo::default_instance_ = new MatchUserInfo();
  HupaiTiles::default_instance_ = new HupaiTiles();
  VerifyPai::default_instance_ = new VerifyPai();
  VerifyPaiRequest::default_instance_ = new VerifyPaiRequest();
  VerifyPaiResponse::default_instance_ = new VerifyPaiResponse();
  SaveVerifyPai::default_instance_ = new SaveVerifyPai();
  RobotVerifyPai::default_instance_ = new RobotVerifyPai();
  SaveMoneyLogRequest::default_instance_ = new SaveMoneyLogRequest();
  MoneyLog::default_instance_ = new MoneyLog();
  RewardConfig::default_instance_ = new RewardConfig();
  GetRewardConfigReq::default_instance_ = new GetRewardConfigReq();
  GetRewardConfigResp::default_instance_ = new GetRewardConfigResp();
  GetFreeConfigReq::default_instance_ = new GetFreeConfigReq();
  GetFreeConfigResp::default_instance_ = new GetFreeConfigResp();
  GetNotifyConfigReq::default_instance_ = new GetNotifyConfigReq();
  GetNotifyConfigResp::default_instance_ = new GetNotifyConfigResp();
  GetRoomSetConfigReq::default_instance_ = new GetRoomSetConfigReq();
  GetRoomSetConfigResp::default_instance_ = new GetRoomSetConfigResp();
  SaveOnlinePlayer::default_instance_ = new SaveOnlinePlayer();
  RoomOptionCreate::default_instance_ = new RoomOptionCreate();
  RoomOptionEnd::default_instance_ = new RoomOptionEnd();
  RoomCloseLog::default_instance_ = new RoomCloseLog();
  ShareLog::default_instance_ = new ShareLog();
  MatchActInfo::default_instance_->InitAsDefaultInstance();
  MatchUserInfo::default_instance_->InitAsDefaultInstance();
  HupaiTiles::default_instance_->InitAsDefaultInstance();
  VerifyPai::default_instance_->InitAsDefaultInstance();
  VerifyPaiRequest::default_instance_->InitAsDefaultInstance();
  VerifyPaiResponse::default_instance_->InitAsDefaultInstance();
  SaveVerifyPai::default_instance_->InitAsDefaultInstance();
  RobotVerifyPai::default_instance_->InitAsDefaultInstance();
  SaveMoneyLogRequest::default_instance_->InitAsDefaultInstance();
  MoneyLog::default_instance_->InitAsDefaultInstance();
  RewardConfig::default_instance_->InitAsDefaultInstance();
  GetRewardConfigReq::default_instance_->InitAsDefaultInstance();
  GetRewardConfigResp::default_instance_->InitAsDefaultInstance();
  GetFreeConfigReq::default_instance_->InitAsDefaultInstance();
  GetFreeConfigResp::default_instance_->InitAsDefaultInstance();
  GetNotifyConfigReq::default_instance_->InitAsDefaultInstance();
  GetNotifyConfigResp::default_instance_->InitAsDefaultInstance();
  GetRoomSetConfigReq::default_instance_->InitAsDefaultInstance();
  GetRoomSetConfigResp::default_instance_->InitAsDefaultInstance();
  SaveOnlinePlayer::default_instance_->InitAsDefaultInstance();
  RoomOptionCreate::default_instance_->InitAsDefaultInstance();
  RoomOptionEnd::default_instance_->InitAsDefaultInstance();
  RoomCloseLog::default_instance_->InitAsDefaultInstance();
  ShareLog::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_server_5flog_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_server_5flog_2eproto {
  StaticDescriptorInitializer_server_5flog_2eproto() {
    protobuf_AddDesc_server_5flog_2eproto();
  }
} static_descriptor_initializer_server_5flog_2eproto_;
const ::google::protobuf::EnumDescriptor* log_type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return log_type_descriptor_;
}
bool log_type_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 20:
    case 21:
    case 22:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MatchActInfo::kMatchIdFieldNumber;
const int MatchActInfo::kMatchNameFieldNumber;
const int MatchActInfo::kMatchTypeFieldNumber;
const int MatchActInfo::kBaomingBeginTimeFieldNumber;
const int MatchActInfo::kBaomingEndTimeFieldNumber;
const int MatchActInfo::kMatchBeginTimeFieldNumber;
const int MatchActInfo::kMatchEndTimeFieldNumber;
const int MatchActInfo::kMaxUsersFieldNumber;
const int MatchActInfo::kNeedRoomcardsFieldNumber;
const int MatchActInfo::kAwardRoomcards1FieldNumber;
const int MatchActInfo::kAwardRoomcards2FieldNumber;
const int MatchActInfo::kAwardRoomcards3FieldNumber;
const int MatchActInfo::kStatusFieldNumber;
const int MatchActInfo::kCreateTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MatchActInfo::MatchActInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.MatchActInfo)
}

void MatchActInfo::InitAsDefaultInstance() {
}

MatchActInfo::MatchActInfo(const MatchActInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.MatchActInfo)
}

void MatchActInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  match_id_ = 0u;
  match_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  match_type_ = 0u;
  baoming_begin_time_ = GOOGLE_ULONGLONG(0);
  baoming_end_time_ = GOOGLE_ULONGLONG(0);
  match_begin_time_ = GOOGLE_ULONGLONG(0);
  match_end_time_ = GOOGLE_ULONGLONG(0);
  max_users_ = 0u;
  need_roomcards_ = 0u;
  award_roomcards_1_ = 0u;
  award_roomcards_2_ = 0u;
  award_roomcards_3_ = 0u;
  status_ = 0u;
  create_time_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MatchActInfo::~MatchActInfo() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.MatchActInfo)
  SharedDtor();
}

void MatchActInfo::SharedDtor() {
  match_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MatchActInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MatchActInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MatchActInfo_descriptor_;
}

const MatchActInfo& MatchActInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5flog_2eproto();
  return *default_instance_;
}

MatchActInfo* MatchActInfo::default_instance_ = NULL;

MatchActInfo* MatchActInfo::New(::google::protobuf::Arena* arena) const {
  MatchActInfo* n = new MatchActInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MatchActInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.MatchActInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(MatchActInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MatchActInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(match_id_, max_users_);
    if (has_match_name()) {
      match_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[8 / 32] & 16128u) {
    ZR_(need_roomcards_, create_time_);
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MatchActInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.MatchActInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 match_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &match_id_)));
          set_has_match_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_match_name;
        break;
      }

      // optional string match_name = 2;
      case 2: {
        if (tag == 18) {
         parse_match_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_match_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->match_name().data(), this->match_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fogs.proto.msg.MatchActInfo.match_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_match_type;
        break;
      }

      // optional uint32 match_type = 3;
      case 3: {
        if (tag == 24) {
         parse_match_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &match_type_)));
          set_has_match_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_baoming_begin_time;
        break;
      }

      // optional uint64 baoming_begin_time = 4;
      case 4: {
        if (tag == 32) {
         parse_baoming_begin_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &baoming_begin_time_)));
          set_has_baoming_begin_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_baoming_end_time;
        break;
      }

      // optional uint64 baoming_end_time = 5;
      case 5: {
        if (tag == 40) {
         parse_baoming_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &baoming_end_time_)));
          set_has_baoming_end_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_match_begin_time;
        break;
      }

      // optional uint64 match_begin_time = 6;
      case 6: {
        if (tag == 48) {
         parse_match_begin_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &match_begin_time_)));
          set_has_match_begin_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_match_end_time;
        break;
      }

      // optional uint64 match_end_time = 7;
      case 7: {
        if (tag == 56) {
         parse_match_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &match_end_time_)));
          set_has_match_end_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_max_users;
        break;
      }

      // optional uint32 max_users = 8;
      case 8: {
        if (tag == 64) {
         parse_max_users:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_users_)));
          set_has_max_users();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_need_roomcards;
        break;
      }

      // optional uint32 need_roomcards = 9;
      case 9: {
        if (tag == 72) {
         parse_need_roomcards:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &need_roomcards_)));
          set_has_need_roomcards();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_award_roomcards_1;
        break;
      }

      // optional uint32 award_roomcards_1 = 10;
      case 10: {
        if (tag == 80) {
         parse_award_roomcards_1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &award_roomcards_1_)));
          set_has_award_roomcards_1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_award_roomcards_2;
        break;
      }

      // optional uint32 award_roomcards_2 = 11;
      case 11: {
        if (tag == 88) {
         parse_award_roomcards_2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &award_roomcards_2_)));
          set_has_award_roomcards_2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_award_roomcards_3;
        break;
      }

      // optional uint32 award_roomcards_3 = 12;
      case 12: {
        if (tag == 96) {
         parse_award_roomcards_3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &award_roomcards_3_)));
          set_has_award_roomcards_3();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_status;
        break;
      }

      // optional uint32 status = 13;
      case 13: {
        if (tag == 104) {
         parse_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_create_time;
        break;
      }

      // optional uint64 create_time = 14;
      case 14: {
        if (tag == 112) {
         parse_create_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &create_time_)));
          set_has_create_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.MatchActInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.MatchActInfo)
  return false;
#undef DO_
}

void MatchActInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.MatchActInfo)
  // optional uint32 match_id = 1;
  if (has_match_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->match_id(), output);
  }

  // optional string match_name = 2;
  if (has_match_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->match_name().data(), this->match_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fogs.proto.msg.MatchActInfo.match_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->match_name(), output);
  }

  // optional uint32 match_type = 3;
  if (has_match_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->match_type(), output);
  }

  // optional uint64 baoming_begin_time = 4;
  if (has_baoming_begin_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->baoming_begin_time(), output);
  }

  // optional uint64 baoming_end_time = 5;
  if (has_baoming_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->baoming_end_time(), output);
  }

  // optional uint64 match_begin_time = 6;
  if (has_match_begin_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->match_begin_time(), output);
  }

  // optional uint64 match_end_time = 7;
  if (has_match_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->match_end_time(), output);
  }

  // optional uint32 max_users = 8;
  if (has_max_users()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->max_users(), output);
  }

  // optional uint32 need_roomcards = 9;
  if (has_need_roomcards()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->need_roomcards(), output);
  }

  // optional uint32 award_roomcards_1 = 10;
  if (has_award_roomcards_1()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->award_roomcards_1(), output);
  }

  // optional uint32 award_roomcards_2 = 11;
  if (has_award_roomcards_2()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->award_roomcards_2(), output);
  }

  // optional uint32 award_roomcards_3 = 12;
  if (has_award_roomcards_3()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->award_roomcards_3(), output);
  }

  // optional uint32 status = 13;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->status(), output);
  }

  // optional uint64 create_time = 14;
  if (has_create_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(14, this->create_time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.MatchActInfo)
}

::google::protobuf::uint8* MatchActInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.MatchActInfo)
  // optional uint32 match_id = 1;
  if (has_match_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->match_id(), target);
  }

  // optional string match_name = 2;
  if (has_match_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->match_name().data(), this->match_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fogs.proto.msg.MatchActInfo.match_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->match_name(), target);
  }

  // optional uint32 match_type = 3;
  if (has_match_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->match_type(), target);
  }

  // optional uint64 baoming_begin_time = 4;
  if (has_baoming_begin_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->baoming_begin_time(), target);
  }

  // optional uint64 baoming_end_time = 5;
  if (has_baoming_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->baoming_end_time(), target);
  }

  // optional uint64 match_begin_time = 6;
  if (has_match_begin_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->match_begin_time(), target);
  }

  // optional uint64 match_end_time = 7;
  if (has_match_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->match_end_time(), target);
  }

  // optional uint32 max_users = 8;
  if (has_max_users()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->max_users(), target);
  }

  // optional uint32 need_roomcards = 9;
  if (has_need_roomcards()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->need_roomcards(), target);
  }

  // optional uint32 award_roomcards_1 = 10;
  if (has_award_roomcards_1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->award_roomcards_1(), target);
  }

  // optional uint32 award_roomcards_2 = 11;
  if (has_award_roomcards_2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->award_roomcards_2(), target);
  }

  // optional uint32 award_roomcards_3 = 12;
  if (has_award_roomcards_3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->award_roomcards_3(), target);
  }

  // optional uint32 status = 13;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->status(), target);
  }

  // optional uint64 create_time = 14;
  if (has_create_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(14, this->create_time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.MatchActInfo)
  return target;
}

int MatchActInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.MatchActInfo)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional uint32 match_id = 1;
    if (has_match_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->match_id());
    }

    // optional string match_name = 2;
    if (has_match_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->match_name());
    }

    // optional uint32 match_type = 3;
    if (has_match_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->match_type());
    }

    // optional uint64 baoming_begin_time = 4;
    if (has_baoming_begin_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->baoming_begin_time());
    }

    // optional uint64 baoming_end_time = 5;
    if (has_baoming_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->baoming_end_time());
    }

    // optional uint64 match_begin_time = 6;
    if (has_match_begin_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->match_begin_time());
    }

    // optional uint64 match_end_time = 7;
    if (has_match_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->match_end_time());
    }

    // optional uint32 max_users = 8;
    if (has_max_users()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->max_users());
    }

  }
  if (_has_bits_[8 / 32] & 16128u) {
    // optional uint32 need_roomcards = 9;
    if (has_need_roomcards()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->need_roomcards());
    }

    // optional uint32 award_roomcards_1 = 10;
    if (has_award_roomcards_1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->award_roomcards_1());
    }

    // optional uint32 award_roomcards_2 = 11;
    if (has_award_roomcards_2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->award_roomcards_2());
    }

    // optional uint32 award_roomcards_3 = 12;
    if (has_award_roomcards_3()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->award_roomcards_3());
    }

    // optional uint32 status = 13;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->status());
    }

    // optional uint64 create_time = 14;
    if (has_create_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->create_time());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MatchActInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.MatchActInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MatchActInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MatchActInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.MatchActInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.MatchActInfo)
    MergeFrom(*source);
  }
}

void MatchActInfo::MergeFrom(const MatchActInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.MatchActInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_match_id()) {
      set_match_id(from.match_id());
    }
    if (from.has_match_name()) {
      set_has_match_name();
      match_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.match_name_);
    }
    if (from.has_match_type()) {
      set_match_type(from.match_type());
    }
    if (from.has_baoming_begin_time()) {
      set_baoming_begin_time(from.baoming_begin_time());
    }
    if (from.has_baoming_end_time()) {
      set_baoming_end_time(from.baoming_end_time());
    }
    if (from.has_match_begin_time()) {
      set_match_begin_time(from.match_begin_time());
    }
    if (from.has_match_end_time()) {
      set_match_end_time(from.match_end_time());
    }
    if (from.has_max_users()) {
      set_max_users(from.max_users());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_need_roomcards()) {
      set_need_roomcards(from.need_roomcards());
    }
    if (from.has_award_roomcards_1()) {
      set_award_roomcards_1(from.award_roomcards_1());
    }
    if (from.has_award_roomcards_2()) {
      set_award_roomcards_2(from.award_roomcards_2());
    }
    if (from.has_award_roomcards_3()) {
      set_award_roomcards_3(from.award_roomcards_3());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_create_time()) {
      set_create_time(from.create_time());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MatchActInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.MatchActInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MatchActInfo::CopyFrom(const MatchActInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.MatchActInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MatchActInfo::IsInitialized() const {

  return true;
}

void MatchActInfo::Swap(MatchActInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MatchActInfo::InternalSwap(MatchActInfo* other) {
  std::swap(match_id_, other->match_id_);
  match_name_.Swap(&other->match_name_);
  std::swap(match_type_, other->match_type_);
  std::swap(baoming_begin_time_, other->baoming_begin_time_);
  std::swap(baoming_end_time_, other->baoming_end_time_);
  std::swap(match_begin_time_, other->match_begin_time_);
  std::swap(match_end_time_, other->match_end_time_);
  std::swap(max_users_, other->max_users_);
  std::swap(need_roomcards_, other->need_roomcards_);
  std::swap(award_roomcards_1_, other->award_roomcards_1_);
  std::swap(award_roomcards_2_, other->award_roomcards_2_);
  std::swap(award_roomcards_3_, other->award_roomcards_3_);
  std::swap(status_, other->status_);
  std::swap(create_time_, other->create_time_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MatchActInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MatchActInfo_descriptor_;
  metadata.reflection = MatchActInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MatchActInfo

// optional uint32 match_id = 1;
bool MatchActInfo::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MatchActInfo::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
void MatchActInfo::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void MatchActInfo::clear_match_id() {
  match_id_ = 0u;
  clear_has_match_id();
}
 ::google::protobuf::uint32 MatchActInfo::match_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.MatchActInfo.match_id)
  return match_id_;
}
 void MatchActInfo::set_match_id(::google::protobuf::uint32 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.MatchActInfo.match_id)
}

// optional string match_name = 2;
bool MatchActInfo::has_match_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MatchActInfo::set_has_match_name() {
  _has_bits_[0] |= 0x00000002u;
}
void MatchActInfo::clear_has_match_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void MatchActInfo::clear_match_name() {
  match_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_match_name();
}
 const ::std::string& MatchActInfo::match_name() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.MatchActInfo.match_name)
  return match_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MatchActInfo::set_match_name(const ::std::string& value) {
  set_has_match_name();
  match_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fogs.proto.msg.MatchActInfo.match_name)
}
 void MatchActInfo::set_match_name(const char* value) {
  set_has_match_name();
  match_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fogs.proto.msg.MatchActInfo.match_name)
}
 void MatchActInfo::set_match_name(const char* value, size_t size) {
  set_has_match_name();
  match_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fogs.proto.msg.MatchActInfo.match_name)
}
 ::std::string* MatchActInfo::mutable_match_name() {
  set_has_match_name();
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.MatchActInfo.match_name)
  return match_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MatchActInfo::release_match_name() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.MatchActInfo.match_name)
  clear_has_match_name();
  return match_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MatchActInfo::set_allocated_match_name(::std::string* match_name) {
  if (match_name != NULL) {
    set_has_match_name();
  } else {
    clear_has_match_name();
  }
  match_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), match_name);
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.MatchActInfo.match_name)
}

// optional uint32 match_type = 3;
bool MatchActInfo::has_match_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void MatchActInfo::set_has_match_type() {
  _has_bits_[0] |= 0x00000004u;
}
void MatchActInfo::clear_has_match_type() {
  _has_bits_[0] &= ~0x00000004u;
}
void MatchActInfo::clear_match_type() {
  match_type_ = 0u;
  clear_has_match_type();
}
 ::google::protobuf::uint32 MatchActInfo::match_type() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.MatchActInfo.match_type)
  return match_type_;
}
 void MatchActInfo::set_match_type(::google::protobuf::uint32 value) {
  set_has_match_type();
  match_type_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.MatchActInfo.match_type)
}

// optional uint64 baoming_begin_time = 4;
bool MatchActInfo::has_baoming_begin_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void MatchActInfo::set_has_baoming_begin_time() {
  _has_bits_[0] |= 0x00000008u;
}
void MatchActInfo::clear_has_baoming_begin_time() {
  _has_bits_[0] &= ~0x00000008u;
}
void MatchActInfo::clear_baoming_begin_time() {
  baoming_begin_time_ = GOOGLE_ULONGLONG(0);
  clear_has_baoming_begin_time();
}
 ::google::protobuf::uint64 MatchActInfo::baoming_begin_time() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.MatchActInfo.baoming_begin_time)
  return baoming_begin_time_;
}
 void MatchActInfo::set_baoming_begin_time(::google::protobuf::uint64 value) {
  set_has_baoming_begin_time();
  baoming_begin_time_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.MatchActInfo.baoming_begin_time)
}

// optional uint64 baoming_end_time = 5;
bool MatchActInfo::has_baoming_end_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void MatchActInfo::set_has_baoming_end_time() {
  _has_bits_[0] |= 0x00000010u;
}
void MatchActInfo::clear_has_baoming_end_time() {
  _has_bits_[0] &= ~0x00000010u;
}
void MatchActInfo::clear_baoming_end_time() {
  baoming_end_time_ = GOOGLE_ULONGLONG(0);
  clear_has_baoming_end_time();
}
 ::google::protobuf::uint64 MatchActInfo::baoming_end_time() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.MatchActInfo.baoming_end_time)
  return baoming_end_time_;
}
 void MatchActInfo::set_baoming_end_time(::google::protobuf::uint64 value) {
  set_has_baoming_end_time();
  baoming_end_time_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.MatchActInfo.baoming_end_time)
}

// optional uint64 match_begin_time = 6;
bool MatchActInfo::has_match_begin_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void MatchActInfo::set_has_match_begin_time() {
  _has_bits_[0] |= 0x00000020u;
}
void MatchActInfo::clear_has_match_begin_time() {
  _has_bits_[0] &= ~0x00000020u;
}
void MatchActInfo::clear_match_begin_time() {
  match_begin_time_ = GOOGLE_ULONGLONG(0);
  clear_has_match_begin_time();
}
 ::google::protobuf::uint64 MatchActInfo::match_begin_time() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.MatchActInfo.match_begin_time)
  return match_begin_time_;
}
 void MatchActInfo::set_match_begin_time(::google::protobuf::uint64 value) {
  set_has_match_begin_time();
  match_begin_time_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.MatchActInfo.match_begin_time)
}

// optional uint64 match_end_time = 7;
bool MatchActInfo::has_match_end_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void MatchActInfo::set_has_match_end_time() {
  _has_bits_[0] |= 0x00000040u;
}
void MatchActInfo::clear_has_match_end_time() {
  _has_bits_[0] &= ~0x00000040u;
}
void MatchActInfo::clear_match_end_time() {
  match_end_time_ = GOOGLE_ULONGLONG(0);
  clear_has_match_end_time();
}
 ::google::protobuf::uint64 MatchActInfo::match_end_time() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.MatchActInfo.match_end_time)
  return match_end_time_;
}
 void MatchActInfo::set_match_end_time(::google::protobuf::uint64 value) {
  set_has_match_end_time();
  match_end_time_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.MatchActInfo.match_end_time)
}

// optional uint32 max_users = 8;
bool MatchActInfo::has_max_users() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void MatchActInfo::set_has_max_users() {
  _has_bits_[0] |= 0x00000080u;
}
void MatchActInfo::clear_has_max_users() {
  _has_bits_[0] &= ~0x00000080u;
}
void MatchActInfo::clear_max_users() {
  max_users_ = 0u;
  clear_has_max_users();
}
 ::google::protobuf::uint32 MatchActInfo::max_users() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.MatchActInfo.max_users)
  return max_users_;
}
 void MatchActInfo::set_max_users(::google::protobuf::uint32 value) {
  set_has_max_users();
  max_users_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.MatchActInfo.max_users)
}

// optional uint32 need_roomcards = 9;
bool MatchActInfo::has_need_roomcards() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void MatchActInfo::set_has_need_roomcards() {
  _has_bits_[0] |= 0x00000100u;
}
void MatchActInfo::clear_has_need_roomcards() {
  _has_bits_[0] &= ~0x00000100u;
}
void MatchActInfo::clear_need_roomcards() {
  need_roomcards_ = 0u;
  clear_has_need_roomcards();
}
 ::google::protobuf::uint32 MatchActInfo::need_roomcards() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.MatchActInfo.need_roomcards)
  return need_roomcards_;
}
 void MatchActInfo::set_need_roomcards(::google::protobuf::uint32 value) {
  set_has_need_roomcards();
  need_roomcards_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.MatchActInfo.need_roomcards)
}

// optional uint32 award_roomcards_1 = 10;
bool MatchActInfo::has_award_roomcards_1() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void MatchActInfo::set_has_award_roomcards_1() {
  _has_bits_[0] |= 0x00000200u;
}
void MatchActInfo::clear_has_award_roomcards_1() {
  _has_bits_[0] &= ~0x00000200u;
}
void MatchActInfo::clear_award_roomcards_1() {
  award_roomcards_1_ = 0u;
  clear_has_award_roomcards_1();
}
 ::google::protobuf::uint32 MatchActInfo::award_roomcards_1() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.MatchActInfo.award_roomcards_1)
  return award_roomcards_1_;
}
 void MatchActInfo::set_award_roomcards_1(::google::protobuf::uint32 value) {
  set_has_award_roomcards_1();
  award_roomcards_1_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.MatchActInfo.award_roomcards_1)
}

// optional uint32 award_roomcards_2 = 11;
bool MatchActInfo::has_award_roomcards_2() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void MatchActInfo::set_has_award_roomcards_2() {
  _has_bits_[0] |= 0x00000400u;
}
void MatchActInfo::clear_has_award_roomcards_2() {
  _has_bits_[0] &= ~0x00000400u;
}
void MatchActInfo::clear_award_roomcards_2() {
  award_roomcards_2_ = 0u;
  clear_has_award_roomcards_2();
}
 ::google::protobuf::uint32 MatchActInfo::award_roomcards_2() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.MatchActInfo.award_roomcards_2)
  return award_roomcards_2_;
}
 void MatchActInfo::set_award_roomcards_2(::google::protobuf::uint32 value) {
  set_has_award_roomcards_2();
  award_roomcards_2_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.MatchActInfo.award_roomcards_2)
}

// optional uint32 award_roomcards_3 = 12;
bool MatchActInfo::has_award_roomcards_3() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void MatchActInfo::set_has_award_roomcards_3() {
  _has_bits_[0] |= 0x00000800u;
}
void MatchActInfo::clear_has_award_roomcards_3() {
  _has_bits_[0] &= ~0x00000800u;
}
void MatchActInfo::clear_award_roomcards_3() {
  award_roomcards_3_ = 0u;
  clear_has_award_roomcards_3();
}
 ::google::protobuf::uint32 MatchActInfo::award_roomcards_3() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.MatchActInfo.award_roomcards_3)
  return award_roomcards_3_;
}
 void MatchActInfo::set_award_roomcards_3(::google::protobuf::uint32 value) {
  set_has_award_roomcards_3();
  award_roomcards_3_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.MatchActInfo.award_roomcards_3)
}

// optional uint32 status = 13;
bool MatchActInfo::has_status() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void MatchActInfo::set_has_status() {
  _has_bits_[0] |= 0x00001000u;
}
void MatchActInfo::clear_has_status() {
  _has_bits_[0] &= ~0x00001000u;
}
void MatchActInfo::clear_status() {
  status_ = 0u;
  clear_has_status();
}
 ::google::protobuf::uint32 MatchActInfo::status() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.MatchActInfo.status)
  return status_;
}
 void MatchActInfo::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.MatchActInfo.status)
}

// optional uint64 create_time = 14;
bool MatchActInfo::has_create_time() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void MatchActInfo::set_has_create_time() {
  _has_bits_[0] |= 0x00002000u;
}
void MatchActInfo::clear_has_create_time() {
  _has_bits_[0] &= ~0x00002000u;
}
void MatchActInfo::clear_create_time() {
  create_time_ = GOOGLE_ULONGLONG(0);
  clear_has_create_time();
}
 ::google::protobuf::uint64 MatchActInfo::create_time() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.MatchActInfo.create_time)
  return create_time_;
}
 void MatchActInfo::set_create_time(::google::protobuf::uint64 value) {
  set_has_create_time();
  create_time_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.MatchActInfo.create_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MatchUserInfo::kRecordIdFieldNumber;
const int MatchUserInfo::kRecordTimeFieldNumber;
const int MatchUserInfo::kRoomNoFieldNumber;
const int MatchUserInfo::kInnIdFieldNumber;
const int MatchUserInfo::kMatchIdFieldNumber;
const int MatchUserInfo::kInnTimeFieldNumber;
const int MatchUserInfo::kHuwayFieldNumber;
const int MatchUserInfo::kHutypeFieldNumber;
const int MatchUserInfo::kHuseatFieldNumber;
const int MatchUserInfo::kU1IdFieldNumber;
const int MatchUserInfo::kU1ScoreFieldNumber;
const int MatchUserInfo::kU1TotalFieldNumber;
const int MatchUserInfo::kU1AngangFieldNumber;
const int MatchUserInfo::kU1MinggangFieldNumber;
const int MatchUserInfo::kU1GoushouggangFieldNumber;
const int MatchUserInfo::kU2IdFieldNumber;
const int MatchUserInfo::kU2ScoreFieldNumber;
const int MatchUserInfo::kU2TotalFieldNumber;
const int MatchUserInfo::kU2AngangFieldNumber;
const int MatchUserInfo::kU2MinggangFieldNumber;
const int MatchUserInfo::kU2GoushouggangFieldNumber;
const int MatchUserInfo::kU3IdFieldNumber;
const int MatchUserInfo::kU3ScoreFieldNumber;
const int MatchUserInfo::kU3TotalFieldNumber;
const int MatchUserInfo::kU3AngangFieldNumber;
const int MatchUserInfo::kU3MinggangFieldNumber;
const int MatchUserInfo::kU3GoushouggangFieldNumber;
const int MatchUserInfo::kU4IdFieldNumber;
const int MatchUserInfo::kU4ScoreFieldNumber;
const int MatchUserInfo::kU4TotalFieldNumber;
const int MatchUserInfo::kU4AngangFieldNumber;
const int MatchUserInfo::kU4MinggangFieldNumber;
const int MatchUserInfo::kU4GoushouggangFieldNumber;
const int MatchUserInfo::kHupaitilesFieldNumber;
const int MatchUserInfo::kGameTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MatchUserInfo::MatchUserInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.MatchUserInfo)
}

void MatchUserInfo::InitAsDefaultInstance() {
  hupaitiles_ = const_cast< ::fogs::proto::msg::HupaiTiles*>(&::fogs::proto::msg::HupaiTiles::default_instance());
}

MatchUserInfo::MatchUserInfo(const MatchUserInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.MatchUserInfo)
}

void MatchUserInfo::SharedCtor() {
  _cached_size_ = 0;
  record_id_ = GOOGLE_ULONGLONG(0);
  record_time_ = GOOGLE_ULONGLONG(0);
  room_no_ = 0u;
  inn_id_ = 0u;
  match_id_ = 0u;
  inn_time_ = GOOGLE_ULONGLONG(0);
  huway_ = 0;
  hutype_ = 0;
  huseat_ = 0;
  u_1_id_ = GOOGLE_ULONGLONG(0);
  u_1_score_ = 0;
  u_1_total_ = 0;
  u_1_angang_ = 0;
  u_1_minggang_ = 0;
  u_1_goushouggang_ = 0;
  u_2_id_ = GOOGLE_ULONGLONG(0);
  u_2_score_ = 0;
  u_2_total_ = 0;
  u_2_angang_ = 0;
  u_2_minggang_ = 0;
  u_2_goushouggang_ = 0;
  u_3_id_ = GOOGLE_ULONGLONG(0);
  u_3_score_ = 0;
  u_3_total_ = 0;
  u_3_angang_ = 0;
  u_3_minggang_ = 0;
  u_3_goushouggang_ = 0;
  u_4_id_ = GOOGLE_ULONGLONG(0);
  u_4_score_ = 0;
  u_4_total_ = 0;
  u_4_angang_ = 0;
  u_4_minggang_ = 0;
  u_4_goushouggang_ = 0;
  hupaitiles_ = NULL;
  game_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MatchUserInfo::~MatchUserInfo() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.MatchUserInfo)
  SharedDtor();
}

void MatchUserInfo::SharedDtor() {
  if (this != default_instance_) {
    delete hupaitiles_;
  }
}

void MatchUserInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MatchUserInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MatchUserInfo_descriptor_;
}

const MatchUserInfo& MatchUserInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5flog_2eproto();
  return *default_instance_;
}

MatchUserInfo* MatchUserInfo::default_instance_ = NULL;

MatchUserInfo* MatchUserInfo::New(::google::protobuf::Arena* arena) const {
  MatchUserInfo* n = new MatchUserInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MatchUserInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.MatchUserInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(MatchUserInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MatchUserInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(record_id_, hutype_);
  }
  if (_has_bits_[8 / 32] & 65280u) {
    ZR_(huseat_, u_1_goushouggang_);
  }
  if (_has_bits_[16 / 32] & 16711680u) {
    ZR_(u_2_score_, u_3_total_);
  }
  if (_has_bits_[24 / 32] & 4278190080u) {
    ZR_(u_3_angang_, u_4_minggang_);
  }
  if (_has_bits_[32 / 32] & 7u) {
    u_4_goushouggang_ = 0;
    if (has_hupaitiles()) {
      if (hupaitiles_ != NULL) hupaitiles_->::fogs::proto::msg::HupaiTiles::Clear();
    }
    game_type_ = 0;
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MatchUserInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.MatchUserInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 record_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &record_id_)));
          set_has_record_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_record_time;
        break;
      }

      // optional uint64 record_time = 2;
      case 2: {
        if (tag == 16) {
         parse_record_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &record_time_)));
          set_has_record_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_room_no;
        break;
      }

      // optional uint32 room_no = 3;
      case 3: {
        if (tag == 24) {
         parse_room_no:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &room_no_)));
          set_has_room_no();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_inn_id;
        break;
      }

      // optional uint32 inn_id = 4;
      case 4: {
        if (tag == 32) {
         parse_inn_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &inn_id_)));
          set_has_inn_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_match_id;
        break;
      }

      // optional uint32 match_id = 5;
      case 5: {
        if (tag == 40) {
         parse_match_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &match_id_)));
          set_has_match_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_inn_time;
        break;
      }

      // optional uint64 inn_time = 6;
      case 6: {
        if (tag == 48) {
         parse_inn_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &inn_time_)));
          set_has_inn_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_huway;
        break;
      }

      // optional int32 huway = 7;
      case 7: {
        if (tag == 56) {
         parse_huway:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &huway_)));
          set_has_huway();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_hutype;
        break;
      }

      // optional int32 hutype = 8;
      case 8: {
        if (tag == 64) {
         parse_hutype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hutype_)));
          set_has_hutype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_huseat;
        break;
      }

      // optional int32 huseat = 9;
      case 9: {
        if (tag == 72) {
         parse_huseat:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &huseat_)));
          set_has_huseat();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_u_1_id;
        break;
      }

      // optional uint64 u_1_id = 10;
      case 10: {
        if (tag == 80) {
         parse_u_1_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &u_1_id_)));
          set_has_u_1_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_u_1_score;
        break;
      }

      // optional int32 u_1_score = 11;
      case 11: {
        if (tag == 88) {
         parse_u_1_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &u_1_score_)));
          set_has_u_1_score();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_u_1_total;
        break;
      }

      // optional int32 u_1_total = 12;
      case 12: {
        if (tag == 96) {
         parse_u_1_total:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &u_1_total_)));
          set_has_u_1_total();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_u_1_angang;
        break;
      }

      // optional int32 u_1_angang = 13;
      case 13: {
        if (tag == 104) {
         parse_u_1_angang:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &u_1_angang_)));
          set_has_u_1_angang();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_u_1_minggang;
        break;
      }

      // optional int32 u_1_minggang = 14;
      case 14: {
        if (tag == 112) {
         parse_u_1_minggang:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &u_1_minggang_)));
          set_has_u_1_minggang();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_u_1_goushouggang;
        break;
      }

      // optional int32 u_1_goushouggang = 15;
      case 15: {
        if (tag == 120) {
         parse_u_1_goushouggang:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &u_1_goushouggang_)));
          set_has_u_1_goushouggang();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(160)) goto parse_u_2_id;
        break;
      }

      // optional uint64 u_2_id = 20;
      case 20: {
        if (tag == 160) {
         parse_u_2_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &u_2_id_)));
          set_has_u_2_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(168)) goto parse_u_2_score;
        break;
      }

      // optional int32 u_2_score = 21;
      case 21: {
        if (tag == 168) {
         parse_u_2_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &u_2_score_)));
          set_has_u_2_score();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(176)) goto parse_u_2_total;
        break;
      }

      // optional int32 u_2_total = 22;
      case 22: {
        if (tag == 176) {
         parse_u_2_total:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &u_2_total_)));
          set_has_u_2_total();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(184)) goto parse_u_2_angang;
        break;
      }

      // optional int32 u_2_angang = 23;
      case 23: {
        if (tag == 184) {
         parse_u_2_angang:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &u_2_angang_)));
          set_has_u_2_angang();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(192)) goto parse_u_2_minggang;
        break;
      }

      // optional int32 u_2_minggang = 24;
      case 24: {
        if (tag == 192) {
         parse_u_2_minggang:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &u_2_minggang_)));
          set_has_u_2_minggang();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(200)) goto parse_u_2_goushouggang;
        break;
      }

      // optional int32 u_2_goushouggang = 25;
      case 25: {
        if (tag == 200) {
         parse_u_2_goushouggang:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &u_2_goushouggang_)));
          set_has_u_2_goushouggang();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(240)) goto parse_u_3_id;
        break;
      }

      // optional uint64 u_3_id = 30;
      case 30: {
        if (tag == 240) {
         parse_u_3_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &u_3_id_)));
          set_has_u_3_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(248)) goto parse_u_3_score;
        break;
      }

      // optional int32 u_3_score = 31;
      case 31: {
        if (tag == 248) {
         parse_u_3_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &u_3_score_)));
          set_has_u_3_score();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(256)) goto parse_u_3_total;
        break;
      }

      // optional int32 u_3_total = 32;
      case 32: {
        if (tag == 256) {
         parse_u_3_total:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &u_3_total_)));
          set_has_u_3_total();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(264)) goto parse_u_3_angang;
        break;
      }

      // optional int32 u_3_angang = 33;
      case 33: {
        if (tag == 264) {
         parse_u_3_angang:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &u_3_angang_)));
          set_has_u_3_angang();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(272)) goto parse_u_3_minggang;
        break;
      }

      // optional int32 u_3_minggang = 34;
      case 34: {
        if (tag == 272) {
         parse_u_3_minggang:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &u_3_minggang_)));
          set_has_u_3_minggang();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(280)) goto parse_u_3_goushouggang;
        break;
      }

      // optional int32 u_3_goushouggang = 35;
      case 35: {
        if (tag == 280) {
         parse_u_3_goushouggang:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &u_3_goushouggang_)));
          set_has_u_3_goushouggang();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(320)) goto parse_u_4_id;
        break;
      }

      // optional uint64 u_4_id = 40;
      case 40: {
        if (tag == 320) {
         parse_u_4_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &u_4_id_)));
          set_has_u_4_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(328)) goto parse_u_4_score;
        break;
      }

      // optional int32 u_4_score = 41;
      case 41: {
        if (tag == 328) {
         parse_u_4_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &u_4_score_)));
          set_has_u_4_score();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(336)) goto parse_u_4_total;
        break;
      }

      // optional int32 u_4_total = 42;
      case 42: {
        if (tag == 336) {
         parse_u_4_total:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &u_4_total_)));
          set_has_u_4_total();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(344)) goto parse_u_4_angang;
        break;
      }

      // optional int32 u_4_angang = 43;
      case 43: {
        if (tag == 344) {
         parse_u_4_angang:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &u_4_angang_)));
          set_has_u_4_angang();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(352)) goto parse_u_4_minggang;
        break;
      }

      // optional int32 u_4_minggang = 44;
      case 44: {
        if (tag == 352) {
         parse_u_4_minggang:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &u_4_minggang_)));
          set_has_u_4_minggang();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(360)) goto parse_u_4_goushouggang;
        break;
      }

      // optional int32 u_4_goushouggang = 45;
      case 45: {
        if (tag == 360) {
         parse_u_4_goushouggang:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &u_4_goushouggang_)));
          set_has_u_4_goushouggang();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(370)) goto parse_hupaitiles;
        break;
      }

      // optional .fogs.proto.msg.HupaiTiles hupaitiles = 46;
      case 46: {
        if (tag == 370) {
         parse_hupaitiles:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hupaitiles()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(376)) goto parse_game_type;
        break;
      }

      // optional int32 game_type = 47;
      case 47: {
        if (tag == 376) {
         parse_game_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &game_type_)));
          set_has_game_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.MatchUserInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.MatchUserInfo)
  return false;
#undef DO_
}

void MatchUserInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.MatchUserInfo)
  // optional uint64 record_id = 1;
  if (has_record_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->record_id(), output);
  }

  // optional uint64 record_time = 2;
  if (has_record_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->record_time(), output);
  }

  // optional uint32 room_no = 3;
  if (has_room_no()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->room_no(), output);
  }

  // optional uint32 inn_id = 4;
  if (has_inn_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->inn_id(), output);
  }

  // optional uint32 match_id = 5;
  if (has_match_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->match_id(), output);
  }

  // optional uint64 inn_time = 6;
  if (has_inn_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->inn_time(), output);
  }

  // optional int32 huway = 7;
  if (has_huway()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->huway(), output);
  }

  // optional int32 hutype = 8;
  if (has_hutype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->hutype(), output);
  }

  // optional int32 huseat = 9;
  if (has_huseat()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->huseat(), output);
  }

  // optional uint64 u_1_id = 10;
  if (has_u_1_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(10, this->u_1_id(), output);
  }

  // optional int32 u_1_score = 11;
  if (has_u_1_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->u_1_score(), output);
  }

  // optional int32 u_1_total = 12;
  if (has_u_1_total()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->u_1_total(), output);
  }

  // optional int32 u_1_angang = 13;
  if (has_u_1_angang()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->u_1_angang(), output);
  }

  // optional int32 u_1_minggang = 14;
  if (has_u_1_minggang()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->u_1_minggang(), output);
  }

  // optional int32 u_1_goushouggang = 15;
  if (has_u_1_goushouggang()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->u_1_goushouggang(), output);
  }

  // optional uint64 u_2_id = 20;
  if (has_u_2_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(20, this->u_2_id(), output);
  }

  // optional int32 u_2_score = 21;
  if (has_u_2_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->u_2_score(), output);
  }

  // optional int32 u_2_total = 22;
  if (has_u_2_total()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->u_2_total(), output);
  }

  // optional int32 u_2_angang = 23;
  if (has_u_2_angang()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(23, this->u_2_angang(), output);
  }

  // optional int32 u_2_minggang = 24;
  if (has_u_2_minggang()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(24, this->u_2_minggang(), output);
  }

  // optional int32 u_2_goushouggang = 25;
  if (has_u_2_goushouggang()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(25, this->u_2_goushouggang(), output);
  }

  // optional uint64 u_3_id = 30;
  if (has_u_3_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(30, this->u_3_id(), output);
  }

  // optional int32 u_3_score = 31;
  if (has_u_3_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(31, this->u_3_score(), output);
  }

  // optional int32 u_3_total = 32;
  if (has_u_3_total()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(32, this->u_3_total(), output);
  }

  // optional int32 u_3_angang = 33;
  if (has_u_3_angang()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(33, this->u_3_angang(), output);
  }

  // optional int32 u_3_minggang = 34;
  if (has_u_3_minggang()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(34, this->u_3_minggang(), output);
  }

  // optional int32 u_3_goushouggang = 35;
  if (has_u_3_goushouggang()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(35, this->u_3_goushouggang(), output);
  }

  // optional uint64 u_4_id = 40;
  if (has_u_4_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(40, this->u_4_id(), output);
  }

  // optional int32 u_4_score = 41;
  if (has_u_4_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(41, this->u_4_score(), output);
  }

  // optional int32 u_4_total = 42;
  if (has_u_4_total()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(42, this->u_4_total(), output);
  }

  // optional int32 u_4_angang = 43;
  if (has_u_4_angang()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(43, this->u_4_angang(), output);
  }

  // optional int32 u_4_minggang = 44;
  if (has_u_4_minggang()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(44, this->u_4_minggang(), output);
  }

  // optional int32 u_4_goushouggang = 45;
  if (has_u_4_goushouggang()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(45, this->u_4_goushouggang(), output);
  }

  // optional .fogs.proto.msg.HupaiTiles hupaitiles = 46;
  if (has_hupaitiles()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      46, *this->hupaitiles_, output);
  }

  // optional int32 game_type = 47;
  if (has_game_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(47, this->game_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.MatchUserInfo)
}

::google::protobuf::uint8* MatchUserInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.MatchUserInfo)
  // optional uint64 record_id = 1;
  if (has_record_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->record_id(), target);
  }

  // optional uint64 record_time = 2;
  if (has_record_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->record_time(), target);
  }

  // optional uint32 room_no = 3;
  if (has_room_no()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->room_no(), target);
  }

  // optional uint32 inn_id = 4;
  if (has_inn_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->inn_id(), target);
  }

  // optional uint32 match_id = 5;
  if (has_match_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->match_id(), target);
  }

  // optional uint64 inn_time = 6;
  if (has_inn_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->inn_time(), target);
  }

  // optional int32 huway = 7;
  if (has_huway()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->huway(), target);
  }

  // optional int32 hutype = 8;
  if (has_hutype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->hutype(), target);
  }

  // optional int32 huseat = 9;
  if (has_huseat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->huseat(), target);
  }

  // optional uint64 u_1_id = 10;
  if (has_u_1_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(10, this->u_1_id(), target);
  }

  // optional int32 u_1_score = 11;
  if (has_u_1_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->u_1_score(), target);
  }

  // optional int32 u_1_total = 12;
  if (has_u_1_total()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->u_1_total(), target);
  }

  // optional int32 u_1_angang = 13;
  if (has_u_1_angang()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->u_1_angang(), target);
  }

  // optional int32 u_1_minggang = 14;
  if (has_u_1_minggang()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->u_1_minggang(), target);
  }

  // optional int32 u_1_goushouggang = 15;
  if (has_u_1_goushouggang()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->u_1_goushouggang(), target);
  }

  // optional uint64 u_2_id = 20;
  if (has_u_2_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(20, this->u_2_id(), target);
  }

  // optional int32 u_2_score = 21;
  if (has_u_2_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->u_2_score(), target);
  }

  // optional int32 u_2_total = 22;
  if (has_u_2_total()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->u_2_total(), target);
  }

  // optional int32 u_2_angang = 23;
  if (has_u_2_angang()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(23, this->u_2_angang(), target);
  }

  // optional int32 u_2_minggang = 24;
  if (has_u_2_minggang()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(24, this->u_2_minggang(), target);
  }

  // optional int32 u_2_goushouggang = 25;
  if (has_u_2_goushouggang()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(25, this->u_2_goushouggang(), target);
  }

  // optional uint64 u_3_id = 30;
  if (has_u_3_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(30, this->u_3_id(), target);
  }

  // optional int32 u_3_score = 31;
  if (has_u_3_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(31, this->u_3_score(), target);
  }

  // optional int32 u_3_total = 32;
  if (has_u_3_total()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(32, this->u_3_total(), target);
  }

  // optional int32 u_3_angang = 33;
  if (has_u_3_angang()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(33, this->u_3_angang(), target);
  }

  // optional int32 u_3_minggang = 34;
  if (has_u_3_minggang()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(34, this->u_3_minggang(), target);
  }

  // optional int32 u_3_goushouggang = 35;
  if (has_u_3_goushouggang()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(35, this->u_3_goushouggang(), target);
  }

  // optional uint64 u_4_id = 40;
  if (has_u_4_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(40, this->u_4_id(), target);
  }

  // optional int32 u_4_score = 41;
  if (has_u_4_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(41, this->u_4_score(), target);
  }

  // optional int32 u_4_total = 42;
  if (has_u_4_total()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(42, this->u_4_total(), target);
  }

  // optional int32 u_4_angang = 43;
  if (has_u_4_angang()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(43, this->u_4_angang(), target);
  }

  // optional int32 u_4_minggang = 44;
  if (has_u_4_minggang()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(44, this->u_4_minggang(), target);
  }

  // optional int32 u_4_goushouggang = 45;
  if (has_u_4_goushouggang()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(45, this->u_4_goushouggang(), target);
  }

  // optional .fogs.proto.msg.HupaiTiles hupaitiles = 46;
  if (has_hupaitiles()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        46, *this->hupaitiles_, false, target);
  }

  // optional int32 game_type = 47;
  if (has_game_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(47, this->game_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.MatchUserInfo)
  return target;
}

int MatchUserInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.MatchUserInfo)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional uint64 record_id = 1;
    if (has_record_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->record_id());
    }

    // optional uint64 record_time = 2;
    if (has_record_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->record_time());
    }

    // optional uint32 room_no = 3;
    if (has_room_no()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->room_no());
    }

    // optional uint32 inn_id = 4;
    if (has_inn_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->inn_id());
    }

    // optional uint32 match_id = 5;
    if (has_match_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->match_id());
    }

    // optional uint64 inn_time = 6;
    if (has_inn_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->inn_time());
    }

    // optional int32 huway = 7;
    if (has_huway()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->huway());
    }

    // optional int32 hutype = 8;
    if (has_hutype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hutype());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional int32 huseat = 9;
    if (has_huseat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->huseat());
    }

    // optional uint64 u_1_id = 10;
    if (has_u_1_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->u_1_id());
    }

    // optional int32 u_1_score = 11;
    if (has_u_1_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->u_1_score());
    }

    // optional int32 u_1_total = 12;
    if (has_u_1_total()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->u_1_total());
    }

    // optional int32 u_1_angang = 13;
    if (has_u_1_angang()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->u_1_angang());
    }

    // optional int32 u_1_minggang = 14;
    if (has_u_1_minggang()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->u_1_minggang());
    }

    // optional int32 u_1_goushouggang = 15;
    if (has_u_1_goushouggang()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->u_1_goushouggang());
    }

    // optional uint64 u_2_id = 20;
    if (has_u_2_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->u_2_id());
    }

  }
  if (_has_bits_[16 / 32] & 16711680u) {
    // optional int32 u_2_score = 21;
    if (has_u_2_score()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->u_2_score());
    }

    // optional int32 u_2_total = 22;
    if (has_u_2_total()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->u_2_total());
    }

    // optional int32 u_2_angang = 23;
    if (has_u_2_angang()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->u_2_angang());
    }

    // optional int32 u_2_minggang = 24;
    if (has_u_2_minggang()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->u_2_minggang());
    }

    // optional int32 u_2_goushouggang = 25;
    if (has_u_2_goushouggang()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->u_2_goushouggang());
    }

    // optional uint64 u_3_id = 30;
    if (has_u_3_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->u_3_id());
    }

    // optional int32 u_3_score = 31;
    if (has_u_3_score()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->u_3_score());
    }

    // optional int32 u_3_total = 32;
    if (has_u_3_total()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->u_3_total());
    }

  }
  if (_has_bits_[24 / 32] & 4278190080u) {
    // optional int32 u_3_angang = 33;
    if (has_u_3_angang()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->u_3_angang());
    }

    // optional int32 u_3_minggang = 34;
    if (has_u_3_minggang()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->u_3_minggang());
    }

    // optional int32 u_3_goushouggang = 35;
    if (has_u_3_goushouggang()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->u_3_goushouggang());
    }

    // optional uint64 u_4_id = 40;
    if (has_u_4_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->u_4_id());
    }

    // optional int32 u_4_score = 41;
    if (has_u_4_score()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->u_4_score());
    }

    // optional int32 u_4_total = 42;
    if (has_u_4_total()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->u_4_total());
    }

    // optional int32 u_4_angang = 43;
    if (has_u_4_angang()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->u_4_angang());
    }

    // optional int32 u_4_minggang = 44;
    if (has_u_4_minggang()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->u_4_minggang());
    }

  }
  if (_has_bits_[32 / 32] & 7u) {
    // optional int32 u_4_goushouggang = 45;
    if (has_u_4_goushouggang()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->u_4_goushouggang());
    }

    // optional .fogs.proto.msg.HupaiTiles hupaitiles = 46;
    if (has_hupaitiles()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->hupaitiles_);
    }

    // optional int32 game_type = 47;
    if (has_game_type()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->game_type());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MatchUserInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.MatchUserInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MatchUserInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MatchUserInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.MatchUserInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.MatchUserInfo)
    MergeFrom(*source);
  }
}

void MatchUserInfo::MergeFrom(const MatchUserInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.MatchUserInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_record_id()) {
      set_record_id(from.record_id());
    }
    if (from.has_record_time()) {
      set_record_time(from.record_time());
    }
    if (from.has_room_no()) {
      set_room_no(from.room_no());
    }
    if (from.has_inn_id()) {
      set_inn_id(from.inn_id());
    }
    if (from.has_match_id()) {
      set_match_id(from.match_id());
    }
    if (from.has_inn_time()) {
      set_inn_time(from.inn_time());
    }
    if (from.has_huway()) {
      set_huway(from.huway());
    }
    if (from.has_hutype()) {
      set_hutype(from.hutype());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_huseat()) {
      set_huseat(from.huseat());
    }
    if (from.has_u_1_id()) {
      set_u_1_id(from.u_1_id());
    }
    if (from.has_u_1_score()) {
      set_u_1_score(from.u_1_score());
    }
    if (from.has_u_1_total()) {
      set_u_1_total(from.u_1_total());
    }
    if (from.has_u_1_angang()) {
      set_u_1_angang(from.u_1_angang());
    }
    if (from.has_u_1_minggang()) {
      set_u_1_minggang(from.u_1_minggang());
    }
    if (from.has_u_1_goushouggang()) {
      set_u_1_goushouggang(from.u_1_goushouggang());
    }
    if (from.has_u_2_id()) {
      set_u_2_id(from.u_2_id());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_u_2_score()) {
      set_u_2_score(from.u_2_score());
    }
    if (from.has_u_2_total()) {
      set_u_2_total(from.u_2_total());
    }
    if (from.has_u_2_angang()) {
      set_u_2_angang(from.u_2_angang());
    }
    if (from.has_u_2_minggang()) {
      set_u_2_minggang(from.u_2_minggang());
    }
    if (from.has_u_2_goushouggang()) {
      set_u_2_goushouggang(from.u_2_goushouggang());
    }
    if (from.has_u_3_id()) {
      set_u_3_id(from.u_3_id());
    }
    if (from.has_u_3_score()) {
      set_u_3_score(from.u_3_score());
    }
    if (from.has_u_3_total()) {
      set_u_3_total(from.u_3_total());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from.has_u_3_angang()) {
      set_u_3_angang(from.u_3_angang());
    }
    if (from.has_u_3_minggang()) {
      set_u_3_minggang(from.u_3_minggang());
    }
    if (from.has_u_3_goushouggang()) {
      set_u_3_goushouggang(from.u_3_goushouggang());
    }
    if (from.has_u_4_id()) {
      set_u_4_id(from.u_4_id());
    }
    if (from.has_u_4_score()) {
      set_u_4_score(from.u_4_score());
    }
    if (from.has_u_4_total()) {
      set_u_4_total(from.u_4_total());
    }
    if (from.has_u_4_angang()) {
      set_u_4_angang(from.u_4_angang());
    }
    if (from.has_u_4_minggang()) {
      set_u_4_minggang(from.u_4_minggang());
    }
  }
  if (from._has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    if (from.has_u_4_goushouggang()) {
      set_u_4_goushouggang(from.u_4_goushouggang());
    }
    if (from.has_hupaitiles()) {
      mutable_hupaitiles()->::fogs::proto::msg::HupaiTiles::MergeFrom(from.hupaitiles());
    }
    if (from.has_game_type()) {
      set_game_type(from.game_type());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MatchUserInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.MatchUserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MatchUserInfo::CopyFrom(const MatchUserInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.MatchUserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MatchUserInfo::IsInitialized() const {

  return true;
}

void MatchUserInfo::Swap(MatchUserInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MatchUserInfo::InternalSwap(MatchUserInfo* other) {
  std::swap(record_id_, other->record_id_);
  std::swap(record_time_, other->record_time_);
  std::swap(room_no_, other->room_no_);
  std::swap(inn_id_, other->inn_id_);
  std::swap(match_id_, other->match_id_);
  std::swap(inn_time_, other->inn_time_);
  std::swap(huway_, other->huway_);
  std::swap(hutype_, other->hutype_);
  std::swap(huseat_, other->huseat_);
  std::swap(u_1_id_, other->u_1_id_);
  std::swap(u_1_score_, other->u_1_score_);
  std::swap(u_1_total_, other->u_1_total_);
  std::swap(u_1_angang_, other->u_1_angang_);
  std::swap(u_1_minggang_, other->u_1_minggang_);
  std::swap(u_1_goushouggang_, other->u_1_goushouggang_);
  std::swap(u_2_id_, other->u_2_id_);
  std::swap(u_2_score_, other->u_2_score_);
  std::swap(u_2_total_, other->u_2_total_);
  std::swap(u_2_angang_, other->u_2_angang_);
  std::swap(u_2_minggang_, other->u_2_minggang_);
  std::swap(u_2_goushouggang_, other->u_2_goushouggang_);
  std::swap(u_3_id_, other->u_3_id_);
  std::swap(u_3_score_, other->u_3_score_);
  std::swap(u_3_total_, other->u_3_total_);
  std::swap(u_3_angang_, other->u_3_angang_);
  std::swap(u_3_minggang_, other->u_3_minggang_);
  std::swap(u_3_goushouggang_, other->u_3_goushouggang_);
  std::swap(u_4_id_, other->u_4_id_);
  std::swap(u_4_score_, other->u_4_score_);
  std::swap(u_4_total_, other->u_4_total_);
  std::swap(u_4_angang_, other->u_4_angang_);
  std::swap(u_4_minggang_, other->u_4_minggang_);
  std::swap(u_4_goushouggang_, other->u_4_goushouggang_);
  std::swap(hupaitiles_, other->hupaitiles_);
  std::swap(game_type_, other->game_type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  std::swap(_has_bits_[1], other->_has_bits_[1]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MatchUserInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MatchUserInfo_descriptor_;
  metadata.reflection = MatchUserInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MatchUserInfo

// optional uint64 record_id = 1;
bool MatchUserInfo::has_record_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MatchUserInfo::set_has_record_id() {
  _has_bits_[0] |= 0x00000001u;
}
void MatchUserInfo::clear_has_record_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void MatchUserInfo::clear_record_id() {
  record_id_ = GOOGLE_ULONGLONG(0);
  clear_has_record_id();
}
 ::google::protobuf::uint64 MatchUserInfo::record_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.MatchUserInfo.record_id)
  return record_id_;
}
 void MatchUserInfo::set_record_id(::google::protobuf::uint64 value) {
  set_has_record_id();
  record_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.MatchUserInfo.record_id)
}

// optional uint64 record_time = 2;
bool MatchUserInfo::has_record_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MatchUserInfo::set_has_record_time() {
  _has_bits_[0] |= 0x00000002u;
}
void MatchUserInfo::clear_has_record_time() {
  _has_bits_[0] &= ~0x00000002u;
}
void MatchUserInfo::clear_record_time() {
  record_time_ = GOOGLE_ULONGLONG(0);
  clear_has_record_time();
}
 ::google::protobuf::uint64 MatchUserInfo::record_time() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.MatchUserInfo.record_time)
  return record_time_;
}
 void MatchUserInfo::set_record_time(::google::protobuf::uint64 value) {
  set_has_record_time();
  record_time_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.MatchUserInfo.record_time)
}

// optional uint32 room_no = 3;
bool MatchUserInfo::has_room_no() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void MatchUserInfo::set_has_room_no() {
  _has_bits_[0] |= 0x00000004u;
}
void MatchUserInfo::clear_has_room_no() {
  _has_bits_[0] &= ~0x00000004u;
}
void MatchUserInfo::clear_room_no() {
  room_no_ = 0u;
  clear_has_room_no();
}
 ::google::protobuf::uint32 MatchUserInfo::room_no() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.MatchUserInfo.room_no)
  return room_no_;
}
 void MatchUserInfo::set_room_no(::google::protobuf::uint32 value) {
  set_has_room_no();
  room_no_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.MatchUserInfo.room_no)
}

// optional uint32 inn_id = 4;
bool MatchUserInfo::has_inn_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void MatchUserInfo::set_has_inn_id() {
  _has_bits_[0] |= 0x00000008u;
}
void MatchUserInfo::clear_has_inn_id() {
  _has_bits_[0] &= ~0x00000008u;
}
void MatchUserInfo::clear_inn_id() {
  inn_id_ = 0u;
  clear_has_inn_id();
}
 ::google::protobuf::uint32 MatchUserInfo::inn_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.MatchUserInfo.inn_id)
  return inn_id_;
}
 void MatchUserInfo::set_inn_id(::google::protobuf::uint32 value) {
  set_has_inn_id();
  inn_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.MatchUserInfo.inn_id)
}

// optional uint32 match_id = 5;
bool MatchUserInfo::has_match_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void MatchUserInfo::set_has_match_id() {
  _has_bits_[0] |= 0x00000010u;
}
void MatchUserInfo::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000010u;
}
void MatchUserInfo::clear_match_id() {
  match_id_ = 0u;
  clear_has_match_id();
}
 ::google::protobuf::uint32 MatchUserInfo::match_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.MatchUserInfo.match_id)
  return match_id_;
}
 void MatchUserInfo::set_match_id(::google::protobuf::uint32 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.MatchUserInfo.match_id)
}

// optional uint64 inn_time = 6;
bool MatchUserInfo::has_inn_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void MatchUserInfo::set_has_inn_time() {
  _has_bits_[0] |= 0x00000020u;
}
void MatchUserInfo::clear_has_inn_time() {
  _has_bits_[0] &= ~0x00000020u;
}
void MatchUserInfo::clear_inn_time() {
  inn_time_ = GOOGLE_ULONGLONG(0);
  clear_has_inn_time();
}
 ::google::protobuf::uint64 MatchUserInfo::inn_time() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.MatchUserInfo.inn_time)
  return inn_time_;
}
 void MatchUserInfo::set_inn_time(::google::protobuf::uint64 value) {
  set_has_inn_time();
  inn_time_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.MatchUserInfo.inn_time)
}

// optional int32 huway = 7;
bool MatchUserInfo::has_huway() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void MatchUserInfo::set_has_huway() {
  _has_bits_[0] |= 0x00000040u;
}
void MatchUserInfo::clear_has_huway() {
  _has_bits_[0] &= ~0x00000040u;
}
void MatchUserInfo::clear_huway() {
  huway_ = 0;
  clear_has_huway();
}
 ::google::protobuf::int32 MatchUserInfo::huway() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.MatchUserInfo.huway)
  return huway_;
}
 void MatchUserInfo::set_huway(::google::protobuf::int32 value) {
  set_has_huway();
  huway_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.MatchUserInfo.huway)
}

// optional int32 hutype = 8;
bool MatchUserInfo::has_hutype() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void MatchUserInfo::set_has_hutype() {
  _has_bits_[0] |= 0x00000080u;
}
void MatchUserInfo::clear_has_hutype() {
  _has_bits_[0] &= ~0x00000080u;
}
void MatchUserInfo::clear_hutype() {
  hutype_ = 0;
  clear_has_hutype();
}
 ::google::protobuf::int32 MatchUserInfo::hutype() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.MatchUserInfo.hutype)
  return hutype_;
}
 void MatchUserInfo::set_hutype(::google::protobuf::int32 value) {
  set_has_hutype();
  hutype_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.MatchUserInfo.hutype)
}

// optional int32 huseat = 9;
bool MatchUserInfo::has_huseat() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void MatchUserInfo::set_has_huseat() {
  _has_bits_[0] |= 0x00000100u;
}
void MatchUserInfo::clear_has_huseat() {
  _has_bits_[0] &= ~0x00000100u;
}
void MatchUserInfo::clear_huseat() {
  huseat_ = 0;
  clear_has_huseat();
}
 ::google::protobuf::int32 MatchUserInfo::huseat() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.MatchUserInfo.huseat)
  return huseat_;
}
 void MatchUserInfo::set_huseat(::google::protobuf::int32 value) {
  set_has_huseat();
  huseat_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.MatchUserInfo.huseat)
}

// optional uint64 u_1_id = 10;
bool MatchUserInfo::has_u_1_id() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void MatchUserInfo::set_has_u_1_id() {
  _has_bits_[0] |= 0x00000200u;
}
void MatchUserInfo::clear_has_u_1_id() {
  _has_bits_[0] &= ~0x00000200u;
}
void MatchUserInfo::clear_u_1_id() {
  u_1_id_ = GOOGLE_ULONGLONG(0);
  clear_has_u_1_id();
}
 ::google::protobuf::uint64 MatchUserInfo::u_1_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.MatchUserInfo.u_1_id)
  return u_1_id_;
}
 void MatchUserInfo::set_u_1_id(::google::protobuf::uint64 value) {
  set_has_u_1_id();
  u_1_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.MatchUserInfo.u_1_id)
}

// optional int32 u_1_score = 11;
bool MatchUserInfo::has_u_1_score() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void MatchUserInfo::set_has_u_1_score() {
  _has_bits_[0] |= 0x00000400u;
}
void MatchUserInfo::clear_has_u_1_score() {
  _has_bits_[0] &= ~0x00000400u;
}
void MatchUserInfo::clear_u_1_score() {
  u_1_score_ = 0;
  clear_has_u_1_score();
}
 ::google::protobuf::int32 MatchUserInfo::u_1_score() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.MatchUserInfo.u_1_score)
  return u_1_score_;
}
 void MatchUserInfo::set_u_1_score(::google::protobuf::int32 value) {
  set_has_u_1_score();
  u_1_score_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.MatchUserInfo.u_1_score)
}

// optional int32 u_1_total = 12;
bool MatchUserInfo::has_u_1_total() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void MatchUserInfo::set_has_u_1_total() {
  _has_bits_[0] |= 0x00000800u;
}
void MatchUserInfo::clear_has_u_1_total() {
  _has_bits_[0] &= ~0x00000800u;
}
void MatchUserInfo::clear_u_1_total() {
  u_1_total_ = 0;
  clear_has_u_1_total();
}
 ::google::protobuf::int32 MatchUserInfo::u_1_total() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.MatchUserInfo.u_1_total)
  return u_1_total_;
}
 void MatchUserInfo::set_u_1_total(::google::protobuf::int32 value) {
  set_has_u_1_total();
  u_1_total_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.MatchUserInfo.u_1_total)
}

// optional int32 u_1_angang = 13;
bool MatchUserInfo::has_u_1_angang() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void MatchUserInfo::set_has_u_1_angang() {
  _has_bits_[0] |= 0x00001000u;
}
void MatchUserInfo::clear_has_u_1_angang() {
  _has_bits_[0] &= ~0x00001000u;
}
void MatchUserInfo::clear_u_1_angang() {
  u_1_angang_ = 0;
  clear_has_u_1_angang();
}
 ::google::protobuf::int32 MatchUserInfo::u_1_angang() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.MatchUserInfo.u_1_angang)
  return u_1_angang_;
}
 void MatchUserInfo::set_u_1_angang(::google::protobuf::int32 value) {
  set_has_u_1_angang();
  u_1_angang_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.MatchUserInfo.u_1_angang)
}

// optional int32 u_1_minggang = 14;
bool MatchUserInfo::has_u_1_minggang() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void MatchUserInfo::set_has_u_1_minggang() {
  _has_bits_[0] |= 0x00002000u;
}
void MatchUserInfo::clear_has_u_1_minggang() {
  _has_bits_[0] &= ~0x00002000u;
}
void MatchUserInfo::clear_u_1_minggang() {
  u_1_minggang_ = 0;
  clear_has_u_1_minggang();
}
 ::google::protobuf::int32 MatchUserInfo::u_1_minggang() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.MatchUserInfo.u_1_minggang)
  return u_1_minggang_;
}
 void MatchUserInfo::set_u_1_minggang(::google::protobuf::int32 value) {
  set_has_u_1_minggang();
  u_1_minggang_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.MatchUserInfo.u_1_minggang)
}

// optional int32 u_1_goushouggang = 15;
bool MatchUserInfo::has_u_1_goushouggang() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void MatchUserInfo::set_has_u_1_goushouggang() {
  _has_bits_[0] |= 0x00004000u;
}
void MatchUserInfo::clear_has_u_1_goushouggang() {
  _has_bits_[0] &= ~0x00004000u;
}
void MatchUserInfo::clear_u_1_goushouggang() {
  u_1_goushouggang_ = 0;
  clear_has_u_1_goushouggang();
}
 ::google::protobuf::int32 MatchUserInfo::u_1_goushouggang() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.MatchUserInfo.u_1_goushouggang)
  return u_1_goushouggang_;
}
 void MatchUserInfo::set_u_1_goushouggang(::google::protobuf::int32 value) {
  set_has_u_1_goushouggang();
  u_1_goushouggang_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.MatchUserInfo.u_1_goushouggang)
}

// optional uint64 u_2_id = 20;
bool MatchUserInfo::has_u_2_id() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void MatchUserInfo::set_has_u_2_id() {
  _has_bits_[0] |= 0x00008000u;
}
void MatchUserInfo::clear_has_u_2_id() {
  _has_bits_[0] &= ~0x00008000u;
}
void MatchUserInfo::clear_u_2_id() {
  u_2_id_ = GOOGLE_ULONGLONG(0);
  clear_has_u_2_id();
}
 ::google::protobuf::uint64 MatchUserInfo::u_2_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.MatchUserInfo.u_2_id)
  return u_2_id_;
}
 void MatchUserInfo::set_u_2_id(::google::protobuf::uint64 value) {
  set_has_u_2_id();
  u_2_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.MatchUserInfo.u_2_id)
}

// optional int32 u_2_score = 21;
bool MatchUserInfo::has_u_2_score() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void MatchUserInfo::set_has_u_2_score() {
  _has_bits_[0] |= 0x00010000u;
}
void MatchUserInfo::clear_has_u_2_score() {
  _has_bits_[0] &= ~0x00010000u;
}
void MatchUserInfo::clear_u_2_score() {
  u_2_score_ = 0;
  clear_has_u_2_score();
}
 ::google::protobuf::int32 MatchUserInfo::u_2_score() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.MatchUserInfo.u_2_score)
  return u_2_score_;
}
 void MatchUserInfo::set_u_2_score(::google::protobuf::int32 value) {
  set_has_u_2_score();
  u_2_score_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.MatchUserInfo.u_2_score)
}

// optional int32 u_2_total = 22;
bool MatchUserInfo::has_u_2_total() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void MatchUserInfo::set_has_u_2_total() {
  _has_bits_[0] |= 0x00020000u;
}
void MatchUserInfo::clear_has_u_2_total() {
  _has_bits_[0] &= ~0x00020000u;
}
void MatchUserInfo::clear_u_2_total() {
  u_2_total_ = 0;
  clear_has_u_2_total();
}
 ::google::protobuf::int32 MatchUserInfo::u_2_total() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.MatchUserInfo.u_2_total)
  return u_2_total_;
}
 void MatchUserInfo::set_u_2_total(::google::protobuf::int32 value) {
  set_has_u_2_total();
  u_2_total_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.MatchUserInfo.u_2_total)
}

// optional int32 u_2_angang = 23;
bool MatchUserInfo::has_u_2_angang() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
void MatchUserInfo::set_has_u_2_angang() {
  _has_bits_[0] |= 0x00040000u;
}
void MatchUserInfo::clear_has_u_2_angang() {
  _has_bits_[0] &= ~0x00040000u;
}
void MatchUserInfo::clear_u_2_angang() {
  u_2_angang_ = 0;
  clear_has_u_2_angang();
}
 ::google::protobuf::int32 MatchUserInfo::u_2_angang() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.MatchUserInfo.u_2_angang)
  return u_2_angang_;
}
 void MatchUserInfo::set_u_2_angang(::google::protobuf::int32 value) {
  set_has_u_2_angang();
  u_2_angang_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.MatchUserInfo.u_2_angang)
}

// optional int32 u_2_minggang = 24;
bool MatchUserInfo::has_u_2_minggang() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
void MatchUserInfo::set_has_u_2_minggang() {
  _has_bits_[0] |= 0x00080000u;
}
void MatchUserInfo::clear_has_u_2_minggang() {
  _has_bits_[0] &= ~0x00080000u;
}
void MatchUserInfo::clear_u_2_minggang() {
  u_2_minggang_ = 0;
  clear_has_u_2_minggang();
}
 ::google::protobuf::int32 MatchUserInfo::u_2_minggang() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.MatchUserInfo.u_2_minggang)
  return u_2_minggang_;
}
 void MatchUserInfo::set_u_2_minggang(::google::protobuf::int32 value) {
  set_has_u_2_minggang();
  u_2_minggang_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.MatchUserInfo.u_2_minggang)
}

// optional int32 u_2_goushouggang = 25;
bool MatchUserInfo::has_u_2_goushouggang() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
void MatchUserInfo::set_has_u_2_goushouggang() {
  _has_bits_[0] |= 0x00100000u;
}
void MatchUserInfo::clear_has_u_2_goushouggang() {
  _has_bits_[0] &= ~0x00100000u;
}
void MatchUserInfo::clear_u_2_goushouggang() {
  u_2_goushouggang_ = 0;
  clear_has_u_2_goushouggang();
}
 ::google::protobuf::int32 MatchUserInfo::u_2_goushouggang() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.MatchUserInfo.u_2_goushouggang)
  return u_2_goushouggang_;
}
 void MatchUserInfo::set_u_2_goushouggang(::google::protobuf::int32 value) {
  set_has_u_2_goushouggang();
  u_2_goushouggang_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.MatchUserInfo.u_2_goushouggang)
}

// optional uint64 u_3_id = 30;
bool MatchUserInfo::has_u_3_id() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
void MatchUserInfo::set_has_u_3_id() {
  _has_bits_[0] |= 0x00200000u;
}
void MatchUserInfo::clear_has_u_3_id() {
  _has_bits_[0] &= ~0x00200000u;
}
void MatchUserInfo::clear_u_3_id() {
  u_3_id_ = GOOGLE_ULONGLONG(0);
  clear_has_u_3_id();
}
 ::google::protobuf::uint64 MatchUserInfo::u_3_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.MatchUserInfo.u_3_id)
  return u_3_id_;
}
 void MatchUserInfo::set_u_3_id(::google::protobuf::uint64 value) {
  set_has_u_3_id();
  u_3_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.MatchUserInfo.u_3_id)
}

// optional int32 u_3_score = 31;
bool MatchUserInfo::has_u_3_score() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
void MatchUserInfo::set_has_u_3_score() {
  _has_bits_[0] |= 0x00400000u;
}
void MatchUserInfo::clear_has_u_3_score() {
  _has_bits_[0] &= ~0x00400000u;
}
void MatchUserInfo::clear_u_3_score() {
  u_3_score_ = 0;
  clear_has_u_3_score();
}
 ::google::protobuf::int32 MatchUserInfo::u_3_score() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.MatchUserInfo.u_3_score)
  return u_3_score_;
}
 void MatchUserInfo::set_u_3_score(::google::protobuf::int32 value) {
  set_has_u_3_score();
  u_3_score_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.MatchUserInfo.u_3_score)
}

// optional int32 u_3_total = 32;
bool MatchUserInfo::has_u_3_total() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
void MatchUserInfo::set_has_u_3_total() {
  _has_bits_[0] |= 0x00800000u;
}
void MatchUserInfo::clear_has_u_3_total() {
  _has_bits_[0] &= ~0x00800000u;
}
void MatchUserInfo::clear_u_3_total() {
  u_3_total_ = 0;
  clear_has_u_3_total();
}
 ::google::protobuf::int32 MatchUserInfo::u_3_total() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.MatchUserInfo.u_3_total)
  return u_3_total_;
}
 void MatchUserInfo::set_u_3_total(::google::protobuf::int32 value) {
  set_has_u_3_total();
  u_3_total_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.MatchUserInfo.u_3_total)
}

// optional int32 u_3_angang = 33;
bool MatchUserInfo::has_u_3_angang() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
void MatchUserInfo::set_has_u_3_angang() {
  _has_bits_[0] |= 0x01000000u;
}
void MatchUserInfo::clear_has_u_3_angang() {
  _has_bits_[0] &= ~0x01000000u;
}
void MatchUserInfo::clear_u_3_angang() {
  u_3_angang_ = 0;
  clear_has_u_3_angang();
}
 ::google::protobuf::int32 MatchUserInfo::u_3_angang() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.MatchUserInfo.u_3_angang)
  return u_3_angang_;
}
 void MatchUserInfo::set_u_3_angang(::google::protobuf::int32 value) {
  set_has_u_3_angang();
  u_3_angang_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.MatchUserInfo.u_3_angang)
}

// optional int32 u_3_minggang = 34;
bool MatchUserInfo::has_u_3_minggang() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
void MatchUserInfo::set_has_u_3_minggang() {
  _has_bits_[0] |= 0x02000000u;
}
void MatchUserInfo::clear_has_u_3_minggang() {
  _has_bits_[0] &= ~0x02000000u;
}
void MatchUserInfo::clear_u_3_minggang() {
  u_3_minggang_ = 0;
  clear_has_u_3_minggang();
}
 ::google::protobuf::int32 MatchUserInfo::u_3_minggang() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.MatchUserInfo.u_3_minggang)
  return u_3_minggang_;
}
 void MatchUserInfo::set_u_3_minggang(::google::protobuf::int32 value) {
  set_has_u_3_minggang();
  u_3_minggang_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.MatchUserInfo.u_3_minggang)
}

// optional int32 u_3_goushouggang = 35;
bool MatchUserInfo::has_u_3_goushouggang() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
void MatchUserInfo::set_has_u_3_goushouggang() {
  _has_bits_[0] |= 0x04000000u;
}
void MatchUserInfo::clear_has_u_3_goushouggang() {
  _has_bits_[0] &= ~0x04000000u;
}
void MatchUserInfo::clear_u_3_goushouggang() {
  u_3_goushouggang_ = 0;
  clear_has_u_3_goushouggang();
}
 ::google::protobuf::int32 MatchUserInfo::u_3_goushouggang() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.MatchUserInfo.u_3_goushouggang)
  return u_3_goushouggang_;
}
 void MatchUserInfo::set_u_3_goushouggang(::google::protobuf::int32 value) {
  set_has_u_3_goushouggang();
  u_3_goushouggang_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.MatchUserInfo.u_3_goushouggang)
}

// optional uint64 u_4_id = 40;
bool MatchUserInfo::has_u_4_id() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
void MatchUserInfo::set_has_u_4_id() {
  _has_bits_[0] |= 0x08000000u;
}
void MatchUserInfo::clear_has_u_4_id() {
  _has_bits_[0] &= ~0x08000000u;
}
void MatchUserInfo::clear_u_4_id() {
  u_4_id_ = GOOGLE_ULONGLONG(0);
  clear_has_u_4_id();
}
 ::google::protobuf::uint64 MatchUserInfo::u_4_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.MatchUserInfo.u_4_id)
  return u_4_id_;
}
 void MatchUserInfo::set_u_4_id(::google::protobuf::uint64 value) {
  set_has_u_4_id();
  u_4_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.MatchUserInfo.u_4_id)
}

// optional int32 u_4_score = 41;
bool MatchUserInfo::has_u_4_score() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
void MatchUserInfo::set_has_u_4_score() {
  _has_bits_[0] |= 0x10000000u;
}
void MatchUserInfo::clear_has_u_4_score() {
  _has_bits_[0] &= ~0x10000000u;
}
void MatchUserInfo::clear_u_4_score() {
  u_4_score_ = 0;
  clear_has_u_4_score();
}
 ::google::protobuf::int32 MatchUserInfo::u_4_score() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.MatchUserInfo.u_4_score)
  return u_4_score_;
}
 void MatchUserInfo::set_u_4_score(::google::protobuf::int32 value) {
  set_has_u_4_score();
  u_4_score_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.MatchUserInfo.u_4_score)
}

// optional int32 u_4_total = 42;
bool MatchUserInfo::has_u_4_total() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
void MatchUserInfo::set_has_u_4_total() {
  _has_bits_[0] |= 0x20000000u;
}
void MatchUserInfo::clear_has_u_4_total() {
  _has_bits_[0] &= ~0x20000000u;
}
void MatchUserInfo::clear_u_4_total() {
  u_4_total_ = 0;
  clear_has_u_4_total();
}
 ::google::protobuf::int32 MatchUserInfo::u_4_total() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.MatchUserInfo.u_4_total)
  return u_4_total_;
}
 void MatchUserInfo::set_u_4_total(::google::protobuf::int32 value) {
  set_has_u_4_total();
  u_4_total_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.MatchUserInfo.u_4_total)
}

// optional int32 u_4_angang = 43;
bool MatchUserInfo::has_u_4_angang() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
void MatchUserInfo::set_has_u_4_angang() {
  _has_bits_[0] |= 0x40000000u;
}
void MatchUserInfo::clear_has_u_4_angang() {
  _has_bits_[0] &= ~0x40000000u;
}
void MatchUserInfo::clear_u_4_angang() {
  u_4_angang_ = 0;
  clear_has_u_4_angang();
}
 ::google::protobuf::int32 MatchUserInfo::u_4_angang() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.MatchUserInfo.u_4_angang)
  return u_4_angang_;
}
 void MatchUserInfo::set_u_4_angang(::google::protobuf::int32 value) {
  set_has_u_4_angang();
  u_4_angang_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.MatchUserInfo.u_4_angang)
}

// optional int32 u_4_minggang = 44;
bool MatchUserInfo::has_u_4_minggang() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
void MatchUserInfo::set_has_u_4_minggang() {
  _has_bits_[0] |= 0x80000000u;
}
void MatchUserInfo::clear_has_u_4_minggang() {
  _has_bits_[0] &= ~0x80000000u;
}
void MatchUserInfo::clear_u_4_minggang() {
  u_4_minggang_ = 0;
  clear_has_u_4_minggang();
}
 ::google::protobuf::int32 MatchUserInfo::u_4_minggang() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.MatchUserInfo.u_4_minggang)
  return u_4_minggang_;
}
 void MatchUserInfo::set_u_4_minggang(::google::protobuf::int32 value) {
  set_has_u_4_minggang();
  u_4_minggang_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.MatchUserInfo.u_4_minggang)
}

// optional int32 u_4_goushouggang = 45;
bool MatchUserInfo::has_u_4_goushouggang() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
void MatchUserInfo::set_has_u_4_goushouggang() {
  _has_bits_[1] |= 0x00000001u;
}
void MatchUserInfo::clear_has_u_4_goushouggang() {
  _has_bits_[1] &= ~0x00000001u;
}
void MatchUserInfo::clear_u_4_goushouggang() {
  u_4_goushouggang_ = 0;
  clear_has_u_4_goushouggang();
}
 ::google::protobuf::int32 MatchUserInfo::u_4_goushouggang() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.MatchUserInfo.u_4_goushouggang)
  return u_4_goushouggang_;
}
 void MatchUserInfo::set_u_4_goushouggang(::google::protobuf::int32 value) {
  set_has_u_4_goushouggang();
  u_4_goushouggang_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.MatchUserInfo.u_4_goushouggang)
}

// optional .fogs.proto.msg.HupaiTiles hupaitiles = 46;
bool MatchUserInfo::has_hupaitiles() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
void MatchUserInfo::set_has_hupaitiles() {
  _has_bits_[1] |= 0x00000002u;
}
void MatchUserInfo::clear_has_hupaitiles() {
  _has_bits_[1] &= ~0x00000002u;
}
void MatchUserInfo::clear_hupaitiles() {
  if (hupaitiles_ != NULL) hupaitiles_->::fogs::proto::msg::HupaiTiles::Clear();
  clear_has_hupaitiles();
}
const ::fogs::proto::msg::HupaiTiles& MatchUserInfo::hupaitiles() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.MatchUserInfo.hupaitiles)
  return hupaitiles_ != NULL ? *hupaitiles_ : *default_instance_->hupaitiles_;
}
::fogs::proto::msg::HupaiTiles* MatchUserInfo::mutable_hupaitiles() {
  set_has_hupaitiles();
  if (hupaitiles_ == NULL) {
    hupaitiles_ = new ::fogs::proto::msg::HupaiTiles;
  }
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.MatchUserInfo.hupaitiles)
  return hupaitiles_;
}
::fogs::proto::msg::HupaiTiles* MatchUserInfo::release_hupaitiles() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.MatchUserInfo.hupaitiles)
  clear_has_hupaitiles();
  ::fogs::proto::msg::HupaiTiles* temp = hupaitiles_;
  hupaitiles_ = NULL;
  return temp;
}
void MatchUserInfo::set_allocated_hupaitiles(::fogs::proto::msg::HupaiTiles* hupaitiles) {
  delete hupaitiles_;
  hupaitiles_ = hupaitiles;
  if (hupaitiles) {
    set_has_hupaitiles();
  } else {
    clear_has_hupaitiles();
  }
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.MatchUserInfo.hupaitiles)
}

// optional int32 game_type = 47;
bool MatchUserInfo::has_game_type() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
void MatchUserInfo::set_has_game_type() {
  _has_bits_[1] |= 0x00000004u;
}
void MatchUserInfo::clear_has_game_type() {
  _has_bits_[1] &= ~0x00000004u;
}
void MatchUserInfo::clear_game_type() {
  game_type_ = 0;
  clear_has_game_type();
}
 ::google::protobuf::int32 MatchUserInfo::game_type() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.MatchUserInfo.game_type)
  return game_type_;
}
 void MatchUserInfo::set_game_type(::google::protobuf::int32 value) {
  set_has_game_type();
  game_type_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.MatchUserInfo.game_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HupaiTiles::kTileListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HupaiTiles::HupaiTiles()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.HupaiTiles)
}

void HupaiTiles::InitAsDefaultInstance() {
}

HupaiTiles::HupaiTiles(const HupaiTiles& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.HupaiTiles)
}

void HupaiTiles::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HupaiTiles::~HupaiTiles() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.HupaiTiles)
  SharedDtor();
}

void HupaiTiles::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HupaiTiles::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HupaiTiles::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HupaiTiles_descriptor_;
}

const HupaiTiles& HupaiTiles::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5flog_2eproto();
  return *default_instance_;
}

HupaiTiles* HupaiTiles::default_instance_ = NULL;

HupaiTiles* HupaiTiles::New(::google::protobuf::Arena* arena) const {
  HupaiTiles* n = new HupaiTiles;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HupaiTiles::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.HupaiTiles)
  tile_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool HupaiTiles::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.HupaiTiles)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 tile_list = 1;
      case 1: {
        if (tag == 8) {
         parse_tile_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8, input, this->mutable_tile_list())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_tile_list())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_tile_list;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.HupaiTiles)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.HupaiTiles)
  return false;
#undef DO_
}

void HupaiTiles::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.HupaiTiles)
  // repeated uint32 tile_list = 1;
  for (int i = 0; i < this->tile_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->tile_list(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.HupaiTiles)
}

::google::protobuf::uint8* HupaiTiles::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.HupaiTiles)
  // repeated uint32 tile_list = 1;
  for (int i = 0; i < this->tile_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(1, this->tile_list(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.HupaiTiles)
  return target;
}

int HupaiTiles::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.HupaiTiles)
  int total_size = 0;

  // repeated uint32 tile_list = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->tile_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->tile_list(i));
    }
    total_size += 1 * this->tile_list_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HupaiTiles::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.HupaiTiles)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const HupaiTiles* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const HupaiTiles>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.HupaiTiles)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.HupaiTiles)
    MergeFrom(*source);
  }
}

void HupaiTiles::MergeFrom(const HupaiTiles& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.HupaiTiles)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  tile_list_.MergeFrom(from.tile_list_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void HupaiTiles::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.HupaiTiles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HupaiTiles::CopyFrom(const HupaiTiles& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.HupaiTiles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HupaiTiles::IsInitialized() const {

  return true;
}

void HupaiTiles::Swap(HupaiTiles* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HupaiTiles::InternalSwap(HupaiTiles* other) {
  tile_list_.UnsafeArenaSwap(&other->tile_list_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HupaiTiles::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HupaiTiles_descriptor_;
  metadata.reflection = HupaiTiles_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HupaiTiles

// repeated uint32 tile_list = 1;
int HupaiTiles::tile_list_size() const {
  return tile_list_.size();
}
void HupaiTiles::clear_tile_list() {
  tile_list_.Clear();
}
 ::google::protobuf::uint32 HupaiTiles::tile_list(int index) const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.HupaiTiles.tile_list)
  return tile_list_.Get(index);
}
 void HupaiTiles::set_tile_list(int index, ::google::protobuf::uint32 value) {
  tile_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:fogs.proto.msg.HupaiTiles.tile_list)
}
 void HupaiTiles::add_tile_list(::google::protobuf::uint32 value) {
  tile_list_.Add(value);
  // @@protoc_insertion_point(field_add:fogs.proto.msg.HupaiTiles.tile_list)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
HupaiTiles::tile_list() const {
  // @@protoc_insertion_point(field_list:fogs.proto.msg.HupaiTiles.tile_list)
  return tile_list_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
HupaiTiles::mutable_tile_list() {
  // @@protoc_insertion_point(field_mutable_list:fogs.proto.msg.HupaiTiles.tile_list)
  return &tile_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VerifyPai::kPai1FieldNumber;
const int VerifyPai::kPai2FieldNumber;
const int VerifyPai::kPai3FieldNumber;
const int VerifyPai::kPai4FieldNumber;
const int VerifyPai::kPai5FieldNumber;
const int VerifyPai::kPai6FieldNumber;
const int VerifyPai::kPai7FieldNumber;
const int VerifyPai::kPai8FieldNumber;
const int VerifyPai::kPai9FieldNumber;
const int VerifyPai::kPai10FieldNumber;
const int VerifyPai::kPai11FieldNumber;
const int VerifyPai::kPai12FieldNumber;
const int VerifyPai::kPai13FieldNumber;
const int VerifyPai::kPai14FieldNumber;
const int VerifyPai::kParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VerifyPai::VerifyPai()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.VerifyPai)
}

void VerifyPai::InitAsDefaultInstance() {
}

VerifyPai::VerifyPai(const VerifyPai& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.VerifyPai)
}

void VerifyPai::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  pai1_ = 0u;
  pai2_ = 0u;
  pai3_ = 0u;
  pai4_ = 0u;
  pai5_ = 0u;
  pai6_ = 0u;
  pai7_ = 0u;
  pai8_ = 0u;
  pai9_ = 0u;
  pai10_ = 0u;
  pai11_ = 0u;
  pai12_ = 0u;
  pai13_ = 0u;
  pai14_ = 0u;
  param_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

VerifyPai::~VerifyPai() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.VerifyPai)
  SharedDtor();
}

void VerifyPai::SharedDtor() {
  param_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void VerifyPai::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VerifyPai::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return VerifyPai_descriptor_;
}

const VerifyPai& VerifyPai::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5flog_2eproto();
  return *default_instance_;
}

VerifyPai* VerifyPai::default_instance_ = NULL;

VerifyPai* VerifyPai::New(::google::protobuf::Arena* arena) const {
  VerifyPai* n = new VerifyPai;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VerifyPai::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.VerifyPai)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(VerifyPai, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<VerifyPai*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(pai1_, pai8_);
  }
  if (_has_bits_[8 / 32] & 32512u) {
    ZR_(pai9_, pai14_);
    if (has_param()) {
      param_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool VerifyPai::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.VerifyPai)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 pai1 = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pai1_)));
          set_has_pai1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_pai2;
        break;
      }

      // optional uint32 pai2 = 2;
      case 2: {
        if (tag == 16) {
         parse_pai2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pai2_)));
          set_has_pai2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_pai3;
        break;
      }

      // optional uint32 pai3 = 3;
      case 3: {
        if (tag == 24) {
         parse_pai3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pai3_)));
          set_has_pai3();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_pai4;
        break;
      }

      // optional uint32 pai4 = 4;
      case 4: {
        if (tag == 32) {
         parse_pai4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pai4_)));
          set_has_pai4();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_pai5;
        break;
      }

      // optional uint32 pai5 = 5;
      case 5: {
        if (tag == 40) {
         parse_pai5:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pai5_)));
          set_has_pai5();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_pai6;
        break;
      }

      // optional uint32 pai6 = 6;
      case 6: {
        if (tag == 48) {
         parse_pai6:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pai6_)));
          set_has_pai6();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_pai7;
        break;
      }

      // optional uint32 pai7 = 7;
      case 7: {
        if (tag == 56) {
         parse_pai7:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pai7_)));
          set_has_pai7();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_pai8;
        break;
      }

      // optional uint32 pai8 = 8;
      case 8: {
        if (tag == 64) {
         parse_pai8:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pai8_)));
          set_has_pai8();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_pai9;
        break;
      }

      // optional uint32 pai9 = 9;
      case 9: {
        if (tag == 72) {
         parse_pai9:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pai9_)));
          set_has_pai9();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_pai10;
        break;
      }

      // optional uint32 pai10 = 10;
      case 10: {
        if (tag == 80) {
         parse_pai10:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pai10_)));
          set_has_pai10();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_pai11;
        break;
      }

      // optional uint32 pai11 = 11;
      case 11: {
        if (tag == 88) {
         parse_pai11:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pai11_)));
          set_has_pai11();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_pai12;
        break;
      }

      // optional uint32 pai12 = 12;
      case 12: {
        if (tag == 96) {
         parse_pai12:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pai12_)));
          set_has_pai12();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_pai13;
        break;
      }

      // optional uint32 pai13 = 13;
      case 13: {
        if (tag == 104) {
         parse_pai13:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pai13_)));
          set_has_pai13();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_pai14;
        break;
      }

      // optional uint32 pai14 = 14;
      case 14: {
        if (tag == 112) {
         parse_pai14:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pai14_)));
          set_has_pai14();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_param;
        break;
      }

      // optional string param = 15;
      case 15: {
        if (tag == 122) {
         parse_param:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_param()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->param().data(), this->param().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fogs.proto.msg.VerifyPai.param");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.VerifyPai)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.VerifyPai)
  return false;
#undef DO_
}

void VerifyPai::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.VerifyPai)
  // optional uint32 pai1 = 1;
  if (has_pai1()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->pai1(), output);
  }

  // optional uint32 pai2 = 2;
  if (has_pai2()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pai2(), output);
  }

  // optional uint32 pai3 = 3;
  if (has_pai3()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->pai3(), output);
  }

  // optional uint32 pai4 = 4;
  if (has_pai4()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->pai4(), output);
  }

  // optional uint32 pai5 = 5;
  if (has_pai5()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->pai5(), output);
  }

  // optional uint32 pai6 = 6;
  if (has_pai6()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->pai6(), output);
  }

  // optional uint32 pai7 = 7;
  if (has_pai7()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->pai7(), output);
  }

  // optional uint32 pai8 = 8;
  if (has_pai8()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->pai8(), output);
  }

  // optional uint32 pai9 = 9;
  if (has_pai9()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->pai9(), output);
  }

  // optional uint32 pai10 = 10;
  if (has_pai10()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->pai10(), output);
  }

  // optional uint32 pai11 = 11;
  if (has_pai11()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->pai11(), output);
  }

  // optional uint32 pai12 = 12;
  if (has_pai12()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->pai12(), output);
  }

  // optional uint32 pai13 = 13;
  if (has_pai13()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->pai13(), output);
  }

  // optional uint32 pai14 = 14;
  if (has_pai14()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->pai14(), output);
  }

  // optional string param = 15;
  if (has_param()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->param().data(), this->param().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fogs.proto.msg.VerifyPai.param");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->param(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.VerifyPai)
}

::google::protobuf::uint8* VerifyPai::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.VerifyPai)
  // optional uint32 pai1 = 1;
  if (has_pai1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->pai1(), target);
  }

  // optional uint32 pai2 = 2;
  if (has_pai2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pai2(), target);
  }

  // optional uint32 pai3 = 3;
  if (has_pai3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->pai3(), target);
  }

  // optional uint32 pai4 = 4;
  if (has_pai4()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->pai4(), target);
  }

  // optional uint32 pai5 = 5;
  if (has_pai5()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->pai5(), target);
  }

  // optional uint32 pai6 = 6;
  if (has_pai6()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->pai6(), target);
  }

  // optional uint32 pai7 = 7;
  if (has_pai7()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->pai7(), target);
  }

  // optional uint32 pai8 = 8;
  if (has_pai8()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->pai8(), target);
  }

  // optional uint32 pai9 = 9;
  if (has_pai9()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->pai9(), target);
  }

  // optional uint32 pai10 = 10;
  if (has_pai10()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->pai10(), target);
  }

  // optional uint32 pai11 = 11;
  if (has_pai11()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->pai11(), target);
  }

  // optional uint32 pai12 = 12;
  if (has_pai12()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->pai12(), target);
  }

  // optional uint32 pai13 = 13;
  if (has_pai13()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->pai13(), target);
  }

  // optional uint32 pai14 = 14;
  if (has_pai14()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->pai14(), target);
  }

  // optional string param = 15;
  if (has_param()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->param().data(), this->param().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fogs.proto.msg.VerifyPai.param");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->param(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.VerifyPai)
  return target;
}

int VerifyPai::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.VerifyPai)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional uint32 pai1 = 1;
    if (has_pai1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pai1());
    }

    // optional uint32 pai2 = 2;
    if (has_pai2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pai2());
    }

    // optional uint32 pai3 = 3;
    if (has_pai3()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pai3());
    }

    // optional uint32 pai4 = 4;
    if (has_pai4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pai4());
    }

    // optional uint32 pai5 = 5;
    if (has_pai5()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pai5());
    }

    // optional uint32 pai6 = 6;
    if (has_pai6()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pai6());
    }

    // optional uint32 pai7 = 7;
    if (has_pai7()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pai7());
    }

    // optional uint32 pai8 = 8;
    if (has_pai8()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pai8());
    }

  }
  if (_has_bits_[8 / 32] & 32512u) {
    // optional uint32 pai9 = 9;
    if (has_pai9()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pai9());
    }

    // optional uint32 pai10 = 10;
    if (has_pai10()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pai10());
    }

    // optional uint32 pai11 = 11;
    if (has_pai11()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pai11());
    }

    // optional uint32 pai12 = 12;
    if (has_pai12()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pai12());
    }

    // optional uint32 pai13 = 13;
    if (has_pai13()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pai13());
    }

    // optional uint32 pai14 = 14;
    if (has_pai14()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pai14());
    }

    // optional string param = 15;
    if (has_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->param());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VerifyPai::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.VerifyPai)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const VerifyPai* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const VerifyPai>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.VerifyPai)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.VerifyPai)
    MergeFrom(*source);
  }
}

void VerifyPai::MergeFrom(const VerifyPai& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.VerifyPai)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pai1()) {
      set_pai1(from.pai1());
    }
    if (from.has_pai2()) {
      set_pai2(from.pai2());
    }
    if (from.has_pai3()) {
      set_pai3(from.pai3());
    }
    if (from.has_pai4()) {
      set_pai4(from.pai4());
    }
    if (from.has_pai5()) {
      set_pai5(from.pai5());
    }
    if (from.has_pai6()) {
      set_pai6(from.pai6());
    }
    if (from.has_pai7()) {
      set_pai7(from.pai7());
    }
    if (from.has_pai8()) {
      set_pai8(from.pai8());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_pai9()) {
      set_pai9(from.pai9());
    }
    if (from.has_pai10()) {
      set_pai10(from.pai10());
    }
    if (from.has_pai11()) {
      set_pai11(from.pai11());
    }
    if (from.has_pai12()) {
      set_pai12(from.pai12());
    }
    if (from.has_pai13()) {
      set_pai13(from.pai13());
    }
    if (from.has_pai14()) {
      set_pai14(from.pai14());
    }
    if (from.has_param()) {
      set_has_param();
      param_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.param_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void VerifyPai::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.VerifyPai)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VerifyPai::CopyFrom(const VerifyPai& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.VerifyPai)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VerifyPai::IsInitialized() const {

  return true;
}

void VerifyPai::Swap(VerifyPai* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VerifyPai::InternalSwap(VerifyPai* other) {
  std::swap(pai1_, other->pai1_);
  std::swap(pai2_, other->pai2_);
  std::swap(pai3_, other->pai3_);
  std::swap(pai4_, other->pai4_);
  std::swap(pai5_, other->pai5_);
  std::swap(pai6_, other->pai6_);
  std::swap(pai7_, other->pai7_);
  std::swap(pai8_, other->pai8_);
  std::swap(pai9_, other->pai9_);
  std::swap(pai10_, other->pai10_);
  std::swap(pai11_, other->pai11_);
  std::swap(pai12_, other->pai12_);
  std::swap(pai13_, other->pai13_);
  std::swap(pai14_, other->pai14_);
  param_.Swap(&other->param_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VerifyPai::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = VerifyPai_descriptor_;
  metadata.reflection = VerifyPai_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// VerifyPai

// optional uint32 pai1 = 1;
bool VerifyPai::has_pai1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void VerifyPai::set_has_pai1() {
  _has_bits_[0] |= 0x00000001u;
}
void VerifyPai::clear_has_pai1() {
  _has_bits_[0] &= ~0x00000001u;
}
void VerifyPai::clear_pai1() {
  pai1_ = 0u;
  clear_has_pai1();
}
 ::google::protobuf::uint32 VerifyPai::pai1() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.VerifyPai.pai1)
  return pai1_;
}
 void VerifyPai::set_pai1(::google::protobuf::uint32 value) {
  set_has_pai1();
  pai1_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.VerifyPai.pai1)
}

// optional uint32 pai2 = 2;
bool VerifyPai::has_pai2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void VerifyPai::set_has_pai2() {
  _has_bits_[0] |= 0x00000002u;
}
void VerifyPai::clear_has_pai2() {
  _has_bits_[0] &= ~0x00000002u;
}
void VerifyPai::clear_pai2() {
  pai2_ = 0u;
  clear_has_pai2();
}
 ::google::protobuf::uint32 VerifyPai::pai2() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.VerifyPai.pai2)
  return pai2_;
}
 void VerifyPai::set_pai2(::google::protobuf::uint32 value) {
  set_has_pai2();
  pai2_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.VerifyPai.pai2)
}

// optional uint32 pai3 = 3;
bool VerifyPai::has_pai3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void VerifyPai::set_has_pai3() {
  _has_bits_[0] |= 0x00000004u;
}
void VerifyPai::clear_has_pai3() {
  _has_bits_[0] &= ~0x00000004u;
}
void VerifyPai::clear_pai3() {
  pai3_ = 0u;
  clear_has_pai3();
}
 ::google::protobuf::uint32 VerifyPai::pai3() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.VerifyPai.pai3)
  return pai3_;
}
 void VerifyPai::set_pai3(::google::protobuf::uint32 value) {
  set_has_pai3();
  pai3_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.VerifyPai.pai3)
}

// optional uint32 pai4 = 4;
bool VerifyPai::has_pai4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void VerifyPai::set_has_pai4() {
  _has_bits_[0] |= 0x00000008u;
}
void VerifyPai::clear_has_pai4() {
  _has_bits_[0] &= ~0x00000008u;
}
void VerifyPai::clear_pai4() {
  pai4_ = 0u;
  clear_has_pai4();
}
 ::google::protobuf::uint32 VerifyPai::pai4() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.VerifyPai.pai4)
  return pai4_;
}
 void VerifyPai::set_pai4(::google::protobuf::uint32 value) {
  set_has_pai4();
  pai4_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.VerifyPai.pai4)
}

// optional uint32 pai5 = 5;
bool VerifyPai::has_pai5() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void VerifyPai::set_has_pai5() {
  _has_bits_[0] |= 0x00000010u;
}
void VerifyPai::clear_has_pai5() {
  _has_bits_[0] &= ~0x00000010u;
}
void VerifyPai::clear_pai5() {
  pai5_ = 0u;
  clear_has_pai5();
}
 ::google::protobuf::uint32 VerifyPai::pai5() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.VerifyPai.pai5)
  return pai5_;
}
 void VerifyPai::set_pai5(::google::protobuf::uint32 value) {
  set_has_pai5();
  pai5_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.VerifyPai.pai5)
}

// optional uint32 pai6 = 6;
bool VerifyPai::has_pai6() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void VerifyPai::set_has_pai6() {
  _has_bits_[0] |= 0x00000020u;
}
void VerifyPai::clear_has_pai6() {
  _has_bits_[0] &= ~0x00000020u;
}
void VerifyPai::clear_pai6() {
  pai6_ = 0u;
  clear_has_pai6();
}
 ::google::protobuf::uint32 VerifyPai::pai6() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.VerifyPai.pai6)
  return pai6_;
}
 void VerifyPai::set_pai6(::google::protobuf::uint32 value) {
  set_has_pai6();
  pai6_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.VerifyPai.pai6)
}

// optional uint32 pai7 = 7;
bool VerifyPai::has_pai7() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void VerifyPai::set_has_pai7() {
  _has_bits_[0] |= 0x00000040u;
}
void VerifyPai::clear_has_pai7() {
  _has_bits_[0] &= ~0x00000040u;
}
void VerifyPai::clear_pai7() {
  pai7_ = 0u;
  clear_has_pai7();
}
 ::google::protobuf::uint32 VerifyPai::pai7() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.VerifyPai.pai7)
  return pai7_;
}
 void VerifyPai::set_pai7(::google::protobuf::uint32 value) {
  set_has_pai7();
  pai7_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.VerifyPai.pai7)
}

// optional uint32 pai8 = 8;
bool VerifyPai::has_pai8() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void VerifyPai::set_has_pai8() {
  _has_bits_[0] |= 0x00000080u;
}
void VerifyPai::clear_has_pai8() {
  _has_bits_[0] &= ~0x00000080u;
}
void VerifyPai::clear_pai8() {
  pai8_ = 0u;
  clear_has_pai8();
}
 ::google::protobuf::uint32 VerifyPai::pai8() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.VerifyPai.pai8)
  return pai8_;
}
 void VerifyPai::set_pai8(::google::protobuf::uint32 value) {
  set_has_pai8();
  pai8_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.VerifyPai.pai8)
}

// optional uint32 pai9 = 9;
bool VerifyPai::has_pai9() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void VerifyPai::set_has_pai9() {
  _has_bits_[0] |= 0x00000100u;
}
void VerifyPai::clear_has_pai9() {
  _has_bits_[0] &= ~0x00000100u;
}
void VerifyPai::clear_pai9() {
  pai9_ = 0u;
  clear_has_pai9();
}
 ::google::protobuf::uint32 VerifyPai::pai9() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.VerifyPai.pai9)
  return pai9_;
}
 void VerifyPai::set_pai9(::google::protobuf::uint32 value) {
  set_has_pai9();
  pai9_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.VerifyPai.pai9)
}

// optional uint32 pai10 = 10;
bool VerifyPai::has_pai10() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void VerifyPai::set_has_pai10() {
  _has_bits_[0] |= 0x00000200u;
}
void VerifyPai::clear_has_pai10() {
  _has_bits_[0] &= ~0x00000200u;
}
void VerifyPai::clear_pai10() {
  pai10_ = 0u;
  clear_has_pai10();
}
 ::google::protobuf::uint32 VerifyPai::pai10() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.VerifyPai.pai10)
  return pai10_;
}
 void VerifyPai::set_pai10(::google::protobuf::uint32 value) {
  set_has_pai10();
  pai10_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.VerifyPai.pai10)
}

// optional uint32 pai11 = 11;
bool VerifyPai::has_pai11() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void VerifyPai::set_has_pai11() {
  _has_bits_[0] |= 0x00000400u;
}
void VerifyPai::clear_has_pai11() {
  _has_bits_[0] &= ~0x00000400u;
}
void VerifyPai::clear_pai11() {
  pai11_ = 0u;
  clear_has_pai11();
}
 ::google::protobuf::uint32 VerifyPai::pai11() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.VerifyPai.pai11)
  return pai11_;
}
 void VerifyPai::set_pai11(::google::protobuf::uint32 value) {
  set_has_pai11();
  pai11_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.VerifyPai.pai11)
}

// optional uint32 pai12 = 12;
bool VerifyPai::has_pai12() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void VerifyPai::set_has_pai12() {
  _has_bits_[0] |= 0x00000800u;
}
void VerifyPai::clear_has_pai12() {
  _has_bits_[0] &= ~0x00000800u;
}
void VerifyPai::clear_pai12() {
  pai12_ = 0u;
  clear_has_pai12();
}
 ::google::protobuf::uint32 VerifyPai::pai12() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.VerifyPai.pai12)
  return pai12_;
}
 void VerifyPai::set_pai12(::google::protobuf::uint32 value) {
  set_has_pai12();
  pai12_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.VerifyPai.pai12)
}

// optional uint32 pai13 = 13;
bool VerifyPai::has_pai13() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void VerifyPai::set_has_pai13() {
  _has_bits_[0] |= 0x00001000u;
}
void VerifyPai::clear_has_pai13() {
  _has_bits_[0] &= ~0x00001000u;
}
void VerifyPai::clear_pai13() {
  pai13_ = 0u;
  clear_has_pai13();
}
 ::google::protobuf::uint32 VerifyPai::pai13() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.VerifyPai.pai13)
  return pai13_;
}
 void VerifyPai::set_pai13(::google::protobuf::uint32 value) {
  set_has_pai13();
  pai13_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.VerifyPai.pai13)
}

// optional uint32 pai14 = 14;
bool VerifyPai::has_pai14() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void VerifyPai::set_has_pai14() {
  _has_bits_[0] |= 0x00002000u;
}
void VerifyPai::clear_has_pai14() {
  _has_bits_[0] &= ~0x00002000u;
}
void VerifyPai::clear_pai14() {
  pai14_ = 0u;
  clear_has_pai14();
}
 ::google::protobuf::uint32 VerifyPai::pai14() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.VerifyPai.pai14)
  return pai14_;
}
 void VerifyPai::set_pai14(::google::protobuf::uint32 value) {
  set_has_pai14();
  pai14_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.VerifyPai.pai14)
}

// optional string param = 15;
bool VerifyPai::has_param() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void VerifyPai::set_has_param() {
  _has_bits_[0] |= 0x00004000u;
}
void VerifyPai::clear_has_param() {
  _has_bits_[0] &= ~0x00004000u;
}
void VerifyPai::clear_param() {
  param_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_param();
}
 const ::std::string& VerifyPai::param() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.VerifyPai.param)
  return param_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void VerifyPai::set_param(const ::std::string& value) {
  set_has_param();
  param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fogs.proto.msg.VerifyPai.param)
}
 void VerifyPai::set_param(const char* value) {
  set_has_param();
  param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fogs.proto.msg.VerifyPai.param)
}
 void VerifyPai::set_param(const char* value, size_t size) {
  set_has_param();
  param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fogs.proto.msg.VerifyPai.param)
}
 ::std::string* VerifyPai::mutable_param() {
  set_has_param();
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.VerifyPai.param)
  return param_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* VerifyPai::release_param() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.VerifyPai.param)
  clear_has_param();
  return param_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void VerifyPai::set_allocated_param(::std::string* param) {
  if (param != NULL) {
    set_has_param();
  } else {
    clear_has_param();
  }
  param_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), param);
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.VerifyPai.param)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VerifyPaiRequest::VerifyPaiRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.VerifyPaiRequest)
}

void VerifyPaiRequest::InitAsDefaultInstance() {
}

VerifyPaiRequest::VerifyPaiRequest(const VerifyPaiRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.VerifyPaiRequest)
}

void VerifyPaiRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

VerifyPaiRequest::~VerifyPaiRequest() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.VerifyPaiRequest)
  SharedDtor();
}

void VerifyPaiRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void VerifyPaiRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VerifyPaiRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return VerifyPaiRequest_descriptor_;
}

const VerifyPaiRequest& VerifyPaiRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5flog_2eproto();
  return *default_instance_;
}

VerifyPaiRequest* VerifyPaiRequest::default_instance_ = NULL;

VerifyPaiRequest* VerifyPaiRequest::New(::google::protobuf::Arena* arena) const {
  VerifyPaiRequest* n = new VerifyPaiRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VerifyPaiRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.VerifyPaiRequest)
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool VerifyPaiRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.VerifyPaiRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.VerifyPaiRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.VerifyPaiRequest)
  return false;
#undef DO_
}

void VerifyPaiRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.VerifyPaiRequest)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.VerifyPaiRequest)
}

::google::protobuf::uint8* VerifyPaiRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.VerifyPaiRequest)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.VerifyPaiRequest)
  return target;
}

int VerifyPaiRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.VerifyPaiRequest)
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VerifyPaiRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.VerifyPaiRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const VerifyPaiRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const VerifyPaiRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.VerifyPaiRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.VerifyPaiRequest)
    MergeFrom(*source);
  }
}

void VerifyPaiRequest::MergeFrom(const VerifyPaiRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.VerifyPaiRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void VerifyPaiRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.VerifyPaiRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VerifyPaiRequest::CopyFrom(const VerifyPaiRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.VerifyPaiRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VerifyPaiRequest::IsInitialized() const {

  return true;
}

void VerifyPaiRequest::Swap(VerifyPaiRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VerifyPaiRequest::InternalSwap(VerifyPaiRequest* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VerifyPaiRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = VerifyPaiRequest_descriptor_;
  metadata.reflection = VerifyPaiRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// VerifyPaiRequest

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VerifyPaiResponse::kVerifyListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VerifyPaiResponse::VerifyPaiResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.VerifyPaiResponse)
}

void VerifyPaiResponse::InitAsDefaultInstance() {
}

VerifyPaiResponse::VerifyPaiResponse(const VerifyPaiResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.VerifyPaiResponse)
}

void VerifyPaiResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

VerifyPaiResponse::~VerifyPaiResponse() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.VerifyPaiResponse)
  SharedDtor();
}

void VerifyPaiResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void VerifyPaiResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VerifyPaiResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return VerifyPaiResponse_descriptor_;
}

const VerifyPaiResponse& VerifyPaiResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5flog_2eproto();
  return *default_instance_;
}

VerifyPaiResponse* VerifyPaiResponse::default_instance_ = NULL;

VerifyPaiResponse* VerifyPaiResponse::New(::google::protobuf::Arena* arena) const {
  VerifyPaiResponse* n = new VerifyPaiResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VerifyPaiResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.VerifyPaiResponse)
  verify_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool VerifyPaiResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.VerifyPaiResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .fogs.proto.msg.VerifyPai verify_list = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_verify_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_verify_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_verify_list;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.VerifyPaiResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.VerifyPaiResponse)
  return false;
#undef DO_
}

void VerifyPaiResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.VerifyPaiResponse)
  // repeated .fogs.proto.msg.VerifyPai verify_list = 1;
  for (unsigned int i = 0, n = this->verify_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->verify_list(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.VerifyPaiResponse)
}

::google::protobuf::uint8* VerifyPaiResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.VerifyPaiResponse)
  // repeated .fogs.proto.msg.VerifyPai verify_list = 1;
  for (unsigned int i = 0, n = this->verify_list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->verify_list(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.VerifyPaiResponse)
  return target;
}

int VerifyPaiResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.VerifyPaiResponse)
  int total_size = 0;

  // repeated .fogs.proto.msg.VerifyPai verify_list = 1;
  total_size += 1 * this->verify_list_size();
  for (int i = 0; i < this->verify_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->verify_list(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VerifyPaiResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.VerifyPaiResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const VerifyPaiResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const VerifyPaiResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.VerifyPaiResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.VerifyPaiResponse)
    MergeFrom(*source);
  }
}

void VerifyPaiResponse::MergeFrom(const VerifyPaiResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.VerifyPaiResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  verify_list_.MergeFrom(from.verify_list_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void VerifyPaiResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.VerifyPaiResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VerifyPaiResponse::CopyFrom(const VerifyPaiResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.VerifyPaiResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VerifyPaiResponse::IsInitialized() const {

  return true;
}

void VerifyPaiResponse::Swap(VerifyPaiResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VerifyPaiResponse::InternalSwap(VerifyPaiResponse* other) {
  verify_list_.UnsafeArenaSwap(&other->verify_list_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VerifyPaiResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = VerifyPaiResponse_descriptor_;
  metadata.reflection = VerifyPaiResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// VerifyPaiResponse

// repeated .fogs.proto.msg.VerifyPai verify_list = 1;
int VerifyPaiResponse::verify_list_size() const {
  return verify_list_.size();
}
void VerifyPaiResponse::clear_verify_list() {
  verify_list_.Clear();
}
const ::fogs::proto::msg::VerifyPai& VerifyPaiResponse::verify_list(int index) const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.VerifyPaiResponse.verify_list)
  return verify_list_.Get(index);
}
::fogs::proto::msg::VerifyPai* VerifyPaiResponse::mutable_verify_list(int index) {
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.VerifyPaiResponse.verify_list)
  return verify_list_.Mutable(index);
}
::fogs::proto::msg::VerifyPai* VerifyPaiResponse::add_verify_list() {
  // @@protoc_insertion_point(field_add:fogs.proto.msg.VerifyPaiResponse.verify_list)
  return verify_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::fogs::proto::msg::VerifyPai >*
VerifyPaiResponse::mutable_verify_list() {
  // @@protoc_insertion_point(field_mutable_list:fogs.proto.msg.VerifyPaiResponse.verify_list)
  return &verify_list_;
}
const ::google::protobuf::RepeatedPtrField< ::fogs::proto::msg::VerifyPai >&
VerifyPaiResponse::verify_list() const {
  // @@protoc_insertion_point(field_list:fogs.proto.msg.VerifyPaiResponse.verify_list)
  return verify_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SaveVerifyPai::kVerifyPaiFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SaveVerifyPai::SaveVerifyPai()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.SaveVerifyPai)
}

void SaveVerifyPai::InitAsDefaultInstance() {
  verify_pai_ = const_cast< ::fogs::proto::msg::VerifyPai*>(&::fogs::proto::msg::VerifyPai::default_instance());
}

SaveVerifyPai::SaveVerifyPai(const SaveVerifyPai& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.SaveVerifyPai)
}

void SaveVerifyPai::SharedCtor() {
  _cached_size_ = 0;
  verify_pai_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SaveVerifyPai::~SaveVerifyPai() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.SaveVerifyPai)
  SharedDtor();
}

void SaveVerifyPai::SharedDtor() {
  if (this != default_instance_) {
    delete verify_pai_;
  }
}

void SaveVerifyPai::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SaveVerifyPai::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SaveVerifyPai_descriptor_;
}

const SaveVerifyPai& SaveVerifyPai::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5flog_2eproto();
  return *default_instance_;
}

SaveVerifyPai* SaveVerifyPai::default_instance_ = NULL;

SaveVerifyPai* SaveVerifyPai::New(::google::protobuf::Arena* arena) const {
  SaveVerifyPai* n = new SaveVerifyPai;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SaveVerifyPai::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.SaveVerifyPai)
  if (has_verify_pai()) {
    if (verify_pai_ != NULL) verify_pai_->::fogs::proto::msg::VerifyPai::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SaveVerifyPai::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.SaveVerifyPai)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .fogs.proto.msg.VerifyPai verify_pai = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_verify_pai()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.SaveVerifyPai)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.SaveVerifyPai)
  return false;
#undef DO_
}

void SaveVerifyPai::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.SaveVerifyPai)
  // optional .fogs.proto.msg.VerifyPai verify_pai = 1;
  if (has_verify_pai()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->verify_pai_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.SaveVerifyPai)
}

::google::protobuf::uint8* SaveVerifyPai::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.SaveVerifyPai)
  // optional .fogs.proto.msg.VerifyPai verify_pai = 1;
  if (has_verify_pai()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->verify_pai_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.SaveVerifyPai)
  return target;
}

int SaveVerifyPai::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.SaveVerifyPai)
  int total_size = 0;

  // optional .fogs.proto.msg.VerifyPai verify_pai = 1;
  if (has_verify_pai()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->verify_pai_);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SaveVerifyPai::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.SaveVerifyPai)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SaveVerifyPai* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SaveVerifyPai>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.SaveVerifyPai)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.SaveVerifyPai)
    MergeFrom(*source);
  }
}

void SaveVerifyPai::MergeFrom(const SaveVerifyPai& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.SaveVerifyPai)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_verify_pai()) {
      mutable_verify_pai()->::fogs::proto::msg::VerifyPai::MergeFrom(from.verify_pai());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SaveVerifyPai::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.SaveVerifyPai)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SaveVerifyPai::CopyFrom(const SaveVerifyPai& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.SaveVerifyPai)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SaveVerifyPai::IsInitialized() const {

  return true;
}

void SaveVerifyPai::Swap(SaveVerifyPai* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SaveVerifyPai::InternalSwap(SaveVerifyPai* other) {
  std::swap(verify_pai_, other->verify_pai_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SaveVerifyPai::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SaveVerifyPai_descriptor_;
  metadata.reflection = SaveVerifyPai_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SaveVerifyPai

// optional .fogs.proto.msg.VerifyPai verify_pai = 1;
bool SaveVerifyPai::has_verify_pai() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SaveVerifyPai::set_has_verify_pai() {
  _has_bits_[0] |= 0x00000001u;
}
void SaveVerifyPai::clear_has_verify_pai() {
  _has_bits_[0] &= ~0x00000001u;
}
void SaveVerifyPai::clear_verify_pai() {
  if (verify_pai_ != NULL) verify_pai_->::fogs::proto::msg::VerifyPai::Clear();
  clear_has_verify_pai();
}
const ::fogs::proto::msg::VerifyPai& SaveVerifyPai::verify_pai() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.SaveVerifyPai.verify_pai)
  return verify_pai_ != NULL ? *verify_pai_ : *default_instance_->verify_pai_;
}
::fogs::proto::msg::VerifyPai* SaveVerifyPai::mutable_verify_pai() {
  set_has_verify_pai();
  if (verify_pai_ == NULL) {
    verify_pai_ = new ::fogs::proto::msg::VerifyPai;
  }
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.SaveVerifyPai.verify_pai)
  return verify_pai_;
}
::fogs::proto::msg::VerifyPai* SaveVerifyPai::release_verify_pai() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.SaveVerifyPai.verify_pai)
  clear_has_verify_pai();
  ::fogs::proto::msg::VerifyPai* temp = verify_pai_;
  verify_pai_ = NULL;
  return temp;
}
void SaveVerifyPai::set_allocated_verify_pai(::fogs::proto::msg::VerifyPai* verify_pai) {
  delete verify_pai_;
  verify_pai_ = verify_pai;
  if (verify_pai) {
    set_has_verify_pai();
  } else {
    clear_has_verify_pai();
  }
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.SaveVerifyPai.verify_pai)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RobotVerifyPai::kGhostNumFieldNumber;
const int RobotVerifyPai::kPaiListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RobotVerifyPai::RobotVerifyPai()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.RobotVerifyPai)
}

void RobotVerifyPai::InitAsDefaultInstance() {
}

RobotVerifyPai::RobotVerifyPai(const RobotVerifyPai& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.RobotVerifyPai)
}

void RobotVerifyPai::SharedCtor() {
  _cached_size_ = 0;
  ghost_num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RobotVerifyPai::~RobotVerifyPai() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.RobotVerifyPai)
  SharedDtor();
}

void RobotVerifyPai::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RobotVerifyPai::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RobotVerifyPai::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RobotVerifyPai_descriptor_;
}

const RobotVerifyPai& RobotVerifyPai::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5flog_2eproto();
  return *default_instance_;
}

RobotVerifyPai* RobotVerifyPai::default_instance_ = NULL;

RobotVerifyPai* RobotVerifyPai::New(::google::protobuf::Arena* arena) const {
  RobotVerifyPai* n = new RobotVerifyPai;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RobotVerifyPai::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.RobotVerifyPai)
  ghost_num_ = 0u;
  pai_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RobotVerifyPai::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.RobotVerifyPai)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ghost_num = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ghost_num_)));
          set_has_ghost_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_pai_list;
        break;
      }

      // repeated uint32 pai_list = 2;
      case 2: {
        if (tag == 16) {
         parse_pai_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_pai_list())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_pai_list())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_pai_list;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.RobotVerifyPai)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.RobotVerifyPai)
  return false;
#undef DO_
}

void RobotVerifyPai::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.RobotVerifyPai)
  // optional uint32 ghost_num = 1;
  if (has_ghost_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ghost_num(), output);
  }

  // repeated uint32 pai_list = 2;
  for (int i = 0; i < this->pai_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->pai_list(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.RobotVerifyPai)
}

::google::protobuf::uint8* RobotVerifyPai::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.RobotVerifyPai)
  // optional uint32 ghost_num = 1;
  if (has_ghost_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ghost_num(), target);
  }

  // repeated uint32 pai_list = 2;
  for (int i = 0; i < this->pai_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->pai_list(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.RobotVerifyPai)
  return target;
}

int RobotVerifyPai::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.RobotVerifyPai)
  int total_size = 0;

  // optional uint32 ghost_num = 1;
  if (has_ghost_num()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ghost_num());
  }

  // repeated uint32 pai_list = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->pai_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->pai_list(i));
    }
    total_size += 1 * this->pai_list_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RobotVerifyPai::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.RobotVerifyPai)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RobotVerifyPai* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RobotVerifyPai>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.RobotVerifyPai)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.RobotVerifyPai)
    MergeFrom(*source);
  }
}

void RobotVerifyPai::MergeFrom(const RobotVerifyPai& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.RobotVerifyPai)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  pai_list_.MergeFrom(from.pai_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ghost_num()) {
      set_ghost_num(from.ghost_num());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void RobotVerifyPai::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.RobotVerifyPai)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RobotVerifyPai::CopyFrom(const RobotVerifyPai& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.RobotVerifyPai)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RobotVerifyPai::IsInitialized() const {

  return true;
}

void RobotVerifyPai::Swap(RobotVerifyPai* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RobotVerifyPai::InternalSwap(RobotVerifyPai* other) {
  std::swap(ghost_num_, other->ghost_num_);
  pai_list_.UnsafeArenaSwap(&other->pai_list_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RobotVerifyPai::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RobotVerifyPai_descriptor_;
  metadata.reflection = RobotVerifyPai_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RobotVerifyPai

// optional uint32 ghost_num = 1;
bool RobotVerifyPai::has_ghost_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RobotVerifyPai::set_has_ghost_num() {
  _has_bits_[0] |= 0x00000001u;
}
void RobotVerifyPai::clear_has_ghost_num() {
  _has_bits_[0] &= ~0x00000001u;
}
void RobotVerifyPai::clear_ghost_num() {
  ghost_num_ = 0u;
  clear_has_ghost_num();
}
 ::google::protobuf::uint32 RobotVerifyPai::ghost_num() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.RobotVerifyPai.ghost_num)
  return ghost_num_;
}
 void RobotVerifyPai::set_ghost_num(::google::protobuf::uint32 value) {
  set_has_ghost_num();
  ghost_num_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.RobotVerifyPai.ghost_num)
}

// repeated uint32 pai_list = 2;
int RobotVerifyPai::pai_list_size() const {
  return pai_list_.size();
}
void RobotVerifyPai::clear_pai_list() {
  pai_list_.Clear();
}
 ::google::protobuf::uint32 RobotVerifyPai::pai_list(int index) const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.RobotVerifyPai.pai_list)
  return pai_list_.Get(index);
}
 void RobotVerifyPai::set_pai_list(int index, ::google::protobuf::uint32 value) {
  pai_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:fogs.proto.msg.RobotVerifyPai.pai_list)
}
 void RobotVerifyPai::add_pai_list(::google::protobuf::uint32 value) {
  pai_list_.Add(value);
  // @@protoc_insertion_point(field_add:fogs.proto.msg.RobotVerifyPai.pai_list)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
RobotVerifyPai::pai_list() const {
  // @@protoc_insertion_point(field_list:fogs.proto.msg.RobotVerifyPai.pai_list)
  return pai_list_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
RobotVerifyPai::mutable_pai_list() {
  // @@protoc_insertion_point(field_mutable_list:fogs.proto.msg.RobotVerifyPai.pai_list)
  return &pai_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SaveMoneyLogRequest::kMoneyLogFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SaveMoneyLogRequest::SaveMoneyLogRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.SaveMoneyLogRequest)
}

void SaveMoneyLogRequest::InitAsDefaultInstance() {
  moneylog_ = const_cast< ::fogs::proto::msg::MoneyLog*>(&::fogs::proto::msg::MoneyLog::default_instance());
}

SaveMoneyLogRequest::SaveMoneyLogRequest(const SaveMoneyLogRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.SaveMoneyLogRequest)
}

void SaveMoneyLogRequest::SharedCtor() {
  _cached_size_ = 0;
  moneylog_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SaveMoneyLogRequest::~SaveMoneyLogRequest() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.SaveMoneyLogRequest)
  SharedDtor();
}

void SaveMoneyLogRequest::SharedDtor() {
  if (this != default_instance_) {
    delete moneylog_;
  }
}

void SaveMoneyLogRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SaveMoneyLogRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SaveMoneyLogRequest_descriptor_;
}

const SaveMoneyLogRequest& SaveMoneyLogRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5flog_2eproto();
  return *default_instance_;
}

SaveMoneyLogRequest* SaveMoneyLogRequest::default_instance_ = NULL;

SaveMoneyLogRequest* SaveMoneyLogRequest::New(::google::protobuf::Arena* arena) const {
  SaveMoneyLogRequest* n = new SaveMoneyLogRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SaveMoneyLogRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.SaveMoneyLogRequest)
  if (has_moneylog()) {
    if (moneylog_ != NULL) moneylog_->::fogs::proto::msg::MoneyLog::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SaveMoneyLogRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.SaveMoneyLogRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .fogs.proto.msg.MoneyLog moneyLog = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_moneylog()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.SaveMoneyLogRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.SaveMoneyLogRequest)
  return false;
#undef DO_
}

void SaveMoneyLogRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.SaveMoneyLogRequest)
  // required .fogs.proto.msg.MoneyLog moneyLog = 1;
  if (has_moneylog()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->moneylog_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.SaveMoneyLogRequest)
}

::google::protobuf::uint8* SaveMoneyLogRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.SaveMoneyLogRequest)
  // required .fogs.proto.msg.MoneyLog moneyLog = 1;
  if (has_moneylog()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->moneylog_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.SaveMoneyLogRequest)
  return target;
}

int SaveMoneyLogRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.SaveMoneyLogRequest)
  int total_size = 0;

  // required .fogs.proto.msg.MoneyLog moneyLog = 1;
  if (has_moneylog()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->moneylog_);
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SaveMoneyLogRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.SaveMoneyLogRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SaveMoneyLogRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SaveMoneyLogRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.SaveMoneyLogRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.SaveMoneyLogRequest)
    MergeFrom(*source);
  }
}

void SaveMoneyLogRequest::MergeFrom(const SaveMoneyLogRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.SaveMoneyLogRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_moneylog()) {
      mutable_moneylog()->::fogs::proto::msg::MoneyLog::MergeFrom(from.moneylog());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SaveMoneyLogRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.SaveMoneyLogRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SaveMoneyLogRequest::CopyFrom(const SaveMoneyLogRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.SaveMoneyLogRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SaveMoneyLogRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_moneylog()) {
    if (!this->moneylog_->IsInitialized()) return false;
  }
  return true;
}

void SaveMoneyLogRequest::Swap(SaveMoneyLogRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SaveMoneyLogRequest::InternalSwap(SaveMoneyLogRequest* other) {
  std::swap(moneylog_, other->moneylog_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SaveMoneyLogRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SaveMoneyLogRequest_descriptor_;
  metadata.reflection = SaveMoneyLogRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SaveMoneyLogRequest

// required .fogs.proto.msg.MoneyLog moneyLog = 1;
bool SaveMoneyLogRequest::has_moneylog() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SaveMoneyLogRequest::set_has_moneylog() {
  _has_bits_[0] |= 0x00000001u;
}
void SaveMoneyLogRequest::clear_has_moneylog() {
  _has_bits_[0] &= ~0x00000001u;
}
void SaveMoneyLogRequest::clear_moneylog() {
  if (moneylog_ != NULL) moneylog_->::fogs::proto::msg::MoneyLog::Clear();
  clear_has_moneylog();
}
const ::fogs::proto::msg::MoneyLog& SaveMoneyLogRequest::moneylog() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.SaveMoneyLogRequest.moneyLog)
  return moneylog_ != NULL ? *moneylog_ : *default_instance_->moneylog_;
}
::fogs::proto::msg::MoneyLog* SaveMoneyLogRequest::mutable_moneylog() {
  set_has_moneylog();
  if (moneylog_ == NULL) {
    moneylog_ = new ::fogs::proto::msg::MoneyLog;
  }
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.SaveMoneyLogRequest.moneyLog)
  return moneylog_;
}
::fogs::proto::msg::MoneyLog* SaveMoneyLogRequest::release_moneylog() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.SaveMoneyLogRequest.moneyLog)
  clear_has_moneylog();
  ::fogs::proto::msg::MoneyLog* temp = moneylog_;
  moneylog_ = NULL;
  return temp;
}
void SaveMoneyLogRequest::set_allocated_moneylog(::fogs::proto::msg::MoneyLog* moneylog) {
  delete moneylog_;
  moneylog_ = moneylog;
  if (moneylog) {
    set_has_moneylog();
  } else {
    clear_has_moneylog();
  }
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.SaveMoneyLogRequest.moneyLog)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoneyLog::kLogIdFieldNumber;
const int MoneyLog::kLogTypeFieldNumber;
const int MoneyLog::kUserIdFieldNumber;
const int MoneyLog::kRoomCardFieldNumber;
const int MoneyLog::kRoomTotalFieldNumber;
const int MoneyLog::kTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoneyLog::MoneyLog()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.MoneyLog)
}

void MoneyLog::InitAsDefaultInstance() {
}

MoneyLog::MoneyLog(const MoneyLog& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.MoneyLog)
}

void MoneyLog::SharedCtor() {
  _cached_size_ = 0;
  log_id_ = GOOGLE_ULONGLONG(0);
  log_type_ = 0;
  user_id_ = GOOGLE_ULONGLONG(0);
  room_card_ = 0;
  room_total_ = 0;
  time_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MoneyLog::~MoneyLog() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.MoneyLog)
  SharedDtor();
}

void MoneyLog::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MoneyLog::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MoneyLog::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MoneyLog_descriptor_;
}

const MoneyLog& MoneyLog::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5flog_2eproto();
  return *default_instance_;
}

MoneyLog* MoneyLog::default_instance_ = NULL;

MoneyLog* MoneyLog::New(::google::protobuf::Arena* arena) const {
  MoneyLog* n = new MoneyLog;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MoneyLog::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.MoneyLog)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(MoneyLog, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MoneyLog*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 63u) {
    ZR_(log_id_, room_total_);
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MoneyLog::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.MoneyLog)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 log_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &log_id_)));
          set_has_log_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_log_type;
        break;
      }

      // required int32 log_type = 2;
      case 2: {
        if (tag == 16) {
         parse_log_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &log_type_)));
          set_has_log_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_user_id;
        break;
      }

      // required uint64 user_id = 3;
      case 3: {
        if (tag == 24) {
         parse_user_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &user_id_)));
          set_has_user_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_room_card;
        break;
      }

      // required int32 room_card = 4;
      case 4: {
        if (tag == 32) {
         parse_room_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &room_card_)));
          set_has_room_card();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_room_total;
        break;
      }

      // required int32 room_total = 5;
      case 5: {
        if (tag == 40) {
         parse_room_total:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &room_total_)));
          set_has_room_total();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_time;
        break;
      }

      // required uint64 time = 6;
      case 6: {
        if (tag == 48) {
         parse_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &time_)));
          set_has_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.MoneyLog)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.MoneyLog)
  return false;
#undef DO_
}

void MoneyLog::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.MoneyLog)
  // required uint64 log_id = 1;
  if (has_log_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->log_id(), output);
  }

  // required int32 log_type = 2;
  if (has_log_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->log_type(), output);
  }

  // required uint64 user_id = 3;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->user_id(), output);
  }

  // required int32 room_card = 4;
  if (has_room_card()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->room_card(), output);
  }

  // required int32 room_total = 5;
  if (has_room_total()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->room_total(), output);
  }

  // required uint64 time = 6;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.MoneyLog)
}

::google::protobuf::uint8* MoneyLog::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.MoneyLog)
  // required uint64 log_id = 1;
  if (has_log_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->log_id(), target);
  }

  // required int32 log_type = 2;
  if (has_log_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->log_type(), target);
  }

  // required uint64 user_id = 3;
  if (has_user_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->user_id(), target);
  }

  // required int32 room_card = 4;
  if (has_room_card()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->room_card(), target);
  }

  // required int32 room_total = 5;
  if (has_room_total()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->room_total(), target);
  }

  // required uint64 time = 6;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.MoneyLog)
  return target;
}

int MoneyLog::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:fogs.proto.msg.MoneyLog)
  int total_size = 0;

  if (has_log_id()) {
    // required uint64 log_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->log_id());
  }

  if (has_log_type()) {
    // required int32 log_type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->log_type());
  }

  if (has_user_id()) {
    // required uint64 user_id = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->user_id());
  }

  if (has_room_card()) {
    // required int32 room_card = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->room_card());
  }

  if (has_room_total()) {
    // required int32 room_total = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->room_total());
  }

  if (has_time()) {
    // required uint64 time = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->time());
  }

  return total_size;
}
int MoneyLog::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.MoneyLog)
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000003f) ^ 0x0000003f) == 0) {  // All required fields are present.
    // required uint64 log_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->log_id());

    // required int32 log_type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->log_type());

    // required uint64 user_id = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->user_id());

    // required int32 room_card = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->room_card());

    // required int32 room_total = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->room_total());

    // required uint64 time = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->time());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MoneyLog::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.MoneyLog)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MoneyLog* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MoneyLog>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.MoneyLog)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.MoneyLog)
    MergeFrom(*source);
  }
}

void MoneyLog::MergeFrom(const MoneyLog& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.MoneyLog)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_log_id()) {
      set_log_id(from.log_id());
    }
    if (from.has_log_type()) {
      set_log_type(from.log_type());
    }
    if (from.has_user_id()) {
      set_user_id(from.user_id());
    }
    if (from.has_room_card()) {
      set_room_card(from.room_card());
    }
    if (from.has_room_total()) {
      set_room_total(from.room_total());
    }
    if (from.has_time()) {
      set_time(from.time());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MoneyLog::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.MoneyLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoneyLog::CopyFrom(const MoneyLog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.MoneyLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoneyLog::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;

  return true;
}

void MoneyLog::Swap(MoneyLog* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoneyLog::InternalSwap(MoneyLog* other) {
  std::swap(log_id_, other->log_id_);
  std::swap(log_type_, other->log_type_);
  std::swap(user_id_, other->user_id_);
  std::swap(room_card_, other->room_card_);
  std::swap(room_total_, other->room_total_);
  std::swap(time_, other->time_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MoneyLog::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MoneyLog_descriptor_;
  metadata.reflection = MoneyLog_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MoneyLog

// required uint64 log_id = 1;
bool MoneyLog::has_log_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MoneyLog::set_has_log_id() {
  _has_bits_[0] |= 0x00000001u;
}
void MoneyLog::clear_has_log_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void MoneyLog::clear_log_id() {
  log_id_ = GOOGLE_ULONGLONG(0);
  clear_has_log_id();
}
 ::google::protobuf::uint64 MoneyLog::log_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.MoneyLog.log_id)
  return log_id_;
}
 void MoneyLog::set_log_id(::google::protobuf::uint64 value) {
  set_has_log_id();
  log_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.MoneyLog.log_id)
}

// required int32 log_type = 2;
bool MoneyLog::has_log_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MoneyLog::set_has_log_type() {
  _has_bits_[0] |= 0x00000002u;
}
void MoneyLog::clear_has_log_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void MoneyLog::clear_log_type() {
  log_type_ = 0;
  clear_has_log_type();
}
 ::google::protobuf::int32 MoneyLog::log_type() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.MoneyLog.log_type)
  return log_type_;
}
 void MoneyLog::set_log_type(::google::protobuf::int32 value) {
  set_has_log_type();
  log_type_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.MoneyLog.log_type)
}

// required uint64 user_id = 3;
bool MoneyLog::has_user_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void MoneyLog::set_has_user_id() {
  _has_bits_[0] |= 0x00000004u;
}
void MoneyLog::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void MoneyLog::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
 ::google::protobuf::uint64 MoneyLog::user_id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.MoneyLog.user_id)
  return user_id_;
}
 void MoneyLog::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.MoneyLog.user_id)
}

// required int32 room_card = 4;
bool MoneyLog::has_room_card() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void MoneyLog::set_has_room_card() {
  _has_bits_[0] |= 0x00000008u;
}
void MoneyLog::clear_has_room_card() {
  _has_bits_[0] &= ~0x00000008u;
}
void MoneyLog::clear_room_card() {
  room_card_ = 0;
  clear_has_room_card();
}
 ::google::protobuf::int32 MoneyLog::room_card() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.MoneyLog.room_card)
  return room_card_;
}
 void MoneyLog::set_room_card(::google::protobuf::int32 value) {
  set_has_room_card();
  room_card_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.MoneyLog.room_card)
}

// required int32 room_total = 5;
bool MoneyLog::has_room_total() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void MoneyLog::set_has_room_total() {
  _has_bits_[0] |= 0x00000010u;
}
void MoneyLog::clear_has_room_total() {
  _has_bits_[0] &= ~0x00000010u;
}
void MoneyLog::clear_room_total() {
  room_total_ = 0;
  clear_has_room_total();
}
 ::google::protobuf::int32 MoneyLog::room_total() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.MoneyLog.room_total)
  return room_total_;
}
 void MoneyLog::set_room_total(::google::protobuf::int32 value) {
  set_has_room_total();
  room_total_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.MoneyLog.room_total)
}

// required uint64 time = 6;
bool MoneyLog::has_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void MoneyLog::set_has_time() {
  _has_bits_[0] |= 0x00000020u;
}
void MoneyLog::clear_has_time() {
  _has_bits_[0] &= ~0x00000020u;
}
void MoneyLog::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
  clear_has_time();
}
 ::google::protobuf::uint64 MoneyLog::time() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.MoneyLog.time)
  return time_;
}
 void MoneyLog::set_time(::google::protobuf::uint64 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.MoneyLog.time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RewardConfig::kIdFieldNumber;
const int RewardConfig::kRoomCardFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RewardConfig::RewardConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.RewardConfig)
}

void RewardConfig::InitAsDefaultInstance() {
}

RewardConfig::RewardConfig(const RewardConfig& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.RewardConfig)
}

void RewardConfig::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  room_card_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RewardConfig::~RewardConfig() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.RewardConfig)
  SharedDtor();
}

void RewardConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RewardConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RewardConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RewardConfig_descriptor_;
}

const RewardConfig& RewardConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5flog_2eproto();
  return *default_instance_;
}

RewardConfig* RewardConfig::default_instance_ = NULL;

RewardConfig* RewardConfig::New(::google::protobuf::Arena* arena) const {
  RewardConfig* n = new RewardConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RewardConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.RewardConfig)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(RewardConfig, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<RewardConfig*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(id_, room_card_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RewardConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.RewardConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_room_card;
        break;
      }

      // optional uint32 room_card = 2;
      case 2: {
        if (tag == 16) {
         parse_room_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &room_card_)));
          set_has_room_card();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.RewardConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.RewardConfig)
  return false;
#undef DO_
}

void RewardConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.RewardConfig)
  // optional uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional uint32 room_card = 2;
  if (has_room_card()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->room_card(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.RewardConfig)
}

::google::protobuf::uint8* RewardConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.RewardConfig)
  // optional uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional uint32 room_card = 2;
  if (has_room_card()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->room_card(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.RewardConfig)
  return target;
}

int RewardConfig::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.RewardConfig)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // optional uint32 room_card = 2;
    if (has_room_card()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->room_card());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RewardConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.RewardConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RewardConfig* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RewardConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.RewardConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.RewardConfig)
    MergeFrom(*source);
  }
}

void RewardConfig::MergeFrom(const RewardConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.RewardConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_room_card()) {
      set_room_card(from.room_card());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void RewardConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.RewardConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RewardConfig::CopyFrom(const RewardConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.RewardConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RewardConfig::IsInitialized() const {

  return true;
}

void RewardConfig::Swap(RewardConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RewardConfig::InternalSwap(RewardConfig* other) {
  std::swap(id_, other->id_);
  std::swap(room_card_, other->room_card_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RewardConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RewardConfig_descriptor_;
  metadata.reflection = RewardConfig_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RewardConfig

// optional uint32 id = 1;
bool RewardConfig::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RewardConfig::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void RewardConfig::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void RewardConfig::clear_id() {
  id_ = 0u;
  clear_has_id();
}
 ::google::protobuf::uint32 RewardConfig::id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.RewardConfig.id)
  return id_;
}
 void RewardConfig::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.RewardConfig.id)
}

// optional uint32 room_card = 2;
bool RewardConfig::has_room_card() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RewardConfig::set_has_room_card() {
  _has_bits_[0] |= 0x00000002u;
}
void RewardConfig::clear_has_room_card() {
  _has_bits_[0] &= ~0x00000002u;
}
void RewardConfig::clear_room_card() {
  room_card_ = 0u;
  clear_has_room_card();
}
 ::google::protobuf::uint32 RewardConfig::room_card() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.RewardConfig.room_card)
  return room_card_;
}
 void RewardConfig::set_room_card(::google::protobuf::uint32 value) {
  set_has_room_card();
  room_card_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.RewardConfig.room_card)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetRewardConfigReq::GetRewardConfigReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.GetRewardConfigReq)
}

void GetRewardConfigReq::InitAsDefaultInstance() {
}

GetRewardConfigReq::GetRewardConfigReq(const GetRewardConfigReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.GetRewardConfigReq)
}

void GetRewardConfigReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetRewardConfigReq::~GetRewardConfigReq() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.GetRewardConfigReq)
  SharedDtor();
}

void GetRewardConfigReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetRewardConfigReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetRewardConfigReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetRewardConfigReq_descriptor_;
}

const GetRewardConfigReq& GetRewardConfigReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5flog_2eproto();
  return *default_instance_;
}

GetRewardConfigReq* GetRewardConfigReq::default_instance_ = NULL;

GetRewardConfigReq* GetRewardConfigReq::New(::google::protobuf::Arena* arena) const {
  GetRewardConfigReq* n = new GetRewardConfigReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetRewardConfigReq::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.GetRewardConfigReq)
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GetRewardConfigReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.GetRewardConfigReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.GetRewardConfigReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.GetRewardConfigReq)
  return false;
#undef DO_
}

void GetRewardConfigReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.GetRewardConfigReq)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.GetRewardConfigReq)
}

::google::protobuf::uint8* GetRewardConfigReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.GetRewardConfigReq)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.GetRewardConfigReq)
  return target;
}

int GetRewardConfigReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.GetRewardConfigReq)
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetRewardConfigReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.GetRewardConfigReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetRewardConfigReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetRewardConfigReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.GetRewardConfigReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.GetRewardConfigReq)
    MergeFrom(*source);
  }
}

void GetRewardConfigReq::MergeFrom(const GetRewardConfigReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.GetRewardConfigReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void GetRewardConfigReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.GetRewardConfigReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRewardConfigReq::CopyFrom(const GetRewardConfigReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.GetRewardConfigReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRewardConfigReq::IsInitialized() const {

  return true;
}

void GetRewardConfigReq::Swap(GetRewardConfigReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetRewardConfigReq::InternalSwap(GetRewardConfigReq* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetRewardConfigReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetRewardConfigReq_descriptor_;
  metadata.reflection = GetRewardConfigReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetRewardConfigReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetRewardConfigResp::kInvitationRewardFieldNumber;
const int GetRewardConfigResp::kShareRewardFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetRewardConfigResp::GetRewardConfigResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.GetRewardConfigResp)
}

void GetRewardConfigResp::InitAsDefaultInstance() {
  invitation_reward_ = const_cast< ::fogs::proto::msg::RewardConfig*>(&::fogs::proto::msg::RewardConfig::default_instance());
  share_reward_ = const_cast< ::fogs::proto::msg::RewardConfig*>(&::fogs::proto::msg::RewardConfig::default_instance());
}

GetRewardConfigResp::GetRewardConfigResp(const GetRewardConfigResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.GetRewardConfigResp)
}

void GetRewardConfigResp::SharedCtor() {
  _cached_size_ = 0;
  invitation_reward_ = NULL;
  share_reward_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetRewardConfigResp::~GetRewardConfigResp() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.GetRewardConfigResp)
  SharedDtor();
}

void GetRewardConfigResp::SharedDtor() {
  if (this != default_instance_) {
    delete invitation_reward_;
    delete share_reward_;
  }
}

void GetRewardConfigResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetRewardConfigResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetRewardConfigResp_descriptor_;
}

const GetRewardConfigResp& GetRewardConfigResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5flog_2eproto();
  return *default_instance_;
}

GetRewardConfigResp* GetRewardConfigResp::default_instance_ = NULL;

GetRewardConfigResp* GetRewardConfigResp::New(::google::protobuf::Arena* arena) const {
  GetRewardConfigResp* n = new GetRewardConfigResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetRewardConfigResp::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.GetRewardConfigResp)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_invitation_reward()) {
      if (invitation_reward_ != NULL) invitation_reward_->::fogs::proto::msg::RewardConfig::Clear();
    }
    if (has_share_reward()) {
      if (share_reward_ != NULL) share_reward_->::fogs::proto::msg::RewardConfig::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GetRewardConfigResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.GetRewardConfigResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .fogs.proto.msg.RewardConfig invitation_reward = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_invitation_reward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_share_reward;
        break;
      }

      // optional .fogs.proto.msg.RewardConfig share_reward = 2;
      case 2: {
        if (tag == 18) {
         parse_share_reward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_share_reward()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.GetRewardConfigResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.GetRewardConfigResp)
  return false;
#undef DO_
}

void GetRewardConfigResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.GetRewardConfigResp)
  // optional .fogs.proto.msg.RewardConfig invitation_reward = 1;
  if (has_invitation_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->invitation_reward_, output);
  }

  // optional .fogs.proto.msg.RewardConfig share_reward = 2;
  if (has_share_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->share_reward_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.GetRewardConfigResp)
}

::google::protobuf::uint8* GetRewardConfigResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.GetRewardConfigResp)
  // optional .fogs.proto.msg.RewardConfig invitation_reward = 1;
  if (has_invitation_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->invitation_reward_, false, target);
  }

  // optional .fogs.proto.msg.RewardConfig share_reward = 2;
  if (has_share_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->share_reward_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.GetRewardConfigResp)
  return target;
}

int GetRewardConfigResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.GetRewardConfigResp)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional .fogs.proto.msg.RewardConfig invitation_reward = 1;
    if (has_invitation_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->invitation_reward_);
    }

    // optional .fogs.proto.msg.RewardConfig share_reward = 2;
    if (has_share_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->share_reward_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetRewardConfigResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.GetRewardConfigResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetRewardConfigResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetRewardConfigResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.GetRewardConfigResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.GetRewardConfigResp)
    MergeFrom(*source);
  }
}

void GetRewardConfigResp::MergeFrom(const GetRewardConfigResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.GetRewardConfigResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_invitation_reward()) {
      mutable_invitation_reward()->::fogs::proto::msg::RewardConfig::MergeFrom(from.invitation_reward());
    }
    if (from.has_share_reward()) {
      mutable_share_reward()->::fogs::proto::msg::RewardConfig::MergeFrom(from.share_reward());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void GetRewardConfigResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.GetRewardConfigResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRewardConfigResp::CopyFrom(const GetRewardConfigResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.GetRewardConfigResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRewardConfigResp::IsInitialized() const {

  return true;
}

void GetRewardConfigResp::Swap(GetRewardConfigResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetRewardConfigResp::InternalSwap(GetRewardConfigResp* other) {
  std::swap(invitation_reward_, other->invitation_reward_);
  std::swap(share_reward_, other->share_reward_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetRewardConfigResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetRewardConfigResp_descriptor_;
  metadata.reflection = GetRewardConfigResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetRewardConfigResp

// optional .fogs.proto.msg.RewardConfig invitation_reward = 1;
bool GetRewardConfigResp::has_invitation_reward() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetRewardConfigResp::set_has_invitation_reward() {
  _has_bits_[0] |= 0x00000001u;
}
void GetRewardConfigResp::clear_has_invitation_reward() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetRewardConfigResp::clear_invitation_reward() {
  if (invitation_reward_ != NULL) invitation_reward_->::fogs::proto::msg::RewardConfig::Clear();
  clear_has_invitation_reward();
}
const ::fogs::proto::msg::RewardConfig& GetRewardConfigResp::invitation_reward() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.GetRewardConfigResp.invitation_reward)
  return invitation_reward_ != NULL ? *invitation_reward_ : *default_instance_->invitation_reward_;
}
::fogs::proto::msg::RewardConfig* GetRewardConfigResp::mutable_invitation_reward() {
  set_has_invitation_reward();
  if (invitation_reward_ == NULL) {
    invitation_reward_ = new ::fogs::proto::msg::RewardConfig;
  }
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.GetRewardConfigResp.invitation_reward)
  return invitation_reward_;
}
::fogs::proto::msg::RewardConfig* GetRewardConfigResp::release_invitation_reward() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.GetRewardConfigResp.invitation_reward)
  clear_has_invitation_reward();
  ::fogs::proto::msg::RewardConfig* temp = invitation_reward_;
  invitation_reward_ = NULL;
  return temp;
}
void GetRewardConfigResp::set_allocated_invitation_reward(::fogs::proto::msg::RewardConfig* invitation_reward) {
  delete invitation_reward_;
  invitation_reward_ = invitation_reward;
  if (invitation_reward) {
    set_has_invitation_reward();
  } else {
    clear_has_invitation_reward();
  }
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.GetRewardConfigResp.invitation_reward)
}

// optional .fogs.proto.msg.RewardConfig share_reward = 2;
bool GetRewardConfigResp::has_share_reward() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetRewardConfigResp::set_has_share_reward() {
  _has_bits_[0] |= 0x00000002u;
}
void GetRewardConfigResp::clear_has_share_reward() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetRewardConfigResp::clear_share_reward() {
  if (share_reward_ != NULL) share_reward_->::fogs::proto::msg::RewardConfig::Clear();
  clear_has_share_reward();
}
const ::fogs::proto::msg::RewardConfig& GetRewardConfigResp::share_reward() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.GetRewardConfigResp.share_reward)
  return share_reward_ != NULL ? *share_reward_ : *default_instance_->share_reward_;
}
::fogs::proto::msg::RewardConfig* GetRewardConfigResp::mutable_share_reward() {
  set_has_share_reward();
  if (share_reward_ == NULL) {
    share_reward_ = new ::fogs::proto::msg::RewardConfig;
  }
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.GetRewardConfigResp.share_reward)
  return share_reward_;
}
::fogs::proto::msg::RewardConfig* GetRewardConfigResp::release_share_reward() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.GetRewardConfigResp.share_reward)
  clear_has_share_reward();
  ::fogs::proto::msg::RewardConfig* temp = share_reward_;
  share_reward_ = NULL;
  return temp;
}
void GetRewardConfigResp::set_allocated_share_reward(::fogs::proto::msg::RewardConfig* share_reward) {
  delete share_reward_;
  share_reward_ = share_reward;
  if (share_reward) {
    set_has_share_reward();
  } else {
    clear_has_share_reward();
  }
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.GetRewardConfigResp.share_reward)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetFreeConfigReq::GetFreeConfigReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.GetFreeConfigReq)
}

void GetFreeConfigReq::InitAsDefaultInstance() {
}

GetFreeConfigReq::GetFreeConfigReq(const GetFreeConfigReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.GetFreeConfigReq)
}

void GetFreeConfigReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetFreeConfigReq::~GetFreeConfigReq() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.GetFreeConfigReq)
  SharedDtor();
}

void GetFreeConfigReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetFreeConfigReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetFreeConfigReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetFreeConfigReq_descriptor_;
}

const GetFreeConfigReq& GetFreeConfigReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5flog_2eproto();
  return *default_instance_;
}

GetFreeConfigReq* GetFreeConfigReq::default_instance_ = NULL;

GetFreeConfigReq* GetFreeConfigReq::New(::google::protobuf::Arena* arena) const {
  GetFreeConfigReq* n = new GetFreeConfigReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetFreeConfigReq::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.GetFreeConfigReq)
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GetFreeConfigReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.GetFreeConfigReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.GetFreeConfigReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.GetFreeConfigReq)
  return false;
#undef DO_
}

void GetFreeConfigReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.GetFreeConfigReq)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.GetFreeConfigReq)
}

::google::protobuf::uint8* GetFreeConfigReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.GetFreeConfigReq)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.GetFreeConfigReq)
  return target;
}

int GetFreeConfigReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.GetFreeConfigReq)
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetFreeConfigReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.GetFreeConfigReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetFreeConfigReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetFreeConfigReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.GetFreeConfigReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.GetFreeConfigReq)
    MergeFrom(*source);
  }
}

void GetFreeConfigReq::MergeFrom(const GetFreeConfigReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.GetFreeConfigReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void GetFreeConfigReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.GetFreeConfigReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetFreeConfigReq::CopyFrom(const GetFreeConfigReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.GetFreeConfigReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFreeConfigReq::IsInitialized() const {

  return true;
}

void GetFreeConfigReq::Swap(GetFreeConfigReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetFreeConfigReq::InternalSwap(GetFreeConfigReq* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetFreeConfigReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetFreeConfigReq_descriptor_;
  metadata.reflection = GetFreeConfigReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetFreeConfigReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetFreeConfigResp::kStartTimeFieldNumber;
const int GetFreeConfigResp::kEndTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetFreeConfigResp::GetFreeConfigResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.GetFreeConfigResp)
}

void GetFreeConfigResp::InitAsDefaultInstance() {
}

GetFreeConfigResp::GetFreeConfigResp(const GetFreeConfigResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.GetFreeConfigResp)
}

void GetFreeConfigResp::SharedCtor() {
  _cached_size_ = 0;
  start_time_ = GOOGLE_ULONGLONG(0);
  end_time_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetFreeConfigResp::~GetFreeConfigResp() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.GetFreeConfigResp)
  SharedDtor();
}

void GetFreeConfigResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetFreeConfigResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetFreeConfigResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetFreeConfigResp_descriptor_;
}

const GetFreeConfigResp& GetFreeConfigResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5flog_2eproto();
  return *default_instance_;
}

GetFreeConfigResp* GetFreeConfigResp::default_instance_ = NULL;

GetFreeConfigResp* GetFreeConfigResp::New(::google::protobuf::Arena* arena) const {
  GetFreeConfigResp* n = new GetFreeConfigResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetFreeConfigResp::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.GetFreeConfigResp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(GetFreeConfigResp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<GetFreeConfigResp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(start_time_, end_time_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GetFreeConfigResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.GetFreeConfigResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 start_time = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_end_time;
        break;
      }

      // optional uint64 end_time = 2;
      case 2: {
        if (tag == 16) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.GetFreeConfigResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.GetFreeConfigResp)
  return false;
#undef DO_
}

void GetFreeConfigResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.GetFreeConfigResp)
  // optional uint64 start_time = 1;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->start_time(), output);
  }

  // optional uint64 end_time = 2;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->end_time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.GetFreeConfigResp)
}

::google::protobuf::uint8* GetFreeConfigResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.GetFreeConfigResp)
  // optional uint64 start_time = 1;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->start_time(), target);
  }

  // optional uint64 end_time = 2;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->end_time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.GetFreeConfigResp)
  return target;
}

int GetFreeConfigResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.GetFreeConfigResp)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 start_time = 1;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->start_time());
    }

    // optional uint64 end_time = 2;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->end_time());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetFreeConfigResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.GetFreeConfigResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetFreeConfigResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetFreeConfigResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.GetFreeConfigResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.GetFreeConfigResp)
    MergeFrom(*source);
  }
}

void GetFreeConfigResp::MergeFrom(const GetFreeConfigResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.GetFreeConfigResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void GetFreeConfigResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.GetFreeConfigResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetFreeConfigResp::CopyFrom(const GetFreeConfigResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.GetFreeConfigResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFreeConfigResp::IsInitialized() const {

  return true;
}

void GetFreeConfigResp::Swap(GetFreeConfigResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetFreeConfigResp::InternalSwap(GetFreeConfigResp* other) {
  std::swap(start_time_, other->start_time_);
  std::swap(end_time_, other->end_time_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetFreeConfigResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetFreeConfigResp_descriptor_;
  metadata.reflection = GetFreeConfigResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetFreeConfigResp

// optional uint64 start_time = 1;
bool GetFreeConfigResp::has_start_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetFreeConfigResp::set_has_start_time() {
  _has_bits_[0] |= 0x00000001u;
}
void GetFreeConfigResp::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetFreeConfigResp::clear_start_time() {
  start_time_ = GOOGLE_ULONGLONG(0);
  clear_has_start_time();
}
 ::google::protobuf::uint64 GetFreeConfigResp::start_time() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.GetFreeConfigResp.start_time)
  return start_time_;
}
 void GetFreeConfigResp::set_start_time(::google::protobuf::uint64 value) {
  set_has_start_time();
  start_time_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.GetFreeConfigResp.start_time)
}

// optional uint64 end_time = 2;
bool GetFreeConfigResp::has_end_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetFreeConfigResp::set_has_end_time() {
  _has_bits_[0] |= 0x00000002u;
}
void GetFreeConfigResp::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetFreeConfigResp::clear_end_time() {
  end_time_ = GOOGLE_ULONGLONG(0);
  clear_has_end_time();
}
 ::google::protobuf::uint64 GetFreeConfigResp::end_time() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.GetFreeConfigResp.end_time)
  return end_time_;
}
 void GetFreeConfigResp::set_end_time(::google::protobuf::uint64 value) {
  set_has_end_time();
  end_time_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.GetFreeConfigResp.end_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetNotifyConfigReq::GetNotifyConfigReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.GetNotifyConfigReq)
}

void GetNotifyConfigReq::InitAsDefaultInstance() {
}

GetNotifyConfigReq::GetNotifyConfigReq(const GetNotifyConfigReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.GetNotifyConfigReq)
}

void GetNotifyConfigReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetNotifyConfigReq::~GetNotifyConfigReq() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.GetNotifyConfigReq)
  SharedDtor();
}

void GetNotifyConfigReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetNotifyConfigReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetNotifyConfigReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetNotifyConfigReq_descriptor_;
}

const GetNotifyConfigReq& GetNotifyConfigReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5flog_2eproto();
  return *default_instance_;
}

GetNotifyConfigReq* GetNotifyConfigReq::default_instance_ = NULL;

GetNotifyConfigReq* GetNotifyConfigReq::New(::google::protobuf::Arena* arena) const {
  GetNotifyConfigReq* n = new GetNotifyConfigReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetNotifyConfigReq::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.GetNotifyConfigReq)
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GetNotifyConfigReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.GetNotifyConfigReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.GetNotifyConfigReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.GetNotifyConfigReq)
  return false;
#undef DO_
}

void GetNotifyConfigReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.GetNotifyConfigReq)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.GetNotifyConfigReq)
}

::google::protobuf::uint8* GetNotifyConfigReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.GetNotifyConfigReq)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.GetNotifyConfigReq)
  return target;
}

int GetNotifyConfigReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.GetNotifyConfigReq)
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetNotifyConfigReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.GetNotifyConfigReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetNotifyConfigReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetNotifyConfigReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.GetNotifyConfigReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.GetNotifyConfigReq)
    MergeFrom(*source);
  }
}

void GetNotifyConfigReq::MergeFrom(const GetNotifyConfigReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.GetNotifyConfigReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void GetNotifyConfigReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.GetNotifyConfigReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetNotifyConfigReq::CopyFrom(const GetNotifyConfigReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.GetNotifyConfigReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetNotifyConfigReq::IsInitialized() const {

  return true;
}

void GetNotifyConfigReq::Swap(GetNotifyConfigReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetNotifyConfigReq::InternalSwap(GetNotifyConfigReq* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetNotifyConfigReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetNotifyConfigReq_descriptor_;
  metadata.reflection = GetNotifyConfigReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetNotifyConfigReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetNotifyConfigResp::kRecordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetNotifyConfigResp::GetNotifyConfigResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.GetNotifyConfigResp)
}

void GetNotifyConfigResp::InitAsDefaultInstance() {
  record_ = const_cast< ::msg_event::NoticeS*>(&::msg_event::NoticeS::default_instance());
}

GetNotifyConfigResp::GetNotifyConfigResp(const GetNotifyConfigResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.GetNotifyConfigResp)
}

void GetNotifyConfigResp::SharedCtor() {
  _cached_size_ = 0;
  record_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetNotifyConfigResp::~GetNotifyConfigResp() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.GetNotifyConfigResp)
  SharedDtor();
}

void GetNotifyConfigResp::SharedDtor() {
  if (this != default_instance_) {
    delete record_;
  }
}

void GetNotifyConfigResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetNotifyConfigResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetNotifyConfigResp_descriptor_;
}

const GetNotifyConfigResp& GetNotifyConfigResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5flog_2eproto();
  return *default_instance_;
}

GetNotifyConfigResp* GetNotifyConfigResp::default_instance_ = NULL;

GetNotifyConfigResp* GetNotifyConfigResp::New(::google::protobuf::Arena* arena) const {
  GetNotifyConfigResp* n = new GetNotifyConfigResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetNotifyConfigResp::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.GetNotifyConfigResp)
  if (has_record()) {
    if (record_ != NULL) record_->::msg_event::NoticeS::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GetNotifyConfigResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.GetNotifyConfigResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .msg_event.NoticeS record = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_record()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.GetNotifyConfigResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.GetNotifyConfigResp)
  return false;
#undef DO_
}

void GetNotifyConfigResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.GetNotifyConfigResp)
  // optional .msg_event.NoticeS record = 1;
  if (has_record()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->record_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.GetNotifyConfigResp)
}

::google::protobuf::uint8* GetNotifyConfigResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.GetNotifyConfigResp)
  // optional .msg_event.NoticeS record = 1;
  if (has_record()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->record_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.GetNotifyConfigResp)
  return target;
}

int GetNotifyConfigResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.GetNotifyConfigResp)
  int total_size = 0;

  // optional .msg_event.NoticeS record = 1;
  if (has_record()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->record_);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetNotifyConfigResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.GetNotifyConfigResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetNotifyConfigResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetNotifyConfigResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.GetNotifyConfigResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.GetNotifyConfigResp)
    MergeFrom(*source);
  }
}

void GetNotifyConfigResp::MergeFrom(const GetNotifyConfigResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.GetNotifyConfigResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_record()) {
      mutable_record()->::msg_event::NoticeS::MergeFrom(from.record());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void GetNotifyConfigResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.GetNotifyConfigResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetNotifyConfigResp::CopyFrom(const GetNotifyConfigResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.GetNotifyConfigResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetNotifyConfigResp::IsInitialized() const {

  if (has_record()) {
    if (!this->record_->IsInitialized()) return false;
  }
  return true;
}

void GetNotifyConfigResp::Swap(GetNotifyConfigResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetNotifyConfigResp::InternalSwap(GetNotifyConfigResp* other) {
  std::swap(record_, other->record_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetNotifyConfigResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetNotifyConfigResp_descriptor_;
  metadata.reflection = GetNotifyConfigResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetNotifyConfigResp

// optional .msg_event.NoticeS record = 1;
bool GetNotifyConfigResp::has_record() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetNotifyConfigResp::set_has_record() {
  _has_bits_[0] |= 0x00000001u;
}
void GetNotifyConfigResp::clear_has_record() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetNotifyConfigResp::clear_record() {
  if (record_ != NULL) record_->::msg_event::NoticeS::Clear();
  clear_has_record();
}
const ::msg_event::NoticeS& GetNotifyConfigResp::record() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.GetNotifyConfigResp.record)
  return record_ != NULL ? *record_ : *default_instance_->record_;
}
::msg_event::NoticeS* GetNotifyConfigResp::mutable_record() {
  set_has_record();
  if (record_ == NULL) {
    record_ = new ::msg_event::NoticeS;
  }
  // @@protoc_insertion_point(field_mutable:fogs.proto.msg.GetNotifyConfigResp.record)
  return record_;
}
::msg_event::NoticeS* GetNotifyConfigResp::release_record() {
  // @@protoc_insertion_point(field_release:fogs.proto.msg.GetNotifyConfigResp.record)
  clear_has_record();
  ::msg_event::NoticeS* temp = record_;
  record_ = NULL;
  return temp;
}
void GetNotifyConfigResp::set_allocated_record(::msg_event::NoticeS* record) {
  delete record_;
  record_ = record;
  if (record) {
    set_has_record();
  } else {
    clear_has_record();
  }
  // @@protoc_insertion_point(field_set_allocated:fogs.proto.msg.GetNotifyConfigResp.record)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetRoomSetConfigReq::GetRoomSetConfigReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.GetRoomSetConfigReq)
}

void GetRoomSetConfigReq::InitAsDefaultInstance() {
}

GetRoomSetConfigReq::GetRoomSetConfigReq(const GetRoomSetConfigReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.GetRoomSetConfigReq)
}

void GetRoomSetConfigReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetRoomSetConfigReq::~GetRoomSetConfigReq() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.GetRoomSetConfigReq)
  SharedDtor();
}

void GetRoomSetConfigReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetRoomSetConfigReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetRoomSetConfigReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetRoomSetConfigReq_descriptor_;
}

const GetRoomSetConfigReq& GetRoomSetConfigReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5flog_2eproto();
  return *default_instance_;
}

GetRoomSetConfigReq* GetRoomSetConfigReq::default_instance_ = NULL;

GetRoomSetConfigReq* GetRoomSetConfigReq::New(::google::protobuf::Arena* arena) const {
  GetRoomSetConfigReq* n = new GetRoomSetConfigReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetRoomSetConfigReq::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.GetRoomSetConfigReq)
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GetRoomSetConfigReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.GetRoomSetConfigReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.GetRoomSetConfigReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.GetRoomSetConfigReq)
  return false;
#undef DO_
}

void GetRoomSetConfigReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.GetRoomSetConfigReq)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.GetRoomSetConfigReq)
}

::google::protobuf::uint8* GetRoomSetConfigReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.GetRoomSetConfigReq)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.GetRoomSetConfigReq)
  return target;
}

int GetRoomSetConfigReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.GetRoomSetConfigReq)
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetRoomSetConfigReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.GetRoomSetConfigReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetRoomSetConfigReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetRoomSetConfigReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.GetRoomSetConfigReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.GetRoomSetConfigReq)
    MergeFrom(*source);
  }
}

void GetRoomSetConfigReq::MergeFrom(const GetRoomSetConfigReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.GetRoomSetConfigReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void GetRoomSetConfigReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.GetRoomSetConfigReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRoomSetConfigReq::CopyFrom(const GetRoomSetConfigReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.GetRoomSetConfigReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRoomSetConfigReq::IsInitialized() const {

  return true;
}

void GetRoomSetConfigReq::Swap(GetRoomSetConfigReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetRoomSetConfigReq::InternalSwap(GetRoomSetConfigReq* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetRoomSetConfigReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetRoomSetConfigReq_descriptor_;
  metadata.reflection = GetRoomSetConfigReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetRoomSetConfigReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetRoomSetConfigResp::kStartRobotFieldNumber;
const int GetRoomSetConfigResp::kLimitTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetRoomSetConfigResp::GetRoomSetConfigResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.GetRoomSetConfigResp)
}

void GetRoomSetConfigResp::InitAsDefaultInstance() {
}

GetRoomSetConfigResp::GetRoomSetConfigResp(const GetRoomSetConfigResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.GetRoomSetConfigResp)
}

void GetRoomSetConfigResp::SharedCtor() {
  _cached_size_ = 0;
  start_robot_ = 0;
  limit_time_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetRoomSetConfigResp::~GetRoomSetConfigResp() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.GetRoomSetConfigResp)
  SharedDtor();
}

void GetRoomSetConfigResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetRoomSetConfigResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetRoomSetConfigResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetRoomSetConfigResp_descriptor_;
}

const GetRoomSetConfigResp& GetRoomSetConfigResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5flog_2eproto();
  return *default_instance_;
}

GetRoomSetConfigResp* GetRoomSetConfigResp::default_instance_ = NULL;

GetRoomSetConfigResp* GetRoomSetConfigResp::New(::google::protobuf::Arena* arena) const {
  GetRoomSetConfigResp* n = new GetRoomSetConfigResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetRoomSetConfigResp::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.GetRoomSetConfigResp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(GetRoomSetConfigResp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<GetRoomSetConfigResp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(start_robot_, limit_time_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GetRoomSetConfigResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.GetRoomSetConfigResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 start_robot = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &start_robot_)));
          set_has_start_robot();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_limit_time;
        break;
      }

      // optional int32 limit_time = 2;
      case 2: {
        if (tag == 16) {
         parse_limit_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &limit_time_)));
          set_has_limit_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.GetRoomSetConfigResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.GetRoomSetConfigResp)
  return false;
#undef DO_
}

void GetRoomSetConfigResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.GetRoomSetConfigResp)
  // optional int32 start_robot = 1;
  if (has_start_robot()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->start_robot(), output);
  }

  // optional int32 limit_time = 2;
  if (has_limit_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->limit_time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.GetRoomSetConfigResp)
}

::google::protobuf::uint8* GetRoomSetConfigResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.GetRoomSetConfigResp)
  // optional int32 start_robot = 1;
  if (has_start_robot()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->start_robot(), target);
  }

  // optional int32 limit_time = 2;
  if (has_limit_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->limit_time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.GetRoomSetConfigResp)
  return target;
}

int GetRoomSetConfigResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.GetRoomSetConfigResp)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 start_robot = 1;
    if (has_start_robot()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->start_robot());
    }

    // optional int32 limit_time = 2;
    if (has_limit_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->limit_time());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetRoomSetConfigResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.GetRoomSetConfigResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetRoomSetConfigResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetRoomSetConfigResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.GetRoomSetConfigResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.GetRoomSetConfigResp)
    MergeFrom(*source);
  }
}

void GetRoomSetConfigResp::MergeFrom(const GetRoomSetConfigResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.GetRoomSetConfigResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start_robot()) {
      set_start_robot(from.start_robot());
    }
    if (from.has_limit_time()) {
      set_limit_time(from.limit_time());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void GetRoomSetConfigResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.GetRoomSetConfigResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRoomSetConfigResp::CopyFrom(const GetRoomSetConfigResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.GetRoomSetConfigResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRoomSetConfigResp::IsInitialized() const {

  return true;
}

void GetRoomSetConfigResp::Swap(GetRoomSetConfigResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetRoomSetConfigResp::InternalSwap(GetRoomSetConfigResp* other) {
  std::swap(start_robot_, other->start_robot_);
  std::swap(limit_time_, other->limit_time_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetRoomSetConfigResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetRoomSetConfigResp_descriptor_;
  metadata.reflection = GetRoomSetConfigResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetRoomSetConfigResp

// optional int32 start_robot = 1;
bool GetRoomSetConfigResp::has_start_robot() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetRoomSetConfigResp::set_has_start_robot() {
  _has_bits_[0] |= 0x00000001u;
}
void GetRoomSetConfigResp::clear_has_start_robot() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetRoomSetConfigResp::clear_start_robot() {
  start_robot_ = 0;
  clear_has_start_robot();
}
 ::google::protobuf::int32 GetRoomSetConfigResp::start_robot() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.GetRoomSetConfigResp.start_robot)
  return start_robot_;
}
 void GetRoomSetConfigResp::set_start_robot(::google::protobuf::int32 value) {
  set_has_start_robot();
  start_robot_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.GetRoomSetConfigResp.start_robot)
}

// optional int32 limit_time = 2;
bool GetRoomSetConfigResp::has_limit_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetRoomSetConfigResp::set_has_limit_time() {
  _has_bits_[0] |= 0x00000002u;
}
void GetRoomSetConfigResp::clear_has_limit_time() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetRoomSetConfigResp::clear_limit_time() {
  limit_time_ = 0;
  clear_has_limit_time();
}
 ::google::protobuf::int32 GetRoomSetConfigResp::limit_time() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.GetRoomSetConfigResp.limit_time)
  return limit_time_;
}
 void GetRoomSetConfigResp::set_limit_time(::google::protobuf::int32 value) {
  set_has_limit_time();
  limit_time_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.GetRoomSetConfigResp.limit_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SaveOnlinePlayer::kTimeFieldNumber;
const int SaveOnlinePlayer::kOnlineNumFieldNumber;
const int SaveOnlinePlayer::kRoomcardNumFieldNumber;
const int SaveOnlinePlayer::kInnNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SaveOnlinePlayer::SaveOnlinePlayer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.SaveOnlinePlayer)
}

void SaveOnlinePlayer::InitAsDefaultInstance() {
}

SaveOnlinePlayer::SaveOnlinePlayer(const SaveOnlinePlayer& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.SaveOnlinePlayer)
}

void SaveOnlinePlayer::SharedCtor() {
  _cached_size_ = 0;
  time_ = GOOGLE_ULONGLONG(0);
  online_num_ = 0u;
  roomcard_num_ = 0u;
  inn_num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SaveOnlinePlayer::~SaveOnlinePlayer() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.SaveOnlinePlayer)
  SharedDtor();
}

void SaveOnlinePlayer::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SaveOnlinePlayer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SaveOnlinePlayer::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SaveOnlinePlayer_descriptor_;
}

const SaveOnlinePlayer& SaveOnlinePlayer::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5flog_2eproto();
  return *default_instance_;
}

SaveOnlinePlayer* SaveOnlinePlayer::default_instance_ = NULL;

SaveOnlinePlayer* SaveOnlinePlayer::New(::google::protobuf::Arena* arena) const {
  SaveOnlinePlayer* n = new SaveOnlinePlayer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SaveOnlinePlayer::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.SaveOnlinePlayer)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(SaveOnlinePlayer, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SaveOnlinePlayer*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(time_, inn_num_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SaveOnlinePlayer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.SaveOnlinePlayer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 time = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &time_)));
          set_has_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_online_num;
        break;
      }

      // optional uint32 online_num = 2;
      case 2: {
        if (tag == 16) {
         parse_online_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &online_num_)));
          set_has_online_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_roomcard_num;
        break;
      }

      // optional uint32 roomcard_num = 3;
      case 3: {
        if (tag == 24) {
         parse_roomcard_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &roomcard_num_)));
          set_has_roomcard_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_inn_num;
        break;
      }

      // optional uint32 inn_num = 4;
      case 4: {
        if (tag == 32) {
         parse_inn_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &inn_num_)));
          set_has_inn_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.SaveOnlinePlayer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.SaveOnlinePlayer)
  return false;
#undef DO_
}

void SaveOnlinePlayer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.SaveOnlinePlayer)
  // optional uint64 time = 1;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->time(), output);
  }

  // optional uint32 online_num = 2;
  if (has_online_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->online_num(), output);
  }

  // optional uint32 roomcard_num = 3;
  if (has_roomcard_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->roomcard_num(), output);
  }

  // optional uint32 inn_num = 4;
  if (has_inn_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->inn_num(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.SaveOnlinePlayer)
}

::google::protobuf::uint8* SaveOnlinePlayer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.SaveOnlinePlayer)
  // optional uint64 time = 1;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->time(), target);
  }

  // optional uint32 online_num = 2;
  if (has_online_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->online_num(), target);
  }

  // optional uint32 roomcard_num = 3;
  if (has_roomcard_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->roomcard_num(), target);
  }

  // optional uint32 inn_num = 4;
  if (has_inn_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->inn_num(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.SaveOnlinePlayer)
  return target;
}

int SaveOnlinePlayer::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.SaveOnlinePlayer)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 15u) {
    // optional uint64 time = 1;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->time());
    }

    // optional uint32 online_num = 2;
    if (has_online_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->online_num());
    }

    // optional uint32 roomcard_num = 3;
    if (has_roomcard_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->roomcard_num());
    }

    // optional uint32 inn_num = 4;
    if (has_inn_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->inn_num());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SaveOnlinePlayer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.SaveOnlinePlayer)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SaveOnlinePlayer* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SaveOnlinePlayer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.SaveOnlinePlayer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.SaveOnlinePlayer)
    MergeFrom(*source);
  }
}

void SaveOnlinePlayer::MergeFrom(const SaveOnlinePlayer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.SaveOnlinePlayer)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_time()) {
      set_time(from.time());
    }
    if (from.has_online_num()) {
      set_online_num(from.online_num());
    }
    if (from.has_roomcard_num()) {
      set_roomcard_num(from.roomcard_num());
    }
    if (from.has_inn_num()) {
      set_inn_num(from.inn_num());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SaveOnlinePlayer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.SaveOnlinePlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SaveOnlinePlayer::CopyFrom(const SaveOnlinePlayer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.SaveOnlinePlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SaveOnlinePlayer::IsInitialized() const {

  return true;
}

void SaveOnlinePlayer::Swap(SaveOnlinePlayer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SaveOnlinePlayer::InternalSwap(SaveOnlinePlayer* other) {
  std::swap(time_, other->time_);
  std::swap(online_num_, other->online_num_);
  std::swap(roomcard_num_, other->roomcard_num_);
  std::swap(inn_num_, other->inn_num_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SaveOnlinePlayer::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SaveOnlinePlayer_descriptor_;
  metadata.reflection = SaveOnlinePlayer_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SaveOnlinePlayer

// optional uint64 time = 1;
bool SaveOnlinePlayer::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SaveOnlinePlayer::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
void SaveOnlinePlayer::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
void SaveOnlinePlayer::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
  clear_has_time();
}
 ::google::protobuf::uint64 SaveOnlinePlayer::time() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.SaveOnlinePlayer.time)
  return time_;
}
 void SaveOnlinePlayer::set_time(::google::protobuf::uint64 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.SaveOnlinePlayer.time)
}

// optional uint32 online_num = 2;
bool SaveOnlinePlayer::has_online_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SaveOnlinePlayer::set_has_online_num() {
  _has_bits_[0] |= 0x00000002u;
}
void SaveOnlinePlayer::clear_has_online_num() {
  _has_bits_[0] &= ~0x00000002u;
}
void SaveOnlinePlayer::clear_online_num() {
  online_num_ = 0u;
  clear_has_online_num();
}
 ::google::protobuf::uint32 SaveOnlinePlayer::online_num() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.SaveOnlinePlayer.online_num)
  return online_num_;
}
 void SaveOnlinePlayer::set_online_num(::google::protobuf::uint32 value) {
  set_has_online_num();
  online_num_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.SaveOnlinePlayer.online_num)
}

// optional uint32 roomcard_num = 3;
bool SaveOnlinePlayer::has_roomcard_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SaveOnlinePlayer::set_has_roomcard_num() {
  _has_bits_[0] |= 0x00000004u;
}
void SaveOnlinePlayer::clear_has_roomcard_num() {
  _has_bits_[0] &= ~0x00000004u;
}
void SaveOnlinePlayer::clear_roomcard_num() {
  roomcard_num_ = 0u;
  clear_has_roomcard_num();
}
 ::google::protobuf::uint32 SaveOnlinePlayer::roomcard_num() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.SaveOnlinePlayer.roomcard_num)
  return roomcard_num_;
}
 void SaveOnlinePlayer::set_roomcard_num(::google::protobuf::uint32 value) {
  set_has_roomcard_num();
  roomcard_num_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.SaveOnlinePlayer.roomcard_num)
}

// optional uint32 inn_num = 4;
bool SaveOnlinePlayer::has_inn_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SaveOnlinePlayer::set_has_inn_num() {
  _has_bits_[0] |= 0x00000008u;
}
void SaveOnlinePlayer::clear_has_inn_num() {
  _has_bits_[0] &= ~0x00000008u;
}
void SaveOnlinePlayer::clear_inn_num() {
  inn_num_ = 0u;
  clear_has_inn_num();
}
 ::google::protobuf::uint32 SaveOnlinePlayer::inn_num() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.SaveOnlinePlayer.inn_num)
  return inn_num_;
}
 void SaveOnlinePlayer::set_inn_num(::google::protobuf::uint32 value) {
  set_has_inn_num();
  inn_num_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.SaveOnlinePlayer.inn_num)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoomOptionCreate::kIdFieldNumber;
const int RoomOptionCreate::kGameidFieldNumber;
const int RoomOptionCreate::kRoomNoFieldNumber;
const int RoomOptionCreate::kCreateTimeFieldNumber;
const int RoomOptionCreate::kStartTimeFieldNumber;
const int RoomOptionCreate::kEndTimeFieldNumber;
const int RoomOptionCreate::kPlayTypeFieldNumber;
const int RoomOptionCreate::kPersonTypeFieldNumber;
const int RoomOptionCreate::kPayTypeFieldNumber;
const int RoomOptionCreate::kJushuTypeFieldNumber;
const int RoomOptionCreate::kScoreTypeFieldNumber;
const int RoomOptionCreate::kTopTypeFieldNumber;
const int RoomOptionCreate::kMaimaTypeFieldNumber;
const int RoomOptionCreate::kWanfavalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoomOptionCreate::RoomOptionCreate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.RoomOptionCreate)
}

void RoomOptionCreate::InitAsDefaultInstance() {
}

RoomOptionCreate::RoomOptionCreate(const RoomOptionCreate& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.RoomOptionCreate)
}

void RoomOptionCreate::SharedCtor() {
  _cached_size_ = 0;
  id_ = GOOGLE_ULONGLONG(0);
  gameid_ = GOOGLE_ULONGLONG(0);
  room_no_ = 0u;
  create_time_ = GOOGLE_ULONGLONG(0);
  start_time_ = GOOGLE_ULONGLONG(0);
  end_time_ = GOOGLE_ULONGLONG(0);
  play_type_ = 0u;
  person_type_ = 0u;
  pay_type_ = 0u;
  jushu_type_ = 0u;
  score_type_ = 0u;
  top_type_ = 0u;
  maima_type_ = 0u;
  wanfaval_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RoomOptionCreate::~RoomOptionCreate() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.RoomOptionCreate)
  SharedDtor();
}

void RoomOptionCreate::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RoomOptionCreate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoomOptionCreate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoomOptionCreate_descriptor_;
}

const RoomOptionCreate& RoomOptionCreate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5flog_2eproto();
  return *default_instance_;
}

RoomOptionCreate* RoomOptionCreate::default_instance_ = NULL;

RoomOptionCreate* RoomOptionCreate::New(::google::protobuf::Arena* arena) const {
  RoomOptionCreate* n = new RoomOptionCreate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoomOptionCreate::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.RoomOptionCreate)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(RoomOptionCreate, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<RoomOptionCreate*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(id_, person_type_);
  }
  if (_has_bits_[8 / 32] & 16128u) {
    ZR_(pay_type_, wanfaval_);
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RoomOptionCreate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.RoomOptionCreate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_gameid;
        break;
      }

      // optional uint64 gameid = 2;
      case 2: {
        if (tag == 16) {
         parse_gameid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gameid_)));
          set_has_gameid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_room_no;
        break;
      }

      // optional uint32 room_no = 3;
      case 3: {
        if (tag == 24) {
         parse_room_no:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &room_no_)));
          set_has_room_no();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_create_time;
        break;
      }

      // optional uint64 create_time = 4;
      case 4: {
        if (tag == 32) {
         parse_create_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &create_time_)));
          set_has_create_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_start_time;
        break;
      }

      // optional uint64 start_time = 5;
      case 5: {
        if (tag == 40) {
         parse_start_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_end_time;
        break;
      }

      // optional uint64 end_time = 6;
      case 6: {
        if (tag == 48) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_play_type;
        break;
      }

      // optional uint32 play_type = 7;
      case 7: {
        if (tag == 56) {
         parse_play_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &play_type_)));
          set_has_play_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_person_type;
        break;
      }

      // optional uint32 person_type = 8;
      case 8: {
        if (tag == 64) {
         parse_person_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &person_type_)));
          set_has_person_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_pay_type;
        break;
      }

      // optional uint32 pay_type = 9;
      case 9: {
        if (tag == 72) {
         parse_pay_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pay_type_)));
          set_has_pay_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_jushu_type;
        break;
      }

      // optional uint32 jushu_type = 10;
      case 10: {
        if (tag == 80) {
         parse_jushu_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &jushu_type_)));
          set_has_jushu_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_score_type;
        break;
      }

      // optional uint32 score_type = 11;
      case 11: {
        if (tag == 88) {
         parse_score_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &score_type_)));
          set_has_score_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_top_type;
        break;
      }

      // optional uint32 top_type = 12;
      case 12: {
        if (tag == 96) {
         parse_top_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &top_type_)));
          set_has_top_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_maima_type;
        break;
      }

      // optional uint32 maima_type = 13;
      case 13: {
        if (tag == 104) {
         parse_maima_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maima_type_)));
          set_has_maima_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_wanfaval;
        break;
      }

      // optional uint32 wanfaval = 14;
      case 14: {
        if (tag == 112) {
         parse_wanfaval:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &wanfaval_)));
          set_has_wanfaval();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.RoomOptionCreate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.RoomOptionCreate)
  return false;
#undef DO_
}

void RoomOptionCreate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.RoomOptionCreate)
  // optional uint64 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // optional uint64 gameid = 2;
  if (has_gameid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->gameid(), output);
  }

  // optional uint32 room_no = 3;
  if (has_room_no()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->room_no(), output);
  }

  // optional uint64 create_time = 4;
  if (has_create_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->create_time(), output);
  }

  // optional uint64 start_time = 5;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->start_time(), output);
  }

  // optional uint64 end_time = 6;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->end_time(), output);
  }

  // optional uint32 play_type = 7;
  if (has_play_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->play_type(), output);
  }

  // optional uint32 person_type = 8;
  if (has_person_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->person_type(), output);
  }

  // optional uint32 pay_type = 9;
  if (has_pay_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->pay_type(), output);
  }

  // optional uint32 jushu_type = 10;
  if (has_jushu_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->jushu_type(), output);
  }

  // optional uint32 score_type = 11;
  if (has_score_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->score_type(), output);
  }

  // optional uint32 top_type = 12;
  if (has_top_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->top_type(), output);
  }

  // optional uint32 maima_type = 13;
  if (has_maima_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->maima_type(), output);
  }

  // optional uint32 wanfaval = 14;
  if (has_wanfaval()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->wanfaval(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.RoomOptionCreate)
}

::google::protobuf::uint8* RoomOptionCreate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.RoomOptionCreate)
  // optional uint64 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // optional uint64 gameid = 2;
  if (has_gameid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->gameid(), target);
  }

  // optional uint32 room_no = 3;
  if (has_room_no()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->room_no(), target);
  }

  // optional uint64 create_time = 4;
  if (has_create_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->create_time(), target);
  }

  // optional uint64 start_time = 5;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->start_time(), target);
  }

  // optional uint64 end_time = 6;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->end_time(), target);
  }

  // optional uint32 play_type = 7;
  if (has_play_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->play_type(), target);
  }

  // optional uint32 person_type = 8;
  if (has_person_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->person_type(), target);
  }

  // optional uint32 pay_type = 9;
  if (has_pay_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->pay_type(), target);
  }

  // optional uint32 jushu_type = 10;
  if (has_jushu_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->jushu_type(), target);
  }

  // optional uint32 score_type = 11;
  if (has_score_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->score_type(), target);
  }

  // optional uint32 top_type = 12;
  if (has_top_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->top_type(), target);
  }

  // optional uint32 maima_type = 13;
  if (has_maima_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->maima_type(), target);
  }

  // optional uint32 wanfaval = 14;
  if (has_wanfaval()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->wanfaval(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.RoomOptionCreate)
  return target;
}

int RoomOptionCreate::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.RoomOptionCreate)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional uint64 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->id());
    }

    // optional uint64 gameid = 2;
    if (has_gameid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->gameid());
    }

    // optional uint32 room_no = 3;
    if (has_room_no()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->room_no());
    }

    // optional uint64 create_time = 4;
    if (has_create_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->create_time());
    }

    // optional uint64 start_time = 5;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->start_time());
    }

    // optional uint64 end_time = 6;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->end_time());
    }

    // optional uint32 play_type = 7;
    if (has_play_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->play_type());
    }

    // optional uint32 person_type = 8;
    if (has_person_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->person_type());
    }

  }
  if (_has_bits_[8 / 32] & 16128u) {
    // optional uint32 pay_type = 9;
    if (has_pay_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pay_type());
    }

    // optional uint32 jushu_type = 10;
    if (has_jushu_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->jushu_type());
    }

    // optional uint32 score_type = 11;
    if (has_score_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->score_type());
    }

    // optional uint32 top_type = 12;
    if (has_top_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->top_type());
    }

    // optional uint32 maima_type = 13;
    if (has_maima_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->maima_type());
    }

    // optional uint32 wanfaval = 14;
    if (has_wanfaval()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->wanfaval());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoomOptionCreate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.RoomOptionCreate)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RoomOptionCreate* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RoomOptionCreate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.RoomOptionCreate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.RoomOptionCreate)
    MergeFrom(*source);
  }
}

void RoomOptionCreate::MergeFrom(const RoomOptionCreate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.RoomOptionCreate)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_gameid()) {
      set_gameid(from.gameid());
    }
    if (from.has_room_no()) {
      set_room_no(from.room_no());
    }
    if (from.has_create_time()) {
      set_create_time(from.create_time());
    }
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
    if (from.has_play_type()) {
      set_play_type(from.play_type());
    }
    if (from.has_person_type()) {
      set_person_type(from.person_type());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_pay_type()) {
      set_pay_type(from.pay_type());
    }
    if (from.has_jushu_type()) {
      set_jushu_type(from.jushu_type());
    }
    if (from.has_score_type()) {
      set_score_type(from.score_type());
    }
    if (from.has_top_type()) {
      set_top_type(from.top_type());
    }
    if (from.has_maima_type()) {
      set_maima_type(from.maima_type());
    }
    if (from.has_wanfaval()) {
      set_wanfaval(from.wanfaval());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void RoomOptionCreate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.RoomOptionCreate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoomOptionCreate::CopyFrom(const RoomOptionCreate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.RoomOptionCreate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoomOptionCreate::IsInitialized() const {

  return true;
}

void RoomOptionCreate::Swap(RoomOptionCreate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoomOptionCreate::InternalSwap(RoomOptionCreate* other) {
  std::swap(id_, other->id_);
  std::swap(gameid_, other->gameid_);
  std::swap(room_no_, other->room_no_);
  std::swap(create_time_, other->create_time_);
  std::swap(start_time_, other->start_time_);
  std::swap(end_time_, other->end_time_);
  std::swap(play_type_, other->play_type_);
  std::swap(person_type_, other->person_type_);
  std::swap(pay_type_, other->pay_type_);
  std::swap(jushu_type_, other->jushu_type_);
  std::swap(score_type_, other->score_type_);
  std::swap(top_type_, other->top_type_);
  std::swap(maima_type_, other->maima_type_);
  std::swap(wanfaval_, other->wanfaval_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoomOptionCreate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RoomOptionCreate_descriptor_;
  metadata.reflection = RoomOptionCreate_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoomOptionCreate

// optional uint64 id = 1;
bool RoomOptionCreate::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RoomOptionCreate::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void RoomOptionCreate::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void RoomOptionCreate::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
 ::google::protobuf::uint64 RoomOptionCreate::id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.RoomOptionCreate.id)
  return id_;
}
 void RoomOptionCreate::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.RoomOptionCreate.id)
}

// optional uint64 gameid = 2;
bool RoomOptionCreate::has_gameid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RoomOptionCreate::set_has_gameid() {
  _has_bits_[0] |= 0x00000002u;
}
void RoomOptionCreate::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000002u;
}
void RoomOptionCreate::clear_gameid() {
  gameid_ = GOOGLE_ULONGLONG(0);
  clear_has_gameid();
}
 ::google::protobuf::uint64 RoomOptionCreate::gameid() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.RoomOptionCreate.gameid)
  return gameid_;
}
 void RoomOptionCreate::set_gameid(::google::protobuf::uint64 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.RoomOptionCreate.gameid)
}

// optional uint32 room_no = 3;
bool RoomOptionCreate::has_room_no() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void RoomOptionCreate::set_has_room_no() {
  _has_bits_[0] |= 0x00000004u;
}
void RoomOptionCreate::clear_has_room_no() {
  _has_bits_[0] &= ~0x00000004u;
}
void RoomOptionCreate::clear_room_no() {
  room_no_ = 0u;
  clear_has_room_no();
}
 ::google::protobuf::uint32 RoomOptionCreate::room_no() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.RoomOptionCreate.room_no)
  return room_no_;
}
 void RoomOptionCreate::set_room_no(::google::protobuf::uint32 value) {
  set_has_room_no();
  room_no_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.RoomOptionCreate.room_no)
}

// optional uint64 create_time = 4;
bool RoomOptionCreate::has_create_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void RoomOptionCreate::set_has_create_time() {
  _has_bits_[0] |= 0x00000008u;
}
void RoomOptionCreate::clear_has_create_time() {
  _has_bits_[0] &= ~0x00000008u;
}
void RoomOptionCreate::clear_create_time() {
  create_time_ = GOOGLE_ULONGLONG(0);
  clear_has_create_time();
}
 ::google::protobuf::uint64 RoomOptionCreate::create_time() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.RoomOptionCreate.create_time)
  return create_time_;
}
 void RoomOptionCreate::set_create_time(::google::protobuf::uint64 value) {
  set_has_create_time();
  create_time_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.RoomOptionCreate.create_time)
}

// optional uint64 start_time = 5;
bool RoomOptionCreate::has_start_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void RoomOptionCreate::set_has_start_time() {
  _has_bits_[0] |= 0x00000010u;
}
void RoomOptionCreate::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000010u;
}
void RoomOptionCreate::clear_start_time() {
  start_time_ = GOOGLE_ULONGLONG(0);
  clear_has_start_time();
}
 ::google::protobuf::uint64 RoomOptionCreate::start_time() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.RoomOptionCreate.start_time)
  return start_time_;
}
 void RoomOptionCreate::set_start_time(::google::protobuf::uint64 value) {
  set_has_start_time();
  start_time_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.RoomOptionCreate.start_time)
}

// optional uint64 end_time = 6;
bool RoomOptionCreate::has_end_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void RoomOptionCreate::set_has_end_time() {
  _has_bits_[0] |= 0x00000020u;
}
void RoomOptionCreate::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000020u;
}
void RoomOptionCreate::clear_end_time() {
  end_time_ = GOOGLE_ULONGLONG(0);
  clear_has_end_time();
}
 ::google::protobuf::uint64 RoomOptionCreate::end_time() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.RoomOptionCreate.end_time)
  return end_time_;
}
 void RoomOptionCreate::set_end_time(::google::protobuf::uint64 value) {
  set_has_end_time();
  end_time_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.RoomOptionCreate.end_time)
}

// optional uint32 play_type = 7;
bool RoomOptionCreate::has_play_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void RoomOptionCreate::set_has_play_type() {
  _has_bits_[0] |= 0x00000040u;
}
void RoomOptionCreate::clear_has_play_type() {
  _has_bits_[0] &= ~0x00000040u;
}
void RoomOptionCreate::clear_play_type() {
  play_type_ = 0u;
  clear_has_play_type();
}
 ::google::protobuf::uint32 RoomOptionCreate::play_type() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.RoomOptionCreate.play_type)
  return play_type_;
}
 void RoomOptionCreate::set_play_type(::google::protobuf::uint32 value) {
  set_has_play_type();
  play_type_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.RoomOptionCreate.play_type)
}

// optional uint32 person_type = 8;
bool RoomOptionCreate::has_person_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void RoomOptionCreate::set_has_person_type() {
  _has_bits_[0] |= 0x00000080u;
}
void RoomOptionCreate::clear_has_person_type() {
  _has_bits_[0] &= ~0x00000080u;
}
void RoomOptionCreate::clear_person_type() {
  person_type_ = 0u;
  clear_has_person_type();
}
 ::google::protobuf::uint32 RoomOptionCreate::person_type() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.RoomOptionCreate.person_type)
  return person_type_;
}
 void RoomOptionCreate::set_person_type(::google::protobuf::uint32 value) {
  set_has_person_type();
  person_type_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.RoomOptionCreate.person_type)
}

// optional uint32 pay_type = 9;
bool RoomOptionCreate::has_pay_type() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void RoomOptionCreate::set_has_pay_type() {
  _has_bits_[0] |= 0x00000100u;
}
void RoomOptionCreate::clear_has_pay_type() {
  _has_bits_[0] &= ~0x00000100u;
}
void RoomOptionCreate::clear_pay_type() {
  pay_type_ = 0u;
  clear_has_pay_type();
}
 ::google::protobuf::uint32 RoomOptionCreate::pay_type() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.RoomOptionCreate.pay_type)
  return pay_type_;
}
 void RoomOptionCreate::set_pay_type(::google::protobuf::uint32 value) {
  set_has_pay_type();
  pay_type_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.RoomOptionCreate.pay_type)
}

// optional uint32 jushu_type = 10;
bool RoomOptionCreate::has_jushu_type() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void RoomOptionCreate::set_has_jushu_type() {
  _has_bits_[0] |= 0x00000200u;
}
void RoomOptionCreate::clear_has_jushu_type() {
  _has_bits_[0] &= ~0x00000200u;
}
void RoomOptionCreate::clear_jushu_type() {
  jushu_type_ = 0u;
  clear_has_jushu_type();
}
 ::google::protobuf::uint32 RoomOptionCreate::jushu_type() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.RoomOptionCreate.jushu_type)
  return jushu_type_;
}
 void RoomOptionCreate::set_jushu_type(::google::protobuf::uint32 value) {
  set_has_jushu_type();
  jushu_type_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.RoomOptionCreate.jushu_type)
}

// optional uint32 score_type = 11;
bool RoomOptionCreate::has_score_type() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void RoomOptionCreate::set_has_score_type() {
  _has_bits_[0] |= 0x00000400u;
}
void RoomOptionCreate::clear_has_score_type() {
  _has_bits_[0] &= ~0x00000400u;
}
void RoomOptionCreate::clear_score_type() {
  score_type_ = 0u;
  clear_has_score_type();
}
 ::google::protobuf::uint32 RoomOptionCreate::score_type() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.RoomOptionCreate.score_type)
  return score_type_;
}
 void RoomOptionCreate::set_score_type(::google::protobuf::uint32 value) {
  set_has_score_type();
  score_type_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.RoomOptionCreate.score_type)
}

// optional uint32 top_type = 12;
bool RoomOptionCreate::has_top_type() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void RoomOptionCreate::set_has_top_type() {
  _has_bits_[0] |= 0x00000800u;
}
void RoomOptionCreate::clear_has_top_type() {
  _has_bits_[0] &= ~0x00000800u;
}
void RoomOptionCreate::clear_top_type() {
  top_type_ = 0u;
  clear_has_top_type();
}
 ::google::protobuf::uint32 RoomOptionCreate::top_type() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.RoomOptionCreate.top_type)
  return top_type_;
}
 void RoomOptionCreate::set_top_type(::google::protobuf::uint32 value) {
  set_has_top_type();
  top_type_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.RoomOptionCreate.top_type)
}

// optional uint32 maima_type = 13;
bool RoomOptionCreate::has_maima_type() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void RoomOptionCreate::set_has_maima_type() {
  _has_bits_[0] |= 0x00001000u;
}
void RoomOptionCreate::clear_has_maima_type() {
  _has_bits_[0] &= ~0x00001000u;
}
void RoomOptionCreate::clear_maima_type() {
  maima_type_ = 0u;
  clear_has_maima_type();
}
 ::google::protobuf::uint32 RoomOptionCreate::maima_type() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.RoomOptionCreate.maima_type)
  return maima_type_;
}
 void RoomOptionCreate::set_maima_type(::google::protobuf::uint32 value) {
  set_has_maima_type();
  maima_type_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.RoomOptionCreate.maima_type)
}

// optional uint32 wanfaval = 14;
bool RoomOptionCreate::has_wanfaval() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void RoomOptionCreate::set_has_wanfaval() {
  _has_bits_[0] |= 0x00002000u;
}
void RoomOptionCreate::clear_has_wanfaval() {
  _has_bits_[0] &= ~0x00002000u;
}
void RoomOptionCreate::clear_wanfaval() {
  wanfaval_ = 0u;
  clear_has_wanfaval();
}
 ::google::protobuf::uint32 RoomOptionCreate::wanfaval() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.RoomOptionCreate.wanfaval)
  return wanfaval_;
}
 void RoomOptionCreate::set_wanfaval(::google::protobuf::uint32 value) {
  set_has_wanfaval();
  wanfaval_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.RoomOptionCreate.wanfaval)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoomOptionEnd::kIdFieldNumber;
const int RoomOptionEnd::kEndTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoomOptionEnd::RoomOptionEnd()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.RoomOptionEnd)
}

void RoomOptionEnd::InitAsDefaultInstance() {
}

RoomOptionEnd::RoomOptionEnd(const RoomOptionEnd& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.RoomOptionEnd)
}

void RoomOptionEnd::SharedCtor() {
  _cached_size_ = 0;
  id_ = GOOGLE_ULONGLONG(0);
  end_time_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RoomOptionEnd::~RoomOptionEnd() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.RoomOptionEnd)
  SharedDtor();
}

void RoomOptionEnd::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RoomOptionEnd::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoomOptionEnd::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoomOptionEnd_descriptor_;
}

const RoomOptionEnd& RoomOptionEnd::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5flog_2eproto();
  return *default_instance_;
}

RoomOptionEnd* RoomOptionEnd::default_instance_ = NULL;

RoomOptionEnd* RoomOptionEnd::New(::google::protobuf::Arena* arena) const {
  RoomOptionEnd* n = new RoomOptionEnd;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoomOptionEnd::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.RoomOptionEnd)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(RoomOptionEnd, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<RoomOptionEnd*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(id_, end_time_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RoomOptionEnd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.RoomOptionEnd)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_end_time;
        break;
      }

      // optional uint64 end_time = 2;
      case 2: {
        if (tag == 16) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.RoomOptionEnd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.RoomOptionEnd)
  return false;
#undef DO_
}

void RoomOptionEnd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.RoomOptionEnd)
  // optional uint64 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // optional uint64 end_time = 2;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->end_time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.RoomOptionEnd)
}

::google::protobuf::uint8* RoomOptionEnd::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.RoomOptionEnd)
  // optional uint64 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // optional uint64 end_time = 2;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->end_time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.RoomOptionEnd)
  return target;
}

int RoomOptionEnd::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.RoomOptionEnd)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->id());
    }

    // optional uint64 end_time = 2;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->end_time());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoomOptionEnd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.RoomOptionEnd)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RoomOptionEnd* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RoomOptionEnd>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.RoomOptionEnd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.RoomOptionEnd)
    MergeFrom(*source);
  }
}

void RoomOptionEnd::MergeFrom(const RoomOptionEnd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.RoomOptionEnd)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void RoomOptionEnd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.RoomOptionEnd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoomOptionEnd::CopyFrom(const RoomOptionEnd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.RoomOptionEnd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoomOptionEnd::IsInitialized() const {

  return true;
}

void RoomOptionEnd::Swap(RoomOptionEnd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoomOptionEnd::InternalSwap(RoomOptionEnd* other) {
  std::swap(id_, other->id_);
  std::swap(end_time_, other->end_time_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoomOptionEnd::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RoomOptionEnd_descriptor_;
  metadata.reflection = RoomOptionEnd_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoomOptionEnd

// optional uint64 id = 1;
bool RoomOptionEnd::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RoomOptionEnd::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void RoomOptionEnd::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void RoomOptionEnd::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
 ::google::protobuf::uint64 RoomOptionEnd::id() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.RoomOptionEnd.id)
  return id_;
}
 void RoomOptionEnd::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.RoomOptionEnd.id)
}

// optional uint64 end_time = 2;
bool RoomOptionEnd::has_end_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RoomOptionEnd::set_has_end_time() {
  _has_bits_[0] |= 0x00000002u;
}
void RoomOptionEnd::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000002u;
}
void RoomOptionEnd::clear_end_time() {
  end_time_ = GOOGLE_ULONGLONG(0);
  clear_has_end_time();
}
 ::google::protobuf::uint64 RoomOptionEnd::end_time() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.RoomOptionEnd.end_time)
  return end_time_;
}
 void RoomOptionEnd::set_end_time(::google::protobuf::uint64 value) {
  set_has_end_time();
  end_time_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.RoomOptionEnd.end_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoomCloseLog::kRoomNoFieldNumber;
const int RoomCloseLog::kRoomHostFieldNumber;
const int RoomCloseLog::kCloseTypeFieldNumber;
const int RoomCloseLog::kCloseTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoomCloseLog::RoomCloseLog()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.RoomCloseLog)
}

void RoomCloseLog::InitAsDefaultInstance() {
}

RoomCloseLog::RoomCloseLog(const RoomCloseLog& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.RoomCloseLog)
}

void RoomCloseLog::SharedCtor() {
  _cached_size_ = 0;
  room_no_ = 0u;
  room_host_ = 0u;
  close_type_ = 0u;
  close_time_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RoomCloseLog::~RoomCloseLog() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.RoomCloseLog)
  SharedDtor();
}

void RoomCloseLog::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RoomCloseLog::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoomCloseLog::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoomCloseLog_descriptor_;
}

const RoomCloseLog& RoomCloseLog::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5flog_2eproto();
  return *default_instance_;
}

RoomCloseLog* RoomCloseLog::default_instance_ = NULL;

RoomCloseLog* RoomCloseLog::New(::google::protobuf::Arena* arena) const {
  RoomCloseLog* n = new RoomCloseLog;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoomCloseLog::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.RoomCloseLog)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(RoomCloseLog, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<RoomCloseLog*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(room_no_, close_type_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RoomCloseLog::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.RoomCloseLog)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 room_no = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &room_no_)));
          set_has_room_no();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_room_host;
        break;
      }

      // required uint32 room_host = 2;
      case 2: {
        if (tag == 16) {
         parse_room_host:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &room_host_)));
          set_has_room_host();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_close_type;
        break;
      }

      // required uint32 close_type = 3;
      case 3: {
        if (tag == 24) {
         parse_close_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &close_type_)));
          set_has_close_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_close_time;
        break;
      }

      // required uint64 close_time = 4;
      case 4: {
        if (tag == 32) {
         parse_close_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &close_time_)));
          set_has_close_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.RoomCloseLog)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.RoomCloseLog)
  return false;
#undef DO_
}

void RoomCloseLog::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.RoomCloseLog)
  // required uint32 room_no = 1;
  if (has_room_no()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->room_no(), output);
  }

  // required uint32 room_host = 2;
  if (has_room_host()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->room_host(), output);
  }

  // required uint32 close_type = 3;
  if (has_close_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->close_type(), output);
  }

  // required uint64 close_time = 4;
  if (has_close_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->close_time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.RoomCloseLog)
}

::google::protobuf::uint8* RoomCloseLog::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.RoomCloseLog)
  // required uint32 room_no = 1;
  if (has_room_no()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->room_no(), target);
  }

  // required uint32 room_host = 2;
  if (has_room_host()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->room_host(), target);
  }

  // required uint32 close_type = 3;
  if (has_close_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->close_type(), target);
  }

  // required uint64 close_time = 4;
  if (has_close_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->close_time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.RoomCloseLog)
  return target;
}

int RoomCloseLog::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:fogs.proto.msg.RoomCloseLog)
  int total_size = 0;

  if (has_room_no()) {
    // required uint32 room_no = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->room_no());
  }

  if (has_room_host()) {
    // required uint32 room_host = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->room_host());
  }

  if (has_close_type()) {
    // required uint32 close_type = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->close_type());
  }

  if (has_close_time()) {
    // required uint64 close_time = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->close_time());
  }

  return total_size;
}
int RoomCloseLog::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.RoomCloseLog)
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required uint32 room_no = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->room_no());

    // required uint32 room_host = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->room_host());

    // required uint32 close_type = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->close_type());

    // required uint64 close_time = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->close_time());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoomCloseLog::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.RoomCloseLog)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RoomCloseLog* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RoomCloseLog>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.RoomCloseLog)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.RoomCloseLog)
    MergeFrom(*source);
  }
}

void RoomCloseLog::MergeFrom(const RoomCloseLog& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.RoomCloseLog)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_room_no()) {
      set_room_no(from.room_no());
    }
    if (from.has_room_host()) {
      set_room_host(from.room_host());
    }
    if (from.has_close_type()) {
      set_close_type(from.close_type());
    }
    if (from.has_close_time()) {
      set_close_time(from.close_time());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void RoomCloseLog::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.RoomCloseLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoomCloseLog::CopyFrom(const RoomCloseLog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.RoomCloseLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoomCloseLog::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void RoomCloseLog::Swap(RoomCloseLog* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoomCloseLog::InternalSwap(RoomCloseLog* other) {
  std::swap(room_no_, other->room_no_);
  std::swap(room_host_, other->room_host_);
  std::swap(close_type_, other->close_type_);
  std::swap(close_time_, other->close_time_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoomCloseLog::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RoomCloseLog_descriptor_;
  metadata.reflection = RoomCloseLog_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoomCloseLog

// required uint32 room_no = 1;
bool RoomCloseLog::has_room_no() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RoomCloseLog::set_has_room_no() {
  _has_bits_[0] |= 0x00000001u;
}
void RoomCloseLog::clear_has_room_no() {
  _has_bits_[0] &= ~0x00000001u;
}
void RoomCloseLog::clear_room_no() {
  room_no_ = 0u;
  clear_has_room_no();
}
 ::google::protobuf::uint32 RoomCloseLog::room_no() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.RoomCloseLog.room_no)
  return room_no_;
}
 void RoomCloseLog::set_room_no(::google::protobuf::uint32 value) {
  set_has_room_no();
  room_no_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.RoomCloseLog.room_no)
}

// required uint32 room_host = 2;
bool RoomCloseLog::has_room_host() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RoomCloseLog::set_has_room_host() {
  _has_bits_[0] |= 0x00000002u;
}
void RoomCloseLog::clear_has_room_host() {
  _has_bits_[0] &= ~0x00000002u;
}
void RoomCloseLog::clear_room_host() {
  room_host_ = 0u;
  clear_has_room_host();
}
 ::google::protobuf::uint32 RoomCloseLog::room_host() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.RoomCloseLog.room_host)
  return room_host_;
}
 void RoomCloseLog::set_room_host(::google::protobuf::uint32 value) {
  set_has_room_host();
  room_host_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.RoomCloseLog.room_host)
}

// required uint32 close_type = 3;
bool RoomCloseLog::has_close_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void RoomCloseLog::set_has_close_type() {
  _has_bits_[0] |= 0x00000004u;
}
void RoomCloseLog::clear_has_close_type() {
  _has_bits_[0] &= ~0x00000004u;
}
void RoomCloseLog::clear_close_type() {
  close_type_ = 0u;
  clear_has_close_type();
}
 ::google::protobuf::uint32 RoomCloseLog::close_type() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.RoomCloseLog.close_type)
  return close_type_;
}
 void RoomCloseLog::set_close_type(::google::protobuf::uint32 value) {
  set_has_close_type();
  close_type_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.RoomCloseLog.close_type)
}

// required uint64 close_time = 4;
bool RoomCloseLog::has_close_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void RoomCloseLog::set_has_close_time() {
  _has_bits_[0] |= 0x00000008u;
}
void RoomCloseLog::clear_has_close_time() {
  _has_bits_[0] &= ~0x00000008u;
}
void RoomCloseLog::clear_close_time() {
  close_time_ = GOOGLE_ULONGLONG(0);
  clear_has_close_time();
}
 ::google::protobuf::uint64 RoomCloseLog::close_time() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.RoomCloseLog.close_time)
  return close_time_;
}
 void RoomCloseLog::set_close_time(::google::protobuf::uint64 value) {
  set_has_close_time();
  close_time_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.RoomCloseLog.close_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShareLog::kUidFieldNumber;
const int ShareLog::kTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShareLog::ShareLog()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fogs.proto.msg.ShareLog)
}

void ShareLog::InitAsDefaultInstance() {
}

ShareLog::ShareLog(const ShareLog& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:fogs.proto.msg.ShareLog)
}

void ShareLog::SharedCtor() {
  _cached_size_ = 0;
  uid_ = GOOGLE_ULONGLONG(0);
  time_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ShareLog::~ShareLog() {
  // @@protoc_insertion_point(destructor:fogs.proto.msg.ShareLog)
  SharedDtor();
}

void ShareLog::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ShareLog::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShareLog::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ShareLog_descriptor_;
}

const ShareLog& ShareLog::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_5flog_2eproto();
  return *default_instance_;
}

ShareLog* ShareLog::default_instance_ = NULL;

ShareLog* ShareLog::New(::google::protobuf::Arena* arena) const {
  ShareLog* n = new ShareLog;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShareLog::Clear() {
// @@protoc_insertion_point(message_clear_start:fogs.proto.msg.ShareLog)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ShareLog, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ShareLog*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(uid_, time_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ShareLog::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fogs.proto.msg.ShareLog)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 uid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_time;
        break;
      }

      // required uint64 time = 2;
      case 2: {
        if (tag == 16) {
         parse_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &time_)));
          set_has_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fogs.proto.msg.ShareLog)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fogs.proto.msg.ShareLog)
  return false;
#undef DO_
}

void ShareLog::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fogs.proto.msg.ShareLog)
  // required uint64 uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->uid(), output);
  }

  // required uint64 time = 2;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fogs.proto.msg.ShareLog)
}

::google::protobuf::uint8* ShareLog::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:fogs.proto.msg.ShareLog)
  // required uint64 uid = 1;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->uid(), target);
  }

  // required uint64 time = 2;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fogs.proto.msg.ShareLog)
  return target;
}

int ShareLog::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:fogs.proto.msg.ShareLog)
  int total_size = 0;

  if (has_uid()) {
    // required uint64 uid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uid());
  }

  if (has_time()) {
    // required uint64 time = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->time());
  }

  return total_size;
}
int ShareLog::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:fogs.proto.msg.ShareLog)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint64 uid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uid());

    // required uint64 time = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->time());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShareLog::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fogs.proto.msg.ShareLog)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ShareLog* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ShareLog>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fogs.proto.msg.ShareLog)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fogs.proto.msg.ShareLog)
    MergeFrom(*source);
  }
}

void ShareLog::MergeFrom(const ShareLog& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fogs.proto.msg.ShareLog)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_time()) {
      set_time(from.time());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ShareLog::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fogs.proto.msg.ShareLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShareLog::CopyFrom(const ShareLog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fogs.proto.msg.ShareLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShareLog::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void ShareLog::Swap(ShareLog* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShareLog::InternalSwap(ShareLog* other) {
  std::swap(uid_, other->uid_);
  std::swap(time_, other->time_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ShareLog::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ShareLog_descriptor_;
  metadata.reflection = ShareLog_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ShareLog

// required uint64 uid = 1;
bool ShareLog::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ShareLog::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
void ShareLog::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
void ShareLog::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
 ::google::protobuf::uint64 ShareLog::uid() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.ShareLog.uid)
  return uid_;
}
 void ShareLog::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.ShareLog.uid)
}

// required uint64 time = 2;
bool ShareLog::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ShareLog::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
void ShareLog::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
void ShareLog::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
  clear_has_time();
}
 ::google::protobuf::uint64 ShareLog::time() const {
  // @@protoc_insertion_point(field_get:fogs.proto.msg.ShareLog.time)
  return time_;
}
 void ShareLog::set_time(::google::protobuf::uint64 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:fogs.proto.msg.ShareLog.time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace msg
}  // namespace proto
}  // namespace fogs

// @@protoc_insertion_point(global_scope)
