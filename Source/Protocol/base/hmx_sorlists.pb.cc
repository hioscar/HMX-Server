// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hmx_sorlists.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "hmx_sorlists.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace protobuf {

namespace {

const ::google::protobuf::Descriptor* LevelBinary_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LevelBinary_reflection_ = NULL;
const ::google::protobuf::Descriptor* LevelRow_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LevelRow_reflection_ = NULL;
const ::google::protobuf::Descriptor* LevelTable_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LevelTable_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_hmx_5fsorlists_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_hmx_5fsorlists_2eproto() {
  protobuf_AddDesc_hmx_5fsorlists_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "hmx_sorlists.proto");
  GOOGLE_CHECK(file != NULL);
  LevelBinary_descriptor_ = file->message_type(0);
  static const int LevelBinary_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LevelBinary, other_),
  };
  LevelBinary_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LevelBinary_descriptor_,
      LevelBinary::default_instance_,
      LevelBinary_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LevelBinary, _has_bits_[0]),
      -1,
      -1,
      sizeof(LevelBinary),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LevelBinary, _internal_metadata_),
      -1);
  LevelRow_descriptor_ = file->message_type(1);
  static const int LevelRow_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LevelRow, sortid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LevelRow, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LevelRow, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LevelRow, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LevelRow, bindata_),
  };
  LevelRow_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LevelRow_descriptor_,
      LevelRow::default_instance_,
      LevelRow_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LevelRow, _has_bits_[0]),
      -1,
      -1,
      sizeof(LevelRow),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LevelRow, _internal_metadata_),
      -1);
  LevelTable_descriptor_ = file->message_type(2);
  static const int LevelTable_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LevelTable, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LevelTable, levels_),
  };
  LevelTable_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LevelTable_descriptor_,
      LevelTable::default_instance_,
      LevelTable_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LevelTable, _has_bits_[0]),
      -1,
      -1,
      sizeof(LevelTable),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LevelTable, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_hmx_5fsorlists_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LevelBinary_descriptor_, &LevelBinary::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LevelRow_descriptor_, &LevelRow::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LevelTable_descriptor_, &LevelTable::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_hmx_5fsorlists_2eproto() {
  delete LevelBinary::default_instance_;
  delete LevelBinary_reflection_;
  delete LevelRow::default_instance_;
  delete LevelRow_reflection_;
  delete LevelTable::default_instance_;
  delete LevelTable_reflection_;
}

void protobuf_AddDesc_hmx_5fsorlists_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_hmx_5fsorlists_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022hmx_sorlists.proto\022\010protobuf\"\034\n\013LevelB"
    "inary\022\r\n\005other\030\001 \001(\005\"l\n\010LevelRow\022\016\n\006sort"
    "id\030\001 \001(\005\022\013\n\003uid\030\002 \001(\003\022\014\n\004name\030\003 \001(\t\022\r\n\005l"
    "evel\030\004 \001(\005\022&\n\007binData\030\005 \001(\0132\025.protobuf.L"
    "evelBinary\"@\n\nLevelTable\022\016\n\006itemid\030\001 \001(\005"
    "\022\"\n\006levels\030\002 \003(\0132\022.protobuf.LevelRow", 236);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "hmx_sorlists.proto", &protobuf_RegisterTypes);
  LevelBinary::default_instance_ = new LevelBinary();
  LevelRow::default_instance_ = new LevelRow();
  LevelTable::default_instance_ = new LevelTable();
  LevelBinary::default_instance_->InitAsDefaultInstance();
  LevelRow::default_instance_->InitAsDefaultInstance();
  LevelTable::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_hmx_5fsorlists_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_hmx_5fsorlists_2eproto {
  StaticDescriptorInitializer_hmx_5fsorlists_2eproto() {
    protobuf_AddDesc_hmx_5fsorlists_2eproto();
  }
} static_descriptor_initializer_hmx_5fsorlists_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LevelBinary::kOtherFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LevelBinary::LevelBinary()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf.LevelBinary)
}

void LevelBinary::InitAsDefaultInstance() {
}

LevelBinary::LevelBinary(const LevelBinary& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf.LevelBinary)
}

void LevelBinary::SharedCtor() {
  _cached_size_ = 0;
  other_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LevelBinary::~LevelBinary() {
  // @@protoc_insertion_point(destructor:protobuf.LevelBinary)
  SharedDtor();
}

void LevelBinary::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LevelBinary::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LevelBinary::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LevelBinary_descriptor_;
}

const LevelBinary& LevelBinary::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_hmx_5fsorlists_2eproto();
  return *default_instance_;
}

LevelBinary* LevelBinary::default_instance_ = NULL;

LevelBinary* LevelBinary::New(::google::protobuf::Arena* arena) const {
  LevelBinary* n = new LevelBinary;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LevelBinary::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf.LevelBinary)
  other_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool LevelBinary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf.LevelBinary)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 other = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &other_)));
          set_has_other();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf.LevelBinary)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf.LevelBinary)
  return false;
#undef DO_
}

void LevelBinary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf.LevelBinary)
  // optional int32 other = 1;
  if (has_other()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->other(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf.LevelBinary)
}

::google::protobuf::uint8* LevelBinary::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf.LevelBinary)
  // optional int32 other = 1;
  if (has_other()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->other(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf.LevelBinary)
  return target;
}

int LevelBinary::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf.LevelBinary)
  int total_size = 0;

  // optional int32 other = 1;
  if (has_other()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->other());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LevelBinary::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf.LevelBinary)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const LevelBinary* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LevelBinary>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf.LevelBinary)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf.LevelBinary)
    MergeFrom(*source);
  }
}

void LevelBinary::MergeFrom(const LevelBinary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf.LevelBinary)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_other()) {
      set_other(from.other());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void LevelBinary::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf.LevelBinary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LevelBinary::CopyFrom(const LevelBinary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf.LevelBinary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LevelBinary::IsInitialized() const {

  return true;
}

void LevelBinary::Swap(LevelBinary* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LevelBinary::InternalSwap(LevelBinary* other) {
  std::swap(other_, other->other_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LevelBinary::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LevelBinary_descriptor_;
  metadata.reflection = LevelBinary_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LevelBinary

// optional int32 other = 1;
bool LevelBinary::has_other() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LevelBinary::set_has_other() {
  _has_bits_[0] |= 0x00000001u;
}
void LevelBinary::clear_has_other() {
  _has_bits_[0] &= ~0x00000001u;
}
void LevelBinary::clear_other() {
  other_ = 0;
  clear_has_other();
}
 ::google::protobuf::int32 LevelBinary::other() const {
  // @@protoc_insertion_point(field_get:protobuf.LevelBinary.other)
  return other_;
}
 void LevelBinary::set_other(::google::protobuf::int32 value) {
  set_has_other();
  other_ = value;
  // @@protoc_insertion_point(field_set:protobuf.LevelBinary.other)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LevelRow::kSortidFieldNumber;
const int LevelRow::kUidFieldNumber;
const int LevelRow::kNameFieldNumber;
const int LevelRow::kLevelFieldNumber;
const int LevelRow::kBinDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LevelRow::LevelRow()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf.LevelRow)
}

void LevelRow::InitAsDefaultInstance() {
  bindata_ = const_cast< ::protobuf::LevelBinary*>(&::protobuf::LevelBinary::default_instance());
}

LevelRow::LevelRow(const LevelRow& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf.LevelRow)
}

void LevelRow::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sortid_ = 0;
  uid_ = GOOGLE_LONGLONG(0);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  level_ = 0;
  bindata_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LevelRow::~LevelRow() {
  // @@protoc_insertion_point(destructor:protobuf.LevelRow)
  SharedDtor();
}

void LevelRow::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete bindata_;
  }
}

void LevelRow::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LevelRow::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LevelRow_descriptor_;
}

const LevelRow& LevelRow::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_hmx_5fsorlists_2eproto();
  return *default_instance_;
}

LevelRow* LevelRow::default_instance_ = NULL;

LevelRow* LevelRow::New(::google::protobuf::Arena* arena) const {
  LevelRow* n = new LevelRow;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LevelRow::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf.LevelRow)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(LevelRow, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<LevelRow*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31u) {
    ZR_(uid_, level_);
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_bindata()) {
      if (bindata_ != NULL) bindata_->::protobuf::LevelBinary::Clear();
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool LevelRow::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf.LevelRow)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 sortid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sortid_)));
          set_has_sortid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_uid;
        break;
      }

      // optional int64 uid = 2;
      case 2: {
        if (tag == 16) {
         parse_uid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_name;
        break;
      }

      // optional string name = 3;
      case 3: {
        if (tag == 26) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protobuf.LevelRow.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_level;
        break;
      }

      // optional int32 level = 4;
      case 4: {
        if (tag == 32) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_binData;
        break;
      }

      // optional .protobuf.LevelBinary binData = 5;
      case 5: {
        if (tag == 42) {
         parse_binData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bindata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf.LevelRow)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf.LevelRow)
  return false;
#undef DO_
}

void LevelRow::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf.LevelRow)
  // optional int32 sortid = 1;
  if (has_sortid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->sortid(), output);
  }

  // optional int64 uid = 2;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->uid(), output);
  }

  // optional string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf.LevelRow.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // optional int32 level = 4;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->level(), output);
  }

  // optional .protobuf.LevelBinary binData = 5;
  if (has_bindata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->bindata_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf.LevelRow)
}

::google::protobuf::uint8* LevelRow::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf.LevelRow)
  // optional int32 sortid = 1;
  if (has_sortid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->sortid(), target);
  }

  // optional int64 uid = 2;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->uid(), target);
  }

  // optional string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf.LevelRow.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // optional int32 level = 4;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->level(), target);
  }

  // optional .protobuf.LevelBinary binData = 5;
  if (has_bindata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->bindata_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf.LevelRow)
  return target;
}

int LevelRow::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf.LevelRow)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 31u) {
    // optional int32 sortid = 1;
    if (has_sortid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sortid());
    }

    // optional int64 uid = 2;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->uid());
    }

    // optional string name = 3;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional int32 level = 4;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

    // optional .protobuf.LevelBinary binData = 5;
    if (has_bindata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->bindata_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LevelRow::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf.LevelRow)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const LevelRow* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LevelRow>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf.LevelRow)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf.LevelRow)
    MergeFrom(*source);
  }
}

void LevelRow::MergeFrom(const LevelRow& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf.LevelRow)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sortid()) {
      set_sortid(from.sortid());
    }
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_bindata()) {
      mutable_bindata()->::protobuf::LevelBinary::MergeFrom(from.bindata());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void LevelRow::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf.LevelRow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LevelRow::CopyFrom(const LevelRow& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf.LevelRow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LevelRow::IsInitialized() const {

  return true;
}

void LevelRow::Swap(LevelRow* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LevelRow::InternalSwap(LevelRow* other) {
  std::swap(sortid_, other->sortid_);
  std::swap(uid_, other->uid_);
  name_.Swap(&other->name_);
  std::swap(level_, other->level_);
  std::swap(bindata_, other->bindata_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LevelRow::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LevelRow_descriptor_;
  metadata.reflection = LevelRow_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LevelRow

// optional int32 sortid = 1;
bool LevelRow::has_sortid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LevelRow::set_has_sortid() {
  _has_bits_[0] |= 0x00000001u;
}
void LevelRow::clear_has_sortid() {
  _has_bits_[0] &= ~0x00000001u;
}
void LevelRow::clear_sortid() {
  sortid_ = 0;
  clear_has_sortid();
}
 ::google::protobuf::int32 LevelRow::sortid() const {
  // @@protoc_insertion_point(field_get:protobuf.LevelRow.sortid)
  return sortid_;
}
 void LevelRow::set_sortid(::google::protobuf::int32 value) {
  set_has_sortid();
  sortid_ = value;
  // @@protoc_insertion_point(field_set:protobuf.LevelRow.sortid)
}

// optional int64 uid = 2;
bool LevelRow::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LevelRow::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
void LevelRow::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
void LevelRow::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
 ::google::protobuf::int64 LevelRow::uid() const {
  // @@protoc_insertion_point(field_get:protobuf.LevelRow.uid)
  return uid_;
}
 void LevelRow::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:protobuf.LevelRow.uid)
}

// optional string name = 3;
bool LevelRow::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void LevelRow::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
void LevelRow::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
void LevelRow::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& LevelRow::name() const {
  // @@protoc_insertion_point(field_get:protobuf.LevelRow.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LevelRow::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protobuf.LevelRow.name)
}
 void LevelRow::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protobuf.LevelRow.name)
}
 void LevelRow::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protobuf.LevelRow.name)
}
 ::std::string* LevelRow::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:protobuf.LevelRow.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LevelRow::release_name() {
  // @@protoc_insertion_point(field_release:protobuf.LevelRow.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LevelRow::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:protobuf.LevelRow.name)
}

// optional int32 level = 4;
bool LevelRow::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void LevelRow::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
void LevelRow::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
void LevelRow::clear_level() {
  level_ = 0;
  clear_has_level();
}
 ::google::protobuf::int32 LevelRow::level() const {
  // @@protoc_insertion_point(field_get:protobuf.LevelRow.level)
  return level_;
}
 void LevelRow::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:protobuf.LevelRow.level)
}

// optional .protobuf.LevelBinary binData = 5;
bool LevelRow::has_bindata() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void LevelRow::set_has_bindata() {
  _has_bits_[0] |= 0x00000010u;
}
void LevelRow::clear_has_bindata() {
  _has_bits_[0] &= ~0x00000010u;
}
void LevelRow::clear_bindata() {
  if (bindata_ != NULL) bindata_->::protobuf::LevelBinary::Clear();
  clear_has_bindata();
}
const ::protobuf::LevelBinary& LevelRow::bindata() const {
  // @@protoc_insertion_point(field_get:protobuf.LevelRow.binData)
  return bindata_ != NULL ? *bindata_ : *default_instance_->bindata_;
}
::protobuf::LevelBinary* LevelRow::mutable_bindata() {
  set_has_bindata();
  if (bindata_ == NULL) {
    bindata_ = new ::protobuf::LevelBinary;
  }
  // @@protoc_insertion_point(field_mutable:protobuf.LevelRow.binData)
  return bindata_;
}
::protobuf::LevelBinary* LevelRow::release_bindata() {
  // @@protoc_insertion_point(field_release:protobuf.LevelRow.binData)
  clear_has_bindata();
  ::protobuf::LevelBinary* temp = bindata_;
  bindata_ = NULL;
  return temp;
}
void LevelRow::set_allocated_bindata(::protobuf::LevelBinary* bindata) {
  delete bindata_;
  bindata_ = bindata;
  if (bindata) {
    set_has_bindata();
  } else {
    clear_has_bindata();
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.LevelRow.binData)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LevelTable::kItemidFieldNumber;
const int LevelTable::kLevelsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LevelTable::LevelTable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf.LevelTable)
}

void LevelTable::InitAsDefaultInstance() {
}

LevelTable::LevelTable(const LevelTable& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf.LevelTable)
}

void LevelTable::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LevelTable::~LevelTable() {
  // @@protoc_insertion_point(destructor:protobuf.LevelTable)
  SharedDtor();
}

void LevelTable::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LevelTable::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LevelTable::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LevelTable_descriptor_;
}

const LevelTable& LevelTable::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_hmx_5fsorlists_2eproto();
  return *default_instance_;
}

LevelTable* LevelTable::default_instance_ = NULL;

LevelTable* LevelTable::New(::google::protobuf::Arena* arena) const {
  LevelTable* n = new LevelTable;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LevelTable::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf.LevelTable)
  itemid_ = 0;
  levels_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool LevelTable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf.LevelTable)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 itemid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_levels;
        break;
      }

      // repeated .protobuf.LevelRow levels = 2;
      case 2: {
        if (tag == 18) {
         parse_levels:
          DO_(input->IncrementRecursionDepth());
         parse_loop_levels:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_levels()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_levels;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf.LevelTable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf.LevelTable)
  return false;
#undef DO_
}

void LevelTable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf.LevelTable)
  // optional int32 itemid = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->itemid(), output);
  }

  // repeated .protobuf.LevelRow levels = 2;
  for (unsigned int i = 0, n = this->levels_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->levels(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf.LevelTable)
}

::google::protobuf::uint8* LevelTable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf.LevelTable)
  // optional int32 itemid = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->itemid(), target);
  }

  // repeated .protobuf.LevelRow levels = 2;
  for (unsigned int i = 0, n = this->levels_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->levels(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf.LevelTable)
  return target;
}

int LevelTable::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf.LevelTable)
  int total_size = 0;

  // optional int32 itemid = 1;
  if (has_itemid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->itemid());
  }

  // repeated .protobuf.LevelRow levels = 2;
  total_size += 1 * this->levels_size();
  for (int i = 0; i < this->levels_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->levels(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LevelTable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf.LevelTable)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const LevelTable* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LevelTable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf.LevelTable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf.LevelTable)
    MergeFrom(*source);
  }
}

void LevelTable::MergeFrom(const LevelTable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf.LevelTable)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  levels_.MergeFrom(from.levels_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void LevelTable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf.LevelTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LevelTable::CopyFrom(const LevelTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf.LevelTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LevelTable::IsInitialized() const {

  return true;
}

void LevelTable::Swap(LevelTable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LevelTable::InternalSwap(LevelTable* other) {
  std::swap(itemid_, other->itemid_);
  levels_.UnsafeArenaSwap(&other->levels_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LevelTable::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LevelTable_descriptor_;
  metadata.reflection = LevelTable_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LevelTable

// optional int32 itemid = 1;
bool LevelTable::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LevelTable::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
void LevelTable::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
void LevelTable::clear_itemid() {
  itemid_ = 0;
  clear_has_itemid();
}
 ::google::protobuf::int32 LevelTable::itemid() const {
  // @@protoc_insertion_point(field_get:protobuf.LevelTable.itemid)
  return itemid_;
}
 void LevelTable::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:protobuf.LevelTable.itemid)
}

// repeated .protobuf.LevelRow levels = 2;
int LevelTable::levels_size() const {
  return levels_.size();
}
void LevelTable::clear_levels() {
  levels_.Clear();
}
const ::protobuf::LevelRow& LevelTable::levels(int index) const {
  // @@protoc_insertion_point(field_get:protobuf.LevelTable.levels)
  return levels_.Get(index);
}
::protobuf::LevelRow* LevelTable::mutable_levels(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf.LevelTable.levels)
  return levels_.Mutable(index);
}
::protobuf::LevelRow* LevelTable::add_levels() {
  // @@protoc_insertion_point(field_add:protobuf.LevelTable.levels)
  return levels_.Add();
}
::google::protobuf::RepeatedPtrField< ::protobuf::LevelRow >*
LevelTable::mutable_levels() {
  // @@protoc_insertion_point(field_mutable_list:protobuf.LevelTable.levels)
  return &levels_;
}
const ::google::protobuf::RepeatedPtrField< ::protobuf::LevelRow >&
LevelTable::levels() const {
  // @@protoc_insertion_point(field_list:protobuf.LevelTable.levels)
  return levels_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf

// @@protoc_insertion_point(global_scope)
